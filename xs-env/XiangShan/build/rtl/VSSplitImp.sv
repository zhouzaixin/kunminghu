// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module VSSplitImp(
  input          clock,
  input          reset,
  input          io_redirect_valid,
  input          io_redirect_bits_robIdx_flag,
  input  [7:0]   io_redirect_bits_robIdx_value,
  input          io_redirect_bits_level,
  output         io_in_ready,
  input          io_in_valid,
  input          io_in_bits_uop_ftqPtr_flag,
  input  [5:0]   io_in_bits_uop_ftqPtr_value,
  input  [3:0]   io_in_bits_uop_ftqOffset,
  input  [8:0]   io_in_bits_uop_fuOpType,
  input          io_in_bits_uop_vecWen,
  input          io_in_bits_uop_v0Wen,
  input          io_in_bits_uop_vlWen,
  input          io_in_bits_uop_vpu_vma,
  input          io_in_bits_uop_vpu_vta,
  input  [1:0]   io_in_bits_uop_vpu_vsew,
  input  [2:0]   io_in_bits_uop_vpu_vlmul,
  input          io_in_bits_uop_vpu_vm,
  input  [7:0]   io_in_bits_uop_vpu_vstart,
  input  [6:0]   io_in_bits_uop_vpu_vuopIdx,
  input  [127:0] io_in_bits_uop_vpu_vmask,
  input  [2:0]   io_in_bits_uop_vpu_nf,
  input  [1:0]   io_in_bits_uop_vpu_veew,
  input  [7:0]   io_in_bits_uop_pdest,
  input          io_in_bits_uop_robIdx_flag,
  input  [7:0]   io_in_bits_uop_robIdx_value,
  input          io_in_bits_uop_lqIdx_flag,
  input  [6:0]   io_in_bits_uop_lqIdx_value,
  input          io_in_bits_uop_sqIdx_flag,
  input  [5:0]   io_in_bits_uop_sqIdx_value,
  input  [127:0] io_in_bits_src_0,
  input  [127:0] io_in_bits_src_1,
  input  [127:0] io_in_bits_src_2,
  input  [127:0] io_in_bits_src_3,
  input  [127:0] io_in_bits_src_4,
  input  [4:0]   io_in_bits_flowNum,
  input          io_toMergeBuffer_req_ready,
  output         io_toMergeBuffer_req_valid,
  output [15:0]  io_toMergeBuffer_req_bits_mask,
  output [49:0]  io_toMergeBuffer_req_bits_vaddr,
  output [4:0]   io_toMergeBuffer_req_bits_flowNum,
  output [8:0]   io_toMergeBuffer_req_bits_uop_fuOpType,
  output         io_toMergeBuffer_req_bits_uop_vecWen,
  output         io_toMergeBuffer_req_bits_uop_v0Wen,
  output         io_toMergeBuffer_req_bits_uop_vlWen,
  output         io_toMergeBuffer_req_bits_uop_vpu_vma,
  output         io_toMergeBuffer_req_bits_uop_vpu_vta,
  output [1:0]   io_toMergeBuffer_req_bits_uop_vpu_vsew,
  output [2:0]   io_toMergeBuffer_req_bits_uop_vpu_vlmul,
  output         io_toMergeBuffer_req_bits_uop_vpu_vm,
  output [6:0]   io_toMergeBuffer_req_bits_uop_vpu_vuopIdx,
  output [127:0] io_toMergeBuffer_req_bits_uop_vpu_vmask,
  output [7:0]   io_toMergeBuffer_req_bits_uop_vpu_vl,
  output [2:0]   io_toMergeBuffer_req_bits_uop_vpu_nf,
  output [1:0]   io_toMergeBuffer_req_bits_uop_vpu_veew,
  output [6:0]   io_toMergeBuffer_req_bits_uop_uopIdx,
  output [7:0]   io_toMergeBuffer_req_bits_uop_pdest,
  output         io_toMergeBuffer_req_bits_uop_robIdx_flag,
  output [7:0]   io_toMergeBuffer_req_bits_uop_robIdx_value,
  output         io_toMergeBuffer_req_bits_uop_lqIdx_flag,
  output [6:0]   io_toMergeBuffer_req_bits_uop_lqIdx_value,
  output         io_toMergeBuffer_req_bits_uop_sqIdx_flag,
  output [5:0]   io_toMergeBuffer_req_bits_uop_sqIdx_value,
  output [7:0]   io_toMergeBuffer_req_bits_vlmax,
  input          io_toMergeBuffer_resp_valid,
  input  [3:0]   io_toMergeBuffer_resp_bits_mBIndex,
  input          io_out_ready,
  output         io_out_valid,
  output [63:0]  io_out_bits_vaddr,
  output [49:0]  io_out_bits_basevaddr,
  output [15:0]  io_out_bits_mask,
  output [3:0]   io_out_bits_reg_offset,
  output [2:0]   io_out_bits_alignedType,
  output         io_out_bits_vecActive,
  output         io_out_bits_uop_exceptionVec_6,
  output         io_out_bits_uop_preDecodeInfo_isRVC,
  output         io_out_bits_uop_ftqPtr_flag,
  output [5:0]   io_out_bits_uop_ftqPtr_value,
  output [3:0]   io_out_bits_uop_ftqOffset,
  output [8:0]   io_out_bits_uop_fuOpType,
  output         io_out_bits_uop_rfWen,
  output         io_out_bits_uop_fpWen,
  output [7:0]   io_out_bits_uop_vpu_vstart,
  output [1:0]   io_out_bits_uop_vpu_veew,
  output [6:0]   io_out_bits_uop_uopIdx,
  output [7:0]   io_out_bits_uop_pdest,
  output         io_out_bits_uop_robIdx_flag,
  output [7:0]   io_out_bits_uop_robIdx_value,
  output         io_out_bits_uop_storeSetHit,
  output         io_out_bits_uop_waitForRobIdx_flag,
  output [7:0]   io_out_bits_uop_waitForRobIdx_value,
  output         io_out_bits_uop_loadWaitBit,
  output         io_out_bits_uop_loadWaitStrict,
  output         io_out_bits_uop_lqIdx_flag,
  output [6:0]   io_out_bits_uop_lqIdx_value,
  output         io_out_bits_uop_sqIdx_flag,
  output [5:0]   io_out_bits_uop_sqIdx_value,
  output [3:0]   io_out_bits_mBIndex,
  output [7:0]   io_out_bits_elemIdx,
  output [7:0]   io_out_bits_elemIdxInsideVd,
  output         io_vstd_valid,
  output [8:0]   io_vstd_bits_uop_fuOpType,
  output         io_vstd_bits_uop_sqIdx_flag,
  output [5:0]   io_vstd_bits_uop_sqIdx_value,
  output [127:0] io_vstd_bits_data,
  input          io_vstdMisalign_storePipeEmpty,
  input          io_vstdMisalign_storeMisalignBufferEmpty
);

  wire         _VSSplitSkidBuffer_io_in_ready;
  wire         _VSSplitSkidBuffer_io_out_valid;
  wire [15:0]  _VSSplitSkidBuffer_io_out_bits_flowMask;
  wire [127:0] _VSSplitSkidBuffer_io_out_bits_data;
  wire [63:0]  _VSSplitSkidBuffer_io_out_bits_baseAddr;
  wire [63:0]  _VSSplitSkidBuffer_io_out_bits_uopAddr;
  wire [127:0] _VSSplitSkidBuffer_io_out_bits_stride;
  wire [4:0]   _VSSplitSkidBuffer_io_out_bits_flowNum;
  wire [1:0]   _VSSplitSkidBuffer_io_out_bits_eew;
  wire [2:0]   _VSSplitSkidBuffer_io_out_bits_sew;
  wire [2:0]   _VSSplitSkidBuffer_io_out_bits_emul;
  wire [2:0]   _VSSplitSkidBuffer_io_out_bits_lmul;
  wire [2:0]   _VSSplitSkidBuffer_io_out_bits_instType;
  wire [4:0]   _VSSplitSkidBuffer_io_out_bits_indexedSplitOffset;
  wire         _VSSplitSkidBuffer_io_out_bits_uop_preDecodeInfo_isRVC;
  wire         _VSSplitSkidBuffer_io_out_bits_uop_ftqPtr_flag;
  wire [5:0]   _VSSplitSkidBuffer_io_out_bits_uop_ftqPtr_value;
  wire [3:0]   _VSSplitSkidBuffer_io_out_bits_uop_ftqOffset;
  wire [8:0]   _VSSplitSkidBuffer_io_out_bits_uop_fuOpType;
  wire         _VSSplitSkidBuffer_io_out_bits_uop_rfWen;
  wire         _VSSplitSkidBuffer_io_out_bits_uop_fpWen;
  wire [7:0]   _VSSplitSkidBuffer_io_out_bits_uop_vpu_vstart;
  wire [6:0]   _VSSplitSkidBuffer_io_out_bits_uop_vpu_vuopIdx;
  wire [1:0]   _VSSplitSkidBuffer_io_out_bits_uop_vpu_veew;
  wire [6:0]   _VSSplitSkidBuffer_io_out_bits_uop_uopIdx;
  wire [7:0]   _VSSplitSkidBuffer_io_out_bits_uop_pdest;
  wire         _VSSplitSkidBuffer_io_out_bits_uop_robIdx_flag;
  wire [7:0]   _VSSplitSkidBuffer_io_out_bits_uop_robIdx_value;
  wire         _VSSplitSkidBuffer_io_out_bits_uop_storeSetHit;
  wire         _VSSplitSkidBuffer_io_out_bits_uop_waitForRobIdx_flag;
  wire [7:0]   _VSSplitSkidBuffer_io_out_bits_uop_waitForRobIdx_value;
  wire         _VSSplitSkidBuffer_io_out_bits_uop_loadWaitBit;
  wire         _VSSplitSkidBuffer_io_out_bits_uop_loadWaitStrict;
  wire         _VSSplitSkidBuffer_io_out_bits_uop_lqIdx_flag;
  wire [6:0]   _VSSplitSkidBuffer_io_out_bits_uop_lqIdx_value;
  wire         _VSSplitSkidBuffer_io_out_bits_uop_sqIdx_flag;
  wire [5:0]   _VSSplitSkidBuffer_io_out_bits_uop_sqIdx_value;
  wire         _VSSplitSkidBuffer_io_out_bits_preIsSplit;
  wire [3:0]   _VSSplitSkidBuffer_io_out_bits_mBIndex;
  wire [2:0]   _VSSplitSkidBuffer_io_out_bits_alignedType;
  wire [7:0]   _VSSplitSkidBuffer_io_out_bits_indexVlMaxInVd;
  wire [3:0]   _VSSplitSkidBuffer_io_out_bits_usLowBitsAddr;
  wire         _VSSplitSkidBuffer_io_out_bits_usAligned128;
  wire [31:0]  _VSSplitSkidBuffer_io_out_bits_usMask;
  wire         _splitBuffer_io_in_ready;
  wire         _splitPipeline_io_out_valid;
  wire [15:0]  _splitPipeline_io_out_bits_flowMask;
  wire [127:0] _splitPipeline_io_out_bits_data;
  wire [63:0]  _splitPipeline_io_out_bits_baseAddr;
  wire [63:0]  _splitPipeline_io_out_bits_uopAddr;
  wire [127:0] _splitPipeline_io_out_bits_stride;
  wire [4:0]   _splitPipeline_io_out_bits_flowNum;
  wire [1:0]   _splitPipeline_io_out_bits_eew;
  wire [2:0]   _splitPipeline_io_out_bits_sew;
  wire [2:0]   _splitPipeline_io_out_bits_emul;
  wire [2:0]   _splitPipeline_io_out_bits_lmul;
  wire [2:0]   _splitPipeline_io_out_bits_instType;
  wire [4:0]   _splitPipeline_io_out_bits_indexedSplitOffset;
  wire         _splitPipeline_io_out_bits_uop_ftqPtr_flag;
  wire [5:0]   _splitPipeline_io_out_bits_uop_ftqPtr_value;
  wire [3:0]   _splitPipeline_io_out_bits_uop_ftqOffset;
  wire [8:0]   _splitPipeline_io_out_bits_uop_fuOpType;
  wire [7:0]   _splitPipeline_io_out_bits_uop_vpu_vstart;
  wire [6:0]   _splitPipeline_io_out_bits_uop_vpu_vuopIdx;
  wire [1:0]   _splitPipeline_io_out_bits_uop_vpu_veew;
  wire [6:0]   _splitPipeline_io_out_bits_uop_uopIdx;
  wire [7:0]   _splitPipeline_io_out_bits_uop_pdest;
  wire         _splitPipeline_io_out_bits_uop_robIdx_flag;
  wire [7:0]   _splitPipeline_io_out_bits_uop_robIdx_value;
  wire         _splitPipeline_io_out_bits_uop_lqIdx_flag;
  wire [6:0]   _splitPipeline_io_out_bits_uop_lqIdx_value;
  wire         _splitPipeline_io_out_bits_uop_sqIdx_flag;
  wire [5:0]   _splitPipeline_io_out_bits_uop_sqIdx_value;
  wire         _splitPipeline_io_out_bits_preIsSplit;
  wire [3:0]   _splitPipeline_io_out_bits_mBIndex;
  wire [2:0]   _splitPipeline_io_out_bits_alignedType;
  wire [7:0]   _splitPipeline_io_out_bits_indexVlMaxInVd;
  wire [3:0]   _splitPipeline_io_out_bits_usLowBitsAddr;
  wire         _splitPipeline_io_out_bits_usAligned128;
  wire [31:0]  _splitPipeline_io_out_bits_usMask;
  wire [8:0]   _flushItself_T_6 =
    {io_redirect_bits_robIdx_flag, io_redirect_bits_robIdx_value};
  VSSplitPipelineImp splitPipeline (
    .clock                                      (clock),
    .reset                                      (reset),
    .io_redirect_valid                          (io_redirect_valid),
    .io_redirect_bits_robIdx_flag               (io_redirect_bits_robIdx_flag),
    .io_redirect_bits_robIdx_value              (io_redirect_bits_robIdx_value),
    .io_redirect_bits_level                     (io_redirect_bits_level),
    .io_in_ready                                (io_in_ready),
    .io_in_valid                                (io_in_valid),
    .io_in_bits_uop_ftqPtr_flag                 (io_in_bits_uop_ftqPtr_flag),
    .io_in_bits_uop_ftqPtr_value                (io_in_bits_uop_ftqPtr_value),
    .io_in_bits_uop_ftqOffset                   (io_in_bits_uop_ftqOffset),
    .io_in_bits_uop_fuOpType                    (io_in_bits_uop_fuOpType),
    .io_in_bits_uop_vecWen                      (io_in_bits_uop_vecWen),
    .io_in_bits_uop_v0Wen                       (io_in_bits_uop_v0Wen),
    .io_in_bits_uop_vlWen                       (io_in_bits_uop_vlWen),
    .io_in_bits_uop_vpu_vma                     (io_in_bits_uop_vpu_vma),
    .io_in_bits_uop_vpu_vta                     (io_in_bits_uop_vpu_vta),
    .io_in_bits_uop_vpu_vsew                    (io_in_bits_uop_vpu_vsew),
    .io_in_bits_uop_vpu_vlmul                   (io_in_bits_uop_vpu_vlmul),
    .io_in_bits_uop_vpu_vm                      (io_in_bits_uop_vpu_vm),
    .io_in_bits_uop_vpu_vstart                  (io_in_bits_uop_vpu_vstart),
    .io_in_bits_uop_vpu_vuopIdx                 (io_in_bits_uop_vpu_vuopIdx),
    .io_in_bits_uop_vpu_vmask                   (io_in_bits_uop_vpu_vmask),
    .io_in_bits_uop_vpu_nf                      (io_in_bits_uop_vpu_nf),
    .io_in_bits_uop_vpu_veew                    (io_in_bits_uop_vpu_veew),
    .io_in_bits_uop_pdest                       (io_in_bits_uop_pdest),
    .io_in_bits_uop_robIdx_flag                 (io_in_bits_uop_robIdx_flag),
    .io_in_bits_uop_robIdx_value                (io_in_bits_uop_robIdx_value),
    .io_in_bits_uop_lqIdx_flag                  (io_in_bits_uop_lqIdx_flag),
    .io_in_bits_uop_lqIdx_value                 (io_in_bits_uop_lqIdx_value),
    .io_in_bits_uop_sqIdx_flag                  (io_in_bits_uop_sqIdx_flag),
    .io_in_bits_uop_sqIdx_value                 (io_in_bits_uop_sqIdx_value),
    .io_in_bits_src_0                           (io_in_bits_src_0),
    .io_in_bits_src_1                           (io_in_bits_src_1),
    .io_in_bits_src_2                           (io_in_bits_src_2),
    .io_in_bits_src_3                           (io_in_bits_src_3),
    .io_in_bits_src_4                           (io_in_bits_src_4),
    .io_in_bits_flowNum                         (io_in_bits_flowNum),
    .io_toMergeBuffer_req_ready                 (io_toMergeBuffer_req_ready),
    .io_toMergeBuffer_req_valid                 (io_toMergeBuffer_req_valid),
    .io_toMergeBuffer_req_bits_mask             (io_toMergeBuffer_req_bits_mask),
    .io_toMergeBuffer_req_bits_vaddr            (io_toMergeBuffer_req_bits_vaddr),
    .io_toMergeBuffer_req_bits_flowNum          (io_toMergeBuffer_req_bits_flowNum),
    .io_toMergeBuffer_req_bits_uop_fuOpType     (io_toMergeBuffer_req_bits_uop_fuOpType),
    .io_toMergeBuffer_req_bits_uop_vecWen       (io_toMergeBuffer_req_bits_uop_vecWen),
    .io_toMergeBuffer_req_bits_uop_v0Wen        (io_toMergeBuffer_req_bits_uop_v0Wen),
    .io_toMergeBuffer_req_bits_uop_vlWen        (io_toMergeBuffer_req_bits_uop_vlWen),
    .io_toMergeBuffer_req_bits_uop_vpu_vma      (io_toMergeBuffer_req_bits_uop_vpu_vma),
    .io_toMergeBuffer_req_bits_uop_vpu_vta      (io_toMergeBuffer_req_bits_uop_vpu_vta),
    .io_toMergeBuffer_req_bits_uop_vpu_vsew     (io_toMergeBuffer_req_bits_uop_vpu_vsew),
    .io_toMergeBuffer_req_bits_uop_vpu_vlmul    (io_toMergeBuffer_req_bits_uop_vpu_vlmul),
    .io_toMergeBuffer_req_bits_uop_vpu_vm       (io_toMergeBuffer_req_bits_uop_vpu_vm),
    .io_toMergeBuffer_req_bits_uop_vpu_vuopIdx
      (io_toMergeBuffer_req_bits_uop_vpu_vuopIdx),
    .io_toMergeBuffer_req_bits_uop_vpu_vmask    (io_toMergeBuffer_req_bits_uop_vpu_vmask),
    .io_toMergeBuffer_req_bits_uop_vpu_vl       (io_toMergeBuffer_req_bits_uop_vpu_vl),
    .io_toMergeBuffer_req_bits_uop_vpu_nf       (io_toMergeBuffer_req_bits_uop_vpu_nf),
    .io_toMergeBuffer_req_bits_uop_vpu_veew     (io_toMergeBuffer_req_bits_uop_vpu_veew),
    .io_toMergeBuffer_req_bits_uop_uopIdx       (io_toMergeBuffer_req_bits_uop_uopIdx),
    .io_toMergeBuffer_req_bits_uop_pdest        (io_toMergeBuffer_req_bits_uop_pdest),
    .io_toMergeBuffer_req_bits_uop_robIdx_flag
      (io_toMergeBuffer_req_bits_uop_robIdx_flag),
    .io_toMergeBuffer_req_bits_uop_robIdx_value
      (io_toMergeBuffer_req_bits_uop_robIdx_value),
    .io_toMergeBuffer_req_bits_uop_lqIdx_flag
      (io_toMergeBuffer_req_bits_uop_lqIdx_flag),
    .io_toMergeBuffer_req_bits_uop_lqIdx_value
      (io_toMergeBuffer_req_bits_uop_lqIdx_value),
    .io_toMergeBuffer_req_bits_uop_sqIdx_flag
      (io_toMergeBuffer_req_bits_uop_sqIdx_flag),
    .io_toMergeBuffer_req_bits_uop_sqIdx_value
      (io_toMergeBuffer_req_bits_uop_sqIdx_value),
    .io_toMergeBuffer_req_bits_vlmax            (io_toMergeBuffer_req_bits_vlmax),
    .io_toMergeBuffer_resp_valid                (io_toMergeBuffer_resp_valid),
    .io_toMergeBuffer_resp_bits_mBIndex         (io_toMergeBuffer_resp_bits_mBIndex),
    .io_out_ready                               (_VSSplitSkidBuffer_io_in_ready),
    .io_out_valid                               (_splitPipeline_io_out_valid),
    .io_out_bits_flowMask                       (_splitPipeline_io_out_bits_flowMask),
    .io_out_bits_data                           (_splitPipeline_io_out_bits_data),
    .io_out_bits_baseAddr                       (_splitPipeline_io_out_bits_baseAddr),
    .io_out_bits_uopAddr                        (_splitPipeline_io_out_bits_uopAddr),
    .io_out_bits_stride                         (_splitPipeline_io_out_bits_stride),
    .io_out_bits_flowNum                        (_splitPipeline_io_out_bits_flowNum),
    .io_out_bits_eew                            (_splitPipeline_io_out_bits_eew),
    .io_out_bits_sew                            (_splitPipeline_io_out_bits_sew),
    .io_out_bits_emul                           (_splitPipeline_io_out_bits_emul),
    .io_out_bits_lmul                           (_splitPipeline_io_out_bits_lmul),
    .io_out_bits_instType                       (_splitPipeline_io_out_bits_instType),
    .io_out_bits_indexedSplitOffset
      (_splitPipeline_io_out_bits_indexedSplitOffset),
    .io_out_bits_uop_ftqPtr_flag
      (_splitPipeline_io_out_bits_uop_ftqPtr_flag),
    .io_out_bits_uop_ftqPtr_value
      (_splitPipeline_io_out_bits_uop_ftqPtr_value),
    .io_out_bits_uop_ftqOffset
      (_splitPipeline_io_out_bits_uop_ftqOffset),
    .io_out_bits_uop_fuOpType                   (_splitPipeline_io_out_bits_uop_fuOpType),
    .io_out_bits_uop_vpu_vstart
      (_splitPipeline_io_out_bits_uop_vpu_vstart),
    .io_out_bits_uop_vpu_vuopIdx
      (_splitPipeline_io_out_bits_uop_vpu_vuopIdx),
    .io_out_bits_uop_vpu_veew                   (_splitPipeline_io_out_bits_uop_vpu_veew),
    .io_out_bits_uop_uopIdx                     (_splitPipeline_io_out_bits_uop_uopIdx),
    .io_out_bits_uop_pdest                      (_splitPipeline_io_out_bits_uop_pdest),
    .io_out_bits_uop_robIdx_flag
      (_splitPipeline_io_out_bits_uop_robIdx_flag),
    .io_out_bits_uop_robIdx_value
      (_splitPipeline_io_out_bits_uop_robIdx_value),
    .io_out_bits_uop_lqIdx_flag
      (_splitPipeline_io_out_bits_uop_lqIdx_flag),
    .io_out_bits_uop_lqIdx_value
      (_splitPipeline_io_out_bits_uop_lqIdx_value),
    .io_out_bits_uop_sqIdx_flag
      (_splitPipeline_io_out_bits_uop_sqIdx_flag),
    .io_out_bits_uop_sqIdx_value
      (_splitPipeline_io_out_bits_uop_sqIdx_value),
    .io_out_bits_preIsSplit                     (_splitPipeline_io_out_bits_preIsSplit),
    .io_out_bits_mBIndex                        (_splitPipeline_io_out_bits_mBIndex),
    .io_out_bits_alignedType                    (_splitPipeline_io_out_bits_alignedType),
    .io_out_bits_indexVlMaxInVd
      (_splitPipeline_io_out_bits_indexVlMaxInVd),
    .io_out_bits_usLowBitsAddr
      (_splitPipeline_io_out_bits_usLowBitsAddr),
    .io_out_bits_usAligned128                   (_splitPipeline_io_out_bits_usAligned128),
    .io_out_bits_usMask                         (_splitPipeline_io_out_bits_usMask)
  );
  VSSplitBufferImp splitBuffer (
    .clock                                    (clock),
    .reset                                    (reset),
    .io_redirect_valid                        (io_redirect_valid),
    .io_redirect_bits_robIdx_flag             (io_redirect_bits_robIdx_flag),
    .io_redirect_bits_robIdx_value            (io_redirect_bits_robIdx_value),
    .io_redirect_bits_level                   (io_redirect_bits_level),
    .io_in_ready                              (_splitBuffer_io_in_ready),
    .io_in_valid                              (_VSSplitSkidBuffer_io_out_valid),
    .io_in_bits_flowMask                      (_VSSplitSkidBuffer_io_out_bits_flowMask),
    .io_in_bits_data                          (_VSSplitSkidBuffer_io_out_bits_data),
    .io_in_bits_baseAddr                      (_VSSplitSkidBuffer_io_out_bits_baseAddr),
    .io_in_bits_uopAddr                       (_VSSplitSkidBuffer_io_out_bits_uopAddr),
    .io_in_bits_stride                        (_VSSplitSkidBuffer_io_out_bits_stride),
    .io_in_bits_flowNum                       (_VSSplitSkidBuffer_io_out_bits_flowNum),
    .io_in_bits_eew                           (_VSSplitSkidBuffer_io_out_bits_eew),
    .io_in_bits_sew                           (_VSSplitSkidBuffer_io_out_bits_sew),
    .io_in_bits_emul                          (_VSSplitSkidBuffer_io_out_bits_emul),
    .io_in_bits_lmul                          (_VSSplitSkidBuffer_io_out_bits_lmul),
    .io_in_bits_instType                      (_VSSplitSkidBuffer_io_out_bits_instType),
    .io_in_bits_indexedSplitOffset
      (_VSSplitSkidBuffer_io_out_bits_indexedSplitOffset),
    .io_in_bits_uop_preDecodeInfo_isRVC
      (_VSSplitSkidBuffer_io_out_bits_uop_preDecodeInfo_isRVC),
    .io_in_bits_uop_ftqPtr_flag
      (_VSSplitSkidBuffer_io_out_bits_uop_ftqPtr_flag),
    .io_in_bits_uop_ftqPtr_value
      (_VSSplitSkidBuffer_io_out_bits_uop_ftqPtr_value),
    .io_in_bits_uop_ftqOffset
      (_VSSplitSkidBuffer_io_out_bits_uop_ftqOffset),
    .io_in_bits_uop_fuOpType
      (_VSSplitSkidBuffer_io_out_bits_uop_fuOpType),
    .io_in_bits_uop_rfWen                     (_VSSplitSkidBuffer_io_out_bits_uop_rfWen),
    .io_in_bits_uop_fpWen                     (_VSSplitSkidBuffer_io_out_bits_uop_fpWen),
    .io_in_bits_uop_vpu_vstart
      (_VSSplitSkidBuffer_io_out_bits_uop_vpu_vstart),
    .io_in_bits_uop_vpu_vuopIdx
      (_VSSplitSkidBuffer_io_out_bits_uop_vpu_vuopIdx),
    .io_in_bits_uop_vpu_veew
      (_VSSplitSkidBuffer_io_out_bits_uop_vpu_veew),
    .io_in_bits_uop_uopIdx                    (_VSSplitSkidBuffer_io_out_bits_uop_uopIdx),
    .io_in_bits_uop_pdest                     (_VSSplitSkidBuffer_io_out_bits_uop_pdest),
    .io_in_bits_uop_robIdx_flag
      (_VSSplitSkidBuffer_io_out_bits_uop_robIdx_flag),
    .io_in_bits_uop_robIdx_value
      (_VSSplitSkidBuffer_io_out_bits_uop_robIdx_value),
    .io_in_bits_uop_storeSetHit
      (_VSSplitSkidBuffer_io_out_bits_uop_storeSetHit),
    .io_in_bits_uop_waitForRobIdx_flag
      (_VSSplitSkidBuffer_io_out_bits_uop_waitForRobIdx_flag),
    .io_in_bits_uop_waitForRobIdx_value
      (_VSSplitSkidBuffer_io_out_bits_uop_waitForRobIdx_value),
    .io_in_bits_uop_loadWaitBit
      (_VSSplitSkidBuffer_io_out_bits_uop_loadWaitBit),
    .io_in_bits_uop_loadWaitStrict
      (_VSSplitSkidBuffer_io_out_bits_uop_loadWaitStrict),
    .io_in_bits_uop_lqIdx_flag
      (_VSSplitSkidBuffer_io_out_bits_uop_lqIdx_flag),
    .io_in_bits_uop_lqIdx_value
      (_VSSplitSkidBuffer_io_out_bits_uop_lqIdx_value),
    .io_in_bits_uop_sqIdx_flag
      (_VSSplitSkidBuffer_io_out_bits_uop_sqIdx_flag),
    .io_in_bits_uop_sqIdx_value
      (_VSSplitSkidBuffer_io_out_bits_uop_sqIdx_value),
    .io_in_bits_preIsSplit                    (_VSSplitSkidBuffer_io_out_bits_preIsSplit),
    .io_in_bits_mBIndex                       (_VSSplitSkidBuffer_io_out_bits_mBIndex),
    .io_in_bits_alignedType
      (_VSSplitSkidBuffer_io_out_bits_alignedType),
    .io_in_bits_indexVlMaxInVd
      (_VSSplitSkidBuffer_io_out_bits_indexVlMaxInVd),
    .io_in_bits_usLowBitsAddr
      (_VSSplitSkidBuffer_io_out_bits_usLowBitsAddr),
    .io_in_bits_usAligned128
      (_VSSplitSkidBuffer_io_out_bits_usAligned128),
    .io_in_bits_usMask                        (_VSSplitSkidBuffer_io_out_bits_usMask),
    .io_out_ready                             (io_out_ready),
    .io_out_valid                             (io_out_valid),
    .io_out_bits_vaddr                        (io_out_bits_vaddr),
    .io_out_bits_basevaddr                    (io_out_bits_basevaddr),
    .io_out_bits_mask                         (io_out_bits_mask),
    .io_out_bits_reg_offset                   (io_out_bits_reg_offset),
    .io_out_bits_alignedType                  (io_out_bits_alignedType),
    .io_out_bits_vecActive                    (io_out_bits_vecActive),
    .io_out_bits_uop_exceptionVec_6           (io_out_bits_uop_exceptionVec_6),
    .io_out_bits_uop_preDecodeInfo_isRVC      (io_out_bits_uop_preDecodeInfo_isRVC),
    .io_out_bits_uop_ftqPtr_flag              (io_out_bits_uop_ftqPtr_flag),
    .io_out_bits_uop_ftqPtr_value             (io_out_bits_uop_ftqPtr_value),
    .io_out_bits_uop_ftqOffset                (io_out_bits_uop_ftqOffset),
    .io_out_bits_uop_fuOpType                 (io_out_bits_uop_fuOpType),
    .io_out_bits_uop_rfWen                    (io_out_bits_uop_rfWen),
    .io_out_bits_uop_fpWen                    (io_out_bits_uop_fpWen),
    .io_out_bits_uop_vpu_vstart               (io_out_bits_uop_vpu_vstart),
    .io_out_bits_uop_vpu_veew                 (io_out_bits_uop_vpu_veew),
    .io_out_bits_uop_uopIdx                   (io_out_bits_uop_uopIdx),
    .io_out_bits_uop_pdest                    (io_out_bits_uop_pdest),
    .io_out_bits_uop_robIdx_flag              (io_out_bits_uop_robIdx_flag),
    .io_out_bits_uop_robIdx_value             (io_out_bits_uop_robIdx_value),
    .io_out_bits_uop_storeSetHit              (io_out_bits_uop_storeSetHit),
    .io_out_bits_uop_waitForRobIdx_flag       (io_out_bits_uop_waitForRobIdx_flag),
    .io_out_bits_uop_waitForRobIdx_value      (io_out_bits_uop_waitForRobIdx_value),
    .io_out_bits_uop_loadWaitBit              (io_out_bits_uop_loadWaitBit),
    .io_out_bits_uop_loadWaitStrict           (io_out_bits_uop_loadWaitStrict),
    .io_out_bits_uop_lqIdx_flag               (io_out_bits_uop_lqIdx_flag),
    .io_out_bits_uop_lqIdx_value              (io_out_bits_uop_lqIdx_value),
    .io_out_bits_uop_sqIdx_flag               (io_out_bits_uop_sqIdx_flag),
    .io_out_bits_uop_sqIdx_value              (io_out_bits_uop_sqIdx_value),
    .io_out_bits_mBIndex                      (io_out_bits_mBIndex),
    .io_out_bits_elemIdx                      (io_out_bits_elemIdx),
    .io_out_bits_elemIdxInsideVd              (io_out_bits_elemIdxInsideVd),
    .io_vstd_valid                            (io_vstd_valid),
    .io_vstd_bits_uop_fuOpType                (io_vstd_bits_uop_fuOpType),
    .io_vstd_bits_uop_sqIdx_flag              (io_vstd_bits_uop_sqIdx_flag),
    .io_vstd_bits_uop_sqIdx_value             (io_vstd_bits_uop_sqIdx_value),
    .io_vstd_bits_data                        (io_vstd_bits_data),
    .io_vstdMisalign_storePipeEmpty           (io_vstdMisalign_storePipeEmpty),
    .io_vstdMisalign_storeMisalignBufferEmpty (io_vstdMisalign_storeMisalignBufferEmpty)
  );
  skidBufferConnect VSSplitSkidBuffer (
    .clock                               (clock),
    .reset                               (reset),
    .io_in_ready                         (_VSSplitSkidBuffer_io_in_ready),
    .io_in_valid                         (_splitPipeline_io_out_valid),
    .io_in_bits_flowMask                 (_splitPipeline_io_out_bits_flowMask),
    .io_in_bits_data                     (_splitPipeline_io_out_bits_data),
    .io_in_bits_baseAddr                 (_splitPipeline_io_out_bits_baseAddr),
    .io_in_bits_uopAddr                  (_splitPipeline_io_out_bits_uopAddr),
    .io_in_bits_stride                   (_splitPipeline_io_out_bits_stride),
    .io_in_bits_flowNum                  (_splitPipeline_io_out_bits_flowNum),
    .io_in_bits_eew                      (_splitPipeline_io_out_bits_eew),
    .io_in_bits_sew                      (_splitPipeline_io_out_bits_sew),
    .io_in_bits_emul                     (_splitPipeline_io_out_bits_emul),
    .io_in_bits_lmul                     (_splitPipeline_io_out_bits_lmul),
    .io_in_bits_instType                 (_splitPipeline_io_out_bits_instType),
    .io_in_bits_indexedSplitOffset       (_splitPipeline_io_out_bits_indexedSplitOffset),
    .io_in_bits_uop_ftqPtr_flag          (_splitPipeline_io_out_bits_uop_ftqPtr_flag),
    .io_in_bits_uop_ftqPtr_value         (_splitPipeline_io_out_bits_uop_ftqPtr_value),
    .io_in_bits_uop_ftqOffset            (_splitPipeline_io_out_bits_uop_ftqOffset),
    .io_in_bits_uop_fuOpType             (_splitPipeline_io_out_bits_uop_fuOpType),
    .io_in_bits_uop_vpu_vstart           (_splitPipeline_io_out_bits_uop_vpu_vstart),
    .io_in_bits_uop_vpu_vuopIdx          (_splitPipeline_io_out_bits_uop_vpu_vuopIdx),
    .io_in_bits_uop_vpu_veew             (_splitPipeline_io_out_bits_uop_vpu_veew),
    .io_in_bits_uop_uopIdx               (_splitPipeline_io_out_bits_uop_uopIdx),
    .io_in_bits_uop_pdest                (_splitPipeline_io_out_bits_uop_pdest),
    .io_in_bits_uop_robIdx_flag          (_splitPipeline_io_out_bits_uop_robIdx_flag),
    .io_in_bits_uop_robIdx_value         (_splitPipeline_io_out_bits_uop_robIdx_value),
    .io_in_bits_uop_lqIdx_flag           (_splitPipeline_io_out_bits_uop_lqIdx_flag),
    .io_in_bits_uop_lqIdx_value          (_splitPipeline_io_out_bits_uop_lqIdx_value),
    .io_in_bits_uop_sqIdx_flag           (_splitPipeline_io_out_bits_uop_sqIdx_flag),
    .io_in_bits_uop_sqIdx_value          (_splitPipeline_io_out_bits_uop_sqIdx_value),
    .io_in_bits_preIsSplit               (_splitPipeline_io_out_bits_preIsSplit),
    .io_in_bits_mBIndex                  (_splitPipeline_io_out_bits_mBIndex),
    .io_in_bits_alignedType              (_splitPipeline_io_out_bits_alignedType),
    .io_in_bits_indexVlMaxInVd           (_splitPipeline_io_out_bits_indexVlMaxInVd),
    .io_in_bits_usLowBitsAddr            (_splitPipeline_io_out_bits_usLowBitsAddr),
    .io_in_bits_usAligned128             (_splitPipeline_io_out_bits_usAligned128),
    .io_in_bits_usMask                   (_splitPipeline_io_out_bits_usMask),
    .io_flush
      (_VSSplitSkidBuffer_io_in_ready & _splitPipeline_io_out_valid
         ? io_redirect_valid
           & (io_redirect_bits_level
              & {_splitPipeline_io_out_bits_uop_robIdx_flag,
                 _splitPipeline_io_out_bits_uop_robIdx_value} == _flushItself_T_6
              | _splitPipeline_io_out_bits_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
              ^ _splitPipeline_io_out_bits_uop_robIdx_value > io_redirect_bits_robIdx_value)
         : io_redirect_valid
           & (io_redirect_bits_level
              & {_VSSplitSkidBuffer_io_out_bits_uop_robIdx_flag,
                 _VSSplitSkidBuffer_io_out_bits_uop_robIdx_value} == _flushItself_T_6
              | _VSSplitSkidBuffer_io_out_bits_uop_robIdx_flag
              ^ io_redirect_bits_robIdx_flag
              ^ _VSSplitSkidBuffer_io_out_bits_uop_robIdx_value > io_redirect_bits_robIdx_value)),
    .io_out_ready                        (_splitBuffer_io_in_ready),
    .io_out_valid                        (_VSSplitSkidBuffer_io_out_valid),
    .io_out_bits_flowMask                (_VSSplitSkidBuffer_io_out_bits_flowMask),
    .io_out_bits_data                    (_VSSplitSkidBuffer_io_out_bits_data),
    .io_out_bits_baseAddr                (_VSSplitSkidBuffer_io_out_bits_baseAddr),
    .io_out_bits_uopAddr                 (_VSSplitSkidBuffer_io_out_bits_uopAddr),
    .io_out_bits_stride                  (_VSSplitSkidBuffer_io_out_bits_stride),
    .io_out_bits_flowNum                 (_VSSplitSkidBuffer_io_out_bits_flowNum),
    .io_out_bits_eew                     (_VSSplitSkidBuffer_io_out_bits_eew),
    .io_out_bits_sew                     (_VSSplitSkidBuffer_io_out_bits_sew),
    .io_out_bits_emul                    (_VSSplitSkidBuffer_io_out_bits_emul),
    .io_out_bits_lmul                    (_VSSplitSkidBuffer_io_out_bits_lmul),
    .io_out_bits_instType                (_VSSplitSkidBuffer_io_out_bits_instType),
    .io_out_bits_indexedSplitOffset
      (_VSSplitSkidBuffer_io_out_bits_indexedSplitOffset),
    .io_out_bits_uop_preDecodeInfo_isRVC
      (_VSSplitSkidBuffer_io_out_bits_uop_preDecodeInfo_isRVC),
    .io_out_bits_uop_ftqPtr_flag         (_VSSplitSkidBuffer_io_out_bits_uop_ftqPtr_flag),
    .io_out_bits_uop_ftqPtr_value
      (_VSSplitSkidBuffer_io_out_bits_uop_ftqPtr_value),
    .io_out_bits_uop_ftqOffset           (_VSSplitSkidBuffer_io_out_bits_uop_ftqOffset),
    .io_out_bits_uop_fuOpType            (_VSSplitSkidBuffer_io_out_bits_uop_fuOpType),
    .io_out_bits_uop_rfWen               (_VSSplitSkidBuffer_io_out_bits_uop_rfWen),
    .io_out_bits_uop_fpWen               (_VSSplitSkidBuffer_io_out_bits_uop_fpWen),
    .io_out_bits_uop_vpu_vstart          (_VSSplitSkidBuffer_io_out_bits_uop_vpu_vstart),
    .io_out_bits_uop_vpu_vuopIdx         (_VSSplitSkidBuffer_io_out_bits_uop_vpu_vuopIdx),
    .io_out_bits_uop_vpu_veew            (_VSSplitSkidBuffer_io_out_bits_uop_vpu_veew),
    .io_out_bits_uop_uopIdx              (_VSSplitSkidBuffer_io_out_bits_uop_uopIdx),
    .io_out_bits_uop_pdest               (_VSSplitSkidBuffer_io_out_bits_uop_pdest),
    .io_out_bits_uop_robIdx_flag         (_VSSplitSkidBuffer_io_out_bits_uop_robIdx_flag),
    .io_out_bits_uop_robIdx_value
      (_VSSplitSkidBuffer_io_out_bits_uop_robIdx_value),
    .io_out_bits_uop_storeSetHit         (_VSSplitSkidBuffer_io_out_bits_uop_storeSetHit),
    .io_out_bits_uop_waitForRobIdx_flag
      (_VSSplitSkidBuffer_io_out_bits_uop_waitForRobIdx_flag),
    .io_out_bits_uop_waitForRobIdx_value
      (_VSSplitSkidBuffer_io_out_bits_uop_waitForRobIdx_value),
    .io_out_bits_uop_loadWaitBit         (_VSSplitSkidBuffer_io_out_bits_uop_loadWaitBit),
    .io_out_bits_uop_loadWaitStrict
      (_VSSplitSkidBuffer_io_out_bits_uop_loadWaitStrict),
    .io_out_bits_uop_lqIdx_flag          (_VSSplitSkidBuffer_io_out_bits_uop_lqIdx_flag),
    .io_out_bits_uop_lqIdx_value         (_VSSplitSkidBuffer_io_out_bits_uop_lqIdx_value),
    .io_out_bits_uop_sqIdx_flag          (_VSSplitSkidBuffer_io_out_bits_uop_sqIdx_flag),
    .io_out_bits_uop_sqIdx_value         (_VSSplitSkidBuffer_io_out_bits_uop_sqIdx_value),
    .io_out_bits_preIsSplit              (_VSSplitSkidBuffer_io_out_bits_preIsSplit),
    .io_out_bits_mBIndex                 (_VSSplitSkidBuffer_io_out_bits_mBIndex),
    .io_out_bits_alignedType             (_VSSplitSkidBuffer_io_out_bits_alignedType),
    .io_out_bits_indexVlMaxInVd          (_VSSplitSkidBuffer_io_out_bits_indexVlMaxInVd),
    .io_out_bits_usLowBitsAddr           (_VSSplitSkidBuffer_io_out_bits_usLowBitsAddr),
    .io_out_bits_usAligned128            (_VSSplitSkidBuffer_io_out_bits_usAligned128),
    .io_out_bits_usMask                  (_VSSplitSkidBuffer_io_out_bits_usMask)
  );
endmodule

