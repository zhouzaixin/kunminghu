// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module TLBNonBlock_2(
  input         clock,
  input         reset,
  input         io_sfence_valid,
  input         io_sfence_bits_rs1,
  input         io_sfence_bits_rs2,
  input  [49:0] io_sfence_bits_addr,
  input  [15:0] io_sfence_bits_id,
  input         io_sfence_bits_flushPipe,
  input         io_sfence_bits_hv,
  input         io_sfence_bits_hg,
  input  [3:0]  io_csr_satp_mode,
  input  [15:0] io_csr_satp_asid,
  input         io_csr_satp_changed,
  input  [3:0]  io_csr_vsatp_mode,
  input  [15:0] io_csr_vsatp_asid,
  input         io_csr_vsatp_changed,
  input  [3:0]  io_csr_hgatp_mode,
  input  [15:0] io_csr_hgatp_vmid,
  input         io_csr_hgatp_changed,
  input         io_csr_priv_mxr,
  input         io_csr_priv_sum,
  input         io_csr_priv_vmxr,
  input         io_csr_priv_vsum,
  input         io_csr_priv_virt,
  input         io_csr_priv_spvp,
  input  [1:0]  io_csr_priv_imode,
  input  [1:0]  io_csr_priv_dmode,
  input  [1:0]  io_csr_pmm_mseccfg,
  input  [1:0]  io_csr_pmm_menvcfg,
  input  [1:0]  io_csr_pmm_henvcfg,
  input  [1:0]  io_csr_pmm_hstatus,
  input  [1:0]  io_csr_pmm_senvcfg,
  input         io_requestor_0_req_valid,
  input  [49:0] io_requestor_0_req_bits_vaddr,
  input  [63:0] io_requestor_0_req_bits_fullva,
  input         io_requestor_0_req_bits_checkfullva,
  input  [2:0]  io_requestor_0_req_bits_cmd,
  input         io_requestor_0_req_bits_hyperinst,
  input         io_requestor_0_req_bits_hlvx,
  input         io_requestor_0_req_bits_kill,
  input         io_requestor_0_req_bits_isPrefetch,
  input         io_requestor_0_req_bits_no_translate,
  input  [47:0] io_requestor_0_req_bits_pmp_addr,
  input         io_requestor_0_req_bits_debug_robIdx_flag,
  input  [7:0]  io_requestor_0_req_bits_debug_robIdx_value,
  output        io_requestor_0_resp_valid,
  output [47:0] io_requestor_0_resp_bits_paddr_0,
  output [1:0]  io_requestor_0_resp_bits_pbmt_0,
  output        io_requestor_0_resp_bits_miss,
  output        io_requestor_0_resp_bits_excp_0_gpf_ld,
  output        io_requestor_0_resp_bits_excp_0_pf_ld,
  output        io_requestor_0_resp_bits_excp_0_af_ld,
  input         io_requestor_1_req_valid,
  input  [49:0] io_requestor_1_req_bits_vaddr,
  input  [2:0]  io_requestor_1_req_bits_cmd,
  input         io_requestor_1_req_bits_kill,
  input         io_requestor_1_req_bits_no_translate,
  output        io_requestor_1_resp_valid,
  output [47:0] io_requestor_1_resp_bits_paddr_0,
  output [1:0]  io_requestor_1_resp_bits_pbmt_0,
  output        io_requestor_1_resp_bits_miss,
  output        io_requestor_1_resp_bits_excp_0_gpf_ld,
  output        io_requestor_1_resp_bits_excp_0_pf_ld,
  output        io_requestor_1_resp_bits_excp_0_af_ld,
  input         io_redirect_valid,
  input         io_redirect_bits_robIdx_flag,
  input  [7:0]  io_redirect_bits_robIdx_value,
  input         io_redirect_bits_level,
  output        io_ptw_req_0_valid,
  output [37:0] io_ptw_req_0_bits_vpn,
  output [1:0]  io_ptw_req_0_bits_s2xlate,
  output        io_ptw_req_0_bits_getGpa,
  output        io_ptw_req_1_valid,
  output [37:0] io_ptw_req_1_bits_vpn,
  output [1:0]  io_ptw_req_1_bits_s2xlate,
  output        io_ptw_req_1_bits_getGpa,
  input         io_ptw_resp_valid,
  input  [1:0]  io_ptw_resp_bits_s2xlate,
  input  [34:0] io_ptw_resp_bits_s1_entry_tag,
  input  [15:0] io_ptw_resp_bits_s1_entry_asid,
  input  [13:0] io_ptw_resp_bits_s1_entry_vmid,
  input         io_ptw_resp_bits_s1_entry_n,
  input  [1:0]  io_ptw_resp_bits_s1_entry_pbmt,
  input         io_ptw_resp_bits_s1_entry_perm_d,
  input         io_ptw_resp_bits_s1_entry_perm_a,
  input         io_ptw_resp_bits_s1_entry_perm_g,
  input         io_ptw_resp_bits_s1_entry_perm_u,
  input         io_ptw_resp_bits_s1_entry_perm_x,
  input         io_ptw_resp_bits_s1_entry_perm_w,
  input         io_ptw_resp_bits_s1_entry_perm_r,
  input  [1:0]  io_ptw_resp_bits_s1_entry_level,
  input         io_ptw_resp_bits_s1_entry_v,
  input  [40:0] io_ptw_resp_bits_s1_entry_ppn,
  input  [2:0]  io_ptw_resp_bits_s1_addr_low,
  input  [2:0]  io_ptw_resp_bits_s1_ppn_low_0,
  input  [2:0]  io_ptw_resp_bits_s1_ppn_low_1,
  input  [2:0]  io_ptw_resp_bits_s1_ppn_low_2,
  input  [2:0]  io_ptw_resp_bits_s1_ppn_low_3,
  input  [2:0]  io_ptw_resp_bits_s1_ppn_low_4,
  input  [2:0]  io_ptw_resp_bits_s1_ppn_low_5,
  input  [2:0]  io_ptw_resp_bits_s1_ppn_low_6,
  input  [2:0]  io_ptw_resp_bits_s1_ppn_low_7,
  input         io_ptw_resp_bits_s1_valididx_0,
  input         io_ptw_resp_bits_s1_valididx_1,
  input         io_ptw_resp_bits_s1_valididx_2,
  input         io_ptw_resp_bits_s1_valididx_3,
  input         io_ptw_resp_bits_s1_valididx_4,
  input         io_ptw_resp_bits_s1_valididx_5,
  input         io_ptw_resp_bits_s1_valididx_6,
  input         io_ptw_resp_bits_s1_valididx_7,
  input         io_ptw_resp_bits_s1_pteidx_0,
  input         io_ptw_resp_bits_s1_pteidx_1,
  input         io_ptw_resp_bits_s1_pteidx_2,
  input         io_ptw_resp_bits_s1_pteidx_3,
  input         io_ptw_resp_bits_s1_pteidx_4,
  input         io_ptw_resp_bits_s1_pteidx_5,
  input         io_ptw_resp_bits_s1_pteidx_6,
  input         io_ptw_resp_bits_s1_pteidx_7,
  input         io_ptw_resp_bits_s1_pf,
  input         io_ptw_resp_bits_s1_af,
  input  [37:0] io_ptw_resp_bits_s2_entry_tag,
  input  [13:0] io_ptw_resp_bits_s2_entry_vmid,
  input         io_ptw_resp_bits_s2_entry_n,
  input  [1:0]  io_ptw_resp_bits_s2_entry_pbmt,
  input  [37:0] io_ptw_resp_bits_s2_entry_ppn,
  input         io_ptw_resp_bits_s2_entry_perm_d,
  input         io_ptw_resp_bits_s2_entry_perm_a,
  input         io_ptw_resp_bits_s2_entry_perm_g,
  input         io_ptw_resp_bits_s2_entry_perm_u,
  input         io_ptw_resp_bits_s2_entry_perm_x,
  input         io_ptw_resp_bits_s2_entry_perm_w,
  input         io_ptw_resp_bits_s2_entry_perm_r,
  input  [1:0]  io_ptw_resp_bits_s2_entry_level,
  input         io_ptw_resp_bits_s2_gpf,
  input         io_ptw_resp_bits_s2_gaf,
  input         io_ptw_resp_bits_getGpa,
  output        io_pmp_0_valid,
  output [47:0] io_pmp_0_bits_addr,
  output [2:0]  io_pmp_0_bits_cmd,
  output        io_pmp_1_valid,
  output [47:0] io_pmp_1_bits_addr,
  output [2:0]  io_pmp_1_bits_cmd
);

  wire             hasGpf_1;
  wire             hasGpf_0;
  wire             need_gpa_wire;
  wire             _entries_io_r_resp_0_bits_hit;
  wire [35:0]      _entries_io_r_resp_0_bits_ppn_0;
  wire [1:0]       _entries_io_r_resp_0_bits_pbmt_0;
  wire [1:0]       _entries_io_r_resp_0_bits_g_pbmt_0;
  wire             _entries_io_r_resp_0_bits_perm_0_pf;
  wire             _entries_io_r_resp_0_bits_perm_0_af;
  wire             _entries_io_r_resp_0_bits_perm_0_v;
  wire             _entries_io_r_resp_0_bits_perm_0_d;
  wire             _entries_io_r_resp_0_bits_perm_0_a;
  wire             _entries_io_r_resp_0_bits_perm_0_u;
  wire             _entries_io_r_resp_0_bits_perm_0_x;
  wire             _entries_io_r_resp_0_bits_perm_0_w;
  wire             _entries_io_r_resp_0_bits_perm_0_r;
  wire             _entries_io_r_resp_0_bits_g_perm_0_pf;
  wire             _entries_io_r_resp_0_bits_g_perm_0_af;
  wire             _entries_io_r_resp_0_bits_g_perm_0_d;
  wire             _entries_io_r_resp_0_bits_g_perm_0_a;
  wire             _entries_io_r_resp_0_bits_g_perm_0_x;
  wire             _entries_io_r_resp_0_bits_g_perm_0_w;
  wire             _entries_io_r_resp_0_bits_g_perm_0_r;
  wire             _entries_io_r_resp_1_bits_hit;
  wire [35:0]      _entries_io_r_resp_1_bits_ppn_0;
  wire [1:0]       _entries_io_r_resp_1_bits_pbmt_0;
  wire [1:0]       _entries_io_r_resp_1_bits_g_pbmt_0;
  wire             _entries_io_r_resp_1_bits_perm_0_pf;
  wire             _entries_io_r_resp_1_bits_perm_0_af;
  wire             _entries_io_r_resp_1_bits_perm_0_v;
  wire             _entries_io_r_resp_1_bits_perm_0_d;
  wire             _entries_io_r_resp_1_bits_perm_0_a;
  wire             _entries_io_r_resp_1_bits_perm_0_u;
  wire             _entries_io_r_resp_1_bits_perm_0_x;
  wire             _entries_io_r_resp_1_bits_perm_0_w;
  wire             _entries_io_r_resp_1_bits_perm_0_r;
  wire             _entries_io_r_resp_1_bits_g_perm_0_pf;
  wire             _entries_io_r_resp_1_bits_g_perm_0_af;
  wire             _entries_io_r_resp_1_bits_g_perm_0_d;
  wire             _entries_io_r_resp_1_bits_g_perm_0_a;
  wire             _entries_io_r_resp_1_bits_g_perm_0_x;
  wire             _entries_io_r_resp_1_bits_g_perm_0_w;
  wire             _entries_io_r_resp_1_bits_g_perm_0_r;
  wire             _flush_mmu_delay_io_out;
  wire [3:0]       _hgatp_delay_io_out_mode;
  wire [3:0]       _vsatp_delay_io_out_mode;
  wire [3:0]       _satp_delay_io_out_mode;
  wire [15:0]      _satp_delay_io_out_asid;
  wire             _sfence_delay_io_out_valid;
  wire             _sfence_delay_io_out_bits_rs1;
  wire             _sfence_delay_io_out_bits_rs2;
  wire [49:0]      _sfence_delay_io_out_bits_addr;
  wire [15:0]      _sfence_delay_io_out_bits_id;
  wire             _sfence_delay_io_out_bits_hv;
  wire             _sfence_delay_io_out_bits_hg;
  reg  [49:0]      req_out_0_vaddr;
  reg  [2:0]       req_out_0_cmd;
  reg              req_out_0_hyperinst;
  reg              req_out_0_hlvx;
  reg              req_out_0_isPrefetch;
  reg              req_out_0_debug_robIdx_flag;
  reg  [7:0]       req_out_0_debug_robIdx_value;
  reg  [49:0]      req_out_1_vaddr;
  reg  [2:0]       req_out_1_cmd;
  reg              req_out_v_0;
  reg              req_out_v_1;
  wire             isHyperInst_0 = req_out_v_0 & req_out_0_hyperinst;
  wire [1:0]       _GEN = {1'h0, io_csr_priv_spvp};
  wire [1:0]       mode_0 = isHyperInst_0 ? _GEN : io_csr_priv_dmode;
  reg              virt_out_0;
  reg              virt_out_1;
  wire             _req_out_s2xlate_T = virt_out_0 | isHyperInst_0;
  wire             _pres2xlateEnable_T =
    io_csr_priv_virt | io_requestor_0_req_bits_hyperinst;
  wire             _req_s2xlate_T_17 = io_csr_vsatp_mode == 4'h0;
  wire             _req_s2xlate_T_18 = io_csr_hgatp_mode == 4'h0;
  wire [1:0]       _GEN_0 = {1'h0, _req_s2xlate_T_18};
  wire [1:0]       req_in_s2xlate_0 =
    _pres2xlateEnable_T
      ? ((|io_csr_vsatp_mode) & (|io_csr_hgatp_mode)
           ? 2'h3
           : _req_s2xlate_T_17 ? 2'h2 : _GEN_0)
      : 2'h0;
  wire [1:0]       req_in_s2xlate_1 =
    io_csr_priv_virt
      ? ((|io_csr_vsatp_mode) & (|io_csr_hgatp_mode)
           ? 2'h3
           : _req_s2xlate_T_17 ? 2'h2 : _GEN_0)
      : 2'h0;
  wire [1:0]       req_out_s2xlate_0 =
    _req_out_s2xlate_T
      ? ((|io_csr_vsatp_mode) & (|io_csr_hgatp_mode)
           ? 2'h3
           : _req_s2xlate_T_17 ? 2'h2 : _GEN_0)
      : 2'h0;
  wire [1:0]       req_out_s2xlate_1 =
    virt_out_1
      ? ((|io_csr_vsatp_mode) & (|io_csr_hgatp_mode)
           ? 2'h3
           : _req_s2xlate_T_17 ? 2'h2 : _GEN_0)
      : 2'h0;
  reg              need_gpa;
  reg              need_gpa_robidx_flag;
  reg  [7:0]       need_gpa_robidx_value;
  reg  [37:0]      need_gpa_vpn;
  reg              resp_gpa_refill;
  wire             Sv39Enable = _satp_delay_io_out_mode == 4'h8;
  wire             Sv48Enable = _satp_delay_io_out_mode == 4'h9;
  wire             Sv39x4Enable =
    _vsatp_delay_io_out_mode == 4'h8 | _hgatp_delay_io_out_mode == 4'h8;
  wire             Sv48x4Enable =
    _vsatp_delay_io_out_mode == 4'h9 | _hgatp_delay_io_out_mode == 4'h9;
  wire             _s2xlateEnable_T = isHyperInst_0 | virt_out_0;
  wire             _prevmEnable_T_7 = Sv39Enable | Sv48Enable;
  wire             _s2xlateEnable_T_3 = mode_0 != 2'h3;
  wire             _s2xlateEnable_T_7 = io_csr_priv_dmode != 2'h3;
  wire             _pres2xlateEnable_T_5 = Sv39x4Enable | Sv48x4Enable;
  reg              portTranslateEnable_r;
  wire             portTranslateEnable_0 =
    (~_s2xlateEnable_T & _prevmEnable_T_7 & _s2xlateEnable_T_3 | _s2xlateEnable_T
     & _pres2xlateEnable_T_5 & _s2xlateEnable_T_3) & portTranslateEnable_r;
  reg              portTranslateEnable_r_1;
  wire             portTranslateEnable_1 =
    (~virt_out_1 & _prevmEnable_T_7 & _s2xlateEnable_T_7 | virt_out_1
     & _pres2xlateEnable_T_5 & _s2xlateEnable_T_7) & portTranslateEnable_r_1;
  wire             _ptw_just_back_noS2_hit_vmid_hit_T_1 =
    {2'h0, io_ptw_resp_bits_s1_entry_vmid} == io_csr_hgatp_vmid;
  wire             _GEN_1 = io_ptw_resp_bits_s1_entry_level != 2'h2;
  wire             _ptw_just_back_noS2_hit_level_match_T_19 =
    io_ptw_resp_bits_s1_entry_level == 2'h1;
  wire             _ptw_just_back_noS2_hit_level_match_T_21 =
    io_ptw_resp_bits_s1_entry_level == 2'h0;
  wire [7:0]       _GEN_2 =
    {{io_ptw_resp_bits_s1_valididx_7},
     {io_ptw_resp_bits_s1_valididx_6},
     {io_ptw_resp_bits_s1_valididx_5},
     {io_ptw_resp_bits_s1_valididx_4},
     {io_ptw_resp_bits_s1_valididx_3},
     {io_ptw_resp_bits_s1_valididx_2},
     {io_ptw_resp_bits_s1_valididx_1},
     {io_ptw_resp_bits_s1_valididx_0}};
  wire             ptw_just_back_onlyS2_hit_vmid_hit =
    {2'h0, io_ptw_resp_bits_s2_entry_vmid} == io_csr_hgatp_vmid;
  wire             _GEN_3 = io_ptw_resp_bits_s2_entry_level != 2'h2;
  wire             _ptw_just_back_onlyS2_hit_level_match_T_19 =
    io_ptw_resp_bits_s2_entry_level == 2'h1;
  wire             _ptw_just_back_onlyS2_hit_level_match_T_21 =
    io_ptw_resp_bits_s2_entry_level == 2'h0;
  wire             _ptw_just_back_level_T_4 =
    io_ptw_resp_bits_s1_entry_level < io_ptw_resp_bits_s2_entry_level;
  wire             _GEN_4 = io_ptw_resp_bits_s2xlate == 2'h1 | _ptw_just_back_level_T_4;
  wire             ptw_just_back_vasid_hit =
    io_ptw_resp_bits_s1_entry_asid == io_csr_vsatp_asid;
  wire             _ptw_just_back_T_12 = io_ptw_resp_bits_s2xlate == 2'h0;
  wire             _ptw_just_back_T_13 = io_ptw_resp_bits_s2xlate == 2'h2;
  reg              readResult_p_hit_last_REG;
  reg  [43:0]      readResult_p_ppn;
  reg  [1:0]       readResult_p_pbmt;
  reg              readResult_p_perm_pf;
  reg              readResult_p_perm_af;
  reg              readResult_p_perm_v;
  reg              readResult_p_perm_d;
  reg              readResult_p_perm_a;
  reg              readResult_p_perm_u;
  reg              readResult_p_perm_x;
  reg              readResult_p_perm_w;
  reg              readResult_p_perm_r;
  reg  [1:0]       readResult_p_g_pbmt;
  reg              readResult_p_g_perm_pf;
  reg              readResult_p_g_perm_af;
  reg              readResult_p_g_perm_d;
  reg              readResult_p_g_perm_a;
  reg              readResult_p_g_perm_x;
  reg              readResult_p_g_perm_w;
  reg              readResult_p_g_perm_r;
  wire             onlyS2 = req_out_s2xlate_0 == 2'h2;
  wire             readResult_need_gpa_vpn_hit = need_gpa_vpn == req_out_0_vaddr[49:12];
  wire [8:0]       _readResult_lastCycleRedirect_flushItself_T_1 =
    {req_out_0_debug_robIdx_flag, req_out_0_debug_robIdx_value};
  wire [8:0]       _readResult_flushItself_T_6 =
    {io_redirect_bits_robIdx_flag, io_redirect_bits_robIdx_value};
  reg              readResult_lastCycleRedirect_REG_valid;
  reg              readResult_lastCycleRedirect_REG_bits_robIdx_flag;
  reg  [7:0]       readResult_lastCycleRedirect_REG_bits_robIdx_value;
  reg              readResult_lastCycleRedirect_REG_bits_level;
  wire             readResult_lastCycleRedirect =
    readResult_lastCycleRedirect_REG_valid
    & (readResult_lastCycleRedirect_REG_bits_level
       & _readResult_lastCycleRedirect_flushItself_T_1 == {readResult_lastCycleRedirect_REG_bits_robIdx_flag,
                                                           readResult_lastCycleRedirect_REG_bits_robIdx_value}
       | req_out_0_debug_robIdx_flag ^ readResult_lastCycleRedirect_REG_bits_robIdx_flag
       ^ req_out_0_debug_robIdx_value > readResult_lastCycleRedirect_REG_bits_robIdx_value);
  wire [8:0]       _readResult_flushItself_T_5 =
    {need_gpa_robidx_flag, need_gpa_robidx_value};
  wire             readResult_differentFlag =
    need_gpa_robidx_flag ^ io_redirect_bits_robIdx_flag;
  wire             readResult_compare =
    need_gpa_robidx_value > io_redirect_bits_robIdx_value;
  wire             _readResult_T_5 =
    req_out_0_cmd[1:0] != 2'h2 & io_redirect_valid
    & (io_redirect_bits_level & _readResult_flushItself_T_5 == _readResult_flushItself_T_6
       | readResult_differentFlag ^ readResult_compare);
  wire             _readResult_T_25 =
    req_out_v_0 & ~readResult_p_hit_last_REG
    & ~(resp_gpa_refill & readResult_need_gpa_vpn_hit) & ~onlyS2 & hasGpf_0 & ~need_gpa
    & ~req_out_0_isPrefetch
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & _readResult_lastCycleRedirect_flushItself_T_1 == _readResult_flushItself_T_6
           | req_out_0_debug_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ req_out_0_debug_robIdx_value > io_redirect_bits_robIdx_value))
    & ~readResult_lastCycleRedirect;
  wire             hit_read_0 = _entries_io_r_resp_0_bits_hit | readResult_p_hit_last_REG;
  wire             miss_read_0 =
    ~hit_read_0 & portTranslateEnable_0 | hasGpf_0 & ~readResult_p_hit_last_REG
    & ~(resp_gpa_refill & readResult_need_gpa_vpn_hit) & ~onlyS2 & ~req_out_0_isPrefetch
    & ~readResult_lastCycleRedirect;
  wire [1:0]       readResult_0_6_0 =
    readResult_p_hit_last_REG ? readResult_p_pbmt : _entries_io_r_resp_0_bits_pbmt_0;
  wire             readResult_0_4_0_pf =
    readResult_p_hit_last_REG
      ? readResult_p_perm_pf
      : _entries_io_r_resp_0_bits_perm_0_pf;
  wire             readResult_0_4_0_af =
    readResult_p_hit_last_REG
      ? readResult_p_perm_af
      : _entries_io_r_resp_0_bits_perm_0_af;
  wire             readResult_0_4_0_v =
    readResult_p_hit_last_REG ? readResult_p_perm_v : _entries_io_r_resp_0_bits_perm_0_v;
  wire             readResult_0_4_0_a =
    readResult_p_hit_last_REG ? readResult_p_perm_a : _entries_io_r_resp_0_bits_perm_0_a;
  wire             readResult_0_4_0_u =
    readResult_p_hit_last_REG ? readResult_p_perm_u : _entries_io_r_resp_0_bits_perm_0_u;
  wire             readResult_0_4_0_x =
    readResult_p_hit_last_REG ? readResult_p_perm_x : _entries_io_r_resp_0_bits_perm_0_x;
  wire             readResult_0_4_0_w =
    readResult_p_hit_last_REG ? readResult_p_perm_w : _entries_io_r_resp_0_bits_perm_0_w;
  wire             readResult_0_4_0_r =
    readResult_p_hit_last_REG ? readResult_p_perm_r : _entries_io_r_resp_0_bits_perm_0_r;
  wire [1:0]       readResult_0_7_0 =
    readResult_p_hit_last_REG ? readResult_p_g_pbmt : _entries_io_r_resp_0_bits_g_pbmt_0;
  wire             readResult_0_5_0_pf =
    readResult_p_hit_last_REG
      ? readResult_p_g_perm_pf
      : _entries_io_r_resp_0_bits_g_perm_0_pf;
  wire             readResult_0_5_0_a =
    readResult_p_hit_last_REG
      ? readResult_p_g_perm_a
      : _entries_io_r_resp_0_bits_g_perm_0_a;
  wire             readResult_0_5_0_x =
    readResult_p_hit_last_REG
      ? readResult_p_g_perm_x
      : _entries_io_r_resp_0_bits_g_perm_0_x;
  wire [47:0]      io_requestor_0_resp_bits_paddr_0_0 =
    portTranslateEnable_0
      ? {readResult_p_hit_last_REG
           ? readResult_p_ppn[35:0]
           : _entries_io_r_resp_0_bits_ppn_0,
         req_out_0_vaddr[11:0]}
      : req_out_0_vaddr[47:0];
  reg              readResult_p_hit_last_REG_1;
  reg  [43:0]      readResult_p_ppn_1;
  reg  [1:0]       readResult_p_pbmt_1;
  reg              readResult_p_perm_1_pf;
  reg              readResult_p_perm_1_af;
  reg              readResult_p_perm_1_v;
  reg              readResult_p_perm_1_d;
  reg              readResult_p_perm_1_a;
  reg              readResult_p_perm_1_u;
  reg              readResult_p_perm_1_x;
  reg              readResult_p_perm_1_w;
  reg              readResult_p_perm_1_r;
  reg  [1:0]       readResult_p_g_pbmt_1;
  reg              readResult_p_g_perm_1_pf;
  reg              readResult_p_g_perm_1_af;
  reg              readResult_p_g_perm_1_d;
  reg              readResult_p_g_perm_1_a;
  reg              readResult_p_g_perm_1_x;
  reg              readResult_p_g_perm_1_w;
  reg              readResult_p_g_perm_1_r;
  wire             onlyS2_2 = req_out_s2xlate_1 == 2'h2;
  wire             readResult_need_gpa_vpn_hit_1 = need_gpa_vpn == req_out_1_vaddr[49:12];
  reg              readResult_lastCycleRedirect_REG_1_valid;
  reg              readResult_lastCycleRedirect_REG_1_bits_robIdx_flag;
  reg  [7:0]       readResult_lastCycleRedirect_REG_1_bits_robIdx_value;
  reg              readResult_lastCycleRedirect_REG_1_bits_level;
  wire             readResult_lastCycleRedirect_1 =
    readResult_lastCycleRedirect_REG_1_valid
    & (readResult_lastCycleRedirect_REG_1_bits_level
       & {readResult_lastCycleRedirect_REG_1_bits_robIdx_flag,
          readResult_lastCycleRedirect_REG_1_bits_robIdx_value} == 9'h0
       | readResult_lastCycleRedirect_REG_1_bits_robIdx_flag);
  wire             _readResult_T_42 =
    req_out_1_cmd[1:0] != 2'h2 & io_redirect_valid
    & (io_redirect_bits_level & _readResult_flushItself_T_5 == _readResult_flushItself_T_6
       | readResult_differentFlag ^ readResult_compare);
  wire             _readResult_T_62 =
    req_out_v_1 & ~readResult_p_hit_last_REG_1
    & ~(resp_gpa_refill & readResult_need_gpa_vpn_hit_1) & ~onlyS2_2 & hasGpf_1
    & ~need_gpa
    & ~(io_redirect_valid
        & (io_redirect_bits_level & _readResult_flushItself_T_6 == 9'h0
           | io_redirect_bits_robIdx_flag)) & ~readResult_lastCycleRedirect_1;
  assign need_gpa_wire =
    ~_readResult_T_42 & _readResult_T_62 | ~_readResult_T_5 & _readResult_T_25;
  wire             hit_read_1 =
    _entries_io_r_resp_1_bits_hit | readResult_p_hit_last_REG_1;
  wire             miss_read_1 =
    ~hit_read_1 & portTranslateEnable_1 | hasGpf_1 & ~readResult_p_hit_last_REG_1
    & ~(resp_gpa_refill & readResult_need_gpa_vpn_hit_1) & ~onlyS2_2
    & ~readResult_lastCycleRedirect_1;
  wire [1:0]       readResult_1_6_0 =
    readResult_p_hit_last_REG_1 ? readResult_p_pbmt_1 : _entries_io_r_resp_1_bits_pbmt_0;
  wire             readResult_1_4_0_pf =
    readResult_p_hit_last_REG_1
      ? readResult_p_perm_1_pf
      : _entries_io_r_resp_1_bits_perm_0_pf;
  wire             readResult_1_4_0_af =
    readResult_p_hit_last_REG_1
      ? readResult_p_perm_1_af
      : _entries_io_r_resp_1_bits_perm_0_af;
  wire             readResult_1_4_0_v =
    readResult_p_hit_last_REG_1
      ? readResult_p_perm_1_v
      : _entries_io_r_resp_1_bits_perm_0_v;
  wire             readResult_1_4_0_a =
    readResult_p_hit_last_REG_1
      ? readResult_p_perm_1_a
      : _entries_io_r_resp_1_bits_perm_0_a;
  wire             readResult_1_4_0_u =
    readResult_p_hit_last_REG_1
      ? readResult_p_perm_1_u
      : _entries_io_r_resp_1_bits_perm_0_u;
  wire             readResult_1_4_0_x =
    readResult_p_hit_last_REG_1
      ? readResult_p_perm_1_x
      : _entries_io_r_resp_1_bits_perm_0_x;
  wire             readResult_1_4_0_w =
    readResult_p_hit_last_REG_1
      ? readResult_p_perm_1_w
      : _entries_io_r_resp_1_bits_perm_0_w;
  wire             readResult_1_4_0_r =
    readResult_p_hit_last_REG_1
      ? readResult_p_perm_1_r
      : _entries_io_r_resp_1_bits_perm_0_r;
  wire [1:0]       readResult_1_7_0 =
    readResult_p_hit_last_REG_1
      ? readResult_p_g_pbmt_1
      : _entries_io_r_resp_1_bits_g_pbmt_0;
  wire             readResult_1_5_0_pf =
    readResult_p_hit_last_REG_1
      ? readResult_p_g_perm_1_pf
      : _entries_io_r_resp_1_bits_g_perm_0_pf;
  wire             readResult_1_5_0_a =
    readResult_p_hit_last_REG_1
      ? readResult_p_g_perm_1_a
      : _entries_io_r_resp_1_bits_g_perm_0_a;
  wire             readResult_1_5_0_x =
    readResult_p_hit_last_REG_1
      ? readResult_p_g_perm_1_x
      : _entries_io_r_resp_1_bits_g_perm_0_x;
  wire [47:0]      io_requestor_1_resp_bits_paddr_0_0 =
    portTranslateEnable_1
      ? {readResult_p_hit_last_REG_1
           ? readResult_p_ppn_1[35:0]
           : _entries_io_r_resp_1_bits_ppn_0,
         req_out_1_vaddr[11:0]}
      : req_out_1_vaddr[47:0];
  reg              noTranslateReg;
  wire [3:0][1:0]  _GEN_5 =
    {{(|readResult_0_6_0) ? readResult_0_6_0 : readResult_0_7_0},
     {readResult_0_7_0},
     {readResult_0_6_0},
     {readResult_0_6_0}};
  wire             af_2 =
    readResult_0_4_0_af | (|req_out_s2xlate_0)
    & (readResult_p_hit_last_REG
         ? readResult_p_g_perm_af
         : _entries_io_r_resp_0_bits_g_perm_0_af);
  wire             _isSt_T_5 = req_out_0_cmd == 3'h5;
  wire             isLd = ~(|(req_out_0_cmd[1:0])) & ~_isSt_T_5;
  wire             isSt = req_out_0_cmd[1:0] == 2'h1 | _isSt_T_5;
  wire             isInst = req_out_0_cmd[1:0] == 2'h2;
  wire             _modeCheck_T_8 =
    mode_0 == 2'h0 & ~readResult_0_4_0_u | mode_0 == 2'h1 & readResult_0_4_0_u
    & ~(_req_out_s2xlate_T ? io_csr_priv_vsum : io_csr_priv_sum);
  wire             isFakePte =
    ~readResult_0_4_0_v & ~readResult_0_4_0_pf & ~readResult_0_4_0_af & ~onlyS2;
  wire             isNonLeaf =
    ~(readResult_0_4_0_r | readResult_0_4_0_w | readResult_0_4_0_x) & readResult_0_4_0_v
    & ~readResult_0_4_0_pf & ~readResult_0_4_0_af;
  wire             s1_valid = portTranslateEnable_0 & ~onlyS2;
  wire             s2_valid =
    portTranslateEnable_0 & (|req_out_s2xlate_0) & req_out_s2xlate_0 != 2'h1;
  wire             _io_requestor_0_resp_bits_excp_0_pf_ld_T_1 =
    (~(~_modeCheck_T_8
       & (req_out_0_hlvx
            ? readResult_0_4_0_x
            : readResult_0_4_0_r
              | (_req_out_s2xlate_T & io_csr_priv_vmxr | io_csr_priv_mxr)
              & readResult_0_4_0_x)) | readResult_0_4_0_pf) & isLd | ~readResult_0_4_0_a
    & isLd;
  wire             hasPf =
    (_io_requestor_0_resp_bits_excp_0_pf_ld_T_1
     | (~(~_modeCheck_T_8 & readResult_0_4_0_w) | readResult_0_4_0_pf) & isSt
     | (~readResult_0_4_0_a
        | ~(readResult_p_hit_last_REG
              ? readResult_p_perm_d
              : _entries_io_r_resp_0_bits_perm_0_d)) & isSt
     | (~(~_modeCheck_T_8 & readResult_0_4_0_x) | readResult_0_4_0_pf) & isInst
     | ~readResult_0_4_0_a & isInst) & s1_valid & ~af_2 & ~isFakePte & ~isNonLeaf;
  reg              REG;
  reg              io_requestor_0_resp_bits_excp_0_pf_ld_REG;
  reg              io_requestor_0_resp_bits_excp_0_gpf_ld_REG;
  reg              io_requestor_0_resp_bits_excp_0_gpf_st_REG;
  reg              io_requestor_0_resp_bits_excp_0_af_ld_REG;
  wire             io_requestor_0_resp_bits_excp_0_gpf_ld_0 =
    REG
      ? io_requestor_0_resp_bits_excp_0_gpf_ld_REG & isLd
      : ((~(req_out_0_hlvx
              ? readResult_0_5_0_x
              : (readResult_p_hit_last_REG
                   ? readResult_p_g_perm_r
                   : _entries_io_r_resp_0_bits_g_perm_0_r) | io_csr_priv_mxr
                & readResult_0_5_0_x) | readResult_0_5_0_pf) & isLd | ~readResult_0_5_0_a
         & isLd) & s2_valid & ~af_2 & ~hasPf;
  reg              REG_1;
  assign hasGpf_0 =
    hit_read_0
    & (io_requestor_0_resp_bits_excp_0_gpf_ld_0
       | (REG
            ? io_requestor_0_resp_bits_excp_0_gpf_st_REG & isSt
            : ((~(readResult_p_hit_last_REG
                    ? readResult_p_g_perm_w
                    : _entries_io_r_resp_0_bits_g_perm_0_w) | readResult_0_5_0_pf) & isSt
               | (~readResult_0_5_0_a
                  | ~(readResult_p_hit_last_REG
                        ? readResult_p_g_perm_d
                        : _entries_io_r_resp_0_bits_g_perm_0_d)) & isSt) & s2_valid
              & ~af_2 & ~hasPf) | ~REG
       & ((~readResult_0_5_0_x | readResult_0_5_0_pf) & isInst | ~readResult_0_5_0_a
          & isInst) & s2_valid & ~af_2 & ~hasPf);
  reg              noTranslateReg_1;
  wire [3:0][1:0]  _GEN_6 =
    {{(|readResult_1_6_0) ? readResult_1_6_0 : readResult_1_7_0},
     {readResult_1_7_0},
     {readResult_1_6_0},
     {readResult_1_6_0}};
  wire             af_4 =
    readResult_1_4_0_af | (|req_out_s2xlate_1)
    & (readResult_p_hit_last_REG_1
         ? readResult_p_g_perm_1_af
         : _entries_io_r_resp_1_bits_g_perm_0_af);
  wire             _isSt_T_11 = req_out_1_cmd == 3'h5;
  wire             isLd_2 = ~(|(req_out_1_cmd[1:0])) & ~_isSt_T_11;
  wire             isSt_2 = req_out_1_cmd[1:0] == 2'h1 | _isSt_T_11;
  wire             isInst_2 = req_out_1_cmd[1:0] == 2'h2;
  wire             _modeCheck_T_26 =
    io_csr_priv_dmode == 2'h0 & ~readResult_1_4_0_u | io_csr_priv_dmode == 2'h1
    & readResult_1_4_0_u & ~(virt_out_1 ? io_csr_priv_vsum : io_csr_priv_sum);
  wire             isFakePte_2 =
    ~readResult_1_4_0_v & ~readResult_1_4_0_pf & ~readResult_1_4_0_af & ~onlyS2_2;
  wire             isNonLeaf_2 =
    ~(readResult_1_4_0_r | readResult_1_4_0_w | readResult_1_4_0_x) & readResult_1_4_0_v
    & ~readResult_1_4_0_pf & ~readResult_1_4_0_af;
  wire             s1_valid_2 = portTranslateEnable_1 & ~onlyS2_2;
  wire             s2_valid_2 =
    portTranslateEnable_1 & (|req_out_s2xlate_1) & req_out_s2xlate_1 != 2'h1;
  wire             _io_requestor_1_resp_bits_excp_0_pf_ld_T_1 =
    (~(~_modeCheck_T_26
       & (readResult_1_4_0_r | (virt_out_1 & io_csr_priv_vmxr | io_csr_priv_mxr)
          & readResult_1_4_0_x)) | readResult_1_4_0_pf) & isLd_2 | ~readResult_1_4_0_a
    & isLd_2;
  wire             hasPf_2 =
    (_io_requestor_1_resp_bits_excp_0_pf_ld_T_1
     | (~(~_modeCheck_T_26 & readResult_1_4_0_w) | readResult_1_4_0_pf) & isSt_2
     | (~readResult_1_4_0_a
        | ~(readResult_p_hit_last_REG_1
              ? readResult_p_perm_1_d
              : _entries_io_r_resp_1_bits_perm_0_d)) & isSt_2
     | (~(~_modeCheck_T_26 & readResult_1_4_0_x) | readResult_1_4_0_pf) & isInst_2
     | ~readResult_1_4_0_a & isInst_2) & s1_valid_2 & ~af_4 & ~isFakePte_2 & ~isNonLeaf_2;
  wire             io_requestor_1_resp_bits_excp_0_gpf_ld_0 =
    ((~((readResult_p_hit_last_REG_1
           ? readResult_p_g_perm_1_r
           : _entries_io_r_resp_1_bits_g_perm_0_r) | io_csr_priv_mxr & readResult_1_5_0_x)
      | readResult_1_5_0_pf) & isLd_2 | ~readResult_1_5_0_a & isLd_2) & s2_valid_2 & ~af_4
    & ~hasPf_2;
  assign hasGpf_1 =
    hit_read_1
    & (io_requestor_1_resp_bits_excp_0_gpf_ld_0
       | ((~(readResult_p_hit_last_REG_1
               ? readResult_p_g_perm_1_w
               : _entries_io_r_resp_1_bits_g_perm_0_w) | readResult_1_5_0_pf) & isSt_2
          | (~readResult_1_5_0_a
             | ~(readResult_p_hit_last_REG_1
                   ? readResult_p_g_perm_1_d
                   : _entries_io_r_resp_1_bits_g_perm_0_d)) & isSt_2) & s2_valid_2 & ~af_4
       & ~hasPf_2
       | ((~readResult_1_5_0_x | readResult_1_5_0_pf) & isInst_2 | ~readResult_1_5_0_a
          & isInst_2) & s2_valid_2 & ~af_4 & ~hasPf_2);
  wire [1:0]       req_s2xlate =
    virt_out_0 | req_out_0_hyperinst
      ? ((|io_csr_vsatp_mode) & (|io_csr_hgatp_mode)
           ? 2'h3
           : _req_s2xlate_T_17 ? 2'h2 : {1'h0, _req_s2xlate_T_18 | hasGpf_0})
      : 2'h0;
  wire             ptw_just_back_noS2_hit_tag_match_1 =
    io_ptw_resp_bits_s1_entry_tag[14:6] == req_out_0_vaddr[29:21];
  wire             ptw_just_back_noS2_hit_tag_match_2 =
    io_ptw_resp_bits_s1_entry_tag[23:15] == req_out_0_vaddr[38:30];
  wire             ptw_just_back_noS2_hit_tag_match_3 =
    io_ptw_resp_bits_s1_entry_tag[34:24] == req_out_0_vaddr[49:39];
  wire             _ptw_just_back_noS2_hit_level_match_T_3 =
    ptw_just_back_noS2_hit_tag_match_3 & ptw_just_back_noS2_hit_tag_match_2;
  wire             ptw_just_back_onlyS2_hit_tag_match_1 =
    io_ptw_resp_bits_s2_entry_tag[17:9] == req_out_0_vaddr[29:21];
  wire             ptw_just_back_onlyS2_hit_tag_match_2 =
    io_ptw_resp_bits_s2_entry_tag[26:18] == req_out_0_vaddr[38:30];
  wire             ptw_just_back_onlyS2_hit_tag_match_3 =
    io_ptw_resp_bits_s2_entry_tag[37:27] == req_out_0_vaddr[49:39];
  wire             _ptw_just_back_onlyS2_hit_level_match_T_3 =
    ptw_just_back_onlyS2_hit_tag_match_3 & ptw_just_back_onlyS2_hit_tag_match_2;
  wire [1:0]       ptw_just_back_level =
    _GEN_4 ? io_ptw_resp_bits_s1_entry_level : io_ptw_resp_bits_s2_entry_level;
  wire             ptw_just_back_tag_match_1 =
    req_out_0_vaddr[29:21] == io_ptw_resp_bits_s1_entry_tag[14:6];
  wire             ptw_just_back_tag_match_2 =
    req_out_0_vaddr[38:30] == io_ptw_resp_bits_s1_entry_tag[23:15];
  wire             ptw_just_back_tag_match_3 =
    req_out_0_vaddr[49:39] == io_ptw_resp_bits_s1_entry_tag[34:24];
  wire             _ptw_just_back_level_match_T_3 =
    ptw_just_back_tag_match_3 & ptw_just_back_tag_match_2;
  reg  [1:0]       ptw_resp_bits_reg_s2xlate;
  reg  [34:0]      ptw_resp_bits_reg_s1_entry_tag;
  reg  [15:0]      ptw_resp_bits_reg_s1_entry_asid;
  reg  [13:0]      ptw_resp_bits_reg_s1_entry_vmid;
  reg  [1:0]       ptw_resp_bits_reg_s1_entry_level;
  reg  [2:0]       ptw_resp_bits_reg_s1_addr_low;
  reg              ptw_resp_bits_reg_s1_valididx_0;
  reg              ptw_resp_bits_reg_s1_valididx_1;
  reg              ptw_resp_bits_reg_s1_valididx_2;
  reg              ptw_resp_bits_reg_s1_valididx_3;
  reg              ptw_resp_bits_reg_s1_valididx_4;
  reg              ptw_resp_bits_reg_s1_valididx_5;
  reg              ptw_resp_bits_reg_s1_valididx_6;
  reg              ptw_resp_bits_reg_s1_valididx_7;
  reg  [37:0]      ptw_resp_bits_reg_s2_entry_tag;
  reg  [13:0]      ptw_resp_bits_reg_s2_entry_vmid;
  reg  [1:0]       ptw_resp_bits_reg_s2_entry_level;
  reg              ptw_already_back_last_REG;
  wire             ptw_already_back_noS2_hit_tag_match_1 =
    ptw_resp_bits_reg_s1_entry_tag[14:6] == req_out_0_vaddr[29:21];
  wire             ptw_already_back_noS2_hit_tag_match_2 =
    ptw_resp_bits_reg_s1_entry_tag[23:15] == req_out_0_vaddr[38:30];
  wire             ptw_already_back_noS2_hit_tag_match_3 =
    ptw_resp_bits_reg_s1_entry_tag[34:24] == req_out_0_vaddr[49:39];
  wire             _ptw_already_back_noS2_hit_level_match_T_3 =
    ptw_already_back_noS2_hit_tag_match_3 & ptw_already_back_noS2_hit_tag_match_2;
  wire [7:0]       _GEN_7 =
    {{ptw_resp_bits_reg_s1_valididx_7},
     {ptw_resp_bits_reg_s1_valididx_6},
     {ptw_resp_bits_reg_s1_valididx_5},
     {ptw_resp_bits_reg_s1_valididx_4},
     {ptw_resp_bits_reg_s1_valididx_3},
     {ptw_resp_bits_reg_s1_valididx_2},
     {ptw_resp_bits_reg_s1_valididx_1},
     {ptw_resp_bits_reg_s1_valididx_0}};
  wire             ptw_already_back_onlyS2_hit_vmid_hit =
    {2'h0, ptw_resp_bits_reg_s2_entry_vmid} == io_csr_hgatp_vmid;
  wire             ptw_already_back_onlyS2_hit_tag_match_1 =
    ptw_resp_bits_reg_s2_entry_tag[17:9] == req_out_0_vaddr[29:21];
  wire             ptw_already_back_onlyS2_hit_tag_match_2 =
    ptw_resp_bits_reg_s2_entry_tag[26:18] == req_out_0_vaddr[38:30];
  wire             ptw_already_back_onlyS2_hit_tag_match_3 =
    ptw_resp_bits_reg_s2_entry_tag[37:27] == req_out_0_vaddr[49:39];
  wire             _ptw_already_back_onlyS2_hit_level_match_T_3 =
    ptw_already_back_onlyS2_hit_tag_match_3 & ptw_already_back_onlyS2_hit_tag_match_2;
  wire [1:0]       ptw_already_back_level =
    ptw_resp_bits_reg_s2xlate == 2'h1
    | ptw_resp_bits_reg_s1_entry_level < ptw_resp_bits_reg_s2_entry_level
      ? ptw_resp_bits_reg_s1_entry_level
      : ptw_resp_bits_reg_s2_entry_level;
  wire             ptw_already_back_tag_match_1 =
    req_out_0_vaddr[29:21] == ptw_resp_bits_reg_s1_entry_tag[14:6];
  wire             ptw_already_back_tag_match_2 =
    req_out_0_vaddr[38:30] == ptw_resp_bits_reg_s1_entry_tag[23:15];
  wire             ptw_already_back_tag_match_3 =
    req_out_0_vaddr[49:39] == ptw_resp_bits_reg_s1_entry_tag[34:24];
  wire             _ptw_already_back_level_match_T_3 =
    ptw_already_back_tag_match_3 & ptw_already_back_tag_match_2;
  wire [1:0]       req_s2xlate_1 =
    virt_out_1
      ? ((|io_csr_vsatp_mode) & (|io_csr_hgatp_mode)
           ? 2'h3
           : _req_s2xlate_T_17 ? 2'h2 : {1'h0, _req_s2xlate_T_18 | hasGpf_1})
      : 2'h0;
  wire             ptw_just_back_noS2_hit_tag_match_1_1 =
    io_ptw_resp_bits_s1_entry_tag[14:6] == req_out_1_vaddr[29:21];
  wire             ptw_just_back_noS2_hit_tag_match_1_2 =
    io_ptw_resp_bits_s1_entry_tag[23:15] == req_out_1_vaddr[38:30];
  wire             ptw_just_back_noS2_hit_tag_match_1_3 =
    io_ptw_resp_bits_s1_entry_tag[34:24] == req_out_1_vaddr[49:39];
  wire             _ptw_just_back_noS2_hit_level_match_T_14 =
    ptw_just_back_noS2_hit_tag_match_1_3 & ptw_just_back_noS2_hit_tag_match_1_2;
  wire             ptw_just_back_onlyS2_hit_tag_match_1_1 =
    io_ptw_resp_bits_s2_entry_tag[17:9] == req_out_1_vaddr[29:21];
  wire             ptw_just_back_onlyS2_hit_tag_match_1_2 =
    io_ptw_resp_bits_s2_entry_tag[26:18] == req_out_1_vaddr[38:30];
  wire             ptw_just_back_onlyS2_hit_tag_match_1_3 =
    io_ptw_resp_bits_s2_entry_tag[37:27] == req_out_1_vaddr[49:39];
  wire             _ptw_just_back_onlyS2_hit_level_match_T_14 =
    ptw_just_back_onlyS2_hit_tag_match_1_3 & ptw_just_back_onlyS2_hit_tag_match_1_2;
  wire [1:0]       ptw_just_back_level_1 =
    _GEN_4 ? io_ptw_resp_bits_s1_entry_level : io_ptw_resp_bits_s2_entry_level;
  wire             ptw_just_back_tag_match_1_1 =
    req_out_1_vaddr[29:21] == io_ptw_resp_bits_s1_entry_tag[14:6];
  wire             ptw_just_back_tag_match_1_2 =
    req_out_1_vaddr[38:30] == io_ptw_resp_bits_s1_entry_tag[23:15];
  wire             ptw_just_back_tag_match_1_3 =
    req_out_1_vaddr[49:39] == io_ptw_resp_bits_s1_entry_tag[34:24];
  wire             _ptw_just_back_level_match_T_14 =
    ptw_just_back_tag_match_1_3 & ptw_just_back_tag_match_1_2;
  reg  [1:0]       ptw_resp_bits_reg_1_s2xlate;
  reg  [34:0]      ptw_resp_bits_reg_1_s1_entry_tag;
  reg  [15:0]      ptw_resp_bits_reg_1_s1_entry_asid;
  reg  [13:0]      ptw_resp_bits_reg_1_s1_entry_vmid;
  reg  [1:0]       ptw_resp_bits_reg_1_s1_entry_level;
  reg  [2:0]       ptw_resp_bits_reg_1_s1_addr_low;
  reg              ptw_resp_bits_reg_1_s1_valididx_0;
  reg              ptw_resp_bits_reg_1_s1_valididx_1;
  reg              ptw_resp_bits_reg_1_s1_valididx_2;
  reg              ptw_resp_bits_reg_1_s1_valididx_3;
  reg              ptw_resp_bits_reg_1_s1_valididx_4;
  reg              ptw_resp_bits_reg_1_s1_valididx_5;
  reg              ptw_resp_bits_reg_1_s1_valididx_6;
  reg              ptw_resp_bits_reg_1_s1_valididx_7;
  reg  [37:0]      ptw_resp_bits_reg_1_s2_entry_tag;
  reg  [13:0]      ptw_resp_bits_reg_1_s2_entry_vmid;
  reg  [1:0]       ptw_resp_bits_reg_1_s2_entry_level;
  reg              ptw_already_back_last_REG_1;
  wire             ptw_already_back_noS2_hit_tag_match_1_1 =
    ptw_resp_bits_reg_1_s1_entry_tag[14:6] == req_out_1_vaddr[29:21];
  wire             ptw_already_back_noS2_hit_tag_match_1_2 =
    ptw_resp_bits_reg_1_s1_entry_tag[23:15] == req_out_1_vaddr[38:30];
  wire             ptw_already_back_noS2_hit_tag_match_1_3 =
    ptw_resp_bits_reg_1_s1_entry_tag[34:24] == req_out_1_vaddr[49:39];
  wire             _ptw_already_back_noS2_hit_level_match_T_14 =
    ptw_already_back_noS2_hit_tag_match_1_3 & ptw_already_back_noS2_hit_tag_match_1_2;
  wire [7:0]       _GEN_8 =
    {{ptw_resp_bits_reg_1_s1_valididx_7},
     {ptw_resp_bits_reg_1_s1_valididx_6},
     {ptw_resp_bits_reg_1_s1_valididx_5},
     {ptw_resp_bits_reg_1_s1_valididx_4},
     {ptw_resp_bits_reg_1_s1_valididx_3},
     {ptw_resp_bits_reg_1_s1_valididx_2},
     {ptw_resp_bits_reg_1_s1_valididx_1},
     {ptw_resp_bits_reg_1_s1_valididx_0}};
  wire             ptw_already_back_onlyS2_hit_vmid_hit_1 =
    {2'h0, ptw_resp_bits_reg_1_s2_entry_vmid} == io_csr_hgatp_vmid;
  wire             ptw_already_back_onlyS2_hit_tag_match_1_1 =
    ptw_resp_bits_reg_1_s2_entry_tag[17:9] == req_out_1_vaddr[29:21];
  wire             ptw_already_back_onlyS2_hit_tag_match_1_2 =
    ptw_resp_bits_reg_1_s2_entry_tag[26:18] == req_out_1_vaddr[38:30];
  wire             ptw_already_back_onlyS2_hit_tag_match_1_3 =
    ptw_resp_bits_reg_1_s2_entry_tag[37:27] == req_out_1_vaddr[49:39];
  wire             _ptw_already_back_onlyS2_hit_level_match_T_14 =
    ptw_already_back_onlyS2_hit_tag_match_1_3 & ptw_already_back_onlyS2_hit_tag_match_1_2;
  wire [1:0]       ptw_already_back_level_1 =
    ptw_resp_bits_reg_1_s2xlate == 2'h1
    | ptw_resp_bits_reg_1_s1_entry_level < ptw_resp_bits_reg_1_s2_entry_level
      ? ptw_resp_bits_reg_1_s1_entry_level
      : ptw_resp_bits_reg_1_s2_entry_level;
  wire             ptw_already_back_tag_match_1_1 =
    req_out_1_vaddr[29:21] == ptw_resp_bits_reg_1_s1_entry_tag[14:6];
  wire             ptw_already_back_tag_match_1_2 =
    req_out_1_vaddr[38:30] == ptw_resp_bits_reg_1_s1_entry_tag[23:15];
  wire             ptw_already_back_tag_match_1_3 =
    req_out_1_vaddr[49:39] == ptw_resp_bits_reg_1_s1_entry_tag[34:24];
  wire             _ptw_already_back_level_match_T_14 =
    ptw_already_back_tag_match_1_3 & ptw_already_back_tag_match_1_2;
  wire             readResult_onlyS2 = req_in_s2xlate_0 == 2'h2;
  wire [7:0][2:0]  _GEN_9 =
    {{io_ptw_resp_bits_s1_ppn_low_7},
     {io_ptw_resp_bits_s1_ppn_low_6},
     {io_ptw_resp_bits_s1_ppn_low_5},
     {io_ptw_resp_bits_s1_ppn_low_4},
     {io_ptw_resp_bits_s1_ppn_low_3},
     {io_ptw_resp_bits_s1_ppn_low_2},
     {io_ptw_resp_bits_s1_ppn_low_1},
     {io_ptw_resp_bits_s1_ppn_low_0}};
  wire [3:0][43:0] _GEN_10 =
    {{{io_ptw_resp_bits_s1_entry_ppn[40:24], io_requestor_0_req_bits_vaddr[38:12]}},
     {{io_ptw_resp_bits_s1_entry_ppn[40:15], io_requestor_0_req_bits_vaddr[29:12]}},
     {{io_ptw_resp_bits_s1_entry_ppn[40:6], io_requestor_0_req_bits_vaddr[20:12]}},
     {io_ptw_resp_bits_s1_entry_n
        ? {io_ptw_resp_bits_s1_entry_ppn[40:1], io_requestor_0_req_bits_vaddr[15:12]}
        : {io_ptw_resp_bits_s1_entry_ppn, _GEN_9[io_requestor_0_req_bits_vaddr[14:12]]}}};
  wire [26:0]      readResult_gvpn =
    readResult_onlyS2
      ? io_requestor_0_req_bits_vaddr[38:12]
      : _GEN_10[io_ptw_resp_bits_s1_entry_level][26:0];
  wire             readResult_onlyS2_1 = req_in_s2xlate_1 == 2'h2;
  wire [3:0][43:0] _GEN_11 =
    {{{io_ptw_resp_bits_s1_entry_ppn[40:24], io_requestor_1_req_bits_vaddr[38:12]}},
     {{io_ptw_resp_bits_s1_entry_ppn[40:15], io_requestor_1_req_bits_vaddr[29:12]}},
     {{io_ptw_resp_bits_s1_entry_ppn[40:6], io_requestor_1_req_bits_vaddr[20:12]}},
     {io_ptw_resp_bits_s1_entry_n
        ? {io_ptw_resp_bits_s1_entry_ppn[40:1], io_requestor_1_req_bits_vaddr[15:12]}
        : {io_ptw_resp_bits_s1_entry_ppn, _GEN_9[io_requestor_1_req_bits_vaddr[14:12]]}}};
  wire [26:0]      readResult_gvpn_2 =
    readResult_onlyS2_1
      ? io_requestor_1_req_bits_vaddr[38:12]
      : _GEN_11[io_ptw_resp_bits_s1_entry_level][26:0];
  wire [3:0][37:0] _GEN_12 =
    {{{io_ptw_resp_bits_s2_entry_ppn[37:27], readResult_gvpn}},
     {{io_ptw_resp_bits_s2_entry_ppn[37:18], readResult_gvpn[17:0]}},
     {{io_ptw_resp_bits_s2_entry_ppn[37:9], readResult_gvpn[8:0]}},
     {io_ptw_resp_bits_s2_entry_n
        ? {io_ptw_resp_bits_s2_entry_ppn[37:4], readResult_gvpn[3:0]}
        : io_ptw_resp_bits_s2_entry_ppn}};
  wire [3:0][37:0] _GEN_13 =
    {{{io_ptw_resp_bits_s2_entry_ppn[37:27], readResult_gvpn_2}},
     {{io_ptw_resp_bits_s2_entry_ppn[37:18], readResult_gvpn_2[17:0]}},
     {{io_ptw_resp_bits_s2_entry_ppn[37:9], readResult_gvpn_2[8:0]}},
     {io_ptw_resp_bits_s2_entry_n
        ? {io_ptw_resp_bits_s2_entry_ppn[37:4], readResult_gvpn_2[3:0]}
        : io_ptw_resp_bits_s2_entry_ppn}};
  wire [1:0]       premode_0 =
    io_requestor_0_req_bits_hyperinst ? _GEN : io_csr_priv_dmode;
  wire             _pres2xlateEnable_T_3 = premode_0 != 2'h3;
  wire             prevmEnable_0 =
    ~_pres2xlateEnable_T & _prevmEnable_T_7 & _pres2xlateEnable_T_3;
  wire             pres2xlateEnable_0 =
    _pres2xlateEnable_T & _pres2xlateEnable_T_5 & _pres2xlateEnable_T_3;
  wire             _GEN_14 = premode_0 == 2'h1;
  wire [1:0]       pmm =
    io_requestor_0_req_bits_hlvx
      ? 2'h0
      : (&premode_0)
          ? io_csr_pmm_mseccfg
          : ~_pres2xlateEnable_T & _GEN_14
              ? io_csr_pmm_menvcfg
              : _pres2xlateEnable_T & _GEN_14
                  ? io_csr_pmm_henvcfg
                  : io_requestor_0_req_bits_hyperinst & io_csr_priv_imode == 2'h0
                      ? io_csr_pmm_hstatus
                      : premode_0 == 2'h0 ? io_csr_pmm_senvcfg : 2'h0;
  wire             _GEN_15 = pmm == 2'h2;
  wire [63:0]      EffectiveVa_0 =
    prevmEnable_0 | pres2xlateEnable_0 & (|_vsatp_delay_io_out_mode)
      ? (_GEN_15
           ? {{7{io_requestor_0_req_bits_fullva[56]}},
              io_requestor_0_req_bits_fullva[56:0]}
           : (&pmm)
               ? {{16{io_requestor_0_req_bits_fullva[47]}},
                  io_requestor_0_req_bits_fullva[47:0]}
               : io_requestor_0_req_bits_fullva)
      : _GEN_15
          ? {7'h0, io_requestor_0_req_bits_fullva[56:0]}
          : (&pmm)
              ? {16'h0, io_requestor_0_req_bits_fullva[47:0]}
              : io_requestor_0_req_bits_fullva;
  wire             _GEN_16 =
    io_requestor_0_req_valid & io_requestor_0_req_bits_checkfullva;
  wire             _GEN_17 = prevmEnable_0 | pres2xlateEnable_0;
  wire             _GEN_18 = req_in_s2xlate_0 == 2'h2;
  wire             pregpf_0 =
    _GEN_16 & _GEN_17 & _GEN_18
    & (Sv48x4Enable
         ? (|(EffectiveVa_0[63:50]))
         : Sv39x4Enable & (|(EffectiveVa_0[63:41])));
  wire             prepf_0 =
    _GEN_16 & _GEN_17 & ~_GEN_18
    & (Sv48Enable
         ? {{16{EffectiveVa_0[47]}}, EffectiveVa_0[47:0]} != EffectiveVa_0
         : Sv39Enable & {{25{EffectiveVa_0[38]}}, EffectiveVa_0[38:0]} != EffectiveVa_0);
  wire             preaf_0 = _GEN_16 & ~_GEN_17 & (|(EffectiveVa_0[63:48]));
  wire             _GEN_19 = _readResult_T_5 | ~_readResult_T_25;
  wire             _GEN_20 = _readResult_T_42 | ~_readResult_T_62;
  wire             _GEN_21 = prepf_0 | pregpf_0 | preaf_0;
  always @(posedge clock) begin
    if (io_requestor_0_req_valid) begin
      req_out_0_vaddr <= io_requestor_0_req_bits_vaddr;
      req_out_0_cmd <= io_requestor_0_req_bits_cmd;
      req_out_0_hyperinst <= io_requestor_0_req_bits_hyperinst;
      req_out_0_hlvx <= io_requestor_0_req_bits_hlvx;
      req_out_0_isPrefetch <= io_requestor_0_req_bits_isPrefetch;
      req_out_0_debug_robIdx_flag <= io_requestor_0_req_bits_debug_robIdx_flag;
      req_out_0_debug_robIdx_value <= io_requestor_0_req_bits_debug_robIdx_value;
      virt_out_0 <= io_csr_priv_virt;
      portTranslateEnable_r <= ~io_requestor_0_req_bits_no_translate;
    end
    if (io_requestor_1_req_valid) begin
      req_out_1_vaddr <= io_requestor_1_req_bits_vaddr;
      req_out_1_cmd <= io_requestor_1_req_bits_cmd;
      virt_out_1 <= io_csr_priv_virt;
      portTranslateEnable_r_1 <= ~io_requestor_1_req_bits_no_translate;
    end
    need_gpa_robidx_flag <=
      _GEN_20 & (_GEN_19 ? need_gpa_robidx_flag : req_out_0_debug_robIdx_flag);
    if (_GEN_20) begin
      if (_GEN_19) begin
      end
      else
        need_gpa_robidx_value <= req_out_0_debug_robIdx_value;
    end
    else
      need_gpa_robidx_value <= 8'h0;
    if (_readResult_T_42)
      need_gpa_vpn <= 38'h0;
    else if (_readResult_T_62)
      need_gpa_vpn <= req_out_1_vaddr[49:12];
    else if (_readResult_T_5)
      need_gpa_vpn <= 38'h0;
    else if (_readResult_T_25)
      need_gpa_vpn <= req_out_0_vaddr[49:12];
    if (io_ptw_resp_valid) begin
      readResult_p_ppn <=
        readResult_onlyS2 | (&req_in_s2xlate_0)
          ? {6'h0, _GEN_12[io_ptw_resp_bits_s2_entry_level]}
          : _GEN_10[io_ptw_resp_bits_s1_entry_level];
      readResult_p_pbmt <= io_ptw_resp_bits_s1_entry_pbmt;
      readResult_p_perm_pf <= io_ptw_resp_bits_s1_pf;
      readResult_p_perm_af <= io_ptw_resp_bits_s1_af;
      readResult_p_perm_v <= io_ptw_resp_bits_s1_entry_v;
      readResult_p_perm_d <= io_ptw_resp_bits_s1_entry_perm_d;
      readResult_p_perm_a <= io_ptw_resp_bits_s1_entry_perm_a;
      readResult_p_perm_u <= io_ptw_resp_bits_s1_entry_perm_u;
      readResult_p_perm_x <= io_ptw_resp_bits_s1_entry_perm_x;
      readResult_p_perm_w <= io_ptw_resp_bits_s1_entry_perm_w;
      readResult_p_perm_r <= io_ptw_resp_bits_s1_entry_perm_r;
      readResult_p_g_pbmt <= io_ptw_resp_bits_s2_entry_pbmt;
      readResult_p_g_perm_pf <= io_ptw_resp_bits_s2_gpf;
      readResult_p_g_perm_af <= io_ptw_resp_bits_s2_gaf;
      readResult_p_g_perm_d <= io_ptw_resp_bits_s2_entry_perm_d;
      readResult_p_g_perm_a <= io_ptw_resp_bits_s2_entry_perm_a;
      readResult_p_g_perm_x <= io_ptw_resp_bits_s2_entry_perm_x;
      readResult_p_g_perm_w <= io_ptw_resp_bits_s2_entry_perm_w;
      readResult_p_g_perm_r <= io_ptw_resp_bits_s2_entry_perm_r;
      readResult_p_ppn_1 <=
        readResult_onlyS2_1 | (&req_in_s2xlate_1)
          ? {6'h0, _GEN_13[io_ptw_resp_bits_s2_entry_level]}
          : _GEN_11[io_ptw_resp_bits_s1_entry_level];
      readResult_p_pbmt_1 <= io_ptw_resp_bits_s1_entry_pbmt;
      readResult_p_perm_1_pf <= io_ptw_resp_bits_s1_pf;
      readResult_p_perm_1_af <= io_ptw_resp_bits_s1_af;
      readResult_p_perm_1_v <= io_ptw_resp_bits_s1_entry_v;
      readResult_p_perm_1_d <= io_ptw_resp_bits_s1_entry_perm_d;
      readResult_p_perm_1_a <= io_ptw_resp_bits_s1_entry_perm_a;
      readResult_p_perm_1_u <= io_ptw_resp_bits_s1_entry_perm_u;
      readResult_p_perm_1_x <= io_ptw_resp_bits_s1_entry_perm_x;
      readResult_p_perm_1_w <= io_ptw_resp_bits_s1_entry_perm_w;
      readResult_p_perm_1_r <= io_ptw_resp_bits_s1_entry_perm_r;
      readResult_p_g_pbmt_1 <= io_ptw_resp_bits_s2_entry_pbmt;
      readResult_p_g_perm_1_pf <= io_ptw_resp_bits_s2_gpf;
      readResult_p_g_perm_1_af <= io_ptw_resp_bits_s2_gaf;
      readResult_p_g_perm_1_d <= io_ptw_resp_bits_s2_entry_perm_d;
      readResult_p_g_perm_1_a <= io_ptw_resp_bits_s2_entry_perm_a;
      readResult_p_g_perm_1_x <= io_ptw_resp_bits_s2_entry_perm_x;
      readResult_p_g_perm_1_w <= io_ptw_resp_bits_s2_entry_perm_w;
      readResult_p_g_perm_1_r <= io_ptw_resp_bits_s2_entry_perm_r;
      ptw_resp_bits_reg_s2xlate <= io_ptw_resp_bits_s2xlate;
      ptw_resp_bits_reg_s1_entry_tag <= io_ptw_resp_bits_s1_entry_tag;
      ptw_resp_bits_reg_s1_entry_asid <= io_ptw_resp_bits_s1_entry_asid;
      ptw_resp_bits_reg_s1_entry_vmid <= io_ptw_resp_bits_s1_entry_vmid;
      ptw_resp_bits_reg_s1_entry_level <= io_ptw_resp_bits_s1_entry_level;
      ptw_resp_bits_reg_s1_addr_low <= io_ptw_resp_bits_s1_addr_low;
      ptw_resp_bits_reg_s1_valididx_0 <= io_ptw_resp_bits_s1_valididx_0;
      ptw_resp_bits_reg_s1_valididx_1 <= io_ptw_resp_bits_s1_valididx_1;
      ptw_resp_bits_reg_s1_valididx_2 <= io_ptw_resp_bits_s1_valididx_2;
      ptw_resp_bits_reg_s1_valididx_3 <= io_ptw_resp_bits_s1_valididx_3;
      ptw_resp_bits_reg_s1_valididx_4 <= io_ptw_resp_bits_s1_valididx_4;
      ptw_resp_bits_reg_s1_valididx_5 <= io_ptw_resp_bits_s1_valididx_5;
      ptw_resp_bits_reg_s1_valididx_6 <= io_ptw_resp_bits_s1_valididx_6;
      ptw_resp_bits_reg_s1_valididx_7 <= io_ptw_resp_bits_s1_valididx_7;
      ptw_resp_bits_reg_s2_entry_tag <= io_ptw_resp_bits_s2_entry_tag;
      ptw_resp_bits_reg_s2_entry_vmid <= io_ptw_resp_bits_s2_entry_vmid;
      ptw_resp_bits_reg_s2_entry_level <= io_ptw_resp_bits_s2_entry_level;
      ptw_resp_bits_reg_1_s2xlate <= io_ptw_resp_bits_s2xlate;
      ptw_resp_bits_reg_1_s1_entry_tag <= io_ptw_resp_bits_s1_entry_tag;
      ptw_resp_bits_reg_1_s1_entry_asid <= io_ptw_resp_bits_s1_entry_asid;
      ptw_resp_bits_reg_1_s1_entry_vmid <= io_ptw_resp_bits_s1_entry_vmid;
      ptw_resp_bits_reg_1_s1_entry_level <= io_ptw_resp_bits_s1_entry_level;
      ptw_resp_bits_reg_1_s1_addr_low <= io_ptw_resp_bits_s1_addr_low;
      ptw_resp_bits_reg_1_s1_valididx_0 <= io_ptw_resp_bits_s1_valididx_0;
      ptw_resp_bits_reg_1_s1_valididx_1 <= io_ptw_resp_bits_s1_valididx_1;
      ptw_resp_bits_reg_1_s1_valididx_2 <= io_ptw_resp_bits_s1_valididx_2;
      ptw_resp_bits_reg_1_s1_valididx_3 <= io_ptw_resp_bits_s1_valididx_3;
      ptw_resp_bits_reg_1_s1_valididx_4 <= io_ptw_resp_bits_s1_valididx_4;
      ptw_resp_bits_reg_1_s1_valididx_5 <= io_ptw_resp_bits_s1_valididx_5;
      ptw_resp_bits_reg_1_s1_valididx_6 <= io_ptw_resp_bits_s1_valididx_6;
      ptw_resp_bits_reg_1_s1_valididx_7 <= io_ptw_resp_bits_s1_valididx_7;
      ptw_resp_bits_reg_1_s2_entry_tag <= io_ptw_resp_bits_s2_entry_tag;
      ptw_resp_bits_reg_1_s2_entry_vmid <= io_ptw_resp_bits_s2_entry_vmid;
      ptw_resp_bits_reg_1_s2_entry_level <= io_ptw_resp_bits_s2_entry_level;
    end
    readResult_lastCycleRedirect_REG_valid <= io_redirect_valid;
    readResult_lastCycleRedirect_REG_bits_robIdx_flag <= io_redirect_bits_robIdx_flag;
    readResult_lastCycleRedirect_REG_bits_robIdx_value <= io_redirect_bits_robIdx_value;
    readResult_lastCycleRedirect_REG_bits_level <= io_redirect_bits_level;
    readResult_lastCycleRedirect_REG_1_valid <= io_redirect_valid;
    readResult_lastCycleRedirect_REG_1_bits_robIdx_flag <= io_redirect_bits_robIdx_flag;
    readResult_lastCycleRedirect_REG_1_bits_robIdx_value <= io_redirect_bits_robIdx_value;
    readResult_lastCycleRedirect_REG_1_bits_level <= io_redirect_bits_level;
    noTranslateReg <= io_requestor_0_req_bits_no_translate;
    REG <= _GEN_21;
    io_requestor_0_resp_bits_excp_0_pf_ld_REG <= prepf_0;
    io_requestor_0_resp_bits_excp_0_gpf_ld_REG <= pregpf_0;
    io_requestor_0_resp_bits_excp_0_gpf_st_REG <= pregpf_0;
    io_requestor_0_resp_bits_excp_0_af_ld_REG <= preaf_0;
    REG_1 <= _GEN_21;
    noTranslateReg_1 <= io_requestor_1_req_bits_no_translate;
  end // always @(posedge)
  wire             readResult_resp_hit_noS2_hit_tag_match_1 =
    io_ptw_resp_bits_s1_entry_tag[14:6] == io_requestor_0_req_bits_vaddr[29:21];
  wire             readResult_resp_hit_noS2_hit_tag_match_2 =
    io_ptw_resp_bits_s1_entry_tag[23:15] == io_requestor_0_req_bits_vaddr[38:30];
  wire             readResult_resp_hit_noS2_hit_tag_match_3 =
    io_ptw_resp_bits_s1_entry_tag[34:24] == io_requestor_0_req_bits_vaddr[49:39];
  wire             _readResult_resp_hit_noS2_hit_level_match_T_3 =
    readResult_resp_hit_noS2_hit_tag_match_3 & readResult_resp_hit_noS2_hit_tag_match_2;
  wire             readResult_resp_hit_onlyS2_hit_tag_match_1 =
    io_ptw_resp_bits_s2_entry_tag[17:9] == io_requestor_0_req_bits_vaddr[29:21];
  wire             readResult_resp_hit_onlyS2_hit_tag_match_2 =
    io_ptw_resp_bits_s2_entry_tag[26:18] == io_requestor_0_req_bits_vaddr[38:30];
  wire             readResult_resp_hit_onlyS2_hit_tag_match_3 =
    io_ptw_resp_bits_s2_entry_tag[37:27] == io_requestor_0_req_bits_vaddr[49:39];
  wire             _readResult_resp_hit_onlyS2_hit_level_match_T_3 =
    readResult_resp_hit_onlyS2_hit_tag_match_3
    & readResult_resp_hit_onlyS2_hit_tag_match_2;
  wire [1:0]       readResult_resp_hit_level =
    _GEN_4 ? io_ptw_resp_bits_s1_entry_level : io_ptw_resp_bits_s2_entry_level;
  wire             readResult_resp_hit_tag_match_1 =
    io_requestor_0_req_bits_vaddr[29:21] == io_ptw_resp_bits_s1_entry_tag[14:6];
  wire             readResult_resp_hit_tag_match_2 =
    io_requestor_0_req_bits_vaddr[38:30] == io_ptw_resp_bits_s1_entry_tag[23:15];
  wire             readResult_resp_hit_tag_match_3 =
    io_requestor_0_req_bits_vaddr[49:39] == io_ptw_resp_bits_s1_entry_tag[34:24];
  wire             _readResult_resp_hit_level_match_T_3 =
    readResult_resp_hit_tag_match_3 & readResult_resp_hit_tag_match_2;
  wire [2:0]       _GEN_22 =
    {io_ptw_resp_bits_s1_pteidx_7,
     io_ptw_resp_bits_s1_pteidx_6,
     io_ptw_resp_bits_s1_pteidx_5};
  wire [2:0]       _GEN_23 =
    {io_ptw_resp_bits_s1_pteidx_3,
     io_ptw_resp_bits_s1_pteidx_2,
     io_ptw_resp_bits_s1_pteidx_1};
  wire [2:0]       _readResult_s1tag_T_2 = _GEN_22 | _GEN_23;
  wire [37:0]      readResult_s1tag =
    {io_ptw_resp_bits_s1_entry_tag,
     |{io_ptw_resp_bits_s1_pteidx_7,
       io_ptw_resp_bits_s1_pteidx_6,
       io_ptw_resp_bits_s1_pteidx_5,
       io_ptw_resp_bits_s1_pteidx_4},
     |(_readResult_s1tag_T_2[2:1]),
     _readResult_s1tag_T_2[2] | _readResult_s1tag_T_2[0]};
  wire             readResult_resp_hit_noS2_hit_tag_match_1_1 =
    io_ptw_resp_bits_s1_entry_tag[14:6] == io_requestor_1_req_bits_vaddr[29:21];
  wire             readResult_resp_hit_noS2_hit_tag_match_1_2 =
    io_ptw_resp_bits_s1_entry_tag[23:15] == io_requestor_1_req_bits_vaddr[38:30];
  wire             readResult_resp_hit_noS2_hit_tag_match_1_3 =
    io_ptw_resp_bits_s1_entry_tag[34:24] == io_requestor_1_req_bits_vaddr[49:39];
  wire             _readResult_resp_hit_noS2_hit_level_match_T_14 =
    readResult_resp_hit_noS2_hit_tag_match_1_3
    & readResult_resp_hit_noS2_hit_tag_match_1_2;
  wire             readResult_resp_hit_onlyS2_hit_tag_match_1_1 =
    io_ptw_resp_bits_s2_entry_tag[17:9] == io_requestor_1_req_bits_vaddr[29:21];
  wire             readResult_resp_hit_onlyS2_hit_tag_match_1_2 =
    io_ptw_resp_bits_s2_entry_tag[26:18] == io_requestor_1_req_bits_vaddr[38:30];
  wire             readResult_resp_hit_onlyS2_hit_tag_match_1_3 =
    io_ptw_resp_bits_s2_entry_tag[37:27] == io_requestor_1_req_bits_vaddr[49:39];
  wire             _readResult_resp_hit_onlyS2_hit_level_match_T_14 =
    readResult_resp_hit_onlyS2_hit_tag_match_1_3
    & readResult_resp_hit_onlyS2_hit_tag_match_1_2;
  wire [1:0]       readResult_resp_hit_level_1 =
    _GEN_4 ? io_ptw_resp_bits_s1_entry_level : io_ptw_resp_bits_s2_entry_level;
  wire             readResult_resp_hit_tag_match_1_1 =
    io_requestor_1_req_bits_vaddr[29:21] == io_ptw_resp_bits_s1_entry_tag[14:6];
  wire             readResult_resp_hit_tag_match_1_2 =
    io_requestor_1_req_bits_vaddr[38:30] == io_ptw_resp_bits_s1_entry_tag[23:15];
  wire             readResult_resp_hit_tag_match_1_3 =
    io_requestor_1_req_bits_vaddr[49:39] == io_ptw_resp_bits_s1_entry_tag[34:24];
  wire             _readResult_resp_hit_level_match_T_14 =
    readResult_resp_hit_tag_match_1_3 & readResult_resp_hit_tag_match_1_2;
  wire [2:0]       _readResult_s1tag_T_10 = _GEN_22 | _GEN_23;
  wire [37:0]      readResult_s1tag_1 =
    {io_ptw_resp_bits_s1_entry_tag,
     |{io_ptw_resp_bits_s1_pteidx_7,
       io_ptw_resp_bits_s1_pteidx_6,
       io_ptw_resp_bits_s1_pteidx_5,
       io_ptw_resp_bits_s1_pteidx_4},
     |(_readResult_s1tag_T_10[2:1]),
     _readResult_s1tag_T_10[2] | _readResult_s1tag_T_10[0]};
  wire [3:0][37:0] _GEN_24 =
    {{{io_ptw_resp_bits_s1_entry_tag[34:24], need_gpa_vpn[26:0]}},
     {{io_ptw_resp_bits_s1_entry_tag[34:15], need_gpa_vpn[17:0]}},
     {{io_ptw_resp_bits_s1_entry_tag[34:6], need_gpa_vpn[8:0]}},
     {readResult_s1tag_1}};
  wire [3:0][37:0] _GEN_25 =
    {{{io_ptw_resp_bits_s1_entry_tag[34:24], need_gpa_vpn[26:0]}},
     {{io_ptw_resp_bits_s1_entry_tag[34:15], need_gpa_vpn[17:0]}},
     {{io_ptw_resp_bits_s1_entry_tag[34:6], need_gpa_vpn[8:0]}},
     {readResult_s1tag}};
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      req_out_v_0 <= 1'h0;
      req_out_v_1 <= 1'h0;
      need_gpa <= 1'h0;
      resp_gpa_refill <= 1'h0;
      readResult_p_hit_last_REG <= 1'h0;
      readResult_p_hit_last_REG_1 <= 1'h0;
      ptw_already_back_last_REG <= 1'h0;
      ptw_already_back_last_REG_1 <= 1'h0;
    end
    else begin
      req_out_v_0 <= io_requestor_0_req_valid & ~io_requestor_0_req_bits_kill;
      req_out_v_1 <= io_requestor_1_req_valid & ~io_requestor_1_req_bits_kill;
      need_gpa <=
        ~(req_out_v_1 & hasGpf_1 & resp_gpa_refill & readResult_need_gpa_vpn_hit_1
          | _readResult_T_42)
        & (_readResult_T_62
           | ~(req_out_v_0 & hasGpf_0 & resp_gpa_refill & readResult_need_gpa_vpn_hit
               | _readResult_T_5) & (_readResult_T_25 | need_gpa));
      resp_gpa_refill <=
        ~(_readResult_T_42 | _readResult_T_62)
        & (io_ptw_resp_valid & need_gpa
           & need_gpa_vpn == (_ptw_just_back_T_13
                                ? io_ptw_resp_bits_s2_entry_tag
                                : (&io_ptw_resp_bits_s2xlate)
                                    ? _GEN_24[_ptw_just_back_level_T_4
                                                ? io_ptw_resp_bits_s1_entry_level
                                                : io_ptw_resp_bits_s2_entry_level]
                                    : readResult_s1tag_1)
           | ~(_readResult_T_5 | _readResult_T_25)
           & (io_ptw_resp_valid & need_gpa
              & need_gpa_vpn == (_ptw_just_back_T_13
                                   ? io_ptw_resp_bits_s2_entry_tag
                                   : (&io_ptw_resp_bits_s2xlate)
                                       ? _GEN_25[_ptw_just_back_level_T_4
                                                   ? io_ptw_resp_bits_s1_entry_level
                                                   : io_ptw_resp_bits_s2_entry_level]
                                       : readResult_s1tag) | resp_gpa_refill));
      readResult_p_hit_last_REG <=
        (_ptw_just_back_T_12
           ? io_ptw_resp_bits_s1_entry_asid == ((|io_ptw_resp_bits_s2xlate)
                                                  ? io_csr_vsatp_asid
                                                  : io_csr_satp_asid)
             & (~(|io_ptw_resp_bits_s2xlate) | _ptw_just_back_noS2_hit_vmid_hit_T_1)
             & (_ptw_just_back_noS2_hit_level_match_T_21
                  ? _readResult_resp_hit_noS2_hit_level_match_T_3
                    & readResult_resp_hit_noS2_hit_tag_match_1
                    & io_ptw_resp_bits_s1_entry_tag[5:0] == io_requestor_0_req_bits_vaddr[20:15]
                  : _ptw_just_back_noS2_hit_level_match_T_19
                      ? _readResult_resp_hit_noS2_hit_level_match_T_3
                        & readResult_resp_hit_noS2_hit_tag_match_1
                      : (_GEN_1 | readResult_resp_hit_noS2_hit_tag_match_2)
                        & readResult_resp_hit_noS2_hit_tag_match_3)
             & _GEN_2[io_requestor_0_req_bits_vaddr[14:12]]
           : _ptw_just_back_T_13
               ? ptw_just_back_onlyS2_hit_vmid_hit
                 & (_ptw_just_back_onlyS2_hit_level_match_T_21
                      ? _readResult_resp_hit_onlyS2_hit_level_match_T_3
                        & readResult_resp_hit_onlyS2_hit_tag_match_1
                        & io_ptw_resp_bits_s2_entry_tag[8:0] == io_requestor_0_req_bits_vaddr[20:12]
                      : _ptw_just_back_onlyS2_hit_level_match_T_19
                          ? _readResult_resp_hit_onlyS2_hit_level_match_T_3
                            & readResult_resp_hit_onlyS2_hit_tag_match_1
                          : (_GEN_3 | readResult_resp_hit_onlyS2_hit_tag_match_2)
                            & readResult_resp_hit_onlyS2_hit_tag_match_3)
               : (readResult_resp_hit_level == 2'h0
                    ? _readResult_resp_hit_level_match_T_3
                      & readResult_resp_hit_tag_match_1
                      & io_requestor_0_req_bits_vaddr[20:12] == {io_ptw_resp_bits_s1_entry_tag[5:0],
                                                                 io_ptw_resp_bits_s1_addr_low}
                    : readResult_resp_hit_level == 2'h1
                        ? _readResult_resp_hit_level_match_T_3
                          & readResult_resp_hit_tag_match_1
                        : (readResult_resp_hit_level != 2'h2
                           | readResult_resp_hit_tag_match_2)
                          & readResult_resp_hit_tag_match_3)
                 & (~(&io_ptw_resp_bits_s2xlate) | ptw_just_back_onlyS2_hit_vmid_hit)
                 & ptw_just_back_vasid_hit) & io_ptw_resp_valid
        & req_in_s2xlate_0 == io_ptw_resp_bits_s2xlate;
      readResult_p_hit_last_REG_1 <=
        (_ptw_just_back_T_12
           ? io_ptw_resp_bits_s1_entry_asid == ((|io_ptw_resp_bits_s2xlate)
                                                  ? io_csr_vsatp_asid
                                                  : io_csr_satp_asid)
             & (~(|io_ptw_resp_bits_s2xlate) | _ptw_just_back_noS2_hit_vmid_hit_T_1)
             & (_ptw_just_back_noS2_hit_level_match_T_21
                  ? _readResult_resp_hit_noS2_hit_level_match_T_14
                    & readResult_resp_hit_noS2_hit_tag_match_1_1
                    & io_ptw_resp_bits_s1_entry_tag[5:0] == io_requestor_1_req_bits_vaddr[20:15]
                  : _ptw_just_back_noS2_hit_level_match_T_19
                      ? _readResult_resp_hit_noS2_hit_level_match_T_14
                        & readResult_resp_hit_noS2_hit_tag_match_1_1
                      : (_GEN_1 | readResult_resp_hit_noS2_hit_tag_match_1_2)
                        & readResult_resp_hit_noS2_hit_tag_match_1_3)
             & _GEN_2[io_requestor_1_req_bits_vaddr[14:12]]
           : _ptw_just_back_T_13
               ? ptw_just_back_onlyS2_hit_vmid_hit
                 & (_ptw_just_back_onlyS2_hit_level_match_T_21
                      ? _readResult_resp_hit_onlyS2_hit_level_match_T_14
                        & readResult_resp_hit_onlyS2_hit_tag_match_1_1
                        & io_ptw_resp_bits_s2_entry_tag[8:0] == io_requestor_1_req_bits_vaddr[20:12]
                      : _ptw_just_back_onlyS2_hit_level_match_T_19
                          ? _readResult_resp_hit_onlyS2_hit_level_match_T_14
                            & readResult_resp_hit_onlyS2_hit_tag_match_1_1
                          : (_GEN_3 | readResult_resp_hit_onlyS2_hit_tag_match_1_2)
                            & readResult_resp_hit_onlyS2_hit_tag_match_1_3)
               : (readResult_resp_hit_level_1 == 2'h0
                    ? _readResult_resp_hit_level_match_T_14
                      & readResult_resp_hit_tag_match_1_1
                      & io_requestor_1_req_bits_vaddr[20:12] == {io_ptw_resp_bits_s1_entry_tag[5:0],
                                                                 io_ptw_resp_bits_s1_addr_low}
                    : readResult_resp_hit_level_1 == 2'h1
                        ? _readResult_resp_hit_level_match_T_14
                          & readResult_resp_hit_tag_match_1_1
                        : (readResult_resp_hit_level_1 != 2'h2
                           | readResult_resp_hit_tag_match_1_2)
                          & readResult_resp_hit_tag_match_1_3)
                 & (~(&io_ptw_resp_bits_s2xlate) | ptw_just_back_onlyS2_hit_vmid_hit)
                 & ptw_just_back_vasid_hit) & io_ptw_resp_valid
        & req_in_s2xlate_1 == io_ptw_resp_bits_s2xlate;
      ptw_already_back_last_REG <= io_ptw_resp_valid;
      ptw_already_back_last_REG_1 <= io_ptw_resp_valid;
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:86];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [6:0] i = 7'h0; i < 7'h57; i += 7'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        req_out_0_vaddr = {_RANDOM[7'h0], _RANDOM[7'h1][17:0]};
        req_out_0_cmd = _RANDOM[7'h3][21:19];
        req_out_0_hyperinst = _RANDOM[7'h3][22];
        req_out_0_hlvx = _RANDOM[7'h3][23];
        req_out_0_isPrefetch = _RANDOM[7'h4][5];
        req_out_0_debug_robIdx_flag = _RANDOM[7'h7][23];
        req_out_0_debug_robIdx_value = _RANDOM[7'h7][31:24];
        req_out_1_vaddr = {_RANDOM[7'h8][31:1], _RANDOM[7'h9][18:0]};
        req_out_1_cmd = _RANDOM[7'hB][22:20];
        req_out_v_0 = _RANDOM[7'h10][2];
        req_out_v_1 = _RANDOM[7'h10][3];
        virt_out_0 = _RANDOM[7'h10][4];
        virt_out_1 = _RANDOM[7'h10][5];
        need_gpa = _RANDOM[7'h10][6];
        need_gpa_robidx_flag = _RANDOM[7'h10][7];
        need_gpa_robidx_value = _RANDOM[7'h10][15:8];
        need_gpa_vpn = {_RANDOM[7'h10][31:16], _RANDOM[7'h11][21:0]};
        resp_gpa_refill = _RANDOM[7'h13][2];
        portTranslateEnable_r = _RANDOM[7'h13][7];
        portTranslateEnable_r_1 = _RANDOM[7'h13][8];
        readResult_p_hit_last_REG = _RANDOM[7'h17][29];
        readResult_p_ppn = {_RANDOM[7'h17][31:30], _RANDOM[7'h18], _RANDOM[7'h19][9:0]};
        readResult_p_pbmt = _RANDOM[7'h19][11:10];
        readResult_p_perm_pf = _RANDOM[7'h19][12];
        readResult_p_perm_af = _RANDOM[7'h19][13];
        readResult_p_perm_v = _RANDOM[7'h19][14];
        readResult_p_perm_d = _RANDOM[7'h19][15];
        readResult_p_perm_a = _RANDOM[7'h19][16];
        readResult_p_perm_u = _RANDOM[7'h19][18];
        readResult_p_perm_x = _RANDOM[7'h19][19];
        readResult_p_perm_w = _RANDOM[7'h19][20];
        readResult_p_perm_r = _RANDOM[7'h19][21];
        readResult_p_g_pbmt = _RANDOM[7'h1B][3:2];
        readResult_p_g_perm_pf = _RANDOM[7'h1B][4];
        readResult_p_g_perm_af = _RANDOM[7'h1B][5];
        readResult_p_g_perm_d = _RANDOM[7'h1B][7];
        readResult_p_g_perm_a = _RANDOM[7'h1B][8];
        readResult_p_g_perm_x = _RANDOM[7'h1B][11];
        readResult_p_g_perm_w = _RANDOM[7'h1B][12];
        readResult_p_g_perm_r = _RANDOM[7'h1B][13];
        readResult_lastCycleRedirect_REG_valid = _RANDOM[7'h1B][20];
        readResult_lastCycleRedirect_REG_bits_robIdx_flag = _RANDOM[7'h1B][22];
        readResult_lastCycleRedirect_REG_bits_robIdx_value = _RANDOM[7'h1B][30:23];
        readResult_lastCycleRedirect_REG_bits_level = _RANDOM[7'h1C][10];
        readResult_p_hit_last_REG_1 = _RANDOM[7'h2D][19];
        readResult_p_ppn_1 = {_RANDOM[7'h2D][31:20], _RANDOM[7'h2E]};
        readResult_p_pbmt_1 = _RANDOM[7'h2F][1:0];
        readResult_p_perm_1_pf = _RANDOM[7'h2F][2];
        readResult_p_perm_1_af = _RANDOM[7'h2F][3];
        readResult_p_perm_1_v = _RANDOM[7'h2F][4];
        readResult_p_perm_1_d = _RANDOM[7'h2F][5];
        readResult_p_perm_1_a = _RANDOM[7'h2F][6];
        readResult_p_perm_1_u = _RANDOM[7'h2F][8];
        readResult_p_perm_1_x = _RANDOM[7'h2F][9];
        readResult_p_perm_1_w = _RANDOM[7'h2F][10];
        readResult_p_perm_1_r = _RANDOM[7'h2F][11];
        readResult_p_g_pbmt_1 = _RANDOM[7'h30][25:24];
        readResult_p_g_perm_1_pf = _RANDOM[7'h30][26];
        readResult_p_g_perm_1_af = _RANDOM[7'h30][27];
        readResult_p_g_perm_1_d = _RANDOM[7'h30][29];
        readResult_p_g_perm_1_a = _RANDOM[7'h30][30];
        readResult_p_g_perm_1_x = _RANDOM[7'h31][1];
        readResult_p_g_perm_1_w = _RANDOM[7'h31][2];
        readResult_p_g_perm_1_r = _RANDOM[7'h31][3];
        readResult_lastCycleRedirect_REG_1_valid = _RANDOM[7'h31][10];
        readResult_lastCycleRedirect_REG_1_bits_robIdx_flag = _RANDOM[7'h31][12];
        readResult_lastCycleRedirect_REG_1_bits_robIdx_value = _RANDOM[7'h31][20:13];
        readResult_lastCycleRedirect_REG_1_bits_level = _RANDOM[7'h32][0];
        noTranslateReg = _RANDOM[7'h43][9];
        REG = _RANDOM[7'h43][10];
        io_requestor_0_resp_bits_excp_0_pf_ld_REG = _RANDOM[7'h43][11];
        io_requestor_0_resp_bits_excp_0_gpf_ld_REG = _RANDOM[7'h43][13];
        io_requestor_0_resp_bits_excp_0_gpf_st_REG = _RANDOM[7'h43][14];
        io_requestor_0_resp_bits_excp_0_af_ld_REG = _RANDOM[7'h43][15];
        REG_1 = _RANDOM[7'h43][17];
        noTranslateReg_1 = _RANDOM[7'h43][24];
        ptw_resp_bits_reg_s2xlate = _RANDOM[7'h44][8:7];
        ptw_resp_bits_reg_s1_entry_tag = {_RANDOM[7'h44][31:9], _RANDOM[7'h45][11:0]};
        ptw_resp_bits_reg_s1_entry_asid = _RANDOM[7'h45][27:12];
        ptw_resp_bits_reg_s1_entry_vmid = {_RANDOM[7'h45][31:28], _RANDOM[7'h46][9:0]};
        ptw_resp_bits_reg_s1_entry_level = _RANDOM[7'h46][21:20];
        ptw_resp_bits_reg_s1_addr_low = _RANDOM[7'h48][3:1];
        ptw_resp_bits_reg_s1_valididx_0 = _RANDOM[7'h48][28];
        ptw_resp_bits_reg_s1_valididx_1 = _RANDOM[7'h48][29];
        ptw_resp_bits_reg_s1_valididx_2 = _RANDOM[7'h48][30];
        ptw_resp_bits_reg_s1_valididx_3 = _RANDOM[7'h48][31];
        ptw_resp_bits_reg_s1_valididx_4 = _RANDOM[7'h49][0];
        ptw_resp_bits_reg_s1_valididx_5 = _RANDOM[7'h49][1];
        ptw_resp_bits_reg_s1_valididx_6 = _RANDOM[7'h49][2];
        ptw_resp_bits_reg_s1_valididx_7 = _RANDOM[7'h49][3];
        ptw_resp_bits_reg_s2_entry_tag = {_RANDOM[7'h49][31:14], _RANDOM[7'h4A][19:0]};
        ptw_resp_bits_reg_s2_entry_vmid = _RANDOM[7'h4B][17:4];
        ptw_resp_bits_reg_s2_entry_level = _RANDOM[7'h4D][3:2];
        ptw_already_back_last_REG = _RANDOM[7'h4D][18];
        ptw_resp_bits_reg_1_s2xlate = _RANDOM[7'h4D][21:20];
        ptw_resp_bits_reg_1_s1_entry_tag = {_RANDOM[7'h4D][31:22], _RANDOM[7'h4E][24:0]};
        ptw_resp_bits_reg_1_s1_entry_asid = {_RANDOM[7'h4E][31:25], _RANDOM[7'h4F][8:0]};
        ptw_resp_bits_reg_1_s1_entry_vmid = _RANDOM[7'h4F][22:9];
        ptw_resp_bits_reg_1_s1_entry_level = _RANDOM[7'h50][2:1];
        ptw_resp_bits_reg_1_s1_addr_low = _RANDOM[7'h51][16:14];
        ptw_resp_bits_reg_1_s1_valididx_0 = _RANDOM[7'h52][9];
        ptw_resp_bits_reg_1_s1_valididx_1 = _RANDOM[7'h52][10];
        ptw_resp_bits_reg_1_s1_valididx_2 = _RANDOM[7'h52][11];
        ptw_resp_bits_reg_1_s1_valididx_3 = _RANDOM[7'h52][12];
        ptw_resp_bits_reg_1_s1_valididx_4 = _RANDOM[7'h52][13];
        ptw_resp_bits_reg_1_s1_valididx_5 = _RANDOM[7'h52][14];
        ptw_resp_bits_reg_1_s1_valididx_6 = _RANDOM[7'h52][15];
        ptw_resp_bits_reg_1_s1_valididx_7 = _RANDOM[7'h52][16];
        ptw_resp_bits_reg_1_s2_entry_tag =
          {_RANDOM[7'h52][31:27], _RANDOM[7'h53], _RANDOM[7'h54][0]};
        ptw_resp_bits_reg_1_s2_entry_vmid = _RANDOM[7'h54][30:17];
        ptw_resp_bits_reg_1_s2_entry_level = _RANDOM[7'h56][16:15];
        ptw_already_back_last_REG_1 = _RANDOM[7'h56][31];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        req_out_v_0 = 1'h0;
        req_out_v_1 = 1'h0;
        need_gpa = 1'h0;
        resp_gpa_refill = 1'h0;
        readResult_p_hit_last_REG = 1'h0;
        readResult_p_hit_last_REG_1 = 1'h0;
        ptw_already_back_last_REG = 1'h0;
        ptw_already_back_last_REG_1 = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  DelayN_9 sfence_delay (
    .clock                 (clock),
    .io_in_valid           (io_sfence_valid),
    .io_in_bits_rs1        (io_sfence_bits_rs1),
    .io_in_bits_rs2        (io_sfence_bits_rs2),
    .io_in_bits_addr       (io_sfence_bits_addr),
    .io_in_bits_id         (io_sfence_bits_id),
    .io_in_bits_flushPipe  (io_sfence_bits_flushPipe),
    .io_in_bits_hv         (io_sfence_bits_hv),
    .io_in_bits_hg         (io_sfence_bits_hg),
    .io_out_valid          (_sfence_delay_io_out_valid),
    .io_out_bits_rs1       (_sfence_delay_io_out_bits_rs1),
    .io_out_bits_rs2       (_sfence_delay_io_out_bits_rs2),
    .io_out_bits_addr      (_sfence_delay_io_out_bits_addr),
    .io_out_bits_id        (_sfence_delay_io_out_bits_id),
    .io_out_bits_flushPipe (/* unused */),
    .io_out_bits_hv        (_sfence_delay_io_out_bits_hv),
    .io_out_bits_hg        (_sfence_delay_io_out_bits_hg)
  );
  DelayN_10 satp_delay (
    .clock       (clock),
    .io_in_mode  (io_csr_satp_mode),
    .io_in_asid  (io_csr_satp_asid),
    .io_out_mode (_satp_delay_io_out_mode),
    .io_out_asid (_satp_delay_io_out_asid)
  );
  DelayN_10 vsatp_delay (
    .clock       (clock),
    .io_in_mode  (io_csr_vsatp_mode),
    .io_in_asid  (io_csr_vsatp_asid),
    .io_out_mode (_vsatp_delay_io_out_mode),
    .io_out_asid (/* unused */)
  );
  DelayN_10 hgatp_delay (
    .clock       (clock),
    .io_in_mode  (io_csr_hgatp_mode),
    .io_in_asid  (io_csr_hgatp_vmid),
    .io_out_mode (_hgatp_delay_io_out_mode),
    .io_out_asid (/* unused */)
  );
  DelayN_1 flush_mmu_delay (
    .clock  (clock),
    .io_in
      (_sfence_delay_io_out_valid | io_csr_satp_changed | io_csr_vsatp_changed
       | io_csr_hgatp_changed),
    .io_out (_flush_mmu_delay_io_out)
  );
  TlbStorageWrapper_3 entries (
    .clock                          (clock),
    .reset                          (reset),
    .io_sfence_valid                (_sfence_delay_io_out_valid),
    .io_sfence_bits_rs1             (_sfence_delay_io_out_bits_rs1),
    .io_sfence_bits_rs2             (_sfence_delay_io_out_bits_rs2),
    .io_sfence_bits_addr            (_sfence_delay_io_out_bits_addr),
    .io_sfence_bits_id              (_sfence_delay_io_out_bits_id),
    .io_sfence_bits_hv              (_sfence_delay_io_out_bits_hv),
    .io_sfence_bits_hg              (_sfence_delay_io_out_bits_hg),
    .io_csr_satp_asid               (_satp_delay_io_out_asid),
    .io_csr_vsatp_asid              (io_csr_vsatp_asid),
    .io_csr_hgatp_vmid              (io_csr_hgatp_vmid),
    .io_csr_priv_virt               (io_csr_priv_virt),
    .io_r_req_0_valid               (io_requestor_0_req_valid),
    .io_r_req_0_bits_vpn            (io_requestor_0_req_bits_vaddr[49:12]),
    .io_r_req_0_bits_s2xlate        (req_in_s2xlate_0),
    .io_r_req_1_valid               (io_requestor_1_req_valid),
    .io_r_req_1_bits_vpn            (io_requestor_1_req_bits_vaddr[49:12]),
    .io_r_req_1_bits_s2xlate        (req_in_s2xlate_1),
    .io_r_resp_0_bits_hit           (_entries_io_r_resp_0_bits_hit),
    .io_r_resp_0_bits_ppn_0         (_entries_io_r_resp_0_bits_ppn_0),
    .io_r_resp_0_bits_pbmt_0        (_entries_io_r_resp_0_bits_pbmt_0),
    .io_r_resp_0_bits_g_pbmt_0      (_entries_io_r_resp_0_bits_g_pbmt_0),
    .io_r_resp_0_bits_perm_0_pf     (_entries_io_r_resp_0_bits_perm_0_pf),
    .io_r_resp_0_bits_perm_0_af     (_entries_io_r_resp_0_bits_perm_0_af),
    .io_r_resp_0_bits_perm_0_v      (_entries_io_r_resp_0_bits_perm_0_v),
    .io_r_resp_0_bits_perm_0_d      (_entries_io_r_resp_0_bits_perm_0_d),
    .io_r_resp_0_bits_perm_0_a      (_entries_io_r_resp_0_bits_perm_0_a),
    .io_r_resp_0_bits_perm_0_u      (_entries_io_r_resp_0_bits_perm_0_u),
    .io_r_resp_0_bits_perm_0_x      (_entries_io_r_resp_0_bits_perm_0_x),
    .io_r_resp_0_bits_perm_0_w      (_entries_io_r_resp_0_bits_perm_0_w),
    .io_r_resp_0_bits_perm_0_r      (_entries_io_r_resp_0_bits_perm_0_r),
    .io_r_resp_0_bits_g_perm_0_pf   (_entries_io_r_resp_0_bits_g_perm_0_pf),
    .io_r_resp_0_bits_g_perm_0_af   (_entries_io_r_resp_0_bits_g_perm_0_af),
    .io_r_resp_0_bits_g_perm_0_d    (_entries_io_r_resp_0_bits_g_perm_0_d),
    .io_r_resp_0_bits_g_perm_0_a    (_entries_io_r_resp_0_bits_g_perm_0_a),
    .io_r_resp_0_bits_g_perm_0_x    (_entries_io_r_resp_0_bits_g_perm_0_x),
    .io_r_resp_0_bits_g_perm_0_w    (_entries_io_r_resp_0_bits_g_perm_0_w),
    .io_r_resp_0_bits_g_perm_0_r    (_entries_io_r_resp_0_bits_g_perm_0_r),
    .io_r_resp_1_bits_hit           (_entries_io_r_resp_1_bits_hit),
    .io_r_resp_1_bits_ppn_0         (_entries_io_r_resp_1_bits_ppn_0),
    .io_r_resp_1_bits_pbmt_0        (_entries_io_r_resp_1_bits_pbmt_0),
    .io_r_resp_1_bits_g_pbmt_0      (_entries_io_r_resp_1_bits_g_pbmt_0),
    .io_r_resp_1_bits_perm_0_pf     (_entries_io_r_resp_1_bits_perm_0_pf),
    .io_r_resp_1_bits_perm_0_af     (_entries_io_r_resp_1_bits_perm_0_af),
    .io_r_resp_1_bits_perm_0_v      (_entries_io_r_resp_1_bits_perm_0_v),
    .io_r_resp_1_bits_perm_0_d      (_entries_io_r_resp_1_bits_perm_0_d),
    .io_r_resp_1_bits_perm_0_a      (_entries_io_r_resp_1_bits_perm_0_a),
    .io_r_resp_1_bits_perm_0_u      (_entries_io_r_resp_1_bits_perm_0_u),
    .io_r_resp_1_bits_perm_0_x      (_entries_io_r_resp_1_bits_perm_0_x),
    .io_r_resp_1_bits_perm_0_w      (_entries_io_r_resp_1_bits_perm_0_w),
    .io_r_resp_1_bits_perm_0_r      (_entries_io_r_resp_1_bits_perm_0_r),
    .io_r_resp_1_bits_g_perm_0_pf   (_entries_io_r_resp_1_bits_g_perm_0_pf),
    .io_r_resp_1_bits_g_perm_0_af   (_entries_io_r_resp_1_bits_g_perm_0_af),
    .io_r_resp_1_bits_g_perm_0_d    (_entries_io_r_resp_1_bits_g_perm_0_d),
    .io_r_resp_1_bits_g_perm_0_a    (_entries_io_r_resp_1_bits_g_perm_0_a),
    .io_r_resp_1_bits_g_perm_0_x    (_entries_io_r_resp_1_bits_g_perm_0_x),
    .io_r_resp_1_bits_g_perm_0_w    (_entries_io_r_resp_1_bits_g_perm_0_w),
    .io_r_resp_1_bits_g_perm_0_r    (_entries_io_r_resp_1_bits_g_perm_0_r),
    .io_w_valid
      (io_ptw_resp_valid & ~io_ptw_resp_bits_getGpa & ~need_gpa & ~need_gpa_wire
       & ~_flush_mmu_delay_io_out),
    .io_w_bits_data_s2xlate         (io_ptw_resp_bits_s2xlate),
    .io_w_bits_data_s1_entry_tag    (io_ptw_resp_bits_s1_entry_tag),
    .io_w_bits_data_s1_entry_asid   (io_ptw_resp_bits_s1_entry_asid),
    .io_w_bits_data_s1_entry_vmid   (io_ptw_resp_bits_s1_entry_vmid),
    .io_w_bits_data_s1_entry_n      (io_ptw_resp_bits_s1_entry_n),
    .io_w_bits_data_s1_entry_pbmt   (io_ptw_resp_bits_s1_entry_pbmt),
    .io_w_bits_data_s1_entry_perm_d (io_ptw_resp_bits_s1_entry_perm_d),
    .io_w_bits_data_s1_entry_perm_a (io_ptw_resp_bits_s1_entry_perm_a),
    .io_w_bits_data_s1_entry_perm_g (io_ptw_resp_bits_s1_entry_perm_g),
    .io_w_bits_data_s1_entry_perm_u (io_ptw_resp_bits_s1_entry_perm_u),
    .io_w_bits_data_s1_entry_perm_x (io_ptw_resp_bits_s1_entry_perm_x),
    .io_w_bits_data_s1_entry_perm_w (io_ptw_resp_bits_s1_entry_perm_w),
    .io_w_bits_data_s1_entry_perm_r (io_ptw_resp_bits_s1_entry_perm_r),
    .io_w_bits_data_s1_entry_level  (io_ptw_resp_bits_s1_entry_level),
    .io_w_bits_data_s1_entry_v      (io_ptw_resp_bits_s1_entry_v),
    .io_w_bits_data_s1_entry_ppn    (io_ptw_resp_bits_s1_entry_ppn),
    .io_w_bits_data_s1_ppn_low_0    (io_ptw_resp_bits_s1_ppn_low_0),
    .io_w_bits_data_s1_ppn_low_1    (io_ptw_resp_bits_s1_ppn_low_1),
    .io_w_bits_data_s1_ppn_low_2    (io_ptw_resp_bits_s1_ppn_low_2),
    .io_w_bits_data_s1_ppn_low_3    (io_ptw_resp_bits_s1_ppn_low_3),
    .io_w_bits_data_s1_ppn_low_4    (io_ptw_resp_bits_s1_ppn_low_4),
    .io_w_bits_data_s1_ppn_low_5    (io_ptw_resp_bits_s1_ppn_low_5),
    .io_w_bits_data_s1_ppn_low_6    (io_ptw_resp_bits_s1_ppn_low_6),
    .io_w_bits_data_s1_ppn_low_7    (io_ptw_resp_bits_s1_ppn_low_7),
    .io_w_bits_data_s1_valididx_0   (io_ptw_resp_bits_s1_valididx_0),
    .io_w_bits_data_s1_valididx_1   (io_ptw_resp_bits_s1_valididx_1),
    .io_w_bits_data_s1_valididx_2   (io_ptw_resp_bits_s1_valididx_2),
    .io_w_bits_data_s1_valididx_3   (io_ptw_resp_bits_s1_valididx_3),
    .io_w_bits_data_s1_valididx_4   (io_ptw_resp_bits_s1_valididx_4),
    .io_w_bits_data_s1_valididx_5   (io_ptw_resp_bits_s1_valididx_5),
    .io_w_bits_data_s1_valididx_6   (io_ptw_resp_bits_s1_valididx_6),
    .io_w_bits_data_s1_valididx_7   (io_ptw_resp_bits_s1_valididx_7),
    .io_w_bits_data_s1_pteidx_0     (io_ptw_resp_bits_s1_pteidx_0),
    .io_w_bits_data_s1_pteidx_1     (io_ptw_resp_bits_s1_pteidx_1),
    .io_w_bits_data_s1_pteidx_2     (io_ptw_resp_bits_s1_pteidx_2),
    .io_w_bits_data_s1_pteidx_3     (io_ptw_resp_bits_s1_pteidx_3),
    .io_w_bits_data_s1_pteidx_4     (io_ptw_resp_bits_s1_pteidx_4),
    .io_w_bits_data_s1_pteidx_5     (io_ptw_resp_bits_s1_pteidx_5),
    .io_w_bits_data_s1_pteidx_6     (io_ptw_resp_bits_s1_pteidx_6),
    .io_w_bits_data_s1_pteidx_7     (io_ptw_resp_bits_s1_pteidx_7),
    .io_w_bits_data_s1_pf           (io_ptw_resp_bits_s1_pf),
    .io_w_bits_data_s1_af           (io_ptw_resp_bits_s1_af),
    .io_w_bits_data_s2_entry_tag    (io_ptw_resp_bits_s2_entry_tag),
    .io_w_bits_data_s2_entry_n      (io_ptw_resp_bits_s2_entry_n),
    .io_w_bits_data_s2_entry_pbmt   (io_ptw_resp_bits_s2_entry_pbmt),
    .io_w_bits_data_s2_entry_ppn    (io_ptw_resp_bits_s2_entry_ppn),
    .io_w_bits_data_s2_entry_perm_d (io_ptw_resp_bits_s2_entry_perm_d),
    .io_w_bits_data_s2_entry_perm_a (io_ptw_resp_bits_s2_entry_perm_a),
    .io_w_bits_data_s2_entry_perm_g (io_ptw_resp_bits_s2_entry_perm_g),
    .io_w_bits_data_s2_entry_perm_u (io_ptw_resp_bits_s2_entry_perm_u),
    .io_w_bits_data_s2_entry_perm_x (io_ptw_resp_bits_s2_entry_perm_x),
    .io_w_bits_data_s2_entry_perm_w (io_ptw_resp_bits_s2_entry_perm_w),
    .io_w_bits_data_s2_entry_perm_r (io_ptw_resp_bits_s2_entry_perm_r),
    .io_w_bits_data_s2_entry_level  (io_ptw_resp_bits_s2_entry_level),
    .io_w_bits_data_s2_gpf          (io_ptw_resp_bits_s2_gpf),
    .io_w_bits_data_s2_gaf          (io_ptw_resp_bits_s2_gaf)
  );
  assign io_requestor_0_resp_valid = req_out_v_0;
  assign io_requestor_0_resp_bits_paddr_0 = io_requestor_0_resp_bits_paddr_0_0;
  assign io_requestor_0_resp_bits_pbmt_0 =
    portTranslateEnable_0 ? _GEN_5[req_out_s2xlate_0] : 2'h0;
  assign io_requestor_0_resp_bits_miss = ~(REG_1 | REG) & miss_read_0;
  assign io_requestor_0_resp_bits_excp_0_gpf_ld =
    io_requestor_0_resp_bits_excp_0_gpf_ld_0;
  assign io_requestor_0_resp_bits_excp_0_pf_ld =
    REG
      ? io_requestor_0_resp_bits_excp_0_pf_ld_REG & isLd
      : _io_requestor_0_resp_bits_excp_0_pf_ld_T_1 & s1_valid & ~af_2 & ~isFakePte
        & ~isNonLeaf;
  assign io_requestor_0_resp_bits_excp_0_af_ld =
    REG
      ? io_requestor_0_resp_bits_excp_0_af_ld_REG & ~(|(req_out_0_cmd[1:0]))
      : af_2 & ~(|(req_out_0_cmd[1:0])) & (s1_valid | s2_valid);
  assign io_requestor_1_resp_valid = req_out_v_1;
  assign io_requestor_1_resp_bits_paddr_0 = io_requestor_1_resp_bits_paddr_0_0;
  assign io_requestor_1_resp_bits_pbmt_0 =
    portTranslateEnable_1 ? _GEN_6[req_out_s2xlate_1] : 2'h0;
  assign io_requestor_1_resp_bits_miss = miss_read_1;
  assign io_requestor_1_resp_bits_excp_0_gpf_ld =
    io_requestor_1_resp_bits_excp_0_gpf_ld_0;
  assign io_requestor_1_resp_bits_excp_0_pf_ld =
    _io_requestor_1_resp_bits_excp_0_pf_ld_T_1 & s1_valid_2 & ~af_4 & ~isFakePte_2
    & ~isNonLeaf_2;
  assign io_requestor_1_resp_bits_excp_0_af_ld =
    af_4 & ~(|(req_out_1_cmd[1:0])) & (s1_valid_2 | s2_valid_2);
  assign io_ptw_req_0_valid =
    req_out_v_0 & miss_read_0
    & ~(io_ptw_resp_valid & req_s2xlate == io_ptw_resp_bits_s2xlate
        & (_ptw_just_back_T_12
             ? io_ptw_resp_bits_s1_entry_asid == ((|io_ptw_resp_bits_s2xlate)
                                                    ? io_csr_vsatp_asid
                                                    : io_csr_satp_asid)
               & (~(|io_ptw_resp_bits_s2xlate) | _ptw_just_back_noS2_hit_vmid_hit_T_1)
               & (_ptw_just_back_noS2_hit_level_match_T_21
                    ? _ptw_just_back_noS2_hit_level_match_T_3
                      & ptw_just_back_noS2_hit_tag_match_1
                      & io_ptw_resp_bits_s1_entry_tag[5:0] == req_out_0_vaddr[20:15]
                    : _ptw_just_back_noS2_hit_level_match_T_19
                        ? _ptw_just_back_noS2_hit_level_match_T_3
                          & ptw_just_back_noS2_hit_tag_match_1
                        : (_GEN_1 | ptw_just_back_noS2_hit_tag_match_2)
                          & ptw_just_back_noS2_hit_tag_match_3)
               & _GEN_2[req_out_0_vaddr[14:12]]
             : _ptw_just_back_T_13
                 ? ptw_just_back_onlyS2_hit_vmid_hit
                   & (_ptw_just_back_onlyS2_hit_level_match_T_21
                        ? _ptw_just_back_onlyS2_hit_level_match_T_3
                          & ptw_just_back_onlyS2_hit_tag_match_1
                          & io_ptw_resp_bits_s2_entry_tag[8:0] == req_out_0_vaddr[20:12]
                        : _ptw_just_back_onlyS2_hit_level_match_T_19
                            ? _ptw_just_back_onlyS2_hit_level_match_T_3
                              & ptw_just_back_onlyS2_hit_tag_match_1
                            : (_GEN_3 | ptw_just_back_onlyS2_hit_tag_match_2)
                              & ptw_just_back_onlyS2_hit_tag_match_3)
                 : (ptw_just_back_level == 2'h0
                      ? _ptw_just_back_level_match_T_3 & ptw_just_back_tag_match_1
                        & req_out_0_vaddr[20:12] == {io_ptw_resp_bits_s1_entry_tag[5:0],
                                                     io_ptw_resp_bits_s1_addr_low}
                      : ptw_just_back_level == 2'h1
                          ? _ptw_just_back_level_match_T_3 & ptw_just_back_tag_match_1
                          : (ptw_just_back_level != 2'h2 | ptw_just_back_tag_match_2)
                            & ptw_just_back_tag_match_3)
                   & (~(&io_ptw_resp_bits_s2xlate) | ptw_just_back_onlyS2_hit_vmid_hit)
                   & ptw_just_back_vasid_hit) | ptw_already_back_last_REG
        & req_s2xlate == ptw_resp_bits_reg_s2xlate
        & (ptw_resp_bits_reg_s2xlate == 2'h0
             ? ptw_resp_bits_reg_s1_entry_asid == ((|ptw_resp_bits_reg_s2xlate)
                                                     ? io_csr_vsatp_asid
                                                     : io_csr_satp_asid)
               & (~(|ptw_resp_bits_reg_s2xlate)
                  | {2'h0, ptw_resp_bits_reg_s1_entry_vmid} == io_csr_hgatp_vmid)
               & (ptw_resp_bits_reg_s1_entry_level == 2'h0
                    ? _ptw_already_back_noS2_hit_level_match_T_3
                      & ptw_already_back_noS2_hit_tag_match_1
                      & ptw_resp_bits_reg_s1_entry_tag[5:0] == req_out_0_vaddr[20:15]
                    : ptw_resp_bits_reg_s1_entry_level == 2'h1
                        ? _ptw_already_back_noS2_hit_level_match_T_3
                          & ptw_already_back_noS2_hit_tag_match_1
                        : (ptw_resp_bits_reg_s1_entry_level != 2'h2
                           | ptw_already_back_noS2_hit_tag_match_2)
                          & ptw_already_back_noS2_hit_tag_match_3)
               & _GEN_7[req_out_0_vaddr[14:12]]
             : ptw_resp_bits_reg_s2xlate == 2'h2
                 ? ptw_already_back_onlyS2_hit_vmid_hit
                   & (ptw_resp_bits_reg_s2_entry_level == 2'h0
                        ? _ptw_already_back_onlyS2_hit_level_match_T_3
                          & ptw_already_back_onlyS2_hit_tag_match_1
                          & ptw_resp_bits_reg_s2_entry_tag[8:0] == req_out_0_vaddr[20:12]
                        : ptw_resp_bits_reg_s2_entry_level == 2'h1
                            ? _ptw_already_back_onlyS2_hit_level_match_T_3
                              & ptw_already_back_onlyS2_hit_tag_match_1
                            : (ptw_resp_bits_reg_s2_entry_level != 2'h2
                               | ptw_already_back_onlyS2_hit_tag_match_2)
                              & ptw_already_back_onlyS2_hit_tag_match_3)
                 : (ptw_already_back_level == 2'h0
                      ? _ptw_already_back_level_match_T_3 & ptw_already_back_tag_match_1
                        & req_out_0_vaddr[20:12] == {ptw_resp_bits_reg_s1_entry_tag[5:0],
                                                     ptw_resp_bits_reg_s1_addr_low}
                      : ptw_already_back_level == 2'h1
                          ? _ptw_already_back_level_match_T_3
                            & ptw_already_back_tag_match_1
                          : (ptw_already_back_level != 2'h2
                             | ptw_already_back_tag_match_2)
                            & ptw_already_back_tag_match_3)
                   & (ptw_resp_bits_reg_s2xlate != 2'h3
                      | ptw_already_back_onlyS2_hit_vmid_hit)
                   & ptw_resp_bits_reg_s1_entry_asid == io_csr_vsatp_asid))
    & ~(need_gpa & need_gpa_vpn != req_out_0_vaddr[49:12] & ~resp_gpa_refill);
  assign io_ptw_req_0_bits_vpn = req_out_0_vaddr[49:12];
  assign io_ptw_req_0_bits_s2xlate = req_s2xlate;
  assign io_ptw_req_0_bits_getGpa = hasGpf_0 & hit_read_0;
  assign io_ptw_req_1_valid =
    req_out_v_1 & miss_read_1
    & ~(io_ptw_resp_valid & req_s2xlate_1 == io_ptw_resp_bits_s2xlate
        & (_ptw_just_back_T_12
             ? io_ptw_resp_bits_s1_entry_asid == ((|io_ptw_resp_bits_s2xlate)
                                                    ? io_csr_vsatp_asid
                                                    : io_csr_satp_asid)
               & (~(|io_ptw_resp_bits_s2xlate) | _ptw_just_back_noS2_hit_vmid_hit_T_1)
               & (_ptw_just_back_noS2_hit_level_match_T_21
                    ? _ptw_just_back_noS2_hit_level_match_T_14
                      & ptw_just_back_noS2_hit_tag_match_1_1
                      & io_ptw_resp_bits_s1_entry_tag[5:0] == req_out_1_vaddr[20:15]
                    : _ptw_just_back_noS2_hit_level_match_T_19
                        ? _ptw_just_back_noS2_hit_level_match_T_14
                          & ptw_just_back_noS2_hit_tag_match_1_1
                        : (_GEN_1 | ptw_just_back_noS2_hit_tag_match_1_2)
                          & ptw_just_back_noS2_hit_tag_match_1_3)
               & _GEN_2[req_out_1_vaddr[14:12]]
             : _ptw_just_back_T_13
                 ? ptw_just_back_onlyS2_hit_vmid_hit
                   & (_ptw_just_back_onlyS2_hit_level_match_T_21
                        ? _ptw_just_back_onlyS2_hit_level_match_T_14
                          & ptw_just_back_onlyS2_hit_tag_match_1_1
                          & io_ptw_resp_bits_s2_entry_tag[8:0] == req_out_1_vaddr[20:12]
                        : _ptw_just_back_onlyS2_hit_level_match_T_19
                            ? _ptw_just_back_onlyS2_hit_level_match_T_14
                              & ptw_just_back_onlyS2_hit_tag_match_1_1
                            : (_GEN_3 | ptw_just_back_onlyS2_hit_tag_match_1_2)
                              & ptw_just_back_onlyS2_hit_tag_match_1_3)
                 : (ptw_just_back_level_1 == 2'h0
                      ? _ptw_just_back_level_match_T_14 & ptw_just_back_tag_match_1_1
                        & req_out_1_vaddr[20:12] == {io_ptw_resp_bits_s1_entry_tag[5:0],
                                                     io_ptw_resp_bits_s1_addr_low}
                      : ptw_just_back_level_1 == 2'h1
                          ? _ptw_just_back_level_match_T_14 & ptw_just_back_tag_match_1_1
                          : (ptw_just_back_level_1 != 2'h2 | ptw_just_back_tag_match_1_2)
                            & ptw_just_back_tag_match_1_3)
                   & (~(&io_ptw_resp_bits_s2xlate) | ptw_just_back_onlyS2_hit_vmid_hit)
                   & ptw_just_back_vasid_hit) | ptw_already_back_last_REG_1
        & req_s2xlate_1 == ptw_resp_bits_reg_1_s2xlate
        & (ptw_resp_bits_reg_1_s2xlate == 2'h0
             ? ptw_resp_bits_reg_1_s1_entry_asid == ((|ptw_resp_bits_reg_1_s2xlate)
                                                       ? io_csr_vsatp_asid
                                                       : io_csr_satp_asid)
               & (~(|ptw_resp_bits_reg_1_s2xlate)
                  | {2'h0, ptw_resp_bits_reg_1_s1_entry_vmid} == io_csr_hgatp_vmid)
               & (ptw_resp_bits_reg_1_s1_entry_level == 2'h0
                    ? _ptw_already_back_noS2_hit_level_match_T_14
                      & ptw_already_back_noS2_hit_tag_match_1_1
                      & ptw_resp_bits_reg_1_s1_entry_tag[5:0] == req_out_1_vaddr[20:15]
                    : ptw_resp_bits_reg_1_s1_entry_level == 2'h1
                        ? _ptw_already_back_noS2_hit_level_match_T_14
                          & ptw_already_back_noS2_hit_tag_match_1_1
                        : (ptw_resp_bits_reg_1_s1_entry_level != 2'h2
                           | ptw_already_back_noS2_hit_tag_match_1_2)
                          & ptw_already_back_noS2_hit_tag_match_1_3)
               & _GEN_8[req_out_1_vaddr[14:12]]
             : ptw_resp_bits_reg_1_s2xlate == 2'h2
                 ? ptw_already_back_onlyS2_hit_vmid_hit_1
                   & (ptw_resp_bits_reg_1_s2_entry_level == 2'h0
                        ? _ptw_already_back_onlyS2_hit_level_match_T_14
                          & ptw_already_back_onlyS2_hit_tag_match_1_1
                          & ptw_resp_bits_reg_1_s2_entry_tag[8:0] == req_out_1_vaddr[20:12]
                        : ptw_resp_bits_reg_1_s2_entry_level == 2'h1
                            ? _ptw_already_back_onlyS2_hit_level_match_T_14
                              & ptw_already_back_onlyS2_hit_tag_match_1_1
                            : (ptw_resp_bits_reg_1_s2_entry_level != 2'h2
                               | ptw_already_back_onlyS2_hit_tag_match_1_2)
                              & ptw_already_back_onlyS2_hit_tag_match_1_3)
                 : (ptw_already_back_level_1 == 2'h0
                      ? _ptw_already_back_level_match_T_14
                        & ptw_already_back_tag_match_1_1
                        & req_out_1_vaddr[20:12] == {ptw_resp_bits_reg_1_s1_entry_tag[5:0],
                                                     ptw_resp_bits_reg_1_s1_addr_low}
                      : ptw_already_back_level_1 == 2'h1
                          ? _ptw_already_back_level_match_T_14
                            & ptw_already_back_tag_match_1_1
                          : (ptw_already_back_level_1 != 2'h2
                             | ptw_already_back_tag_match_1_2)
                            & ptw_already_back_tag_match_1_3)
                   & (ptw_resp_bits_reg_1_s2xlate != 2'h3
                      | ptw_already_back_onlyS2_hit_vmid_hit_1)
                   & ptw_resp_bits_reg_1_s1_entry_asid == io_csr_vsatp_asid))
    & ~(need_gpa & need_gpa_vpn != req_out_1_vaddr[49:12] & ~resp_gpa_refill);
  assign io_ptw_req_1_bits_vpn = req_out_1_vaddr[49:12];
  assign io_ptw_req_1_bits_s2xlate = req_s2xlate_1;
  assign io_ptw_req_1_bits_getGpa = hasGpf_1 & hit_read_1;
  assign io_pmp_0_valid = req_out_v_0 | noTranslateReg;
  assign io_pmp_0_bits_addr =
    noTranslateReg
      ? io_requestor_0_req_bits_pmp_addr
      : io_requestor_0_resp_bits_paddr_0_0;
  assign io_pmp_0_bits_cmd = req_out_0_cmd;
  assign io_pmp_1_valid = req_out_v_1 | noTranslateReg_1;
  assign io_pmp_1_bits_addr =
    noTranslateReg_1 ? 48'h0 : io_requestor_1_resp_bits_paddr_0_0;
  assign io_pmp_1_bits_cmd = req_out_1_cmd;
endmodule

