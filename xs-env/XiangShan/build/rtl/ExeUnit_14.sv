// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module ExeUnit_14(
  input          clock,
  input          reset,
  input          io_flush_valid,
  input          io_flush_bits_robIdx_flag,
  input  [7:0]   io_flush_bits_robIdx_value,
  input          io_flush_bits_level,
  input          io_in_valid,
  input  [34:0]  io_in_bits_fuType,
  input  [8:0]   io_in_bits_fuOpType,
  input  [127:0] io_in_bits_src_0,
  input  [127:0] io_in_bits_src_1,
  input  [127:0] io_in_bits_src_2,
  input  [127:0] io_in_bits_src_3,
  input  [127:0] io_in_bits_src_4,
  input          io_in_bits_robIdx_flag,
  input  [7:0]   io_in_bits_robIdx_value,
  input  [7:0]   io_in_bits_pdest,
  input          io_in_bits_rfWen,
  input          io_in_bits_fpWen,
  input          io_in_bits_vecWen,
  input          io_in_bits_v0Wen,
  input          io_in_bits_vlWen,
  input          io_in_bits_fpu_wflags,
  input          io_in_bits_vpu_vma,
  input          io_in_bits_vpu_vta,
  input  [1:0]   io_in_bits_vpu_vsew,
  input  [2:0]   io_in_bits_vpu_vlmul,
  input          io_in_bits_vpu_vm,
  input  [7:0]   io_in_bits_vpu_vstart,
  input          io_in_bits_vpu_fpu_isFoldTo1_2,
  input          io_in_bits_vpu_fpu_isFoldTo1_4,
  input          io_in_bits_vpu_fpu_isFoldTo1_8,
  input  [6:0]   io_in_bits_vpu_vuopIdx,
  input          io_in_bits_vpu_lastUop,
  input          io_in_bits_vpu_isNarrow,
  input          io_in_bits_vpu_isDstMask,
  output         io_out_valid,
  output [127:0] io_out_bits_data_1,
  output [127:0] io_out_bits_data_2,
  output [127:0] io_out_bits_data_3,
  output [127:0] io_out_bits_data_4,
  output [127:0] io_out_bits_data_5,
  output [7:0]   io_out_bits_pdest,
  output         io_out_bits_robIdx_flag,
  output [7:0]   io_out_bits_robIdx_value,
  output         io_out_bits_intWen,
  output         io_out_bits_fpWen,
  output         io_out_bits_vecWen,
  output         io_out_bits_v0Wen,
  output         io_out_bits_vlWen,
  output [4:0]   io_out_bits_fflags,
  output         io_out_bits_wflags,
  output         io_out_bits_exceptionVec_2,
  input  [2:0]   io_frm,
  output         io_vtype_valid,
  output         io_vtype_bits_illegal,
  output         io_vtype_bits_vma,
  output         io_vtype_bits_vta,
  output [1:0]   io_vtype_bits_vsew,
  output [2:0]   io_vtype_bits_vlmul,
  output         io_vlIsZero,
  output         io_vlIsVlmax
);

  wire         _in1ToN_io_out_0_valid;
  wire [8:0]   _in1ToN_io_out_0_bits_fuOpType;
  wire [1:0]   _in1ToN_io_out_0_bits_vpu_vsew;
  wire [2:0]   _in1ToN_io_out_0_bits_vpu_vlmul;
  wire         _in1ToN_io_out_0_bits_vpu_vm;
  wire         _in1ToN_io_out_0_bits_vpu_fpu_isFoldTo1_2;
  wire         _in1ToN_io_out_0_bits_vpu_fpu_isFoldTo1_4;
  wire         _in1ToN_io_out_0_bits_vpu_fpu_isFoldTo1_8;
  wire [6:0]   _in1ToN_io_out_0_bits_vpu_vuopIdx;
  wire         _in1ToN_io_out_1_valid;
  wire [8:0]   _in1ToN_io_out_1_bits_fuOpType;
  wire [1:0]   _in1ToN_io_out_1_bits_vpu_vsew;
  wire [2:0]   _in1ToN_io_out_1_bits_vpu_vlmul;
  wire         _in1ToN_io_out_1_bits_vpu_vm;
  wire [6:0]   _in1ToN_io_out_1_bits_vpu_vuopIdx;
  wire         _in1ToN_io_out_2_valid;
  wire [8:0]   _in1ToN_io_out_2_bits_fuOpType;
  wire         _in1ToN_io_out_2_bits_vpu_vma;
  wire         _in1ToN_io_out_2_bits_vpu_vta;
  wire [1:0]   _in1ToN_io_out_2_bits_vpu_vsew;
  wire [2:0]   _in1ToN_io_out_2_bits_vpu_vlmul;
  wire         _in1ToN_io_out_2_bits_vpu_vm;
  wire [7:0]   _in1ToN_io_out_2_bits_vpu_vstart;
  wire [6:0]   _in1ToN_io_out_2_bits_vpu_vuopIdx;
  wire         _in1ToN_io_out_3_valid;
  wire [8:0]   _in1ToN_io_out_3_bits_fuOpType;
  wire         _in1ToN_io_out_3_bits_robIdx_flag;
  wire [7:0]   _in1ToN_io_out_3_bits_robIdx_value;
  wire [7:0]   _in1ToN_io_out_3_bits_pdest;
  wire         _in1ToN_io_out_3_bits_rfWen;
  wire         _in1ToN_io_out_3_bits_vlWen;
  wire         _ClockGate_2_Q;
  wire         _ClockGate_1_Q;
  wire         _ClockGate_Q;
  wire         _VSetRvfWvf_io_out_valid;
  wire         _VSetRvfWvf_io_out_bits_ctrl_robIdx_flag;
  wire [7:0]   _VSetRvfWvf_io_out_bits_ctrl_robIdx_value;
  wire [7:0]   _VSetRvfWvf_io_out_bits_ctrl_pdest;
  wire         _VSetRvfWvf_io_out_bits_ctrl_rfWen;
  wire         _VSetRvfWvf_io_out_bits_ctrl_vlWen;
  wire [63:0]  _VSetRvfWvf_io_out_bits_res_data;
  wire         _Vipu_io_out_valid;
  wire         _Vipu_io_out_bits_ctrl_robIdx_flag;
  wire [7:0]   _Vipu_io_out_bits_ctrl_robIdx_value;
  wire [7:0]   _Vipu_io_out_bits_ctrl_pdest;
  wire         _Vipu_io_out_bits_ctrl_rfWen;
  wire         _Vipu_io_out_bits_ctrl_vecWen;
  wire         _Vipu_io_out_bits_ctrl_v0Wen;
  wire         _Vipu_io_out_bits_ctrl_exceptionVec_2;
  wire [127:0] _Vipu_io_out_bits_res_data;
  wire         _Vfcvt_io_out_valid;
  wire         _Vfcvt_io_out_bits_ctrl_robIdx_flag;
  wire [7:0]   _Vfcvt_io_out_bits_ctrl_robIdx_value;
  wire [7:0]   _Vfcvt_io_out_bits_ctrl_pdest;
  wire         _Vfcvt_io_out_bits_ctrl_vecWen;
  wire         _Vfcvt_io_out_bits_ctrl_v0Wen;
  wire         _Vfcvt_io_out_bits_ctrl_fpu_wflags;
  wire [127:0] _Vfcvt_io_out_bits_res_data;
  wire [4:0]   _Vfcvt_io_out_bits_res_fflags;
  wire         _Vfalu_io_out_valid;
  wire         _Vfalu_io_out_bits_ctrl_robIdx_flag;
  wire [7:0]   _Vfalu_io_out_bits_ctrl_robIdx_value;
  wire [7:0]   _Vfalu_io_out_bits_ctrl_pdest;
  wire         _Vfalu_io_out_bits_ctrl_fpWen;
  wire         _Vfalu_io_out_bits_ctrl_vecWen;
  wire         _Vfalu_io_out_bits_ctrl_v0Wen;
  wire         _Vfalu_io_out_bits_ctrl_fpu_wflags;
  wire [127:0] _Vfalu_io_out_bits_res_data;
  wire [4:0]   _Vfalu_io_out_bits_res_fflags;
  reg          fuVld_en_reg;
  reg          fuVldVec_1;
  wire         fuVld_en = _in1ToN_io_out_0_valid | fuVldVec_1;
  reg          fuVld_en_reg_1;
  reg          fuVldVec_1_1;
  reg          fuVldVec_2;
  wire         fuVld_en_1 = _in1ToN_io_out_1_valid | fuVldVec_1_1 | fuVldVec_2;
  reg          fuVld_en_reg_2;
  reg          fuVldVec_1_2;
  reg          fuVldVec_2_1;
  wire         fuVld_en_2 = _in1ToN_io_out_2_valid | fuVldVec_1_2 | fuVldVec_2_1;
  reg          inPipe_2_1;
  reg          inPipe_2_2;
  reg  [8:0]   inPipe_1_1_fuOpType;
  reg  [127:0] inPipe_1_1_src_2;
  reg  [127:0] inPipe_1_1_src_3;
  reg  [127:0] inPipe_1_1_src_4;
  reg          inPipe_1_1_robIdx_flag;
  reg  [7:0]   inPipe_1_1_robIdx_value;
  reg  [7:0]   inPipe_1_1_pdest;
  reg          inPipe_1_1_rfWen;
  reg          inPipe_1_1_fpWen;
  reg          inPipe_1_1_vecWen;
  reg          inPipe_1_1_v0Wen;
  reg          inPipe_1_1_fpu_wflags;
  reg          inPipe_1_1_vpu_vma;
  reg          inPipe_1_1_vpu_vta;
  reg  [1:0]   inPipe_1_1_vpu_vsew;
  reg  [2:0]   inPipe_1_1_vpu_vlmul;
  reg          inPipe_1_1_vpu_vm;
  reg  [7:0]   inPipe_1_1_vpu_vstart;
  reg          inPipe_1_1_vpu_fpu_isFoldTo1_2;
  reg          inPipe_1_1_vpu_fpu_isFoldTo1_4;
  reg          inPipe_1_1_vpu_fpu_isFoldTo1_8;
  reg  [6:0]   inPipe_1_1_vpu_vuopIdx;
  reg          inPipe_1_1_vpu_lastUop;
  reg          inPipe_1_1_vpu_isNarrow;
  reg          inPipe_1_1_vpu_isDstMask;
  reg  [127:0] inPipe_1_2_src_2;
  reg  [127:0] inPipe_1_2_src_3;
  reg  [127:0] inPipe_1_2_src_4;
  reg          inPipe_1_2_robIdx_flag;
  reg  [7:0]   inPipe_1_2_robIdx_value;
  reg  [7:0]   inPipe_1_2_pdest;
  reg          inPipe_1_2_rfWen;
  reg          inPipe_1_2_vecWen;
  reg          inPipe_1_2_v0Wen;
  reg          inPipe_1_2_fpu_wflags;
  reg          inPipe_1_2_vpu_vma;
  reg          inPipe_1_2_vpu_vta;
  reg          inPipe_1_2_vpu_vm;
  reg  [7:0]   inPipe_1_2_vpu_vstart;
  reg  [6:0]   inPipe_1_2_vpu_vuopIdx;
  reg          inPipe_1_2_vpu_isDstMask;
  wire [127:0] _GEN = _Vipu_io_out_valid ? _Vipu_io_out_bits_res_data : 128'h0;
  wire [127:0] io_out_bits_data_4_0 =
    (_Vfalu_io_out_valid ? _Vfalu_io_out_bits_res_data : 128'h0)
    | (_Vfcvt_io_out_valid ? _Vfcvt_io_out_bits_res_data : 128'h0) | _GEN;
  wire [8:0]   _inPipe_flushVec_flushItself_T_10 =
    {io_flush_bits_robIdx_flag, io_flush_bits_robIdx_value};
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      fuVld_en_reg <= 1'h0;
      fuVldVec_1 <= 1'h0;
      fuVld_en_reg_1 <= 1'h0;
      fuVldVec_1_1 <= 1'h0;
      fuVldVec_2 <= 1'h0;
      fuVld_en_reg_2 <= 1'h0;
      fuVldVec_1_2 <= 1'h0;
      fuVldVec_2_1 <= 1'h0;
      inPipe_2_1 <= 1'h0;
      inPipe_2_2 <= 1'h0;
    end
    else begin
      fuVld_en_reg <= fuVld_en;
      fuVldVec_1 <= _in1ToN_io_out_0_valid;
      fuVld_en_reg_1 <= fuVld_en_1;
      fuVldVec_1_1 <= _in1ToN_io_out_1_valid;
      fuVldVec_2 <= fuVldVec_1_1;
      fuVld_en_reg_2 <= fuVld_en_2;
      fuVldVec_1_2 <= _in1ToN_io_out_2_valid;
      fuVldVec_2_1 <= fuVldVec_1_2;
      inPipe_2_1 <=
        io_in_valid
        & ~(io_in_valid & io_flush_valid
            & (io_flush_bits_level
               & {io_in_bits_robIdx_flag,
                  io_in_bits_robIdx_value} == _inPipe_flushVec_flushItself_T_10
               | io_in_bits_robIdx_flag ^ io_flush_bits_robIdx_flag
               ^ io_in_bits_robIdx_value > io_flush_bits_robIdx_value));
      inPipe_2_2 <=
        inPipe_2_1
        & ~(inPipe_2_1 & io_flush_valid
            & (io_flush_bits_level
               & {inPipe_1_1_robIdx_flag,
                  inPipe_1_1_robIdx_value} == _inPipe_flushVec_flushItself_T_10
               | inPipe_1_1_robIdx_flag ^ io_flush_bits_robIdx_flag
               ^ inPipe_1_1_robIdx_value > io_flush_bits_robIdx_value));
    end
  end // always @(posedge, posedge)
  always @(posedge clock) begin
    inPipe_1_1_fuOpType <= io_in_bits_fuOpType;
    inPipe_1_1_src_2 <= io_in_bits_src_2;
    inPipe_1_1_src_3 <= io_in_bits_src_3;
    inPipe_1_1_src_4 <= io_in_bits_src_4;
    inPipe_1_1_robIdx_flag <= io_in_bits_robIdx_flag;
    inPipe_1_1_robIdx_value <= io_in_bits_robIdx_value;
    inPipe_1_1_pdest <= io_in_bits_pdest;
    inPipe_1_1_rfWen <= io_in_bits_rfWen;
    inPipe_1_1_fpWen <= io_in_bits_fpWen;
    inPipe_1_1_vecWen <= io_in_bits_vecWen;
    inPipe_1_1_v0Wen <= io_in_bits_v0Wen;
    inPipe_1_1_fpu_wflags <= io_in_bits_fpu_wflags;
    inPipe_1_1_vpu_vma <= io_in_bits_vpu_vma;
    inPipe_1_1_vpu_vta <= io_in_bits_vpu_vta;
    inPipe_1_1_vpu_vsew <= io_in_bits_vpu_vsew;
    inPipe_1_1_vpu_vlmul <= io_in_bits_vpu_vlmul;
    inPipe_1_1_vpu_vm <= io_in_bits_vpu_vm;
    inPipe_1_1_vpu_vstart <= io_in_bits_vpu_vstart;
    inPipe_1_1_vpu_fpu_isFoldTo1_2 <= io_in_bits_vpu_fpu_isFoldTo1_2;
    inPipe_1_1_vpu_fpu_isFoldTo1_4 <= io_in_bits_vpu_fpu_isFoldTo1_4;
    inPipe_1_1_vpu_fpu_isFoldTo1_8 <= io_in_bits_vpu_fpu_isFoldTo1_8;
    inPipe_1_1_vpu_vuopIdx <= io_in_bits_vpu_vuopIdx;
    inPipe_1_1_vpu_lastUop <= io_in_bits_vpu_lastUop;
    inPipe_1_1_vpu_isNarrow <= io_in_bits_vpu_isNarrow;
    inPipe_1_1_vpu_isDstMask <= io_in_bits_vpu_isDstMask;
    inPipe_1_2_src_2 <= inPipe_1_1_src_2;
    inPipe_1_2_src_3 <= inPipe_1_1_src_3;
    inPipe_1_2_src_4 <= inPipe_1_1_src_4;
    inPipe_1_2_robIdx_flag <= inPipe_1_1_robIdx_flag;
    inPipe_1_2_robIdx_value <= inPipe_1_1_robIdx_value;
    inPipe_1_2_pdest <= inPipe_1_1_pdest;
    inPipe_1_2_rfWen <= inPipe_1_1_rfWen;
    inPipe_1_2_vecWen <= inPipe_1_1_vecWen;
    inPipe_1_2_v0Wen <= inPipe_1_1_v0Wen;
    inPipe_1_2_fpu_wflags <= inPipe_1_1_fpu_wflags;
    inPipe_1_2_vpu_vma <= inPipe_1_1_vpu_vma;
    inPipe_1_2_vpu_vta <= inPipe_1_1_vpu_vta;
    inPipe_1_2_vpu_vm <= inPipe_1_1_vpu_vm;
    inPipe_1_2_vpu_vstart <= inPipe_1_1_vpu_vstart;
    inPipe_1_2_vpu_vuopIdx <= inPipe_1_1_vpu_vuopIdx;
    inPipe_1_2_vpu_isDstMask <= inPipe_1_1_vpu_isDstMask;
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:80];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [6:0] i = 7'h0; i < 7'h51; i += 7'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        fuVld_en_reg = _RANDOM[7'h0][0];
        fuVldVec_1 = _RANDOM[7'h0][2];
        fuVld_en_reg_1 = _RANDOM[7'h0][3];
        fuVldVec_1_1 = _RANDOM[7'h0][5];
        fuVldVec_2 = _RANDOM[7'h0][6];
        fuVld_en_reg_2 = _RANDOM[7'h0][7];
        fuVldVec_1_2 = _RANDOM[7'h0][9];
        fuVldVec_2_1 = _RANDOM[7'h0][10];
        inPipe_2_1 = _RANDOM[7'h0][14];
        inPipe_2_2 = _RANDOM[7'h0][15];
        inPipe_1_1_fuOpType = _RANDOM[7'h1][27:19];
        inPipe_1_1_src_2 =
          {_RANDOM[7'h9][31:28],
           _RANDOM[7'hA],
           _RANDOM[7'hB],
           _RANDOM[7'hC],
           _RANDOM[7'hD][27:0]};
        inPipe_1_1_src_3 =
          {_RANDOM[7'hD][31:28],
           _RANDOM[7'hE],
           _RANDOM[7'hF],
           _RANDOM[7'h10],
           _RANDOM[7'h11][27:0]};
        inPipe_1_1_src_4 =
          {_RANDOM[7'h11][31:28],
           _RANDOM[7'h12],
           _RANDOM[7'h13],
           _RANDOM[7'h14],
           _RANDOM[7'h15][27:0]};
        inPipe_1_1_robIdx_flag = _RANDOM[7'h17][28];
        inPipe_1_1_robIdx_value = {_RANDOM[7'h17][31:29], _RANDOM[7'h18][4:0]};
        inPipe_1_1_pdest = _RANDOM[7'h18][17:10];
        inPipe_1_1_rfWen = _RANDOM[7'h18][18];
        inPipe_1_1_fpWen = _RANDOM[7'h18][19];
        inPipe_1_1_vecWen = _RANDOM[7'h18][20];
        inPipe_1_1_v0Wen = _RANDOM[7'h18][21];
        inPipe_1_1_fpu_wflags = _RANDOM[7'h18][25];
        inPipe_1_1_vpu_vma = _RANDOM[7'h19][2];
        inPipe_1_1_vpu_vta = _RANDOM[7'h19][3];
        inPipe_1_1_vpu_vsew = _RANDOM[7'h19][5:4];
        inPipe_1_1_vpu_vlmul = _RANDOM[7'h19][8:6];
        inPipe_1_1_vpu_vm = _RANDOM[7'h19][17];
        inPipe_1_1_vpu_vstart = _RANDOM[7'h19][25:18];
        inPipe_1_1_vpu_fpu_isFoldTo1_2 = _RANDOM[7'h1A][1];
        inPipe_1_1_vpu_fpu_isFoldTo1_4 = _RANDOM[7'h1A][2];
        inPipe_1_1_vpu_fpu_isFoldTo1_8 = _RANDOM[7'h1A][3];
        inPipe_1_1_vpu_vuopIdx = _RANDOM[7'h1A][12:6];
        inPipe_1_1_vpu_lastUop = _RANDOM[7'h1A][13];
        inPipe_1_1_vpu_isNarrow = _RANDOM[7'h1E][29];
        inPipe_1_1_vpu_isDstMask = _RANDOM[7'h1E][30];
        inPipe_1_2_src_2 =
          {_RANDOM[7'h3B][31:5],
           _RANDOM[7'h3C],
           _RANDOM[7'h3D],
           _RANDOM[7'h3E],
           _RANDOM[7'h3F][4:0]};
        inPipe_1_2_src_3 =
          {_RANDOM[7'h3F][31:5],
           _RANDOM[7'h40],
           _RANDOM[7'h41],
           _RANDOM[7'h42],
           _RANDOM[7'h43][4:0]};
        inPipe_1_2_src_4 =
          {_RANDOM[7'h43][31:5],
           _RANDOM[7'h44],
           _RANDOM[7'h45],
           _RANDOM[7'h46],
           _RANDOM[7'h47][4:0]};
        inPipe_1_2_robIdx_flag = _RANDOM[7'h49][5];
        inPipe_1_2_robIdx_value = _RANDOM[7'h49][13:6];
        inPipe_1_2_pdest = _RANDOM[7'h49][26:19];
        inPipe_1_2_rfWen = _RANDOM[7'h49][27];
        inPipe_1_2_vecWen = _RANDOM[7'h49][29];
        inPipe_1_2_v0Wen = _RANDOM[7'h49][30];
        inPipe_1_2_fpu_wflags = _RANDOM[7'h4A][2];
        inPipe_1_2_vpu_vma = _RANDOM[7'h4A][11];
        inPipe_1_2_vpu_vta = _RANDOM[7'h4A][12];
        inPipe_1_2_vpu_vm = _RANDOM[7'h4A][26];
        inPipe_1_2_vpu_vstart = {_RANDOM[7'h4A][31:27], _RANDOM[7'h4B][2:0]};
        inPipe_1_2_vpu_vuopIdx = _RANDOM[7'h4B][21:15];
        inPipe_1_2_vpu_isDstMask = _RANDOM[7'h50][7];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        fuVld_en_reg = 1'h0;
        fuVldVec_1 = 1'h0;
        fuVld_en_reg_1 = 1'h0;
        fuVldVec_1_1 = 1'h0;
        fuVldVec_2 = 1'h0;
        fuVld_en_reg_2 = 1'h0;
        fuVldVec_1_2 = 1'h0;
        fuVldVec_2_1 = 1'h0;
        inPipe_2_1 = 1'h0;
        inPipe_2_2 = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  VFAlu Vfalu (
    .clock                                     (_ClockGate_Q),
    .reset                                     (reset),
    .io_in_valid                               (_in1ToN_io_out_0_valid),
    .io_in_bits_ctrl_fuOpType                  (_in1ToN_io_out_0_bits_fuOpType),
    .io_in_bits_ctrl_vpu_vsew                  (_in1ToN_io_out_0_bits_vpu_vsew),
    .io_in_bits_ctrl_vpu_vlmul                 (_in1ToN_io_out_0_bits_vpu_vlmul),
    .io_in_bits_ctrl_vpu_vm                    (_in1ToN_io_out_0_bits_vpu_vm),
    .io_in_bits_ctrl_vpu_fpu_isFoldTo1_2
      (_in1ToN_io_out_0_bits_vpu_fpu_isFoldTo1_2),
    .io_in_bits_ctrl_vpu_fpu_isFoldTo1_4
      (_in1ToN_io_out_0_bits_vpu_fpu_isFoldTo1_4),
    .io_in_bits_ctrl_vpu_fpu_isFoldTo1_8
      (_in1ToN_io_out_0_bits_vpu_fpu_isFoldTo1_8),
    .io_in_bits_ctrl_vpu_vuopIdx               (_in1ToN_io_out_0_bits_vpu_vuopIdx),
    .io_in_bits_ctrlPipe_0_fuOpType            (io_in_bits_fuOpType),
    .io_in_bits_ctrlPipe_0_vpu_vsew            (io_in_bits_vpu_vsew),
    .io_in_bits_ctrlPipe_0_vpu_vlmul           (io_in_bits_vpu_vlmul),
    .io_in_bits_ctrlPipe_0_vpu_vuopIdx         (io_in_bits_vpu_vuopIdx),
    .io_in_bits_ctrlPipe_1_fuOpType            (inPipe_1_1_fuOpType),
    .io_in_bits_ctrlPipe_1_robIdx_flag         (inPipe_1_1_robIdx_flag),
    .io_in_bits_ctrlPipe_1_robIdx_value        (inPipe_1_1_robIdx_value),
    .io_in_bits_ctrlPipe_1_pdest               (inPipe_1_1_pdest),
    .io_in_bits_ctrlPipe_1_fpWen               (inPipe_1_1_fpWen),
    .io_in_bits_ctrlPipe_1_vecWen              (inPipe_1_1_vecWen),
    .io_in_bits_ctrlPipe_1_v0Wen               (inPipe_1_1_v0Wen),
    .io_in_bits_ctrlPipe_1_fpu_wflags          (inPipe_1_1_fpu_wflags),
    .io_in_bits_ctrlPipe_1_vpu_vma             (inPipe_1_1_vpu_vma),
    .io_in_bits_ctrlPipe_1_vpu_vta             (inPipe_1_1_vpu_vta),
    .io_in_bits_ctrlPipe_1_vpu_vsew            (inPipe_1_1_vpu_vsew),
    .io_in_bits_ctrlPipe_1_vpu_vlmul           (inPipe_1_1_vpu_vlmul),
    .io_in_bits_ctrlPipe_1_vpu_vm              (inPipe_1_1_vpu_vm),
    .io_in_bits_ctrlPipe_1_vpu_vstart          (inPipe_1_1_vpu_vstart),
    .io_in_bits_ctrlPipe_1_vpu_fpu_isFoldTo1_2 (inPipe_1_1_vpu_fpu_isFoldTo1_2),
    .io_in_bits_ctrlPipe_1_vpu_fpu_isFoldTo1_4 (inPipe_1_1_vpu_fpu_isFoldTo1_4),
    .io_in_bits_ctrlPipe_1_vpu_fpu_isFoldTo1_8 (inPipe_1_1_vpu_fpu_isFoldTo1_8),
    .io_in_bits_ctrlPipe_1_vpu_vuopIdx         (inPipe_1_1_vpu_vuopIdx),
    .io_in_bits_ctrlPipe_1_vpu_lastUop         (inPipe_1_1_vpu_lastUop),
    .io_in_bits_ctrlPipe_1_vpu_isNarrow        (inPipe_1_1_vpu_isNarrow),
    .io_in_bits_ctrlPipe_1_vpu_isDstMask       (inPipe_1_1_vpu_isDstMask),
    .io_in_bits_validPipe_1                    (inPipe_2_1),
    .io_in_bits_data_src_4                     (io_in_bits_src_4[7:0]),
    .io_in_bits_data_src_3                     (io_in_bits_src_3),
    .io_in_bits_data_src_1                     (io_in_bits_src_1),
    .io_in_bits_data_src_0                     (io_in_bits_src_0),
    .io_in_bits_dataPipe_0_src_4               (io_in_bits_src_4[7:0]),
    .io_in_bits_dataPipe_1_src_4               (inPipe_1_1_src_4[7:0]),
    .io_in_bits_dataPipe_1_src_3               (inPipe_1_1_src_3),
    .io_in_bits_dataPipe_1_src_2               (inPipe_1_1_src_2),
    .io_out_valid                              (_Vfalu_io_out_valid),
    .io_out_bits_ctrl_robIdx_flag              (_Vfalu_io_out_bits_ctrl_robIdx_flag),
    .io_out_bits_ctrl_robIdx_value             (_Vfalu_io_out_bits_ctrl_robIdx_value),
    .io_out_bits_ctrl_pdest                    (_Vfalu_io_out_bits_ctrl_pdest),
    .io_out_bits_ctrl_fpWen                    (_Vfalu_io_out_bits_ctrl_fpWen),
    .io_out_bits_ctrl_vecWen                   (_Vfalu_io_out_bits_ctrl_vecWen),
    .io_out_bits_ctrl_v0Wen                    (_Vfalu_io_out_bits_ctrl_v0Wen),
    .io_out_bits_ctrl_fpu_wflags               (_Vfalu_io_out_bits_ctrl_fpu_wflags),
    .io_out_bits_res_data                      (_Vfalu_io_out_bits_res_data),
    .io_out_bits_res_fflags                    (_Vfalu_io_out_bits_res_fflags),
    .io_frm                                    (io_frm)
  );
  VCVT_8 Vfcvt (
    .clock                               (_ClockGate_1_Q),
    .reset                               (reset),
    .io_in_valid                         (_in1ToN_io_out_1_valid),
    .io_in_bits_ctrl_fuOpType            (_in1ToN_io_out_1_bits_fuOpType),
    .io_in_bits_ctrl_vpu_vsew            (_in1ToN_io_out_1_bits_vpu_vsew),
    .io_in_bits_ctrl_vpu_vlmul           (_in1ToN_io_out_1_bits_vpu_vlmul),
    .io_in_bits_ctrl_vpu_vm              (_in1ToN_io_out_1_bits_vpu_vm),
    .io_in_bits_ctrl_vpu_vuopIdx         (_in1ToN_io_out_1_bits_vpu_vuopIdx),
    .io_in_bits_ctrlPipe_2_robIdx_flag   (inPipe_1_2_robIdx_flag),
    .io_in_bits_ctrlPipe_2_robIdx_value  (inPipe_1_2_robIdx_value),
    .io_in_bits_ctrlPipe_2_pdest         (inPipe_1_2_pdest),
    .io_in_bits_ctrlPipe_2_vecWen        (inPipe_1_2_vecWen),
    .io_in_bits_ctrlPipe_2_v0Wen         (inPipe_1_2_v0Wen),
    .io_in_bits_ctrlPipe_2_fpu_wflags    (inPipe_1_2_fpu_wflags),
    .io_in_bits_ctrlPipe_2_vpu_vma       (inPipe_1_2_vpu_vma),
    .io_in_bits_ctrlPipe_2_vpu_vta       (inPipe_1_2_vpu_vta),
    .io_in_bits_ctrlPipe_2_vpu_vm        (inPipe_1_2_vpu_vm),
    .io_in_bits_ctrlPipe_2_vpu_vstart    (inPipe_1_2_vpu_vstart),
    .io_in_bits_ctrlPipe_2_vpu_vuopIdx   (inPipe_1_2_vpu_vuopIdx),
    .io_in_bits_ctrlPipe_2_vpu_isDstMask (inPipe_1_2_vpu_isDstMask),
    .io_in_bits_validPipe_2              (inPipe_2_2),
    .io_in_bits_data_src_4               (io_in_bits_src_4[7:0]),
    .io_in_bits_data_src_3               (io_in_bits_src_3),
    .io_in_bits_data_src_1               (io_in_bits_src_1),
    .io_in_bits_dataPipe_2_src_4         (inPipe_1_2_src_4[7:0]),
    .io_in_bits_dataPipe_2_src_3         (inPipe_1_2_src_3),
    .io_in_bits_dataPipe_2_src_2         (inPipe_1_2_src_2),
    .io_out_valid                        (_Vfcvt_io_out_valid),
    .io_out_bits_ctrl_robIdx_flag        (_Vfcvt_io_out_bits_ctrl_robIdx_flag),
    .io_out_bits_ctrl_robIdx_value       (_Vfcvt_io_out_bits_ctrl_robIdx_value),
    .io_out_bits_ctrl_pdest              (_Vfcvt_io_out_bits_ctrl_pdest),
    .io_out_bits_ctrl_vecWen             (_Vfcvt_io_out_bits_ctrl_vecWen),
    .io_out_bits_ctrl_v0Wen              (_Vfcvt_io_out_bits_ctrl_v0Wen),
    .io_out_bits_ctrl_fpu_wflags         (_Vfcvt_io_out_bits_ctrl_fpu_wflags),
    .io_out_bits_res_data                (_Vfcvt_io_out_bits_res_data),
    .io_out_bits_res_fflags              (_Vfcvt_io_out_bits_res_fflags),
    .io_frm                              (io_frm)
  );
  VIPU Vipu (
    .clock                              (_ClockGate_2_Q),
    .reset                              (reset),
    .io_in_valid                        (_in1ToN_io_out_2_valid),
    .io_in_bits_ctrl_fuOpType           (_in1ToN_io_out_2_bits_fuOpType),
    .io_in_bits_ctrl_vpu_vma            (_in1ToN_io_out_2_bits_vpu_vma),
    .io_in_bits_ctrl_vpu_vta            (_in1ToN_io_out_2_bits_vpu_vta),
    .io_in_bits_ctrl_vpu_vsew           (_in1ToN_io_out_2_bits_vpu_vsew),
    .io_in_bits_ctrl_vpu_vlmul          (_in1ToN_io_out_2_bits_vpu_vlmul),
    .io_in_bits_ctrl_vpu_vm             (_in1ToN_io_out_2_bits_vpu_vm),
    .io_in_bits_ctrl_vpu_vstart         (_in1ToN_io_out_2_bits_vpu_vstart),
    .io_in_bits_ctrl_vpu_vuopIdx        (_in1ToN_io_out_2_bits_vpu_vuopIdx),
    .io_in_bits_ctrlPipe_2_robIdx_flag  (inPipe_1_2_robIdx_flag),
    .io_in_bits_ctrlPipe_2_robIdx_value (inPipe_1_2_robIdx_value),
    .io_in_bits_ctrlPipe_2_pdest        (inPipe_1_2_pdest),
    .io_in_bits_ctrlPipe_2_rfWen        (inPipe_1_2_rfWen),
    .io_in_bits_ctrlPipe_2_vecWen       (inPipe_1_2_vecWen),
    .io_in_bits_ctrlPipe_2_v0Wen        (inPipe_1_2_v0Wen),
    .io_in_bits_ctrlPipe_2_vpu_vstart   (inPipe_1_2_vpu_vstart),
    .io_in_bits_validPipe_2             (inPipe_2_2),
    .io_in_bits_data_src_4              (io_in_bits_src_4[7:0]),
    .io_in_bits_data_src_3              (io_in_bits_src_3),
    .io_in_bits_data_src_2              (io_in_bits_src_2),
    .io_in_bits_data_src_1              (io_in_bits_src_1),
    .io_in_bits_data_src_0              (io_in_bits_src_0),
    .io_out_valid                       (_Vipu_io_out_valid),
    .io_out_bits_ctrl_robIdx_flag       (_Vipu_io_out_bits_ctrl_robIdx_flag),
    .io_out_bits_ctrl_robIdx_value      (_Vipu_io_out_bits_ctrl_robIdx_value),
    .io_out_bits_ctrl_pdest             (_Vipu_io_out_bits_ctrl_pdest),
    .io_out_bits_ctrl_rfWen             (_Vipu_io_out_bits_ctrl_rfWen),
    .io_out_bits_ctrl_vecWen            (_Vipu_io_out_bits_ctrl_vecWen),
    .io_out_bits_ctrl_v0Wen             (_Vipu_io_out_bits_ctrl_v0Wen),
    .io_out_bits_ctrl_exceptionVec_2    (_Vipu_io_out_bits_ctrl_exceptionVec_2),
    .io_out_bits_res_data               (_Vipu_io_out_bits_res_data)
  );
  VSetRvfWvf VSetRvfWvf (
    .io_in_valid                   (_in1ToN_io_out_3_valid),
    .io_in_bits_ctrl_fuOpType      (_in1ToN_io_out_3_bits_fuOpType),
    .io_in_bits_ctrl_robIdx_flag   (_in1ToN_io_out_3_bits_robIdx_flag),
    .io_in_bits_ctrl_robIdx_value  (_in1ToN_io_out_3_bits_robIdx_value),
    .io_in_bits_ctrl_pdest         (_in1ToN_io_out_3_bits_pdest),
    .io_in_bits_ctrl_rfWen         (_in1ToN_io_out_3_bits_rfWen),
    .io_in_bits_ctrl_vlWen         (_in1ToN_io_out_3_bits_vlWen),
    .io_in_bits_data_src_4         (io_in_bits_src_4[7:0]),
    .io_in_bits_data_src_1         (io_in_bits_src_1),
    .io_out_valid                  (_VSetRvfWvf_io_out_valid),
    .io_out_bits_ctrl_robIdx_flag  (_VSetRvfWvf_io_out_bits_ctrl_robIdx_flag),
    .io_out_bits_ctrl_robIdx_value (_VSetRvfWvf_io_out_bits_ctrl_robIdx_value),
    .io_out_bits_ctrl_pdest        (_VSetRvfWvf_io_out_bits_ctrl_pdest),
    .io_out_bits_ctrl_rfWen        (_VSetRvfWvf_io_out_bits_ctrl_rfWen),
    .io_out_bits_ctrl_vlWen        (_VSetRvfWvf_io_out_bits_ctrl_vlWen),
    .io_out_bits_res_data          (_VSetRvfWvf_io_out_bits_res_data),
    .io_vtype_valid                (io_vtype_valid),
    .io_vtype_bits_illegal         (io_vtype_bits_illegal),
    .io_vtype_bits_vma             (io_vtype_bits_vma),
    .io_vtype_bits_vta             (io_vtype_bits_vta),
    .io_vtype_bits_vsew            (io_vtype_bits_vsew),
    .io_vtype_bits_vlmul           (io_vtype_bits_vlmul),
    .io_vlIsZero                   (io_vlIsZero),
    .io_vlIsVlmax                  (io_vlIsVlmax)
  );
  ClockGate ClockGate (
    .TE (1'h0),
    .E  (fuVld_en | fuVld_en_reg),
    .CK (clock),
    .Q  (_ClockGate_Q)
  );
  ClockGate ClockGate_1 (
    .TE (1'h0),
    .E  (fuVld_en_1 | fuVld_en_reg_1),
    .CK (clock),
    .Q  (_ClockGate_1_Q)
  );
  ClockGate ClockGate_2 (
    .TE (1'h0),
    .E  (fuVld_en_2 | fuVld_en_reg_2),
    .CK (clock),
    .Q  (_ClockGate_2_Q)
  );
  Dispatcher_14 in1ToN (
    .io_in_valid                       (io_in_valid),
    .io_in_bits_fuType                 (io_in_bits_fuType),
    .io_in_bits_fuOpType               (io_in_bits_fuOpType),
    .io_in_bits_robIdx_flag            (io_in_bits_robIdx_flag),
    .io_in_bits_robIdx_value           (io_in_bits_robIdx_value),
    .io_in_bits_pdest                  (io_in_bits_pdest),
    .io_in_bits_rfWen                  (io_in_bits_rfWen),
    .io_in_bits_vlWen                  (io_in_bits_vlWen),
    .io_in_bits_vpu_vma                (io_in_bits_vpu_vma),
    .io_in_bits_vpu_vta                (io_in_bits_vpu_vta),
    .io_in_bits_vpu_vsew               (io_in_bits_vpu_vsew),
    .io_in_bits_vpu_vlmul              (io_in_bits_vpu_vlmul),
    .io_in_bits_vpu_vm                 (io_in_bits_vpu_vm),
    .io_in_bits_vpu_vstart             (io_in_bits_vpu_vstart),
    .io_in_bits_vpu_fpu_isFoldTo1_2    (io_in_bits_vpu_fpu_isFoldTo1_2),
    .io_in_bits_vpu_fpu_isFoldTo1_4    (io_in_bits_vpu_fpu_isFoldTo1_4),
    .io_in_bits_vpu_fpu_isFoldTo1_8    (io_in_bits_vpu_fpu_isFoldTo1_8),
    .io_in_bits_vpu_vuopIdx            (io_in_bits_vpu_vuopIdx),
    .io_out_0_valid                    (_in1ToN_io_out_0_valid),
    .io_out_0_bits_fuOpType            (_in1ToN_io_out_0_bits_fuOpType),
    .io_out_0_bits_vpu_vsew            (_in1ToN_io_out_0_bits_vpu_vsew),
    .io_out_0_bits_vpu_vlmul           (_in1ToN_io_out_0_bits_vpu_vlmul),
    .io_out_0_bits_vpu_vm              (_in1ToN_io_out_0_bits_vpu_vm),
    .io_out_0_bits_vpu_fpu_isFoldTo1_2 (_in1ToN_io_out_0_bits_vpu_fpu_isFoldTo1_2),
    .io_out_0_bits_vpu_fpu_isFoldTo1_4 (_in1ToN_io_out_0_bits_vpu_fpu_isFoldTo1_4),
    .io_out_0_bits_vpu_fpu_isFoldTo1_8 (_in1ToN_io_out_0_bits_vpu_fpu_isFoldTo1_8),
    .io_out_0_bits_vpu_vuopIdx         (_in1ToN_io_out_0_bits_vpu_vuopIdx),
    .io_out_1_valid                    (_in1ToN_io_out_1_valid),
    .io_out_1_bits_fuOpType            (_in1ToN_io_out_1_bits_fuOpType),
    .io_out_1_bits_vpu_vsew            (_in1ToN_io_out_1_bits_vpu_vsew),
    .io_out_1_bits_vpu_vlmul           (_in1ToN_io_out_1_bits_vpu_vlmul),
    .io_out_1_bits_vpu_vm              (_in1ToN_io_out_1_bits_vpu_vm),
    .io_out_1_bits_vpu_vuopIdx         (_in1ToN_io_out_1_bits_vpu_vuopIdx),
    .io_out_2_valid                    (_in1ToN_io_out_2_valid),
    .io_out_2_bits_fuOpType            (_in1ToN_io_out_2_bits_fuOpType),
    .io_out_2_bits_vpu_vma             (_in1ToN_io_out_2_bits_vpu_vma),
    .io_out_2_bits_vpu_vta             (_in1ToN_io_out_2_bits_vpu_vta),
    .io_out_2_bits_vpu_vsew            (_in1ToN_io_out_2_bits_vpu_vsew),
    .io_out_2_bits_vpu_vlmul           (_in1ToN_io_out_2_bits_vpu_vlmul),
    .io_out_2_bits_vpu_vm              (_in1ToN_io_out_2_bits_vpu_vm),
    .io_out_2_bits_vpu_vstart          (_in1ToN_io_out_2_bits_vpu_vstart),
    .io_out_2_bits_vpu_vuopIdx         (_in1ToN_io_out_2_bits_vpu_vuopIdx),
    .io_out_3_valid                    (_in1ToN_io_out_3_valid),
    .io_out_3_bits_fuOpType            (_in1ToN_io_out_3_bits_fuOpType),
    .io_out_3_bits_robIdx_flag         (_in1ToN_io_out_3_bits_robIdx_flag),
    .io_out_3_bits_robIdx_value        (_in1ToN_io_out_3_bits_robIdx_value),
    .io_out_3_bits_pdest               (_in1ToN_io_out_3_bits_pdest),
    .io_out_3_bits_rfWen               (_in1ToN_io_out_3_bits_rfWen),
    .io_out_3_bits_vlWen               (_in1ToN_io_out_3_bits_vlWen)
  );
  assign io_out_valid =
    |{_Vfalu_io_out_valid,
      _Vfcvt_io_out_valid,
      _Vipu_io_out_valid,
      _VSetRvfWvf_io_out_valid};
  assign io_out_bits_data_1 =
    {_GEN[127:64],
     _GEN[63:0] | (_VSetRvfWvf_io_out_valid ? _VSetRvfWvf_io_out_bits_res_data : 64'h0)};
  assign io_out_bits_data_2 = _Vfalu_io_out_bits_res_data;
  assign io_out_bits_data_3 = io_out_bits_data_4_0;
  assign io_out_bits_data_4 = io_out_bits_data_4_0;
  assign io_out_bits_data_5 = {64'h0, _VSetRvfWvf_io_out_bits_res_data};
  assign io_out_bits_pdest =
    (_Vfalu_io_out_valid ? _Vfalu_io_out_bits_ctrl_pdest : 8'h0)
    | (_Vfcvt_io_out_valid ? _Vfcvt_io_out_bits_ctrl_pdest : 8'h0)
    | (_Vipu_io_out_valid ? _Vipu_io_out_bits_ctrl_pdest : 8'h0)
    | (_VSetRvfWvf_io_out_valid ? _VSetRvfWvf_io_out_bits_ctrl_pdest : 8'h0);
  assign io_out_bits_robIdx_flag =
    _Vfalu_io_out_valid & _Vfalu_io_out_bits_ctrl_robIdx_flag | _Vfcvt_io_out_valid
    & _Vfcvt_io_out_bits_ctrl_robIdx_flag | _Vipu_io_out_valid
    & _Vipu_io_out_bits_ctrl_robIdx_flag | _VSetRvfWvf_io_out_valid
    & _VSetRvfWvf_io_out_bits_ctrl_robIdx_flag;
  assign io_out_bits_robIdx_value =
    (_Vfalu_io_out_valid ? _Vfalu_io_out_bits_ctrl_robIdx_value : 8'h0)
    | (_Vfcvt_io_out_valid ? _Vfcvt_io_out_bits_ctrl_robIdx_value : 8'h0)
    | (_Vipu_io_out_valid ? _Vipu_io_out_bits_ctrl_robIdx_value : 8'h0)
    | (_VSetRvfWvf_io_out_valid ? _VSetRvfWvf_io_out_bits_ctrl_robIdx_value : 8'h0);
  assign io_out_bits_intWen =
    _Vipu_io_out_valid & _Vipu_io_out_bits_ctrl_rfWen | _VSetRvfWvf_io_out_valid
    & _VSetRvfWvf_io_out_bits_ctrl_rfWen;
  assign io_out_bits_fpWen = _Vfalu_io_out_valid & _Vfalu_io_out_bits_ctrl_fpWen;
  assign io_out_bits_vecWen =
    _Vfalu_io_out_valid & _Vfalu_io_out_bits_ctrl_vecWen | _Vfcvt_io_out_valid
    & _Vfcvt_io_out_bits_ctrl_vecWen | _Vipu_io_out_valid & _Vipu_io_out_bits_ctrl_vecWen;
  assign io_out_bits_v0Wen =
    _Vfalu_io_out_valid & _Vfalu_io_out_bits_ctrl_v0Wen | _Vfcvt_io_out_valid
    & _Vfcvt_io_out_bits_ctrl_v0Wen | _Vipu_io_out_valid & _Vipu_io_out_bits_ctrl_v0Wen;
  assign io_out_bits_vlWen =
    _VSetRvfWvf_io_out_valid & _VSetRvfWvf_io_out_bits_ctrl_vlWen;
  assign io_out_bits_fflags =
    (_Vfalu_io_out_valid ? _Vfalu_io_out_bits_res_fflags : 5'h0)
    | (_Vfcvt_io_out_valid ? _Vfcvt_io_out_bits_res_fflags : 5'h0);
  assign io_out_bits_wflags =
    _Vfalu_io_out_valid & _Vfalu_io_out_bits_ctrl_fpu_wflags | _Vfcvt_io_out_valid
    & _Vfcvt_io_out_bits_ctrl_fpu_wflags;
  assign io_out_bits_exceptionVec_2 =
    _Vipu_io_out_valid & _Vipu_io_out_bits_ctrl_exceptionVec_2;
endmodule

