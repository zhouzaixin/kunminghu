// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module ExceptionGen(
  input         clock,
  input         reset,
  input         io_redirect_valid,
  input         io_redirect_bits_robIdx_flag,
  input  [7:0]  io_redirect_bits_robIdx_value,
  input         io_redirect_bits_level,
  input         io_flush,
  input         io_enq_0_valid,
  input         io_enq_0_bits_robIdx_flag,
  input  [7:0]  io_enq_0_bits_robIdx_value,
  input  [5:0]  io_enq_0_bits_ftqPtr_value,
  input  [3:0]  io_enq_0_bits_ftqOffset,
  input         io_enq_0_bits_hasException,
  input         io_enq_0_bits_exceptionVec_0,
  input         io_enq_0_bits_exceptionVec_1,
  input         io_enq_0_bits_exceptionVec_2,
  input         io_enq_0_bits_exceptionVec_3,
  input         io_enq_0_bits_exceptionVec_12,
  input         io_enq_0_bits_exceptionVec_20,
  input         io_enq_0_bits_exceptionVec_22,
  input         io_enq_0_bits_isFetchMalAddr,
  input         io_enq_0_bits_flushPipe,
  input         io_enq_0_bits_singleStep,
  input         io_enq_0_bits_crossPageIPFFix,
  input  [3:0]  io_enq_0_bits_trigger,
  input         io_enq_1_valid,
  input         io_enq_1_bits_robIdx_flag,
  input  [7:0]  io_enq_1_bits_robIdx_value,
  input  [5:0]  io_enq_1_bits_ftqPtr_value,
  input  [3:0]  io_enq_1_bits_ftqOffset,
  input         io_enq_1_bits_hasException,
  input         io_enq_1_bits_exceptionVec_0,
  input         io_enq_1_bits_exceptionVec_1,
  input         io_enq_1_bits_exceptionVec_2,
  input         io_enq_1_bits_exceptionVec_3,
  input         io_enq_1_bits_exceptionVec_12,
  input         io_enq_1_bits_exceptionVec_20,
  input         io_enq_1_bits_exceptionVec_22,
  input         io_enq_1_bits_isFetchMalAddr,
  input         io_enq_1_bits_flushPipe,
  input         io_enq_1_bits_singleStep,
  input         io_enq_1_bits_crossPageIPFFix,
  input  [3:0]  io_enq_1_bits_trigger,
  input         io_enq_2_valid,
  input         io_enq_2_bits_robIdx_flag,
  input  [7:0]  io_enq_2_bits_robIdx_value,
  input  [5:0]  io_enq_2_bits_ftqPtr_value,
  input  [3:0]  io_enq_2_bits_ftqOffset,
  input         io_enq_2_bits_hasException,
  input         io_enq_2_bits_exceptionVec_0,
  input         io_enq_2_bits_exceptionVec_1,
  input         io_enq_2_bits_exceptionVec_2,
  input         io_enq_2_bits_exceptionVec_3,
  input         io_enq_2_bits_exceptionVec_12,
  input         io_enq_2_bits_exceptionVec_20,
  input         io_enq_2_bits_exceptionVec_22,
  input         io_enq_2_bits_isFetchMalAddr,
  input         io_enq_2_bits_flushPipe,
  input         io_enq_2_bits_singleStep,
  input         io_enq_2_bits_crossPageIPFFix,
  input  [3:0]  io_enq_2_bits_trigger,
  input         io_enq_3_valid,
  input         io_enq_3_bits_robIdx_flag,
  input  [7:0]  io_enq_3_bits_robIdx_value,
  input  [5:0]  io_enq_3_bits_ftqPtr_value,
  input  [3:0]  io_enq_3_bits_ftqOffset,
  input         io_enq_3_bits_hasException,
  input         io_enq_3_bits_exceptionVec_0,
  input         io_enq_3_bits_exceptionVec_1,
  input         io_enq_3_bits_exceptionVec_2,
  input         io_enq_3_bits_exceptionVec_3,
  input         io_enq_3_bits_exceptionVec_12,
  input         io_enq_3_bits_exceptionVec_20,
  input         io_enq_3_bits_exceptionVec_22,
  input         io_enq_3_bits_isFetchMalAddr,
  input         io_enq_3_bits_flushPipe,
  input         io_enq_3_bits_singleStep,
  input         io_enq_3_bits_crossPageIPFFix,
  input  [3:0]  io_enq_3_bits_trigger,
  input         io_enq_4_valid,
  input         io_enq_4_bits_robIdx_flag,
  input  [7:0]  io_enq_4_bits_robIdx_value,
  input  [5:0]  io_enq_4_bits_ftqPtr_value,
  input  [3:0]  io_enq_4_bits_ftqOffset,
  input         io_enq_4_bits_hasException,
  input         io_enq_4_bits_exceptionVec_0,
  input         io_enq_4_bits_exceptionVec_1,
  input         io_enq_4_bits_exceptionVec_2,
  input         io_enq_4_bits_exceptionVec_3,
  input         io_enq_4_bits_exceptionVec_12,
  input         io_enq_4_bits_exceptionVec_20,
  input         io_enq_4_bits_exceptionVec_22,
  input         io_enq_4_bits_isFetchMalAddr,
  input         io_enq_4_bits_flushPipe,
  input         io_enq_4_bits_singleStep,
  input         io_enq_4_bits_crossPageIPFFix,
  input  [3:0]  io_enq_4_bits_trigger,
  input         io_enq_5_valid,
  input         io_enq_5_bits_robIdx_flag,
  input  [7:0]  io_enq_5_bits_robIdx_value,
  input  [5:0]  io_enq_5_bits_ftqPtr_value,
  input  [3:0]  io_enq_5_bits_ftqOffset,
  input         io_enq_5_bits_hasException,
  input         io_enq_5_bits_exceptionVec_0,
  input         io_enq_5_bits_exceptionVec_1,
  input         io_enq_5_bits_exceptionVec_2,
  input         io_enq_5_bits_exceptionVec_3,
  input         io_enq_5_bits_exceptionVec_12,
  input         io_enq_5_bits_exceptionVec_20,
  input         io_enq_5_bits_exceptionVec_22,
  input         io_enq_5_bits_isFetchMalAddr,
  input         io_enq_5_bits_flushPipe,
  input         io_enq_5_bits_singleStep,
  input         io_enq_5_bits_crossPageIPFFix,
  input  [3:0]  io_enq_5_bits_trigger,
  input         io_wb_0_valid,
  input         io_wb_0_bits_robIdx_flag,
  input  [7:0]  io_wb_0_bits_robIdx_value,
  input         io_wb_0_bits_hasException,
  input         io_wb_0_bits_exceptionVec_2,
  input         io_wb_0_bits_exceptionVec_3,
  input         io_wb_0_bits_exceptionVec_8,
  input         io_wb_0_bits_exceptionVec_9,
  input         io_wb_0_bits_exceptionVec_10,
  input         io_wb_0_bits_exceptionVec_11,
  input         io_wb_0_bits_exceptionVec_22,
  input         io_wb_0_bits_flushPipe,
  input         io_wb_1_valid,
  input         io_wb_1_bits_robIdx_flag,
  input  [7:0]  io_wb_1_bits_robIdx_value,
  input         io_wb_1_bits_hasException,
  input         io_wb_1_bits_exceptionVec_2,
  input         io_wb_2_valid,
  input         io_wb_2_bits_robIdx_flag,
  input  [7:0]  io_wb_2_bits_robIdx_value,
  input         io_wb_2_bits_hasException,
  input         io_wb_2_bits_exceptionVec_2,
  input         io_wb_3_bits_robIdx_flag,
  input  [7:0]  io_wb_3_bits_robIdx_value,
  input         io_wb_4_bits_robIdx_flag,
  input  [7:0]  io_wb_4_bits_robIdx_value,
  input         io_wb_5_bits_robIdx_flag,
  input  [7:0]  io_wb_5_bits_robIdx_value,
  input         io_wb_6_valid,
  input         io_wb_6_bits_robIdx_flag,
  input  [7:0]  io_wb_6_bits_robIdx_value,
  input         io_wb_6_bits_hasException,
  input         io_wb_6_bits_exceptionVec_0,
  input         io_wb_6_bits_exceptionVec_1,
  input         io_wb_6_bits_exceptionVec_2,
  input         io_wb_6_bits_exceptionVec_3,
  input         io_wb_6_bits_exceptionVec_4,
  input         io_wb_6_bits_exceptionVec_5,
  input         io_wb_6_bits_exceptionVec_6,
  input         io_wb_6_bits_exceptionVec_7,
  input         io_wb_6_bits_exceptionVec_8,
  input         io_wb_6_bits_exceptionVec_9,
  input         io_wb_6_bits_exceptionVec_10,
  input         io_wb_6_bits_exceptionVec_11,
  input         io_wb_6_bits_exceptionVec_12,
  input         io_wb_6_bits_exceptionVec_13,
  input         io_wb_6_bits_exceptionVec_14,
  input         io_wb_6_bits_exceptionVec_15,
  input         io_wb_6_bits_exceptionVec_16,
  input         io_wb_6_bits_exceptionVec_17,
  input         io_wb_6_bits_exceptionVec_18,
  input         io_wb_6_bits_exceptionVec_19,
  input         io_wb_6_bits_exceptionVec_20,
  input         io_wb_6_bits_exceptionVec_21,
  input         io_wb_6_bits_exceptionVec_22,
  input         io_wb_6_bits_exceptionVec_23,
  input         io_wb_6_bits_flushPipe,
  input  [3:0]  io_wb_6_bits_trigger,
  input         io_wb_7_valid,
  input         io_wb_7_bits_robIdx_flag,
  input  [7:0]  io_wb_7_bits_robIdx_value,
  input         io_wb_7_bits_hasException,
  input         io_wb_7_bits_exceptionVec_3,
  input         io_wb_7_bits_exceptionVec_6,
  input         io_wb_7_bits_exceptionVec_7,
  input         io_wb_7_bits_exceptionVec_15,
  input         io_wb_7_bits_exceptionVec_23,
  input  [3:0]  io_wb_7_bits_trigger,
  input         io_wb_8_valid,
  input         io_wb_8_bits_robIdx_flag,
  input  [7:0]  io_wb_8_bits_robIdx_value,
  input         io_wb_8_bits_hasException,
  input         io_wb_8_bits_exceptionVec_0,
  input         io_wb_8_bits_exceptionVec_1,
  input         io_wb_8_bits_exceptionVec_2,
  input         io_wb_8_bits_exceptionVec_3,
  input         io_wb_8_bits_exceptionVec_4,
  input         io_wb_8_bits_exceptionVec_5,
  input         io_wb_8_bits_exceptionVec_6,
  input         io_wb_8_bits_exceptionVec_7,
  input         io_wb_8_bits_exceptionVec_8,
  input         io_wb_8_bits_exceptionVec_9,
  input         io_wb_8_bits_exceptionVec_10,
  input         io_wb_8_bits_exceptionVec_11,
  input         io_wb_8_bits_exceptionVec_12,
  input         io_wb_8_bits_exceptionVec_13,
  input         io_wb_8_bits_exceptionVec_14,
  input         io_wb_8_bits_exceptionVec_15,
  input         io_wb_8_bits_exceptionVec_16,
  input         io_wb_8_bits_exceptionVec_17,
  input         io_wb_8_bits_exceptionVec_18,
  input         io_wb_8_bits_exceptionVec_19,
  input         io_wb_8_bits_exceptionVec_20,
  input         io_wb_8_bits_exceptionVec_21,
  input         io_wb_8_bits_exceptionVec_22,
  input         io_wb_8_bits_exceptionVec_23,
  input         io_wb_8_bits_flushPipe,
  input         io_wb_8_bits_replayInst,
  input  [3:0]  io_wb_8_bits_trigger,
  input         io_wb_9_valid,
  input         io_wb_9_bits_robIdx_flag,
  input  [7:0]  io_wb_9_bits_robIdx_value,
  input         io_wb_9_bits_hasException,
  input         io_wb_9_bits_exceptionVec_3,
  input         io_wb_9_bits_exceptionVec_4,
  input         io_wb_9_bits_exceptionVec_5,
  input         io_wb_9_bits_exceptionVec_13,
  input         io_wb_9_bits_exceptionVec_19,
  input         io_wb_9_bits_exceptionVec_21,
  input         io_wb_9_bits_flushPipe,
  input         io_wb_9_bits_replayInst,
  input  [3:0]  io_wb_9_bits_trigger,
  input         io_wb_10_valid,
  input         io_wb_10_bits_robIdx_flag,
  input  [7:0]  io_wb_10_bits_robIdx_value,
  input         io_wb_10_bits_hasException,
  input         io_wb_10_bits_exceptionVec_3,
  input         io_wb_10_bits_exceptionVec_4,
  input         io_wb_10_bits_exceptionVec_5,
  input         io_wb_10_bits_exceptionVec_13,
  input         io_wb_10_bits_exceptionVec_19,
  input         io_wb_10_bits_exceptionVec_21,
  input         io_wb_10_bits_flushPipe,
  input         io_wb_10_bits_replayInst,
  input  [3:0]  io_wb_10_bits_trigger,
  input         io_wb_11_valid,
  input         io_wb_11_bits_robIdx_flag,
  input  [7:0]  io_wb_11_bits_robIdx_value,
  input         io_wb_11_bits_hasException,
  input         io_wb_11_bits_exceptionVec_0,
  input         io_wb_11_bits_exceptionVec_1,
  input         io_wb_11_bits_exceptionVec_2,
  input         io_wb_11_bits_exceptionVec_3,
  input         io_wb_11_bits_exceptionVec_4,
  input         io_wb_11_bits_exceptionVec_5,
  input         io_wb_11_bits_exceptionVec_6,
  input         io_wb_11_bits_exceptionVec_7,
  input         io_wb_11_bits_exceptionVec_8,
  input         io_wb_11_bits_exceptionVec_9,
  input         io_wb_11_bits_exceptionVec_10,
  input         io_wb_11_bits_exceptionVec_11,
  input         io_wb_11_bits_exceptionVec_12,
  input         io_wb_11_bits_exceptionVec_13,
  input         io_wb_11_bits_exceptionVec_14,
  input         io_wb_11_bits_exceptionVec_15,
  input         io_wb_11_bits_exceptionVec_16,
  input         io_wb_11_bits_exceptionVec_17,
  input         io_wb_11_bits_exceptionVec_18,
  input         io_wb_11_bits_exceptionVec_19,
  input         io_wb_11_bits_exceptionVec_20,
  input         io_wb_11_bits_exceptionVec_21,
  input         io_wb_11_bits_exceptionVec_22,
  input         io_wb_11_bits_exceptionVec_23,
  input         io_wb_11_bits_flushPipe,
  input         io_wb_11_bits_replayInst,
  input  [3:0]  io_wb_11_bits_trigger,
  input         io_wb_11_bits_vstartEn,
  input  [63:0] io_wb_11_bits_vstart,
  input  [6:0]  io_wb_11_bits_vuopIdx,
  input         io_wb_11_bits_isVecLoad,
  input         io_wb_11_bits_isVlm,
  input         io_wb_11_bits_isStrided,
  input         io_wb_11_bits_isIndexed,
  input         io_wb_11_bits_isWhole,
  input  [2:0]  io_wb_11_bits_nf,
  input  [1:0]  io_wb_11_bits_vsew,
  input  [1:0]  io_wb_11_bits_veew,
  input  [2:0]  io_wb_11_bits_vlmul,
  input         io_wb_12_valid,
  input         io_wb_12_bits_robIdx_flag,
  input  [7:0]  io_wb_12_bits_robIdx_value,
  input         io_wb_12_bits_hasException,
  input         io_wb_12_bits_exceptionVec_3,
  input         io_wb_12_bits_exceptionVec_4,
  input         io_wb_12_bits_exceptionVec_5,
  input         io_wb_12_bits_exceptionVec_6,
  input         io_wb_12_bits_exceptionVec_7,
  input         io_wb_12_bits_exceptionVec_13,
  input         io_wb_12_bits_exceptionVec_15,
  input         io_wb_12_bits_exceptionVec_21,
  input         io_wb_12_bits_exceptionVec_23,
  input         io_wb_12_bits_flushPipe,
  input         io_wb_12_bits_replayInst,
  input  [3:0]  io_wb_12_bits_trigger,
  input         io_wb_12_bits_vstartEn,
  input  [63:0] io_wb_12_bits_vstart,
  input  [6:0]  io_wb_12_bits_vuopIdx,
  input         io_wb_12_bits_isVecLoad,
  input         io_wb_12_bits_isVlm,
  input         io_wb_12_bits_isStrided,
  input         io_wb_12_bits_isIndexed,
  input         io_wb_12_bits_isWhole,
  input  [2:0]  io_wb_12_bits_nf,
  input  [1:0]  io_wb_12_bits_vsew,
  input  [1:0]  io_wb_12_bits_veew,
  input  [2:0]  io_wb_12_bits_vlmul,
  output        io_state_valid,
  output        io_state_bits_robIdx_flag,
  output [7:0]  io_state_bits_robIdx_value,
  output [5:0]  io_state_bits_ftqPtr_value,
  output [3:0]  io_state_bits_ftqOffset,
  output        io_state_bits_hasException,
  output        io_state_bits_isEnqExcp,
  output        io_state_bits_exceptionVec_0,
  output        io_state_bits_exceptionVec_1,
  output        io_state_bits_exceptionVec_2,
  output        io_state_bits_exceptionVec_3,
  output        io_state_bits_exceptionVec_4,
  output        io_state_bits_exceptionVec_5,
  output        io_state_bits_exceptionVec_6,
  output        io_state_bits_exceptionVec_7,
  output        io_state_bits_exceptionVec_8,
  output        io_state_bits_exceptionVec_9,
  output        io_state_bits_exceptionVec_10,
  output        io_state_bits_exceptionVec_11,
  output        io_state_bits_exceptionVec_12,
  output        io_state_bits_exceptionVec_13,
  output        io_state_bits_exceptionVec_14,
  output        io_state_bits_exceptionVec_15,
  output        io_state_bits_exceptionVec_16,
  output        io_state_bits_exceptionVec_17,
  output        io_state_bits_exceptionVec_18,
  output        io_state_bits_exceptionVec_19,
  output        io_state_bits_exceptionVec_20,
  output        io_state_bits_exceptionVec_21,
  output        io_state_bits_exceptionVec_22,
  output        io_state_bits_exceptionVec_23,
  output        io_state_bits_isFetchMalAddr,
  output        io_state_bits_flushPipe,
  output        io_state_bits_replayInst,
  output        io_state_bits_singleStep,
  output        io_state_bits_crossPageIPFFix,
  output [3:0]  io_state_bits_trigger,
  output        io_state_bits_vstartEn,
  output [63:0] io_state_bits_vstart,
  output        io_state_bits_isVecLoad,
  output        io_state_bits_isVlm,
  output        io_state_bits_isStrided,
  output        io_state_bits_isIndexed,
  output        io_state_bits_isWhole,
  output [2:0]  io_state_bits_nf,
  output [1:0]  io_state_bits_vsew,
  output [1:0]  io_state_bits_veew,
  output [2:0]  io_state_bits_vlmul
);

  reg         currentValid;
  reg         current_robIdx_flag;
  reg  [7:0]  current_robIdx_value;
  reg  [5:0]  current_ftqPtr_value;
  reg  [3:0]  current_ftqOffset;
  reg         current_hasException;
  reg         current_isEnqExcp;
  reg         current_exceptionVec_0;
  reg         current_exceptionVec_1;
  reg         current_exceptionVec_2;
  reg         current_exceptionVec_3;
  reg         current_exceptionVec_4;
  reg         current_exceptionVec_5;
  reg         current_exceptionVec_6;
  reg         current_exceptionVec_7;
  reg         current_exceptionVec_8;
  reg         current_exceptionVec_9;
  reg         current_exceptionVec_10;
  reg         current_exceptionVec_11;
  reg         current_exceptionVec_12;
  reg         current_exceptionVec_13;
  reg         current_exceptionVec_14;
  reg         current_exceptionVec_15;
  reg         current_exceptionVec_16;
  reg         current_exceptionVec_17;
  reg         current_exceptionVec_18;
  reg         current_exceptionVec_19;
  reg         current_exceptionVec_20;
  reg         current_exceptionVec_21;
  reg         current_exceptionVec_22;
  reg         current_exceptionVec_23;
  reg         current_isFetchMalAddr;
  reg         current_flushPipe;
  reg         current_replayInst;
  reg         current_singleStep;
  reg         current_crossPageIPFFix;
  reg  [3:0]  current_trigger;
  reg         current_vstartEn;
  reg  [63:0] current_vstart;
  reg         current_isVecLoad;
  reg         current_isVlm;
  reg         current_isStrided;
  reg         current_isIndexed;
  reg         current_isWhole;
  reg  [2:0]  current_nf;
  reg  [1:0]  current_vsew;
  reg  [1:0]  current_veew;
  reg  [2:0]  current_vlmul;
  reg         lastCycleFlush;
  wire [8:0]  _s1_flush_flushItself_T_2 =
    {io_redirect_bits_robIdx_flag, io_redirect_bits_robIdx_value};
  reg         s0_out_valid_0;
  reg         s0_out_valid_1;
  reg         s0_out_valid_2;
  reg         s0_out_valid_3;
  reg         s0_out_valid_4;
  reg         s0_out_bits_0_robIdx_flag;
  reg  [7:0]  s0_out_bits_0_robIdx_value;
  reg         s0_out_bits_0_hasException;
  reg         s0_out_bits_0_exceptionVec_0;
  reg         s0_out_bits_0_exceptionVec_1;
  reg         s0_out_bits_0_exceptionVec_2;
  reg         s0_out_bits_0_exceptionVec_3;
  reg         s0_out_bits_0_exceptionVec_4;
  reg         s0_out_bits_0_exceptionVec_5;
  reg         s0_out_bits_0_exceptionVec_6;
  reg         s0_out_bits_0_exceptionVec_7;
  reg         s0_out_bits_0_exceptionVec_8;
  reg         s0_out_bits_0_exceptionVec_9;
  reg         s0_out_bits_0_exceptionVec_10;
  reg         s0_out_bits_0_exceptionVec_11;
  reg         s0_out_bits_0_exceptionVec_12;
  reg         s0_out_bits_0_exceptionVec_13;
  reg         s0_out_bits_0_exceptionVec_14;
  reg         s0_out_bits_0_exceptionVec_15;
  reg         s0_out_bits_0_exceptionVec_16;
  reg         s0_out_bits_0_exceptionVec_17;
  reg         s0_out_bits_0_exceptionVec_18;
  reg         s0_out_bits_0_exceptionVec_19;
  reg         s0_out_bits_0_exceptionVec_20;
  reg         s0_out_bits_0_exceptionVec_21;
  reg         s0_out_bits_0_exceptionVec_22;
  reg         s0_out_bits_0_exceptionVec_23;
  reg         s0_out_bits_0_flushPipe;
  reg         s0_out_bits_1_robIdx_flag;
  reg  [7:0]  s0_out_bits_1_robIdx_value;
  reg         s0_out_bits_1_hasException;
  reg         s0_out_bits_1_exceptionVec_0;
  reg         s0_out_bits_1_exceptionVec_1;
  reg         s0_out_bits_1_exceptionVec_2;
  reg         s0_out_bits_1_exceptionVec_3;
  reg         s0_out_bits_1_exceptionVec_4;
  reg         s0_out_bits_1_exceptionVec_5;
  reg         s0_out_bits_1_exceptionVec_6;
  reg         s0_out_bits_1_exceptionVec_7;
  reg         s0_out_bits_1_exceptionVec_8;
  reg         s0_out_bits_1_exceptionVec_9;
  reg         s0_out_bits_1_exceptionVec_10;
  reg         s0_out_bits_1_exceptionVec_11;
  reg         s0_out_bits_1_exceptionVec_12;
  reg         s0_out_bits_1_exceptionVec_13;
  reg         s0_out_bits_1_exceptionVec_14;
  reg         s0_out_bits_1_exceptionVec_15;
  reg         s0_out_bits_1_exceptionVec_16;
  reg         s0_out_bits_1_exceptionVec_17;
  reg         s0_out_bits_1_exceptionVec_18;
  reg         s0_out_bits_1_exceptionVec_19;
  reg         s0_out_bits_1_exceptionVec_20;
  reg         s0_out_bits_1_exceptionVec_21;
  reg         s0_out_bits_1_exceptionVec_22;
  reg         s0_out_bits_1_exceptionVec_23;
  reg         s0_out_bits_1_flushPipe;
  reg         s0_out_bits_1_replayInst;
  reg  [3:0]  s0_out_bits_1_trigger;
  reg         s0_out_bits_2_robIdx_flag;
  reg  [7:0]  s0_out_bits_2_robIdx_value;
  reg         s0_out_bits_2_hasException;
  reg         s0_out_bits_2_exceptionVec_0;
  reg         s0_out_bits_2_exceptionVec_1;
  reg         s0_out_bits_2_exceptionVec_2;
  reg         s0_out_bits_2_exceptionVec_3;
  reg         s0_out_bits_2_exceptionVec_4;
  reg         s0_out_bits_2_exceptionVec_5;
  reg         s0_out_bits_2_exceptionVec_6;
  reg         s0_out_bits_2_exceptionVec_7;
  reg         s0_out_bits_2_exceptionVec_8;
  reg         s0_out_bits_2_exceptionVec_9;
  reg         s0_out_bits_2_exceptionVec_10;
  reg         s0_out_bits_2_exceptionVec_11;
  reg         s0_out_bits_2_exceptionVec_12;
  reg         s0_out_bits_2_exceptionVec_13;
  reg         s0_out_bits_2_exceptionVec_14;
  reg         s0_out_bits_2_exceptionVec_15;
  reg         s0_out_bits_2_exceptionVec_16;
  reg         s0_out_bits_2_exceptionVec_17;
  reg         s0_out_bits_2_exceptionVec_18;
  reg         s0_out_bits_2_exceptionVec_19;
  reg         s0_out_bits_2_exceptionVec_20;
  reg         s0_out_bits_2_exceptionVec_21;
  reg         s0_out_bits_2_exceptionVec_22;
  reg         s0_out_bits_2_exceptionVec_23;
  reg         s0_out_bits_2_flushPipe;
  reg  [3:0]  s0_out_bits_2_trigger;
  reg         s0_out_bits_3_robIdx_flag;
  reg  [7:0]  s0_out_bits_3_robIdx_value;
  reg         s0_out_bits_3_hasException;
  reg         s0_out_bits_3_exceptionVec_0;
  reg         s0_out_bits_3_exceptionVec_1;
  reg         s0_out_bits_3_exceptionVec_2;
  reg         s0_out_bits_3_exceptionVec_3;
  reg         s0_out_bits_3_exceptionVec_4;
  reg         s0_out_bits_3_exceptionVec_5;
  reg         s0_out_bits_3_exceptionVec_6;
  reg         s0_out_bits_3_exceptionVec_7;
  reg         s0_out_bits_3_exceptionVec_8;
  reg         s0_out_bits_3_exceptionVec_9;
  reg         s0_out_bits_3_exceptionVec_10;
  reg         s0_out_bits_3_exceptionVec_11;
  reg         s0_out_bits_3_exceptionVec_12;
  reg         s0_out_bits_3_exceptionVec_13;
  reg         s0_out_bits_3_exceptionVec_14;
  reg         s0_out_bits_3_exceptionVec_15;
  reg         s0_out_bits_3_exceptionVec_16;
  reg         s0_out_bits_3_exceptionVec_17;
  reg         s0_out_bits_3_exceptionVec_18;
  reg         s0_out_bits_3_exceptionVec_19;
  reg         s0_out_bits_3_exceptionVec_20;
  reg         s0_out_bits_3_exceptionVec_21;
  reg         s0_out_bits_3_exceptionVec_22;
  reg         s0_out_bits_3_exceptionVec_23;
  reg         s0_out_bits_4_robIdx_flag;
  reg  [7:0]  s0_out_bits_4_robIdx_value;
  reg         s0_out_bits_4_hasException;
  reg         s0_out_bits_4_exceptionVec_0;
  reg         s0_out_bits_4_exceptionVec_1;
  reg         s0_out_bits_4_exceptionVec_2;
  reg         s0_out_bits_4_exceptionVec_3;
  reg         s0_out_bits_4_exceptionVec_4;
  reg         s0_out_bits_4_exceptionVec_5;
  reg         s0_out_bits_4_exceptionVec_6;
  reg         s0_out_bits_4_exceptionVec_7;
  reg         s0_out_bits_4_exceptionVec_8;
  reg         s0_out_bits_4_exceptionVec_9;
  reg         s0_out_bits_4_exceptionVec_10;
  reg         s0_out_bits_4_exceptionVec_11;
  reg         s0_out_bits_4_exceptionVec_12;
  reg         s0_out_bits_4_exceptionVec_13;
  reg         s0_out_bits_4_exceptionVec_14;
  reg         s0_out_bits_4_exceptionVec_15;
  reg         s0_out_bits_4_exceptionVec_16;
  reg         s0_out_bits_4_exceptionVec_17;
  reg         s0_out_bits_4_exceptionVec_18;
  reg         s0_out_bits_4_exceptionVec_19;
  reg         s0_out_bits_4_exceptionVec_20;
  reg         s0_out_bits_4_exceptionVec_21;
  reg         s0_out_bits_4_exceptionVec_22;
  reg         s0_out_bits_4_exceptionVec_23;
  reg         s0_out_bits_4_flushPipe;
  reg         s0_out_bits_4_replayInst;
  reg  [3:0]  s0_out_bits_4_trigger;
  reg         s0_out_bits_4_vstartEn;
  reg  [63:0] s0_out_bits_4_vstart;
  reg  [6:0]  s0_out_bits_4_vuopIdx;
  reg         s0_out_bits_4_isVecLoad;
  reg         s0_out_bits_4_isVlm;
  reg         s0_out_bits_4_isStrided;
  reg         s0_out_bits_4_isIndexed;
  reg         s0_out_bits_4_isWhole;
  reg  [2:0]  s0_out_bits_4_nf;
  reg  [1:0]  s0_out_bits_4_vsew;
  reg  [1:0]  s0_out_bits_4_veew;
  reg  [2:0]  s0_out_bits_4_vlmul;
  reg         s1_out_bits_robIdx_flag;
  reg  [7:0]  s1_out_bits_robIdx_value;
  reg         s1_out_bits_hasException;
  reg         s1_out_bits_exceptionVec_0;
  reg         s1_out_bits_exceptionVec_1;
  reg         s1_out_bits_exceptionVec_2;
  reg         s1_out_bits_exceptionVec_3;
  reg         s1_out_bits_exceptionVec_4;
  reg         s1_out_bits_exceptionVec_5;
  reg         s1_out_bits_exceptionVec_6;
  reg         s1_out_bits_exceptionVec_7;
  reg         s1_out_bits_exceptionVec_8;
  reg         s1_out_bits_exceptionVec_9;
  reg         s1_out_bits_exceptionVec_10;
  reg         s1_out_bits_exceptionVec_11;
  reg         s1_out_bits_exceptionVec_12;
  reg         s1_out_bits_exceptionVec_13;
  reg         s1_out_bits_exceptionVec_14;
  reg         s1_out_bits_exceptionVec_15;
  reg         s1_out_bits_exceptionVec_16;
  reg         s1_out_bits_exceptionVec_17;
  reg         s1_out_bits_exceptionVec_18;
  reg         s1_out_bits_exceptionVec_19;
  reg         s1_out_bits_exceptionVec_20;
  reg         s1_out_bits_exceptionVec_21;
  reg         s1_out_bits_exceptionVec_22;
  reg         s1_out_bits_exceptionVec_23;
  reg         s1_out_bits_flushPipe;
  reg         s1_out_bits_replayInst;
  reg  [3:0]  s1_out_bits_trigger;
  reg         s1_out_bits_vstartEn;
  reg  [63:0] s1_out_bits_vstart;
  reg         s1_out_bits_isVecLoad;
  reg         s1_out_bits_isVlm;
  reg         s1_out_bits_isStrided;
  reg         s1_out_bits_isIndexed;
  reg         s1_out_bits_isWhole;
  reg  [2:0]  s1_out_bits_nf;
  reg  [1:0]  s1_out_bits_vsew;
  reg  [1:0]  s1_out_bits_veew;
  reg  [2:0]  s1_out_bits_vlmul;
  reg         s1_out_valid;
  reg         enq_s1_valid;
  reg         enq_s1_bits_robIdx_flag;
  reg  [7:0]  enq_s1_bits_robIdx_value;
  reg  [5:0]  enq_s1_bits_ftqPtr_value;
  reg  [3:0]  enq_s1_bits_ftqOffset;
  reg         enq_s1_bits_hasException;
  reg         enq_s1_bits_exceptionVec_0;
  reg         enq_s1_bits_exceptionVec_1;
  reg         enq_s1_bits_exceptionVec_2;
  reg         enq_s1_bits_exceptionVec_3;
  reg         enq_s1_bits_exceptionVec_12;
  reg         enq_s1_bits_exceptionVec_20;
  reg         enq_s1_bits_exceptionVec_22;
  reg         enq_s1_bits_isFetchMalAddr;
  reg         enq_s1_bits_flushPipe;
  reg         enq_s1_bits_singleStep;
  reg         enq_s1_bits_crossPageIPFFix;
  reg  [3:0]  enq_s1_bits_trigger;
  wire [8:0]  _current_flush_flushItself_T_1 =
    {current_robIdx_flag, current_robIdx_value};
  wire [8:0]  _s1_flush_flushItself_T_1 =
    {s1_out_bits_robIdx_flag, s1_out_bits_robIdx_value};
  wire        s1_flush =
    io_redirect_valid
    & (io_redirect_bits_level & _s1_flush_flushItself_T_1 == _s1_flush_flushItself_T_2
       | s1_out_bits_robIdx_flag ^ io_redirect_bits_robIdx_flag
       ^ s1_out_bits_robIdx_value > io_redirect_bits_robIdx_value) | io_flush;
  wire        _GEN = s1_out_valid & ~s1_flush;
  wire        _GEN_0 = enq_s1_valid & ~(io_redirect_valid | io_flush);
  always @(posedge clock or posedge reset) begin
    if (reset)
      currentValid <= 1'h0;
    else if (currentValid) begin
      if (io_redirect_valid
          & (io_redirect_bits_level
             & _current_flush_flushItself_T_1 == _s1_flush_flushItself_T_2
             | current_robIdx_flag ^ io_redirect_bits_robIdx_flag
             ^ current_robIdx_value > io_redirect_bits_robIdx_value) | io_flush)
        currentValid <= ~s1_flush & s1_out_valid;
    end
    else
      currentValid <= _GEN | _GEN_0 | currentValid;
  end // always @(posedge, posedge)
  wire        _GEN_1 =
    current_robIdx_flag ^ s1_out_bits_robIdx_flag
    ^ current_robIdx_value > s1_out_bits_robIdx_value;
  wire        _GEN_2 = _GEN & _GEN_1;
  wire        _GEN_3 = _current_flush_flushItself_T_1 == _s1_flush_flushItself_T_1;
  wire        _s1_out_bits_left_oldest_T_9 =
    ~s0_out_valid_1 | s0_out_valid_0
    & (s0_out_bits_1_robIdx_flag ^ s0_out_bits_0_robIdx_flag
       ^ s0_out_bits_1_robIdx_value > s0_out_bits_0_robIdx_value);
  wire        s1_out_bits_res_0_bits_robIdx_flag =
    _s1_out_bits_left_oldest_T_9 ? s0_out_bits_0_robIdx_flag : s0_out_bits_1_robIdx_flag;
  wire [7:0]  s1_out_bits_res_0_bits_robIdx_value =
    _s1_out_bits_left_oldest_T_9
      ? s0_out_bits_0_robIdx_value
      : s0_out_bits_1_robIdx_value;
  wire        enq_s0_valid_0 =
    io_enq_0_valid
    & (io_enq_0_bits_hasException | io_enq_0_bits_flushPipe | io_enq_0_bits_singleStep
       | io_enq_0_bits_trigger == 4'h1) & ~lastCycleFlush;
  wire        enq_s0_valid_1 =
    io_enq_1_valid
    & (io_enq_1_bits_hasException | io_enq_1_bits_flushPipe | io_enq_1_bits_singleStep
       | io_enq_1_bits_trigger == 4'h1) & ~lastCycleFlush;
  wire        enq_s0_valid_2 =
    io_enq_2_valid
    & (io_enq_2_bits_hasException | io_enq_2_bits_flushPipe | io_enq_2_bits_singleStep
       | io_enq_2_bits_trigger == 4'h1) & ~lastCycleFlush;
  wire        enq_s0_valid_3 =
    io_enq_3_valid
    & (io_enq_3_bits_hasException | io_enq_3_bits_flushPipe | io_enq_3_bits_singleStep
       | io_enq_3_bits_trigger == 4'h1) & ~lastCycleFlush;
  wire        enq_s0_valid_4 =
    io_enq_4_valid
    & (io_enq_4_bits_hasException | io_enq_4_bits_flushPipe | io_enq_4_bits_singleStep
       | io_enq_4_bits_trigger == 4'h1) & ~lastCycleFlush;
  wire        enq_s0_valid_5 =
    io_enq_5_valid
    & (io_enq_5_bits_hasException | io_enq_5_bits_flushPipe | io_enq_5_bits_singleStep
       | io_enq_5_bits_trigger == 4'h1) & ~lastCycleFlush;
  wire        in_wb_valids_1_0 =
    io_wb_8_valid
    & (io_wb_8_bits_hasException | io_wb_8_bits_flushPipe | io_wb_8_bits_replayInst
       | io_wb_8_bits_trigger == 4'h1) & ~lastCycleFlush;
  wire        in_wb_valids_1_1 =
    io_wb_9_valid
    & (io_wb_9_bits_hasException | io_wb_9_bits_flushPipe | io_wb_9_bits_replayInst
       | io_wb_9_bits_trigger == 4'h1) & ~lastCycleFlush;
  wire        in_wb_valids_1_2 =
    io_wb_10_valid
    & (io_wb_10_bits_hasException | io_wb_10_bits_flushPipe | io_wb_10_bits_replayInst
       | io_wb_10_bits_trigger == 4'h1) & ~lastCycleFlush;
  wire        in_wb_valids_2_0 =
    io_wb_6_valid
    & (io_wb_6_bits_hasException | io_wb_6_bits_flushPipe | io_wb_6_bits_trigger == 4'h1)
    & ~lastCycleFlush;
  wire        in_wb_valids_2_1 =
    io_wb_7_valid & (io_wb_7_bits_hasException | io_wb_7_bits_trigger == 4'h1)
    & ~lastCycleFlush;
  wire        in_wb_valids_3_0 =
    io_wb_1_valid & io_wb_1_bits_hasException & ~lastCycleFlush;
  wire        in_wb_valids_3_1 =
    io_wb_2_valid & io_wb_2_bits_hasException & ~lastCycleFlush;
  wire        in_wb_valids_4_0 =
    io_wb_11_valid
    & (io_wb_11_bits_hasException | io_wb_11_bits_flushPipe | io_wb_11_bits_replayInst
       | io_wb_11_bits_trigger == 4'h1) & ~lastCycleFlush;
  wire        in_wb_valids_4_1 =
    io_wb_12_valid
    & (io_wb_12_bits_hasException | io_wb_12_bits_flushPipe | io_wb_12_bits_replayInst
       | io_wb_12_bits_trigger == 4'h1) & ~lastCycleFlush;
  wire        wb_valid_0 =
    io_wb_0_valid & (io_wb_0_bits_hasException | io_wb_0_bits_flushPipe) & ~lastCycleFlush
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {io_wb_0_bits_robIdx_flag,
              io_wb_0_bits_robIdx_value} == _s1_flush_flushItself_T_2
           | io_wb_0_bits_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_wb_0_bits_robIdx_value > io_redirect_bits_robIdx_value) | io_flush);
  wire        wb_valid_1 =
    in_wb_valids_1_0
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {io_wb_8_bits_robIdx_flag,
              io_wb_8_bits_robIdx_value} == _s1_flush_flushItself_T_2
           | io_wb_8_bits_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_wb_8_bits_robIdx_value > io_redirect_bits_robIdx_value) | io_flush)
    | in_wb_valids_1_1
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {io_wb_9_bits_robIdx_flag,
              io_wb_9_bits_robIdx_value} == _s1_flush_flushItself_T_2
           | io_wb_9_bits_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_wb_9_bits_robIdx_value > io_redirect_bits_robIdx_value) | io_flush)
    | in_wb_valids_1_2
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {io_wb_10_bits_robIdx_flag,
              io_wb_10_bits_robIdx_value} == _s1_flush_flushItself_T_2
           | io_wb_10_bits_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_wb_10_bits_robIdx_value > io_redirect_bits_robIdx_value) | io_flush);
  wire        wb_valid_2 =
    in_wb_valids_2_0
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {io_wb_6_bits_robIdx_flag,
              io_wb_6_bits_robIdx_value} == _s1_flush_flushItself_T_2
           | io_wb_6_bits_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_wb_6_bits_robIdx_value > io_redirect_bits_robIdx_value) | io_flush)
    | in_wb_valids_2_1
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {io_wb_7_bits_robIdx_flag,
              io_wb_7_bits_robIdx_value} == _s1_flush_flushItself_T_2
           | io_wb_7_bits_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_wb_7_bits_robIdx_value > io_redirect_bits_robIdx_value) | io_flush);
  wire        _wb_valid_T_66 =
    in_wb_valids_3_0
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {io_wb_1_bits_robIdx_flag,
              io_wb_1_bits_robIdx_value} == _s1_flush_flushItself_T_2
           | io_wb_1_bits_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_wb_1_bits_robIdx_value > io_redirect_bits_robIdx_value) | io_flush)
    | in_wb_valids_3_1
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {io_wb_2_bits_robIdx_flag,
              io_wb_2_bits_robIdx_value} == _s1_flush_flushItself_T_2
           | io_wb_2_bits_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_wb_2_bits_robIdx_value > io_redirect_bits_robIdx_value) | io_flush);
  wire [8:0]  _wb_bits_oldest_T_33 =
    {io_wb_11_bits_robIdx_flag, io_wb_11_bits_robIdx_value};
  wire [8:0]  _wb_bits_oldest_T_32 =
    {io_wb_12_bits_robIdx_flag, io_wb_12_bits_robIdx_value};
  wire        wb_valid_4 =
    in_wb_valids_4_0
    & ~(io_redirect_valid
        & (io_redirect_bits_level & _wb_bits_oldest_T_33 == _s1_flush_flushItself_T_2
           | io_wb_11_bits_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_wb_11_bits_robIdx_value > io_redirect_bits_robIdx_value) | io_flush)
    | in_wb_valids_4_1
    & ~(io_redirect_valid
        & (io_redirect_bits_level & _wb_bits_oldest_T_32 == _s1_flush_flushItself_T_2
           | io_wb_12_bits_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_wb_12_bits_robIdx_value > io_redirect_bits_robIdx_value) | io_flush);
  wire        s1_valid_0 =
    s0_out_valid_0
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {s0_out_bits_0_robIdx_flag,
              s0_out_bits_0_robIdx_value} == _s1_flush_flushItself_T_2
           | s0_out_bits_0_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ s0_out_bits_0_robIdx_value > io_redirect_bits_robIdx_value) | io_flush);
  wire        s1_valid_1 =
    s0_out_valid_1
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {s0_out_bits_1_robIdx_flag,
              s0_out_bits_1_robIdx_value} == _s1_flush_flushItself_T_2
           | s0_out_bits_1_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ s0_out_bits_1_robIdx_value > io_redirect_bits_robIdx_value) | io_flush);
  wire [8:0]  _s1_out_bits_right_oldest_T_3 =
    {s0_out_bits_2_robIdx_flag, s0_out_bits_2_robIdx_value};
  wire        s1_valid_2 =
    s0_out_valid_2
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & _s1_out_bits_right_oldest_T_3 == _s1_flush_flushItself_T_2
           | s0_out_bits_2_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ s0_out_bits_2_robIdx_value > io_redirect_bits_robIdx_value) | io_flush);
  wire [8:0]  _s1_out_bits_right_right_oldest_T_3 =
    {s0_out_bits_3_robIdx_flag, s0_out_bits_3_robIdx_value};
  wire        s1_valid_3 =
    s0_out_valid_3
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & _s1_out_bits_right_right_oldest_T_3 == _s1_flush_flushItself_T_2
           | s0_out_bits_3_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ s0_out_bits_3_robIdx_value > io_redirect_bits_robIdx_value) | io_flush);
  wire [8:0]  _s1_out_bits_right_right_oldest_T_2 =
    {s0_out_bits_4_robIdx_flag, s0_out_bits_4_robIdx_value};
  wire        s1_valid_4 =
    s0_out_valid_4
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & _s1_out_bits_right_right_oldest_T_2 == _s1_flush_flushItself_T_2
           | s0_out_bits_4_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ s0_out_bits_4_robIdx_value > io_redirect_bits_robIdx_value) | io_flush);
  wire        _wb_bits_right_oldest_T_9 =
    ~in_wb_valids_1_2 | in_wb_valids_1_1
    & (io_wb_10_bits_robIdx_flag ^ io_wb_9_bits_robIdx_flag
       ^ io_wb_10_bits_robIdx_value > io_wb_9_bits_robIdx_value);
  wire        wb_bits_res_1_bits_robIdx_flag =
    _wb_bits_right_oldest_T_9 ? io_wb_9_bits_robIdx_flag : io_wb_10_bits_robIdx_flag;
  wire [7:0]  wb_bits_res_1_bits_robIdx_value =
    _wb_bits_right_oldest_T_9 ? io_wb_9_bits_robIdx_value : io_wb_10_bits_robIdx_value;
  wire        _wb_bits_oldest_T_9 =
    ~(_wb_bits_right_oldest_T_9 ? in_wb_valids_1_1 : in_wb_valids_1_2) | in_wb_valids_1_0
    & (wb_bits_res_1_bits_robIdx_flag ^ io_wb_8_bits_robIdx_flag
       ^ wb_bits_res_1_bits_robIdx_value > io_wb_8_bits_robIdx_value);
  wire        _wb_bits_oldest_T_19 =
    ~in_wb_valids_2_1 | in_wb_valids_2_0
    & (io_wb_7_bits_robIdx_flag ^ io_wb_6_bits_robIdx_flag
       ^ io_wb_7_bits_robIdx_value > io_wb_6_bits_robIdx_value);
  wire        _wb_bits_left_oldest_T_9 =
    ~in_wb_valids_3_1 | in_wb_valids_3_0
    & (io_wb_2_bits_robIdx_flag ^ io_wb_1_bits_robIdx_flag
       ^ io_wb_2_bits_robIdx_value > io_wb_1_bits_robIdx_value);
  wire        _wb_bits_oldest_T_39 =
    ~in_wb_valids_4_1 | in_wb_valids_4_0
    & (io_wb_12_bits_robIdx_flag ^ io_wb_11_bits_robIdx_flag
       ^ io_wb_12_bits_robIdx_value > io_wb_11_bits_robIdx_value
       | _wb_bits_oldest_T_32 == _wb_bits_oldest_T_33
       & io_wb_12_bits_vuopIdx > io_wb_11_bits_vuopIdx);
  wire        _s1_out_bits_right_right_oldest_T_9 =
    ~s0_out_valid_4 | s0_out_valid_3
    & (s0_out_bits_4_robIdx_flag ^ s0_out_bits_3_robIdx_flag
       ^ s0_out_bits_4_robIdx_value > s0_out_bits_3_robIdx_value
       | _s1_out_bits_right_right_oldest_T_2 == _s1_out_bits_right_right_oldest_T_3
       & (|s0_out_bits_4_vuopIdx));
  wire        s1_out_bits_right_res_1_valid =
    _s1_out_bits_right_right_oldest_T_9 ? s0_out_valid_3 : s0_out_valid_4;
  wire        s1_out_bits_right_res_1_bits_robIdx_flag =
    _s1_out_bits_right_right_oldest_T_9
      ? s0_out_bits_3_robIdx_flag
      : s0_out_bits_4_robIdx_flag;
  wire [7:0]  s1_out_bits_right_res_1_bits_robIdx_value =
    _s1_out_bits_right_right_oldest_T_9
      ? s0_out_bits_3_robIdx_value
      : s0_out_bits_4_robIdx_value;
  wire        _s1_out_bits_right_oldest_T_9 =
    ~s1_out_bits_right_res_1_valid | s0_out_valid_2
    & (s1_out_bits_right_res_1_bits_robIdx_flag ^ s0_out_bits_2_robIdx_flag
       ^ s1_out_bits_right_res_1_bits_robIdx_value > s0_out_bits_2_robIdx_value
       | {s1_out_bits_right_res_1_bits_robIdx_flag,
          s1_out_bits_right_res_1_bits_robIdx_value} == _s1_out_bits_right_oldest_T_3
       & (|(_s1_out_bits_right_right_oldest_T_9 ? 7'h0 : s0_out_bits_4_vuopIdx)));
  wire        s1_out_bits_res_1_bits_robIdx_flag =
    _s1_out_bits_right_oldest_T_9
      ? s0_out_bits_2_robIdx_flag
      : s1_out_bits_right_res_1_bits_robIdx_flag;
  wire [7:0]  s1_out_bits_res_1_bits_robIdx_value =
    _s1_out_bits_right_oldest_T_9
      ? s0_out_bits_2_robIdx_value
      : s1_out_bits_right_res_1_bits_robIdx_value;
  wire        _s1_out_bits_oldest_T_9 =
    ~(_s1_out_bits_right_oldest_T_9 ? s0_out_valid_2 : s1_out_bits_right_res_1_valid)
    | (_s1_out_bits_left_oldest_T_9 ? s0_out_valid_0 : s0_out_valid_1)
    & (s1_out_bits_res_1_bits_robIdx_flag ^ s1_out_bits_res_0_bits_robIdx_flag
       ^ s1_out_bits_res_1_bits_robIdx_value > s1_out_bits_res_0_bits_robIdx_value
       | {s1_out_bits_res_1_bits_robIdx_flag,
          s1_out_bits_res_1_bits_robIdx_value} == {s1_out_bits_res_0_bits_robIdx_flag,
                                                   s1_out_bits_res_0_bits_robIdx_value}
       & (|(_s1_out_bits_right_oldest_T_9 | _s1_out_bits_right_right_oldest_T_9
              ? 7'h0
              : s0_out_bits_4_vuopIdx)));
  wire        _GEN_4 =
    _s1_out_bits_oldest_T_9 | _s1_out_bits_right_oldest_T_9
    | _s1_out_bits_right_right_oldest_T_9;
  wire        _enq_s1_bits_T_2 = enq_s0_valid_0 | enq_s0_valid_1 | enq_s0_valid_2;
  always @(posedge clock) begin
    if (currentValid) begin
      if (_GEN_2) begin
        current_robIdx_flag <= s1_out_bits_robIdx_flag;
        current_robIdx_value <= s1_out_bits_robIdx_value;
        current_ftqPtr_value <= 6'h0;
        current_ftqOffset <= 4'h0;
      end
      if (_GEN
          & (_GEN_1 | _GEN_3
             & (s1_out_bits_vstart < current_vstart | ~current_vstartEn))) begin
        current_hasException <= s1_out_bits_hasException;
        current_exceptionVec_0 <= s1_out_bits_exceptionVec_0;
        current_exceptionVec_1 <= s1_out_bits_exceptionVec_1;
        current_exceptionVec_2 <= s1_out_bits_exceptionVec_2;
        current_exceptionVec_3 <= s1_out_bits_exceptionVec_3;
        current_exceptionVec_4 <= s1_out_bits_exceptionVec_4;
        current_exceptionVec_5 <= s1_out_bits_exceptionVec_5;
        current_exceptionVec_6 <= s1_out_bits_exceptionVec_6;
        current_exceptionVec_7 <= s1_out_bits_exceptionVec_7;
        current_exceptionVec_8 <= s1_out_bits_exceptionVec_8;
        current_exceptionVec_9 <= s1_out_bits_exceptionVec_9;
        current_exceptionVec_10 <= s1_out_bits_exceptionVec_10;
        current_exceptionVec_11 <= s1_out_bits_exceptionVec_11;
        current_exceptionVec_12 <= s1_out_bits_exceptionVec_12;
        current_exceptionVec_13 <= s1_out_bits_exceptionVec_13;
        current_exceptionVec_14 <= s1_out_bits_exceptionVec_14;
        current_exceptionVec_15 <= s1_out_bits_exceptionVec_15;
        current_exceptionVec_16 <= s1_out_bits_exceptionVec_16;
        current_exceptionVec_17 <= s1_out_bits_exceptionVec_17;
        current_exceptionVec_18 <= s1_out_bits_exceptionVec_18;
        current_exceptionVec_19 <= s1_out_bits_exceptionVec_19;
        current_exceptionVec_20 <= s1_out_bits_exceptionVec_20;
        current_exceptionVec_21 <= s1_out_bits_exceptionVec_21;
        current_exceptionVec_22 <= s1_out_bits_exceptionVec_22;
        current_exceptionVec_23 <= s1_out_bits_exceptionVec_23;
        current_trigger <= s1_out_bits_trigger;
        current_vstartEn <= s1_out_bits_vstartEn;
        current_vstart <= s1_out_bits_vstart;
        current_isVecLoad <= s1_out_bits_isVecLoad;
        current_isVlm <= s1_out_bits_isVlm;
        current_isStrided <= s1_out_bits_isStrided;
        current_isIndexed <= s1_out_bits_isIndexed;
        current_isWhole <= s1_out_bits_isWhole;
        current_nf <= s1_out_bits_nf;
        current_vsew <= s1_out_bits_vsew;
        current_veew <= s1_out_bits_veew;
        current_vlmul <= s1_out_bits_vlmul;
      end
      current_isEnqExcp <= ~_GEN & current_isEnqExcp;
      current_isFetchMalAddr <= ~_GEN_2 & current_isFetchMalAddr;
      if (_GEN) begin
        if (_GEN_1) begin
          current_flushPipe <= s1_out_bits_flushPipe;
          current_replayInst <= s1_out_bits_replayInst;
        end
        else begin
          if (_GEN_3)
            current_flushPipe <=
              (s1_out_bits_flushPipe | current_flushPipe)
              & {s1_out_bits_exceptionVec_23,
                 s1_out_bits_exceptionVec_22,
                 s1_out_bits_exceptionVec_21,
                 s1_out_bits_exceptionVec_20,
                 s1_out_bits_exceptionVec_19,
                 s1_out_bits_exceptionVec_18,
                 s1_out_bits_exceptionVec_17,
                 s1_out_bits_exceptionVec_16,
                 s1_out_bits_exceptionVec_15,
                 s1_out_bits_exceptionVec_14,
                 s1_out_bits_exceptionVec_13,
                 s1_out_bits_exceptionVec_12,
                 s1_out_bits_exceptionVec_11,
                 s1_out_bits_exceptionVec_10,
                 s1_out_bits_exceptionVec_9,
                 s1_out_bits_exceptionVec_8,
                 s1_out_bits_exceptionVec_7,
                 s1_out_bits_exceptionVec_6,
                 s1_out_bits_exceptionVec_5,
                 s1_out_bits_exceptionVec_4,
                 s1_out_bits_exceptionVec_3,
                 s1_out_bits_exceptionVec_2,
                 s1_out_bits_exceptionVec_1,
                 s1_out_bits_exceptionVec_0} == 24'h0;
          current_replayInst <= _GEN_3 & s1_out_bits_replayInst | current_replayInst;
        end
      end
      current_singleStep <= ~_GEN_2 & current_singleStep;
      current_crossPageIPFFix <= ~_GEN_2 & current_crossPageIPFFix;
    end
    else begin
      if (_GEN) begin
        current_robIdx_flag <= s1_out_bits_robIdx_flag;
        current_robIdx_value <= s1_out_bits_robIdx_value;
        current_ftqPtr_value <= 6'h0;
        current_ftqOffset <= 4'h0;
        current_hasException <= s1_out_bits_hasException;
        current_exceptionVec_0 <= s1_out_bits_exceptionVec_0;
        current_exceptionVec_1 <= s1_out_bits_exceptionVec_1;
        current_exceptionVec_2 <= s1_out_bits_exceptionVec_2;
        current_exceptionVec_3 <= s1_out_bits_exceptionVec_3;
        current_exceptionVec_4 <= s1_out_bits_exceptionVec_4;
        current_exceptionVec_5 <= s1_out_bits_exceptionVec_5;
        current_exceptionVec_6 <= s1_out_bits_exceptionVec_6;
        current_exceptionVec_7 <= s1_out_bits_exceptionVec_7;
        current_exceptionVec_8 <= s1_out_bits_exceptionVec_8;
        current_exceptionVec_9 <= s1_out_bits_exceptionVec_9;
        current_exceptionVec_10 <= s1_out_bits_exceptionVec_10;
        current_exceptionVec_11 <= s1_out_bits_exceptionVec_11;
        current_exceptionVec_12 <= s1_out_bits_exceptionVec_12;
        current_exceptionVec_13 <= s1_out_bits_exceptionVec_13;
        current_exceptionVec_14 <= s1_out_bits_exceptionVec_14;
        current_exceptionVec_15 <= s1_out_bits_exceptionVec_15;
        current_exceptionVec_16 <= s1_out_bits_exceptionVec_16;
        current_exceptionVec_17 <= s1_out_bits_exceptionVec_17;
        current_exceptionVec_18 <= s1_out_bits_exceptionVec_18;
        current_exceptionVec_19 <= s1_out_bits_exceptionVec_19;
        current_exceptionVec_20 <= s1_out_bits_exceptionVec_20;
        current_exceptionVec_21 <= s1_out_bits_exceptionVec_21;
        current_exceptionVec_22 <= s1_out_bits_exceptionVec_22;
        current_exceptionVec_23 <= s1_out_bits_exceptionVec_23;
        current_flushPipe <= s1_out_bits_flushPipe;
        current_replayInst <= s1_out_bits_replayInst;
        current_trigger <= s1_out_bits_trigger;
        current_vstartEn <= s1_out_bits_vstartEn;
        current_vstart <= s1_out_bits_vstart;
        current_isVecLoad <= s1_out_bits_isVecLoad;
        current_isVlm <= s1_out_bits_isVlm;
        current_isStrided <= s1_out_bits_isStrided;
        current_isIndexed <= s1_out_bits_isIndexed;
        current_isWhole <= s1_out_bits_isWhole;
        current_nf <= s1_out_bits_nf;
        current_vsew <= s1_out_bits_vsew;
        current_veew <= s1_out_bits_veew;
        current_vlmul <= s1_out_bits_vlmul;
      end
      else begin
        if (_GEN_0) begin
          current_robIdx_flag <= enq_s1_bits_robIdx_flag;
          current_robIdx_value <= enq_s1_bits_robIdx_value;
          current_ftqPtr_value <= enq_s1_bits_ftqPtr_value;
          current_ftqOffset <= enq_s1_bits_ftqOffset;
          current_hasException <= enq_s1_bits_hasException;
          current_exceptionVec_0 <= enq_s1_bits_exceptionVec_0;
          current_exceptionVec_1 <= enq_s1_bits_exceptionVec_1;
          current_exceptionVec_2 <= enq_s1_bits_exceptionVec_2;
          current_exceptionVec_3 <= enq_s1_bits_exceptionVec_3;
          current_exceptionVec_12 <= enq_s1_bits_exceptionVec_12;
          current_exceptionVec_20 <= enq_s1_bits_exceptionVec_20;
          current_exceptionVec_22 <= enq_s1_bits_exceptionVec_22;
          current_flushPipe <= enq_s1_bits_flushPipe;
          current_trigger <= enq_s1_bits_trigger;
          current_vstart <= 64'h0;
          current_nf <= 3'h0;
          current_vsew <= 2'h0;
          current_veew <= 2'h0;
          current_vlmul <= 3'h0;
        end
        current_exceptionVec_4 <= ~_GEN_0 & current_exceptionVec_4;
        current_exceptionVec_5 <= ~_GEN_0 & current_exceptionVec_5;
        current_exceptionVec_6 <= ~_GEN_0 & current_exceptionVec_6;
        current_exceptionVec_7 <= ~_GEN_0 & current_exceptionVec_7;
        current_exceptionVec_8 <= ~_GEN_0 & current_exceptionVec_8;
        current_exceptionVec_9 <= ~_GEN_0 & current_exceptionVec_9;
        current_exceptionVec_10 <= ~_GEN_0 & current_exceptionVec_10;
        current_exceptionVec_11 <= ~_GEN_0 & current_exceptionVec_11;
        current_exceptionVec_13 <= ~_GEN_0 & current_exceptionVec_13;
        current_exceptionVec_14 <= ~_GEN_0 & current_exceptionVec_14;
        current_exceptionVec_15 <= ~_GEN_0 & current_exceptionVec_15;
        current_exceptionVec_16 <= ~_GEN_0 & current_exceptionVec_16;
        current_exceptionVec_17 <= ~_GEN_0 & current_exceptionVec_17;
        current_exceptionVec_18 <= ~_GEN_0 & current_exceptionVec_18;
        current_exceptionVec_19 <= ~_GEN_0 & current_exceptionVec_19;
        current_exceptionVec_21 <= ~_GEN_0 & current_exceptionVec_21;
        current_exceptionVec_23 <= ~_GEN_0 & current_exceptionVec_23;
        current_replayInst <= ~_GEN_0 & current_replayInst;
        current_vstartEn <= ~_GEN_0 & current_vstartEn;
        current_isVecLoad <= ~_GEN_0 & current_isVecLoad;
        current_isVlm <= ~_GEN_0 & current_isVlm;
        current_isStrided <= ~_GEN_0 & current_isStrided;
        current_isIndexed <= ~_GEN_0 & current_isIndexed;
        current_isWhole <= ~_GEN_0 & current_isWhole;
      end
      current_isEnqExcp <= ~_GEN & (_GEN_0 | current_isEnqExcp);
      current_isFetchMalAddr <=
        ~_GEN & (_GEN_0 ? enq_s1_bits_isFetchMalAddr : current_isFetchMalAddr);
      current_singleStep <=
        ~_GEN & (_GEN_0 ? enq_s1_bits_singleStep : current_singleStep);
      current_crossPageIPFFix <=
        ~_GEN & (_GEN_0 ? enq_s1_bits_crossPageIPFFix : current_crossPageIPFFix);
    end
    lastCycleFlush <= io_flush;
    s0_out_valid_0 <= wb_valid_0;
    s0_out_valid_1 <= wb_valid_1;
    s0_out_valid_2 <= wb_valid_2;
    s0_out_valid_3 <= _wb_valid_T_66;
    s0_out_valid_4 <= wb_valid_4;
    if (wb_valid_0) begin
      s0_out_bits_0_robIdx_flag <= io_wb_0_bits_robIdx_flag;
      s0_out_bits_0_robIdx_value <= io_wb_0_bits_robIdx_value;
      s0_out_bits_0_hasException <= io_wb_0_bits_hasException;
      s0_out_bits_0_exceptionVec_2 <= io_wb_0_bits_exceptionVec_2;
      s0_out_bits_0_exceptionVec_3 <= io_wb_0_bits_exceptionVec_3;
      s0_out_bits_0_exceptionVec_8 <= io_wb_0_bits_exceptionVec_8;
      s0_out_bits_0_exceptionVec_9 <= io_wb_0_bits_exceptionVec_9;
      s0_out_bits_0_exceptionVec_10 <= io_wb_0_bits_exceptionVec_10;
      s0_out_bits_0_exceptionVec_11 <= io_wb_0_bits_exceptionVec_11;
      s0_out_bits_0_exceptionVec_22 <= io_wb_0_bits_exceptionVec_22;
      s0_out_bits_0_flushPipe <= io_wb_0_bits_flushPipe;
    end
    s0_out_bits_0_exceptionVec_0 <= ~wb_valid_0 & s0_out_bits_0_exceptionVec_0;
    s0_out_bits_0_exceptionVec_1 <= ~wb_valid_0 & s0_out_bits_0_exceptionVec_1;
    s0_out_bits_0_exceptionVec_4 <= ~wb_valid_0 & s0_out_bits_0_exceptionVec_4;
    s0_out_bits_0_exceptionVec_5 <= ~wb_valid_0 & s0_out_bits_0_exceptionVec_5;
    s0_out_bits_0_exceptionVec_6 <= ~wb_valid_0 & s0_out_bits_0_exceptionVec_6;
    s0_out_bits_0_exceptionVec_7 <= ~wb_valid_0 & s0_out_bits_0_exceptionVec_7;
    s0_out_bits_0_exceptionVec_12 <= ~wb_valid_0 & s0_out_bits_0_exceptionVec_12;
    s0_out_bits_0_exceptionVec_13 <= ~wb_valid_0 & s0_out_bits_0_exceptionVec_13;
    s0_out_bits_0_exceptionVec_14 <= ~wb_valid_0 & s0_out_bits_0_exceptionVec_14;
    s0_out_bits_0_exceptionVec_15 <= ~wb_valid_0 & s0_out_bits_0_exceptionVec_15;
    s0_out_bits_0_exceptionVec_16 <= ~wb_valid_0 & s0_out_bits_0_exceptionVec_16;
    s0_out_bits_0_exceptionVec_17 <= ~wb_valid_0 & s0_out_bits_0_exceptionVec_17;
    s0_out_bits_0_exceptionVec_18 <= ~wb_valid_0 & s0_out_bits_0_exceptionVec_18;
    s0_out_bits_0_exceptionVec_19 <= ~wb_valid_0 & s0_out_bits_0_exceptionVec_19;
    s0_out_bits_0_exceptionVec_20 <= ~wb_valid_0 & s0_out_bits_0_exceptionVec_20;
    s0_out_bits_0_exceptionVec_21 <= ~wb_valid_0 & s0_out_bits_0_exceptionVec_21;
    s0_out_bits_0_exceptionVec_23 <= ~wb_valid_0 & s0_out_bits_0_exceptionVec_23;
    if (wb_valid_1) begin
      s0_out_bits_1_robIdx_flag <=
        _wb_bits_oldest_T_9 ? io_wb_8_bits_robIdx_flag : wb_bits_res_1_bits_robIdx_flag;
      s0_out_bits_1_robIdx_value <=
        _wb_bits_oldest_T_9 ? io_wb_8_bits_robIdx_value : wb_bits_res_1_bits_robIdx_value;
      s0_out_bits_1_hasException <=
        _wb_bits_oldest_T_9
          ? io_wb_8_bits_hasException
          : _wb_bits_right_oldest_T_9
              ? io_wb_9_bits_hasException
              : io_wb_10_bits_hasException;
      s0_out_bits_1_exceptionVec_0 <= _wb_bits_oldest_T_9 & io_wb_8_bits_exceptionVec_0;
      s0_out_bits_1_exceptionVec_1 <= _wb_bits_oldest_T_9 & io_wb_8_bits_exceptionVec_1;
      s0_out_bits_1_exceptionVec_2 <= _wb_bits_oldest_T_9 & io_wb_8_bits_exceptionVec_2;
      s0_out_bits_1_exceptionVec_3 <=
        _wb_bits_oldest_T_9
          ? io_wb_8_bits_exceptionVec_3
          : _wb_bits_right_oldest_T_9
              ? io_wb_9_bits_exceptionVec_3
              : io_wb_10_bits_exceptionVec_3;
      s0_out_bits_1_exceptionVec_4 <=
        _wb_bits_oldest_T_9
          ? io_wb_8_bits_exceptionVec_4
          : _wb_bits_right_oldest_T_9
              ? io_wb_9_bits_exceptionVec_4
              : io_wb_10_bits_exceptionVec_4;
      s0_out_bits_1_exceptionVec_5 <=
        _wb_bits_oldest_T_9
          ? io_wb_8_bits_exceptionVec_5
          : _wb_bits_right_oldest_T_9
              ? io_wb_9_bits_exceptionVec_5
              : io_wb_10_bits_exceptionVec_5;
      s0_out_bits_1_exceptionVec_6 <= _wb_bits_oldest_T_9 & io_wb_8_bits_exceptionVec_6;
      s0_out_bits_1_exceptionVec_7 <= _wb_bits_oldest_T_9 & io_wb_8_bits_exceptionVec_7;
      s0_out_bits_1_exceptionVec_8 <= _wb_bits_oldest_T_9 & io_wb_8_bits_exceptionVec_8;
      s0_out_bits_1_exceptionVec_9 <= _wb_bits_oldest_T_9 & io_wb_8_bits_exceptionVec_9;
      s0_out_bits_1_exceptionVec_10 <= _wb_bits_oldest_T_9 & io_wb_8_bits_exceptionVec_10;
      s0_out_bits_1_exceptionVec_11 <= _wb_bits_oldest_T_9 & io_wb_8_bits_exceptionVec_11;
      s0_out_bits_1_exceptionVec_12 <= _wb_bits_oldest_T_9 & io_wb_8_bits_exceptionVec_12;
      s0_out_bits_1_exceptionVec_13 <=
        _wb_bits_oldest_T_9
          ? io_wb_8_bits_exceptionVec_13
          : _wb_bits_right_oldest_T_9
              ? io_wb_9_bits_exceptionVec_13
              : io_wb_10_bits_exceptionVec_13;
      s0_out_bits_1_exceptionVec_14 <= _wb_bits_oldest_T_9 & io_wb_8_bits_exceptionVec_14;
      s0_out_bits_1_exceptionVec_15 <= _wb_bits_oldest_T_9 & io_wb_8_bits_exceptionVec_15;
      s0_out_bits_1_exceptionVec_16 <= _wb_bits_oldest_T_9 & io_wb_8_bits_exceptionVec_16;
      s0_out_bits_1_exceptionVec_17 <= _wb_bits_oldest_T_9 & io_wb_8_bits_exceptionVec_17;
      s0_out_bits_1_exceptionVec_18 <= _wb_bits_oldest_T_9 & io_wb_8_bits_exceptionVec_18;
      s0_out_bits_1_exceptionVec_19 <=
        _wb_bits_oldest_T_9
          ? io_wb_8_bits_exceptionVec_19
          : _wb_bits_right_oldest_T_9
              ? io_wb_9_bits_exceptionVec_19
              : io_wb_10_bits_exceptionVec_19;
      s0_out_bits_1_exceptionVec_20 <= _wb_bits_oldest_T_9 & io_wb_8_bits_exceptionVec_20;
      s0_out_bits_1_exceptionVec_21 <=
        _wb_bits_oldest_T_9
          ? io_wb_8_bits_exceptionVec_21
          : _wb_bits_right_oldest_T_9
              ? io_wb_9_bits_exceptionVec_21
              : io_wb_10_bits_exceptionVec_21;
      s0_out_bits_1_exceptionVec_22 <= _wb_bits_oldest_T_9 & io_wb_8_bits_exceptionVec_22;
      s0_out_bits_1_exceptionVec_23 <= _wb_bits_oldest_T_9 & io_wb_8_bits_exceptionVec_23;
      s0_out_bits_1_flushPipe <=
        _wb_bits_oldest_T_9
          ? io_wb_8_bits_flushPipe
          : _wb_bits_right_oldest_T_9 ? io_wb_9_bits_flushPipe : io_wb_10_bits_flushPipe;
      s0_out_bits_1_replayInst <=
        _wb_bits_oldest_T_9
          ? io_wb_8_bits_replayInst
          : _wb_bits_right_oldest_T_9
              ? io_wb_9_bits_replayInst
              : io_wb_10_bits_replayInst;
      s0_out_bits_1_trigger <=
        _wb_bits_oldest_T_9
          ? io_wb_8_bits_trigger
          : _wb_bits_right_oldest_T_9 ? io_wb_9_bits_trigger : io_wb_10_bits_trigger;
    end
    if (wb_valid_2) begin
      s0_out_bits_2_robIdx_flag <=
        _wb_bits_oldest_T_19 ? io_wb_6_bits_robIdx_flag : io_wb_7_bits_robIdx_flag;
      s0_out_bits_2_robIdx_value <=
        _wb_bits_oldest_T_19 ? io_wb_6_bits_robIdx_value : io_wb_7_bits_robIdx_value;
      s0_out_bits_2_hasException <=
        _wb_bits_oldest_T_19 ? io_wb_6_bits_hasException : io_wb_7_bits_hasException;
      s0_out_bits_2_exceptionVec_0 <= _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_0;
      s0_out_bits_2_exceptionVec_1 <= _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_1;
      s0_out_bits_2_exceptionVec_2 <= _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_2;
      s0_out_bits_2_exceptionVec_3 <=
        _wb_bits_oldest_T_19 ? io_wb_6_bits_exceptionVec_3 : io_wb_7_bits_exceptionVec_3;
      s0_out_bits_2_exceptionVec_4 <= _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_4;
      s0_out_bits_2_exceptionVec_5 <= _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_5;
      s0_out_bits_2_exceptionVec_6 <=
        _wb_bits_oldest_T_19 ? io_wb_6_bits_exceptionVec_6 : io_wb_7_bits_exceptionVec_6;
      s0_out_bits_2_exceptionVec_7 <=
        _wb_bits_oldest_T_19 ? io_wb_6_bits_exceptionVec_7 : io_wb_7_bits_exceptionVec_7;
      s0_out_bits_2_exceptionVec_8 <= _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_8;
      s0_out_bits_2_exceptionVec_9 <= _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_9;
      s0_out_bits_2_exceptionVec_10 <=
        _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_10;
      s0_out_bits_2_exceptionVec_11 <=
        _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_11;
      s0_out_bits_2_exceptionVec_12 <=
        _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_12;
      s0_out_bits_2_exceptionVec_13 <=
        _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_13;
      s0_out_bits_2_exceptionVec_14 <=
        _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_14;
      s0_out_bits_2_exceptionVec_15 <=
        _wb_bits_oldest_T_19
          ? io_wb_6_bits_exceptionVec_15
          : io_wb_7_bits_exceptionVec_15;
      s0_out_bits_2_exceptionVec_16 <=
        _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_16;
      s0_out_bits_2_exceptionVec_17 <=
        _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_17;
      s0_out_bits_2_exceptionVec_18 <=
        _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_18;
      s0_out_bits_2_exceptionVec_19 <=
        _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_19;
      s0_out_bits_2_exceptionVec_20 <=
        _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_20;
      s0_out_bits_2_exceptionVec_21 <=
        _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_21;
      s0_out_bits_2_exceptionVec_22 <=
        _wb_bits_oldest_T_19 & io_wb_6_bits_exceptionVec_22;
      s0_out_bits_2_exceptionVec_23 <=
        _wb_bits_oldest_T_19
          ? io_wb_6_bits_exceptionVec_23
          : io_wb_7_bits_exceptionVec_23;
      s0_out_bits_2_flushPipe <= _wb_bits_oldest_T_19 & io_wb_6_bits_flushPipe;
      s0_out_bits_2_trigger <=
        _wb_bits_oldest_T_19 ? io_wb_6_bits_trigger : io_wb_7_bits_trigger;
    end
    if (_wb_valid_T_66) begin
      s0_out_bits_3_robIdx_flag <=
        _wb_bits_left_oldest_T_9 ? io_wb_1_bits_robIdx_flag : io_wb_2_bits_robIdx_flag;
      s0_out_bits_3_robIdx_value <=
        _wb_bits_left_oldest_T_9 ? io_wb_1_bits_robIdx_value : io_wb_2_bits_robIdx_value;
      s0_out_bits_3_hasException <=
        _wb_bits_left_oldest_T_9 ? io_wb_1_bits_hasException : io_wb_2_bits_hasException;
      s0_out_bits_3_exceptionVec_2 <=
        _wb_bits_left_oldest_T_9
          ? io_wb_1_bits_exceptionVec_2
          : io_wb_2_bits_exceptionVec_2;
    end
    s0_out_bits_3_exceptionVec_0 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_0;
    s0_out_bits_3_exceptionVec_1 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_1;
    s0_out_bits_3_exceptionVec_3 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_3;
    s0_out_bits_3_exceptionVec_4 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_4;
    s0_out_bits_3_exceptionVec_5 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_5;
    s0_out_bits_3_exceptionVec_6 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_6;
    s0_out_bits_3_exceptionVec_7 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_7;
    s0_out_bits_3_exceptionVec_8 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_8;
    s0_out_bits_3_exceptionVec_9 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_9;
    s0_out_bits_3_exceptionVec_10 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_10;
    s0_out_bits_3_exceptionVec_11 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_11;
    s0_out_bits_3_exceptionVec_12 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_12;
    s0_out_bits_3_exceptionVec_13 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_13;
    s0_out_bits_3_exceptionVec_14 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_14;
    s0_out_bits_3_exceptionVec_15 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_15;
    s0_out_bits_3_exceptionVec_16 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_16;
    s0_out_bits_3_exceptionVec_17 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_17;
    s0_out_bits_3_exceptionVec_18 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_18;
    s0_out_bits_3_exceptionVec_19 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_19;
    s0_out_bits_3_exceptionVec_20 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_20;
    s0_out_bits_3_exceptionVec_21 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_21;
    s0_out_bits_3_exceptionVec_22 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_22;
    s0_out_bits_3_exceptionVec_23 <= ~_wb_valid_T_66 & s0_out_bits_3_exceptionVec_23;
    if (wb_valid_4) begin
      s0_out_bits_4_robIdx_flag <=
        _wb_bits_oldest_T_39 ? io_wb_11_bits_robIdx_flag : io_wb_12_bits_robIdx_flag;
      s0_out_bits_4_robIdx_value <=
        _wb_bits_oldest_T_39 ? io_wb_11_bits_robIdx_value : io_wb_12_bits_robIdx_value;
      s0_out_bits_4_hasException <=
        _wb_bits_oldest_T_39 ? io_wb_11_bits_hasException : io_wb_12_bits_hasException;
      s0_out_bits_4_exceptionVec_0 <= _wb_bits_oldest_T_39 & io_wb_11_bits_exceptionVec_0;
      s0_out_bits_4_exceptionVec_1 <= _wb_bits_oldest_T_39 & io_wb_11_bits_exceptionVec_1;
      s0_out_bits_4_exceptionVec_2 <= _wb_bits_oldest_T_39 & io_wb_11_bits_exceptionVec_2;
      s0_out_bits_4_exceptionVec_3 <=
        _wb_bits_oldest_T_39
          ? io_wb_11_bits_exceptionVec_3
          : io_wb_12_bits_exceptionVec_3;
      s0_out_bits_4_exceptionVec_4 <=
        _wb_bits_oldest_T_39
          ? io_wb_11_bits_exceptionVec_4
          : io_wb_12_bits_exceptionVec_4;
      s0_out_bits_4_exceptionVec_5 <=
        _wb_bits_oldest_T_39
          ? io_wb_11_bits_exceptionVec_5
          : io_wb_12_bits_exceptionVec_5;
      s0_out_bits_4_exceptionVec_6 <=
        _wb_bits_oldest_T_39
          ? io_wb_11_bits_exceptionVec_6
          : io_wb_12_bits_exceptionVec_6;
      s0_out_bits_4_exceptionVec_7 <=
        _wb_bits_oldest_T_39
          ? io_wb_11_bits_exceptionVec_7
          : io_wb_12_bits_exceptionVec_7;
      s0_out_bits_4_exceptionVec_8 <= _wb_bits_oldest_T_39 & io_wb_11_bits_exceptionVec_8;
      s0_out_bits_4_exceptionVec_9 <= _wb_bits_oldest_T_39 & io_wb_11_bits_exceptionVec_9;
      s0_out_bits_4_exceptionVec_10 <=
        _wb_bits_oldest_T_39 & io_wb_11_bits_exceptionVec_10;
      s0_out_bits_4_exceptionVec_11 <=
        _wb_bits_oldest_T_39 & io_wb_11_bits_exceptionVec_11;
      s0_out_bits_4_exceptionVec_12 <=
        _wb_bits_oldest_T_39 & io_wb_11_bits_exceptionVec_12;
      s0_out_bits_4_exceptionVec_13 <=
        _wb_bits_oldest_T_39
          ? io_wb_11_bits_exceptionVec_13
          : io_wb_12_bits_exceptionVec_13;
      s0_out_bits_4_exceptionVec_14 <=
        _wb_bits_oldest_T_39 & io_wb_11_bits_exceptionVec_14;
      s0_out_bits_4_exceptionVec_15 <=
        _wb_bits_oldest_T_39
          ? io_wb_11_bits_exceptionVec_15
          : io_wb_12_bits_exceptionVec_15;
      s0_out_bits_4_exceptionVec_16 <=
        _wb_bits_oldest_T_39 & io_wb_11_bits_exceptionVec_16;
      s0_out_bits_4_exceptionVec_17 <=
        _wb_bits_oldest_T_39 & io_wb_11_bits_exceptionVec_17;
      s0_out_bits_4_exceptionVec_18 <=
        _wb_bits_oldest_T_39 & io_wb_11_bits_exceptionVec_18;
      s0_out_bits_4_exceptionVec_19 <=
        _wb_bits_oldest_T_39 & io_wb_11_bits_exceptionVec_19;
      s0_out_bits_4_exceptionVec_20 <=
        _wb_bits_oldest_T_39 & io_wb_11_bits_exceptionVec_20;
      s0_out_bits_4_exceptionVec_21 <=
        _wb_bits_oldest_T_39
          ? io_wb_11_bits_exceptionVec_21
          : io_wb_12_bits_exceptionVec_21;
      s0_out_bits_4_exceptionVec_22 <=
        _wb_bits_oldest_T_39 & io_wb_11_bits_exceptionVec_22;
      s0_out_bits_4_exceptionVec_23 <=
        _wb_bits_oldest_T_39
          ? io_wb_11_bits_exceptionVec_23
          : io_wb_12_bits_exceptionVec_23;
      s0_out_bits_4_flushPipe <=
        _wb_bits_oldest_T_39 ? io_wb_11_bits_flushPipe : io_wb_12_bits_flushPipe;
      s0_out_bits_4_replayInst <=
        _wb_bits_oldest_T_39 ? io_wb_11_bits_replayInst : io_wb_12_bits_replayInst;
      s0_out_bits_4_trigger <=
        _wb_bits_oldest_T_39 ? io_wb_11_bits_trigger : io_wb_12_bits_trigger;
      s0_out_bits_4_vstartEn <=
        _wb_bits_oldest_T_39 ? io_wb_11_bits_vstartEn : io_wb_12_bits_vstartEn;
      s0_out_bits_4_vstart <=
        _wb_bits_oldest_T_39 ? io_wb_11_bits_vstart : io_wb_12_bits_vstart;
      s0_out_bits_4_vuopIdx <=
        _wb_bits_oldest_T_39 ? io_wb_11_bits_vuopIdx : io_wb_12_bits_vuopIdx;
      s0_out_bits_4_isVecLoad <=
        _wb_bits_oldest_T_39 ? io_wb_11_bits_isVecLoad : io_wb_12_bits_isVecLoad;
      s0_out_bits_4_isVlm <=
        _wb_bits_oldest_T_39 ? io_wb_11_bits_isVlm : io_wb_12_bits_isVlm;
      s0_out_bits_4_isStrided <=
        _wb_bits_oldest_T_39 ? io_wb_11_bits_isStrided : io_wb_12_bits_isStrided;
      s0_out_bits_4_isIndexed <=
        _wb_bits_oldest_T_39 ? io_wb_11_bits_isIndexed : io_wb_12_bits_isIndexed;
      s0_out_bits_4_isWhole <=
        _wb_bits_oldest_T_39 ? io_wb_11_bits_isWhole : io_wb_12_bits_isWhole;
      s0_out_bits_4_nf <= _wb_bits_oldest_T_39 ? io_wb_11_bits_nf : io_wb_12_bits_nf;
      s0_out_bits_4_vsew <=
        _wb_bits_oldest_T_39 ? io_wb_11_bits_vsew : io_wb_12_bits_vsew;
      s0_out_bits_4_veew <=
        _wb_bits_oldest_T_39 ? io_wb_11_bits_veew : io_wb_12_bits_veew;
      s0_out_bits_4_vlmul <=
        _wb_bits_oldest_T_39 ? io_wb_11_bits_vlmul : io_wb_12_bits_vlmul;
    end
    if (|{s1_valid_4, s1_valid_3, s1_valid_2, s1_valid_1, s1_valid_0}) begin
      s1_out_bits_robIdx_flag <=
        _s1_out_bits_oldest_T_9
          ? s1_out_bits_res_0_bits_robIdx_flag
          : s1_out_bits_res_1_bits_robIdx_flag;
      s1_out_bits_robIdx_value <=
        _s1_out_bits_oldest_T_9
          ? s1_out_bits_res_0_bits_robIdx_value
          : s1_out_bits_res_1_bits_robIdx_value;
      s1_out_bits_hasException <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_hasException
               : s0_out_bits_1_hasException)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_hasException
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_hasException
                  : s0_out_bits_4_hasException;
      s1_out_bits_exceptionVec_0 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_0
               : s0_out_bits_1_exceptionVec_0)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_0
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_0
                  : s0_out_bits_4_exceptionVec_0;
      s1_out_bits_exceptionVec_1 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_1
               : s0_out_bits_1_exceptionVec_1)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_1
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_1
                  : s0_out_bits_4_exceptionVec_1;
      s1_out_bits_exceptionVec_2 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_2
               : s0_out_bits_1_exceptionVec_2)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_2
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_2
                  : s0_out_bits_4_exceptionVec_2;
      s1_out_bits_exceptionVec_3 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_3
               : s0_out_bits_1_exceptionVec_3)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_3
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_3
                  : s0_out_bits_4_exceptionVec_3;
      s1_out_bits_exceptionVec_4 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_4
               : s0_out_bits_1_exceptionVec_4)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_4
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_4
                  : s0_out_bits_4_exceptionVec_4;
      s1_out_bits_exceptionVec_5 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_5
               : s0_out_bits_1_exceptionVec_5)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_5
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_5
                  : s0_out_bits_4_exceptionVec_5;
      s1_out_bits_exceptionVec_6 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_6
               : s0_out_bits_1_exceptionVec_6)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_6
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_6
                  : s0_out_bits_4_exceptionVec_6;
      s1_out_bits_exceptionVec_7 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_7
               : s0_out_bits_1_exceptionVec_7)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_7
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_7
                  : s0_out_bits_4_exceptionVec_7;
      s1_out_bits_exceptionVec_8 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_8
               : s0_out_bits_1_exceptionVec_8)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_8
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_8
                  : s0_out_bits_4_exceptionVec_8;
      s1_out_bits_exceptionVec_9 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_9
               : s0_out_bits_1_exceptionVec_9)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_9
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_9
                  : s0_out_bits_4_exceptionVec_9;
      s1_out_bits_exceptionVec_10 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_10
               : s0_out_bits_1_exceptionVec_10)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_10
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_10
                  : s0_out_bits_4_exceptionVec_10;
      s1_out_bits_exceptionVec_11 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_11
               : s0_out_bits_1_exceptionVec_11)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_11
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_11
                  : s0_out_bits_4_exceptionVec_11;
      s1_out_bits_exceptionVec_12 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_12
               : s0_out_bits_1_exceptionVec_12)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_12
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_12
                  : s0_out_bits_4_exceptionVec_12;
      s1_out_bits_exceptionVec_13 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_13
               : s0_out_bits_1_exceptionVec_13)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_13
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_13
                  : s0_out_bits_4_exceptionVec_13;
      s1_out_bits_exceptionVec_14 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_14
               : s0_out_bits_1_exceptionVec_14)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_14
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_14
                  : s0_out_bits_4_exceptionVec_14;
      s1_out_bits_exceptionVec_15 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_15
               : s0_out_bits_1_exceptionVec_15)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_15
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_15
                  : s0_out_bits_4_exceptionVec_15;
      s1_out_bits_exceptionVec_16 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_16
               : s0_out_bits_1_exceptionVec_16)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_16
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_16
                  : s0_out_bits_4_exceptionVec_16;
      s1_out_bits_exceptionVec_17 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_17
               : s0_out_bits_1_exceptionVec_17)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_17
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_17
                  : s0_out_bits_4_exceptionVec_17;
      s1_out_bits_exceptionVec_18 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_18
               : s0_out_bits_1_exceptionVec_18)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_18
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_18
                  : s0_out_bits_4_exceptionVec_18;
      s1_out_bits_exceptionVec_19 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_19
               : s0_out_bits_1_exceptionVec_19)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_19
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_19
                  : s0_out_bits_4_exceptionVec_19;
      s1_out_bits_exceptionVec_20 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_20
               : s0_out_bits_1_exceptionVec_20)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_20
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_20
                  : s0_out_bits_4_exceptionVec_20;
      s1_out_bits_exceptionVec_21 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_21
               : s0_out_bits_1_exceptionVec_21)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_21
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_21
                  : s0_out_bits_4_exceptionVec_21;
      s1_out_bits_exceptionVec_22 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_22
               : s0_out_bits_1_exceptionVec_22)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_22
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_22
                  : s0_out_bits_4_exceptionVec_22;
      s1_out_bits_exceptionVec_23 <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_exceptionVec_23
               : s0_out_bits_1_exceptionVec_23)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_exceptionVec_23
              : _s1_out_bits_right_right_oldest_T_9
                  ? s0_out_bits_3_exceptionVec_23
                  : s0_out_bits_4_exceptionVec_23;
      s1_out_bits_flushPipe <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9
               ? s0_out_bits_0_flushPipe
               : s0_out_bits_1_flushPipe)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_flushPipe
              : ~_s1_out_bits_right_right_oldest_T_9 & s0_out_bits_4_flushPipe;
      s1_out_bits_replayInst <=
        _s1_out_bits_oldest_T_9
          ? ~_s1_out_bits_left_oldest_T_9 & s0_out_bits_1_replayInst
          : ~_s1_out_bits_right_oldest_T_9 & ~_s1_out_bits_right_right_oldest_T_9
            & s0_out_bits_4_replayInst;
      s1_out_bits_trigger <=
        _s1_out_bits_oldest_T_9
          ? (_s1_out_bits_left_oldest_T_9 ? 4'hF : s0_out_bits_1_trigger)
          : _s1_out_bits_right_oldest_T_9
              ? s0_out_bits_2_trigger
              : _s1_out_bits_right_right_oldest_T_9 ? 4'hF : s0_out_bits_4_trigger;
      s1_out_bits_vstartEn <=
        ~_s1_out_bits_oldest_T_9 & ~_s1_out_bits_right_oldest_T_9
        & ~_s1_out_bits_right_right_oldest_T_9 & s0_out_bits_4_vstartEn;
      s1_out_bits_vstart <= _GEN_4 ? 64'h0 : s0_out_bits_4_vstart;
      s1_out_bits_isVecLoad <=
        ~_s1_out_bits_oldest_T_9 & ~_s1_out_bits_right_oldest_T_9
        & ~_s1_out_bits_right_right_oldest_T_9 & s0_out_bits_4_isVecLoad;
      s1_out_bits_isVlm <=
        ~_s1_out_bits_oldest_T_9 & ~_s1_out_bits_right_oldest_T_9
        & ~_s1_out_bits_right_right_oldest_T_9 & s0_out_bits_4_isVlm;
      s1_out_bits_isStrided <=
        ~_s1_out_bits_oldest_T_9 & ~_s1_out_bits_right_oldest_T_9
        & ~_s1_out_bits_right_right_oldest_T_9 & s0_out_bits_4_isStrided;
      s1_out_bits_isIndexed <=
        ~_s1_out_bits_oldest_T_9 & ~_s1_out_bits_right_oldest_T_9
        & ~_s1_out_bits_right_right_oldest_T_9 & s0_out_bits_4_isIndexed;
      s1_out_bits_isWhole <=
        ~_s1_out_bits_oldest_T_9 & ~_s1_out_bits_right_oldest_T_9
        & ~_s1_out_bits_right_right_oldest_T_9 & s0_out_bits_4_isWhole;
      s1_out_bits_nf <= _GEN_4 ? 3'h0 : s0_out_bits_4_nf;
      s1_out_bits_vsew <= _GEN_4 ? 2'h0 : s0_out_bits_4_vsew;
      s1_out_bits_veew <= _GEN_4 ? 2'h0 : s0_out_bits_4_veew;
      s1_out_bits_vlmul <= _GEN_4 ? 3'h0 : s0_out_bits_4_vlmul;
    end
    s1_out_valid <= |{s1_valid_4, s1_valid_3, s1_valid_2, s1_valid_1, s1_valid_0};
    enq_s1_valid <=
      (|{enq_s0_valid_5,
         enq_s0_valid_4,
         enq_s0_valid_3,
         enq_s0_valid_2,
         enq_s0_valid_1,
         enq_s0_valid_0}) & ~io_redirect_valid & ~io_flush;
    if ((|{enq_s0_valid_5,
           enq_s0_valid_4,
           enq_s0_valid_3,
           enq_s0_valid_2,
           enq_s0_valid_1,
           enq_s0_valid_0}) & ~io_redirect_valid & ~io_flush) begin
      enq_s1_bits_robIdx_flag <=
        _enq_s1_bits_T_2
          ? (enq_s0_valid_0
               ? io_enq_0_bits_robIdx_flag
               : enq_s0_valid_1 ? io_enq_1_bits_robIdx_flag : io_enq_2_bits_robIdx_flag)
          : enq_s0_valid_3
              ? io_enq_3_bits_robIdx_flag
              : enq_s0_valid_4 ? io_enq_4_bits_robIdx_flag : io_enq_5_bits_robIdx_flag;
      enq_s1_bits_robIdx_value <=
        _enq_s1_bits_T_2
          ? (enq_s0_valid_0
               ? io_enq_0_bits_robIdx_value
               : enq_s0_valid_1 ? io_enq_1_bits_robIdx_value : io_enq_2_bits_robIdx_value)
          : enq_s0_valid_3
              ? io_enq_3_bits_robIdx_value
              : enq_s0_valid_4 ? io_enq_4_bits_robIdx_value : io_enq_5_bits_robIdx_value;
      enq_s1_bits_ftqPtr_value <=
        _enq_s1_bits_T_2
          ? (enq_s0_valid_0
               ? io_enq_0_bits_ftqPtr_value
               : enq_s0_valid_1 ? io_enq_1_bits_ftqPtr_value : io_enq_2_bits_ftqPtr_value)
          : enq_s0_valid_3
              ? io_enq_3_bits_ftqPtr_value
              : enq_s0_valid_4 ? io_enq_4_bits_ftqPtr_value : io_enq_5_bits_ftqPtr_value;
      enq_s1_bits_ftqOffset <=
        _enq_s1_bits_T_2
          ? (enq_s0_valid_0
               ? io_enq_0_bits_ftqOffset
               : enq_s0_valid_1 ? io_enq_1_bits_ftqOffset : io_enq_2_bits_ftqOffset)
          : enq_s0_valid_3
              ? io_enq_3_bits_ftqOffset
              : enq_s0_valid_4 ? io_enq_4_bits_ftqOffset : io_enq_5_bits_ftqOffset;
      enq_s1_bits_hasException <=
        _enq_s1_bits_T_2
          ? (enq_s0_valid_0
               ? io_enq_0_bits_hasException
               : enq_s0_valid_1 ? io_enq_1_bits_hasException : io_enq_2_bits_hasException)
          : enq_s0_valid_3
              ? io_enq_3_bits_hasException
              : enq_s0_valid_4 ? io_enq_4_bits_hasException : io_enq_5_bits_hasException;
      enq_s1_bits_exceptionVec_0 <=
        _enq_s1_bits_T_2
          ? (enq_s0_valid_0
               ? io_enq_0_bits_exceptionVec_0
               : enq_s0_valid_1
                   ? io_enq_1_bits_exceptionVec_0
                   : io_enq_2_bits_exceptionVec_0)
          : enq_s0_valid_3
              ? io_enq_3_bits_exceptionVec_0
              : enq_s0_valid_4
                  ? io_enq_4_bits_exceptionVec_0
                  : io_enq_5_bits_exceptionVec_0;
      enq_s1_bits_exceptionVec_1 <=
        _enq_s1_bits_T_2
          ? (enq_s0_valid_0
               ? io_enq_0_bits_exceptionVec_1
               : enq_s0_valid_1
                   ? io_enq_1_bits_exceptionVec_1
                   : io_enq_2_bits_exceptionVec_1)
          : enq_s0_valid_3
              ? io_enq_3_bits_exceptionVec_1
              : enq_s0_valid_4
                  ? io_enq_4_bits_exceptionVec_1
                  : io_enq_5_bits_exceptionVec_1;
      enq_s1_bits_exceptionVec_2 <=
        _enq_s1_bits_T_2
          ? (enq_s0_valid_0
               ? io_enq_0_bits_exceptionVec_2
               : enq_s0_valid_1
                   ? io_enq_1_bits_exceptionVec_2
                   : io_enq_2_bits_exceptionVec_2)
          : enq_s0_valid_3
              ? io_enq_3_bits_exceptionVec_2
              : enq_s0_valid_4
                  ? io_enq_4_bits_exceptionVec_2
                  : io_enq_5_bits_exceptionVec_2;
      enq_s1_bits_exceptionVec_3 <=
        _enq_s1_bits_T_2
          ? (enq_s0_valid_0
               ? io_enq_0_bits_exceptionVec_3
               : enq_s0_valid_1
                   ? io_enq_1_bits_exceptionVec_3
                   : io_enq_2_bits_exceptionVec_3)
          : enq_s0_valid_3
              ? io_enq_3_bits_exceptionVec_3
              : enq_s0_valid_4
                  ? io_enq_4_bits_exceptionVec_3
                  : io_enq_5_bits_exceptionVec_3;
      enq_s1_bits_exceptionVec_12 <=
        _enq_s1_bits_T_2
          ? (enq_s0_valid_0
               ? io_enq_0_bits_exceptionVec_12
               : enq_s0_valid_1
                   ? io_enq_1_bits_exceptionVec_12
                   : io_enq_2_bits_exceptionVec_12)
          : enq_s0_valid_3
              ? io_enq_3_bits_exceptionVec_12
              : enq_s0_valid_4
                  ? io_enq_4_bits_exceptionVec_12
                  : io_enq_5_bits_exceptionVec_12;
      enq_s1_bits_exceptionVec_20 <=
        _enq_s1_bits_T_2
          ? (enq_s0_valid_0
               ? io_enq_0_bits_exceptionVec_20
               : enq_s0_valid_1
                   ? io_enq_1_bits_exceptionVec_20
                   : io_enq_2_bits_exceptionVec_20)
          : enq_s0_valid_3
              ? io_enq_3_bits_exceptionVec_20
              : enq_s0_valid_4
                  ? io_enq_4_bits_exceptionVec_20
                  : io_enq_5_bits_exceptionVec_20;
      enq_s1_bits_exceptionVec_22 <=
        _enq_s1_bits_T_2
          ? (enq_s0_valid_0
               ? io_enq_0_bits_exceptionVec_22
               : enq_s0_valid_1
                   ? io_enq_1_bits_exceptionVec_22
                   : io_enq_2_bits_exceptionVec_22)
          : enq_s0_valid_3
              ? io_enq_3_bits_exceptionVec_22
              : enq_s0_valid_4
                  ? io_enq_4_bits_exceptionVec_22
                  : io_enq_5_bits_exceptionVec_22;
      enq_s1_bits_isFetchMalAddr <=
        _enq_s1_bits_T_2
          ? (enq_s0_valid_0
               ? io_enq_0_bits_isFetchMalAddr
               : enq_s0_valid_1
                   ? io_enq_1_bits_isFetchMalAddr
                   : io_enq_2_bits_isFetchMalAddr)
          : enq_s0_valid_3
              ? io_enq_3_bits_isFetchMalAddr
              : enq_s0_valid_4
                  ? io_enq_4_bits_isFetchMalAddr
                  : io_enq_5_bits_isFetchMalAddr;
      enq_s1_bits_flushPipe <=
        _enq_s1_bits_T_2
          ? (enq_s0_valid_0
               ? io_enq_0_bits_flushPipe & ~io_enq_0_bits_hasException
               : enq_s0_valid_1
                   ? io_enq_1_bits_flushPipe & ~io_enq_1_bits_hasException
                   : io_enq_2_bits_flushPipe & ~io_enq_2_bits_hasException)
          : enq_s0_valid_3
              ? io_enq_3_bits_flushPipe & ~io_enq_3_bits_hasException
              : enq_s0_valid_4
                  ? io_enq_4_bits_flushPipe & ~io_enq_4_bits_hasException
                  : io_enq_5_bits_flushPipe & ~io_enq_5_bits_hasException;
      enq_s1_bits_singleStep <=
        _enq_s1_bits_T_2
          ? (enq_s0_valid_0
               ? io_enq_0_bits_singleStep
               : enq_s0_valid_1 ? io_enq_1_bits_singleStep : io_enq_2_bits_singleStep)
          : enq_s0_valid_3
              ? io_enq_3_bits_singleStep
              : enq_s0_valid_4 ? io_enq_4_bits_singleStep : io_enq_5_bits_singleStep;
      enq_s1_bits_crossPageIPFFix <=
        _enq_s1_bits_T_2
          ? (enq_s0_valid_0
               ? io_enq_0_bits_crossPageIPFFix
               : enq_s0_valid_1
                   ? io_enq_1_bits_crossPageIPFFix
                   : io_enq_2_bits_crossPageIPFFix)
          : enq_s0_valid_3
              ? io_enq_3_bits_crossPageIPFFix
              : enq_s0_valid_4
                  ? io_enq_4_bits_crossPageIPFFix
                  : io_enq_5_bits_crossPageIPFFix;
      enq_s1_bits_trigger <=
        _enq_s1_bits_T_2
          ? (enq_s0_valid_0
               ? io_enq_0_bits_trigger
               : enq_s0_valid_1 ? io_enq_1_bits_trigger : io_enq_2_bits_trigger)
          : enq_s0_valid_3
              ? io_enq_3_bits_trigger
              : enq_s0_valid_4 ? io_enq_4_bits_trigger : io_enq_5_bits_trigger;
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:33];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [5:0] i = 6'h0; i < 6'h22; i += 6'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        currentValid = _RANDOM[6'h0][0];
        current_robIdx_flag = _RANDOM[6'h0][1];
        current_robIdx_value = _RANDOM[6'h0][9:2];
        current_ftqPtr_value = _RANDOM[6'h0][16:11];
        current_ftqOffset = _RANDOM[6'h0][20:17];
        current_hasException = _RANDOM[6'h0][21];
        current_isEnqExcp = _RANDOM[6'h0][22];
        current_exceptionVec_0 = _RANDOM[6'h0][23];
        current_exceptionVec_1 = _RANDOM[6'h0][24];
        current_exceptionVec_2 = _RANDOM[6'h0][25];
        current_exceptionVec_3 = _RANDOM[6'h0][26];
        current_exceptionVec_4 = _RANDOM[6'h0][27];
        current_exceptionVec_5 = _RANDOM[6'h0][28];
        current_exceptionVec_6 = _RANDOM[6'h0][29];
        current_exceptionVec_7 = _RANDOM[6'h0][30];
        current_exceptionVec_8 = _RANDOM[6'h0][31];
        current_exceptionVec_9 = _RANDOM[6'h1][0];
        current_exceptionVec_10 = _RANDOM[6'h1][1];
        current_exceptionVec_11 = _RANDOM[6'h1][2];
        current_exceptionVec_12 = _RANDOM[6'h1][3];
        current_exceptionVec_13 = _RANDOM[6'h1][4];
        current_exceptionVec_14 = _RANDOM[6'h1][5];
        current_exceptionVec_15 = _RANDOM[6'h1][6];
        current_exceptionVec_16 = _RANDOM[6'h1][7];
        current_exceptionVec_17 = _RANDOM[6'h1][8];
        current_exceptionVec_18 = _RANDOM[6'h1][9];
        current_exceptionVec_19 = _RANDOM[6'h1][10];
        current_exceptionVec_20 = _RANDOM[6'h1][11];
        current_exceptionVec_21 = _RANDOM[6'h1][12];
        current_exceptionVec_22 = _RANDOM[6'h1][13];
        current_exceptionVec_23 = _RANDOM[6'h1][14];
        current_isFetchMalAddr = _RANDOM[6'h1][15];
        current_flushPipe = _RANDOM[6'h1][16];
        current_replayInst = _RANDOM[6'h1][18];
        current_singleStep = _RANDOM[6'h1][19];
        current_crossPageIPFFix = _RANDOM[6'h1][20];
        current_trigger = _RANDOM[6'h1][24:21];
        current_vstartEn = _RANDOM[6'h1][25];
        current_vstart = {_RANDOM[6'h1][31:26], _RANDOM[6'h2], _RANDOM[6'h3][25:0]};
        current_isVecLoad = _RANDOM[6'h4][1];
        current_isVlm = _RANDOM[6'h4][2];
        current_isStrided = _RANDOM[6'h4][3];
        current_isIndexed = _RANDOM[6'h4][4];
        current_isWhole = _RANDOM[6'h4][5];
        current_nf = _RANDOM[6'h4][8:6];
        current_vsew = _RANDOM[6'h4][10:9];
        current_veew = _RANDOM[6'h4][12:11];
        current_vlmul = _RANDOM[6'h4][15:13];
        lastCycleFlush = _RANDOM[6'h4][16];
        s0_out_valid_0 = _RANDOM[6'h4][17];
        s0_out_valid_1 = _RANDOM[6'h4][18];
        s0_out_valid_2 = _RANDOM[6'h4][19];
        s0_out_valid_3 = _RANDOM[6'h4][20];
        s0_out_valid_4 = _RANDOM[6'h4][21];
        s0_out_bits_0_robIdx_flag = _RANDOM[6'h4][22];
        s0_out_bits_0_robIdx_value = _RANDOM[6'h4][30:23];
        s0_out_bits_0_hasException = _RANDOM[6'h5][10];
        s0_out_bits_0_exceptionVec_0 = _RANDOM[6'h5][12];
        s0_out_bits_0_exceptionVec_1 = _RANDOM[6'h5][13];
        s0_out_bits_0_exceptionVec_2 = _RANDOM[6'h5][14];
        s0_out_bits_0_exceptionVec_3 = _RANDOM[6'h5][15];
        s0_out_bits_0_exceptionVec_4 = _RANDOM[6'h5][16];
        s0_out_bits_0_exceptionVec_5 = _RANDOM[6'h5][17];
        s0_out_bits_0_exceptionVec_6 = _RANDOM[6'h5][18];
        s0_out_bits_0_exceptionVec_7 = _RANDOM[6'h5][19];
        s0_out_bits_0_exceptionVec_8 = _RANDOM[6'h5][20];
        s0_out_bits_0_exceptionVec_9 = _RANDOM[6'h5][21];
        s0_out_bits_0_exceptionVec_10 = _RANDOM[6'h5][22];
        s0_out_bits_0_exceptionVec_11 = _RANDOM[6'h5][23];
        s0_out_bits_0_exceptionVec_12 = _RANDOM[6'h5][24];
        s0_out_bits_0_exceptionVec_13 = _RANDOM[6'h5][25];
        s0_out_bits_0_exceptionVec_14 = _RANDOM[6'h5][26];
        s0_out_bits_0_exceptionVec_15 = _RANDOM[6'h5][27];
        s0_out_bits_0_exceptionVec_16 = _RANDOM[6'h5][28];
        s0_out_bits_0_exceptionVec_17 = _RANDOM[6'h5][29];
        s0_out_bits_0_exceptionVec_18 = _RANDOM[6'h5][30];
        s0_out_bits_0_exceptionVec_19 = _RANDOM[6'h5][31];
        s0_out_bits_0_exceptionVec_20 = _RANDOM[6'h6][0];
        s0_out_bits_0_exceptionVec_21 = _RANDOM[6'h6][1];
        s0_out_bits_0_exceptionVec_22 = _RANDOM[6'h6][2];
        s0_out_bits_0_exceptionVec_23 = _RANDOM[6'h6][3];
        s0_out_bits_0_flushPipe = _RANDOM[6'h6][5];
        s0_out_bits_1_robIdx_flag = _RANDOM[6'h9][5];
        s0_out_bits_1_robIdx_value = _RANDOM[6'h9][13:6];
        s0_out_bits_1_hasException = _RANDOM[6'h9][25];
        s0_out_bits_1_exceptionVec_0 = _RANDOM[6'h9][27];
        s0_out_bits_1_exceptionVec_1 = _RANDOM[6'h9][28];
        s0_out_bits_1_exceptionVec_2 = _RANDOM[6'h9][29];
        s0_out_bits_1_exceptionVec_3 = _RANDOM[6'h9][30];
        s0_out_bits_1_exceptionVec_4 = _RANDOM[6'h9][31];
        s0_out_bits_1_exceptionVec_5 = _RANDOM[6'hA][0];
        s0_out_bits_1_exceptionVec_6 = _RANDOM[6'hA][1];
        s0_out_bits_1_exceptionVec_7 = _RANDOM[6'hA][2];
        s0_out_bits_1_exceptionVec_8 = _RANDOM[6'hA][3];
        s0_out_bits_1_exceptionVec_9 = _RANDOM[6'hA][4];
        s0_out_bits_1_exceptionVec_10 = _RANDOM[6'hA][5];
        s0_out_bits_1_exceptionVec_11 = _RANDOM[6'hA][6];
        s0_out_bits_1_exceptionVec_12 = _RANDOM[6'hA][7];
        s0_out_bits_1_exceptionVec_13 = _RANDOM[6'hA][8];
        s0_out_bits_1_exceptionVec_14 = _RANDOM[6'hA][9];
        s0_out_bits_1_exceptionVec_15 = _RANDOM[6'hA][10];
        s0_out_bits_1_exceptionVec_16 = _RANDOM[6'hA][11];
        s0_out_bits_1_exceptionVec_17 = _RANDOM[6'hA][12];
        s0_out_bits_1_exceptionVec_18 = _RANDOM[6'hA][13];
        s0_out_bits_1_exceptionVec_19 = _RANDOM[6'hA][14];
        s0_out_bits_1_exceptionVec_20 = _RANDOM[6'hA][15];
        s0_out_bits_1_exceptionVec_21 = _RANDOM[6'hA][16];
        s0_out_bits_1_exceptionVec_22 = _RANDOM[6'hA][17];
        s0_out_bits_1_exceptionVec_23 = _RANDOM[6'hA][18];
        s0_out_bits_1_flushPipe = _RANDOM[6'hA][20];
        s0_out_bits_1_replayInst = _RANDOM[6'hA][22];
        s0_out_bits_1_trigger = _RANDOM[6'hA][28:25];
        s0_out_bits_2_robIdx_flag = _RANDOM[6'hD][20];
        s0_out_bits_2_robIdx_value = _RANDOM[6'hD][28:21];
        s0_out_bits_2_hasException = _RANDOM[6'hE][8];
        s0_out_bits_2_exceptionVec_0 = _RANDOM[6'hE][10];
        s0_out_bits_2_exceptionVec_1 = _RANDOM[6'hE][11];
        s0_out_bits_2_exceptionVec_2 = _RANDOM[6'hE][12];
        s0_out_bits_2_exceptionVec_3 = _RANDOM[6'hE][13];
        s0_out_bits_2_exceptionVec_4 = _RANDOM[6'hE][14];
        s0_out_bits_2_exceptionVec_5 = _RANDOM[6'hE][15];
        s0_out_bits_2_exceptionVec_6 = _RANDOM[6'hE][16];
        s0_out_bits_2_exceptionVec_7 = _RANDOM[6'hE][17];
        s0_out_bits_2_exceptionVec_8 = _RANDOM[6'hE][18];
        s0_out_bits_2_exceptionVec_9 = _RANDOM[6'hE][19];
        s0_out_bits_2_exceptionVec_10 = _RANDOM[6'hE][20];
        s0_out_bits_2_exceptionVec_11 = _RANDOM[6'hE][21];
        s0_out_bits_2_exceptionVec_12 = _RANDOM[6'hE][22];
        s0_out_bits_2_exceptionVec_13 = _RANDOM[6'hE][23];
        s0_out_bits_2_exceptionVec_14 = _RANDOM[6'hE][24];
        s0_out_bits_2_exceptionVec_15 = _RANDOM[6'hE][25];
        s0_out_bits_2_exceptionVec_16 = _RANDOM[6'hE][26];
        s0_out_bits_2_exceptionVec_17 = _RANDOM[6'hE][27];
        s0_out_bits_2_exceptionVec_18 = _RANDOM[6'hE][28];
        s0_out_bits_2_exceptionVec_19 = _RANDOM[6'hE][29];
        s0_out_bits_2_exceptionVec_20 = _RANDOM[6'hE][30];
        s0_out_bits_2_exceptionVec_21 = _RANDOM[6'hE][31];
        s0_out_bits_2_exceptionVec_22 = _RANDOM[6'hF][0];
        s0_out_bits_2_exceptionVec_23 = _RANDOM[6'hF][1];
        s0_out_bits_2_flushPipe = _RANDOM[6'hF][3];
        s0_out_bits_2_trigger = _RANDOM[6'hF][11:8];
        s0_out_bits_3_robIdx_flag = _RANDOM[6'h12][3];
        s0_out_bits_3_robIdx_value = _RANDOM[6'h12][11:4];
        s0_out_bits_3_hasException = _RANDOM[6'h12][23];
        s0_out_bits_3_exceptionVec_0 = _RANDOM[6'h12][25];
        s0_out_bits_3_exceptionVec_1 = _RANDOM[6'h12][26];
        s0_out_bits_3_exceptionVec_2 = _RANDOM[6'h12][27];
        s0_out_bits_3_exceptionVec_3 = _RANDOM[6'h12][28];
        s0_out_bits_3_exceptionVec_4 = _RANDOM[6'h12][29];
        s0_out_bits_3_exceptionVec_5 = _RANDOM[6'h12][30];
        s0_out_bits_3_exceptionVec_6 = _RANDOM[6'h12][31];
        s0_out_bits_3_exceptionVec_7 = _RANDOM[6'h13][0];
        s0_out_bits_3_exceptionVec_8 = _RANDOM[6'h13][1];
        s0_out_bits_3_exceptionVec_9 = _RANDOM[6'h13][2];
        s0_out_bits_3_exceptionVec_10 = _RANDOM[6'h13][3];
        s0_out_bits_3_exceptionVec_11 = _RANDOM[6'h13][4];
        s0_out_bits_3_exceptionVec_12 = _RANDOM[6'h13][5];
        s0_out_bits_3_exceptionVec_13 = _RANDOM[6'h13][6];
        s0_out_bits_3_exceptionVec_14 = _RANDOM[6'h13][7];
        s0_out_bits_3_exceptionVec_15 = _RANDOM[6'h13][8];
        s0_out_bits_3_exceptionVec_16 = _RANDOM[6'h13][9];
        s0_out_bits_3_exceptionVec_17 = _RANDOM[6'h13][10];
        s0_out_bits_3_exceptionVec_18 = _RANDOM[6'h13][11];
        s0_out_bits_3_exceptionVec_19 = _RANDOM[6'h13][12];
        s0_out_bits_3_exceptionVec_20 = _RANDOM[6'h13][13];
        s0_out_bits_3_exceptionVec_21 = _RANDOM[6'h13][14];
        s0_out_bits_3_exceptionVec_22 = _RANDOM[6'h13][15];
        s0_out_bits_3_exceptionVec_23 = _RANDOM[6'h13][16];
        s0_out_bits_4_robIdx_flag = _RANDOM[6'h16][18];
        s0_out_bits_4_robIdx_value = _RANDOM[6'h16][26:19];
        s0_out_bits_4_hasException = _RANDOM[6'h17][6];
        s0_out_bits_4_exceptionVec_0 = _RANDOM[6'h17][8];
        s0_out_bits_4_exceptionVec_1 = _RANDOM[6'h17][9];
        s0_out_bits_4_exceptionVec_2 = _RANDOM[6'h17][10];
        s0_out_bits_4_exceptionVec_3 = _RANDOM[6'h17][11];
        s0_out_bits_4_exceptionVec_4 = _RANDOM[6'h17][12];
        s0_out_bits_4_exceptionVec_5 = _RANDOM[6'h17][13];
        s0_out_bits_4_exceptionVec_6 = _RANDOM[6'h17][14];
        s0_out_bits_4_exceptionVec_7 = _RANDOM[6'h17][15];
        s0_out_bits_4_exceptionVec_8 = _RANDOM[6'h17][16];
        s0_out_bits_4_exceptionVec_9 = _RANDOM[6'h17][17];
        s0_out_bits_4_exceptionVec_10 = _RANDOM[6'h17][18];
        s0_out_bits_4_exceptionVec_11 = _RANDOM[6'h17][19];
        s0_out_bits_4_exceptionVec_12 = _RANDOM[6'h17][20];
        s0_out_bits_4_exceptionVec_13 = _RANDOM[6'h17][21];
        s0_out_bits_4_exceptionVec_14 = _RANDOM[6'h17][22];
        s0_out_bits_4_exceptionVec_15 = _RANDOM[6'h17][23];
        s0_out_bits_4_exceptionVec_16 = _RANDOM[6'h17][24];
        s0_out_bits_4_exceptionVec_17 = _RANDOM[6'h17][25];
        s0_out_bits_4_exceptionVec_18 = _RANDOM[6'h17][26];
        s0_out_bits_4_exceptionVec_19 = _RANDOM[6'h17][27];
        s0_out_bits_4_exceptionVec_20 = _RANDOM[6'h17][28];
        s0_out_bits_4_exceptionVec_21 = _RANDOM[6'h17][29];
        s0_out_bits_4_exceptionVec_22 = _RANDOM[6'h17][30];
        s0_out_bits_4_exceptionVec_23 = _RANDOM[6'h17][31];
        s0_out_bits_4_flushPipe = _RANDOM[6'h18][1];
        s0_out_bits_4_replayInst = _RANDOM[6'h18][3];
        s0_out_bits_4_trigger = _RANDOM[6'h18][9:6];
        s0_out_bits_4_vstartEn = _RANDOM[6'h18][10];
        s0_out_bits_4_vstart =
          {_RANDOM[6'h18][31:11], _RANDOM[6'h19], _RANDOM[6'h1A][10:0]};
        s0_out_bits_4_vuopIdx = _RANDOM[6'h1A][17:11];
        s0_out_bits_4_isVecLoad = _RANDOM[6'h1A][18];
        s0_out_bits_4_isVlm = _RANDOM[6'h1A][19];
        s0_out_bits_4_isStrided = _RANDOM[6'h1A][20];
        s0_out_bits_4_isIndexed = _RANDOM[6'h1A][21];
        s0_out_bits_4_isWhole = _RANDOM[6'h1A][22];
        s0_out_bits_4_nf = _RANDOM[6'h1A][25:23];
        s0_out_bits_4_vsew = _RANDOM[6'h1A][27:26];
        s0_out_bits_4_veew = _RANDOM[6'h1A][29:28];
        s0_out_bits_4_vlmul = {_RANDOM[6'h1A][31:30], _RANDOM[6'h1B][0]};
        s1_out_bits_robIdx_flag = _RANDOM[6'h1B][1];
        s1_out_bits_robIdx_value = _RANDOM[6'h1B][9:2];
        s1_out_bits_hasException = _RANDOM[6'h1B][21];
        s1_out_bits_exceptionVec_0 = _RANDOM[6'h1B][23];
        s1_out_bits_exceptionVec_1 = _RANDOM[6'h1B][24];
        s1_out_bits_exceptionVec_2 = _RANDOM[6'h1B][25];
        s1_out_bits_exceptionVec_3 = _RANDOM[6'h1B][26];
        s1_out_bits_exceptionVec_4 = _RANDOM[6'h1B][27];
        s1_out_bits_exceptionVec_5 = _RANDOM[6'h1B][28];
        s1_out_bits_exceptionVec_6 = _RANDOM[6'h1B][29];
        s1_out_bits_exceptionVec_7 = _RANDOM[6'h1B][30];
        s1_out_bits_exceptionVec_8 = _RANDOM[6'h1B][31];
        s1_out_bits_exceptionVec_9 = _RANDOM[6'h1C][0];
        s1_out_bits_exceptionVec_10 = _RANDOM[6'h1C][1];
        s1_out_bits_exceptionVec_11 = _RANDOM[6'h1C][2];
        s1_out_bits_exceptionVec_12 = _RANDOM[6'h1C][3];
        s1_out_bits_exceptionVec_13 = _RANDOM[6'h1C][4];
        s1_out_bits_exceptionVec_14 = _RANDOM[6'h1C][5];
        s1_out_bits_exceptionVec_15 = _RANDOM[6'h1C][6];
        s1_out_bits_exceptionVec_16 = _RANDOM[6'h1C][7];
        s1_out_bits_exceptionVec_17 = _RANDOM[6'h1C][8];
        s1_out_bits_exceptionVec_18 = _RANDOM[6'h1C][9];
        s1_out_bits_exceptionVec_19 = _RANDOM[6'h1C][10];
        s1_out_bits_exceptionVec_20 = _RANDOM[6'h1C][11];
        s1_out_bits_exceptionVec_21 = _RANDOM[6'h1C][12];
        s1_out_bits_exceptionVec_22 = _RANDOM[6'h1C][13];
        s1_out_bits_exceptionVec_23 = _RANDOM[6'h1C][14];
        s1_out_bits_flushPipe = _RANDOM[6'h1C][16];
        s1_out_bits_replayInst = _RANDOM[6'h1C][18];
        s1_out_bits_trigger = _RANDOM[6'h1C][24:21];
        s1_out_bits_vstartEn = _RANDOM[6'h1C][25];
        s1_out_bits_vstart =
          {_RANDOM[6'h1C][31:26], _RANDOM[6'h1D], _RANDOM[6'h1E][25:0]};
        s1_out_bits_isVecLoad = _RANDOM[6'h1F][1];
        s1_out_bits_isVlm = _RANDOM[6'h1F][2];
        s1_out_bits_isStrided = _RANDOM[6'h1F][3];
        s1_out_bits_isIndexed = _RANDOM[6'h1F][4];
        s1_out_bits_isWhole = _RANDOM[6'h1F][5];
        s1_out_bits_nf = _RANDOM[6'h1F][8:6];
        s1_out_bits_vsew = _RANDOM[6'h1F][10:9];
        s1_out_bits_veew = _RANDOM[6'h1F][12:11];
        s1_out_bits_vlmul = _RANDOM[6'h1F][15:13];
        s1_out_valid = _RANDOM[6'h1F][16];
        enq_s1_valid = _RANDOM[6'h1F][17];
        enq_s1_bits_robIdx_flag = _RANDOM[6'h1F][18];
        enq_s1_bits_robIdx_value = _RANDOM[6'h1F][26:19];
        enq_s1_bits_ftqPtr_value = {_RANDOM[6'h1F][31:28], _RANDOM[6'h20][1:0]};
        enq_s1_bits_ftqOffset = _RANDOM[6'h20][5:2];
        enq_s1_bits_hasException = _RANDOM[6'h20][6];
        enq_s1_bits_exceptionVec_0 = _RANDOM[6'h20][8];
        enq_s1_bits_exceptionVec_1 = _RANDOM[6'h20][9];
        enq_s1_bits_exceptionVec_2 = _RANDOM[6'h20][10];
        enq_s1_bits_exceptionVec_3 = _RANDOM[6'h20][11];
        enq_s1_bits_exceptionVec_12 = _RANDOM[6'h20][20];
        enq_s1_bits_exceptionVec_20 = _RANDOM[6'h20][28];
        enq_s1_bits_exceptionVec_22 = _RANDOM[6'h20][30];
        enq_s1_bits_isFetchMalAddr = _RANDOM[6'h21][0];
        enq_s1_bits_flushPipe = _RANDOM[6'h21][1];
        enq_s1_bits_singleStep = _RANDOM[6'h21][4];
        enq_s1_bits_crossPageIPFFix = _RANDOM[6'h21][5];
        enq_s1_bits_trigger = _RANDOM[6'h21][9:6];
      `endif // RANDOMIZE_REG_INIT
      if (reset)
        currentValid = 1'h0;
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_state_valid = currentValid;
  assign io_state_bits_robIdx_flag = current_robIdx_flag;
  assign io_state_bits_robIdx_value = current_robIdx_value;
  assign io_state_bits_ftqPtr_value = current_ftqPtr_value;
  assign io_state_bits_ftqOffset = current_ftqOffset;
  assign io_state_bits_hasException = current_hasException;
  assign io_state_bits_isEnqExcp = current_isEnqExcp;
  assign io_state_bits_exceptionVec_0 = current_exceptionVec_0;
  assign io_state_bits_exceptionVec_1 = current_exceptionVec_1;
  assign io_state_bits_exceptionVec_2 = current_exceptionVec_2;
  assign io_state_bits_exceptionVec_3 = current_exceptionVec_3;
  assign io_state_bits_exceptionVec_4 = current_exceptionVec_4;
  assign io_state_bits_exceptionVec_5 = current_exceptionVec_5;
  assign io_state_bits_exceptionVec_6 = current_exceptionVec_6;
  assign io_state_bits_exceptionVec_7 = current_exceptionVec_7;
  assign io_state_bits_exceptionVec_8 = current_exceptionVec_8;
  assign io_state_bits_exceptionVec_9 = current_exceptionVec_9;
  assign io_state_bits_exceptionVec_10 = current_exceptionVec_10;
  assign io_state_bits_exceptionVec_11 = current_exceptionVec_11;
  assign io_state_bits_exceptionVec_12 = current_exceptionVec_12;
  assign io_state_bits_exceptionVec_13 = current_exceptionVec_13;
  assign io_state_bits_exceptionVec_14 = current_exceptionVec_14;
  assign io_state_bits_exceptionVec_15 = current_exceptionVec_15;
  assign io_state_bits_exceptionVec_16 = current_exceptionVec_16;
  assign io_state_bits_exceptionVec_17 = current_exceptionVec_17;
  assign io_state_bits_exceptionVec_18 = current_exceptionVec_18;
  assign io_state_bits_exceptionVec_19 = current_exceptionVec_19;
  assign io_state_bits_exceptionVec_20 = current_exceptionVec_20;
  assign io_state_bits_exceptionVec_21 = current_exceptionVec_21;
  assign io_state_bits_exceptionVec_22 = current_exceptionVec_22;
  assign io_state_bits_exceptionVec_23 = current_exceptionVec_23;
  assign io_state_bits_isFetchMalAddr = current_isFetchMalAddr;
  assign io_state_bits_flushPipe = current_flushPipe;
  assign io_state_bits_replayInst = current_replayInst;
  assign io_state_bits_singleStep = current_singleStep;
  assign io_state_bits_crossPageIPFFix = current_crossPageIPFFix;
  assign io_state_bits_trigger = current_trigger;
  assign io_state_bits_vstartEn = current_vstartEn;
  assign io_state_bits_vstart = current_vstart;
  assign io_state_bits_isVecLoad = current_isVecLoad;
  assign io_state_bits_isVlm = current_isVlm;
  assign io_state_bits_isStrided = current_isStrided;
  assign io_state_bits_isIndexed = current_isIndexed;
  assign io_state_bits_isWhole = current_isWhole;
  assign io_state_bits_nf = current_nf;
  assign io_state_bits_vsew = current_vsew;
  assign io_state_bits_veew = current_veew;
  assign io_state_bits_vlmul = current_vlmul;
endmodule

