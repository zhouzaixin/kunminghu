// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module TrainFilter_1(
  input         clock,
  input         reset,
  input         io_ld_in_0_valid,
  input         io_ld_in_0_bits_uop_robIdx_flag,
  input  [7:0]  io_ld_in_0_bits_uop_robIdx_value,
  input  [49:0] io_ld_in_0_bits_vaddr,
  input         io_ld_in_0_bits_miss,
  input  [2:0]  io_ld_in_0_bits_meta_prefetch,
  input         io_ld_in_1_valid,
  input         io_ld_in_1_bits_uop_robIdx_flag,
  input  [7:0]  io_ld_in_1_bits_uop_robIdx_value,
  input  [49:0] io_ld_in_1_bits_vaddr,
  input         io_ld_in_1_bits_miss,
  input  [2:0]  io_ld_in_1_bits_meta_prefetch,
  input         io_ld_in_2_valid,
  input         io_ld_in_2_bits_uop_robIdx_flag,
  input  [7:0]  io_ld_in_2_bits_uop_robIdx_value,
  input  [49:0] io_ld_in_2_bits_vaddr,
  input         io_ld_in_2_bits_miss,
  input  [2:0]  io_ld_in_2_bits_meta_prefetch,
  input         io_train_req_ready,
  output        io_train_req_valid,
  output [49:0] io_train_req_bits_vaddr,
  output        io_train_req_bits_miss,
  output        io_train_req_bits_pfHitStream
);

  reg  [49:0]      entries_0_vaddr;
  reg              entries_0_miss;
  reg              entries_0_pfHitStream;
  reg  [49:0]      entries_1_vaddr;
  reg              entries_1_miss;
  reg              entries_1_pfHitStream;
  reg  [49:0]      entries_2_vaddr;
  reg              entries_2_miss;
  reg              entries_2_pfHitStream;
  reg  [49:0]      entries_3_vaddr;
  reg              entries_3_miss;
  reg              entries_3_pfHitStream;
  reg              valids_0;
  reg              valids_1;
  reg              valids_2;
  reg              valids_3;
  reg              enqPtrExt_0_flag;
  reg  [1:0]       enqPtrExt_0_value;
  reg              enqPtrExt_1_flag;
  reg  [1:0]       enqPtrExt_1_value;
  reg              enqPtrExt_2_flag;
  reg  [1:0]       enqPtrExt_2_value;
  reg              deqPtrExt_flag;
  reg  [1:0]       deqPtrExt_value;
  reg              ld_in_reordered_res_0_1_0_valid;
  reg              ld_in_reordered_res_0_1_0_bits_uop_robIdx_flag;
  reg  [7:0]       ld_in_reordered_res_0_1_0_bits_uop_robIdx_value;
  reg  [49:0]      ld_in_reordered_res_0_1_0_bits_vaddr;
  reg              ld_in_reordered_res_0_1_0_bits_miss;
  reg  [2:0]       ld_in_reordered_res_0_1_0_bits_meta_prefetch;
  reg              ld_in_reordered_res_0_1_1_valid;
  reg              ld_in_reordered_res_0_1_1_bits_uop_robIdx_flag;
  reg  [7:0]       ld_in_reordered_res_0_1_1_bits_uop_robIdx_value;
  reg  [49:0]      ld_in_reordered_res_0_1_1_bits_vaddr;
  reg              ld_in_reordered_res_0_1_1_bits_miss;
  reg  [2:0]       ld_in_reordered_res_0_1_1_bits_meta_prefetch;
  reg              ld_in_reordered_res_0_1_2_valid;
  reg              ld_in_reordered_res_0_1_2_bits_uop_robIdx_flag;
  reg  [7:0]       ld_in_reordered_res_0_1_2_bits_uop_robIdx_value;
  reg  [49:0]      ld_in_reordered_res_0_1_2_bits_vaddr;
  reg              ld_in_reordered_res_0_1_2_bits_miss;
  reg  [2:0]       ld_in_reordered_res_0_1_2_bits_meta_prefetch;
  reg              ld_in_reordered_res_1_2_0_valid;
  reg              ld_in_reordered_res_1_2_0_bits_uop_robIdx_flag;
  reg  [7:0]       ld_in_reordered_res_1_2_0_bits_uop_robIdx_value;
  reg  [49:0]      ld_in_reordered_res_1_2_0_bits_vaddr;
  reg              ld_in_reordered_res_1_2_0_bits_miss;
  reg  [2:0]       ld_in_reordered_res_1_2_0_bits_meta_prefetch;
  reg              ld_in_reordered_res_1_2_1_valid;
  reg              ld_in_reordered_res_1_2_1_bits_uop_robIdx_flag;
  reg  [7:0]       ld_in_reordered_res_1_2_1_bits_uop_robIdx_value;
  reg  [49:0]      ld_in_reordered_res_1_2_1_bits_vaddr;
  reg              ld_in_reordered_res_1_2_1_bits_miss;
  reg  [2:0]       ld_in_reordered_res_1_2_1_bits_meta_prefetch;
  reg              ld_in_reordered_res_1_2_2_valid;
  reg  [49:0]      ld_in_reordered_res_1_2_2_bits_vaddr;
  reg              ld_in_reordered_res_1_2_2_bits_miss;
  reg  [2:0]       ld_in_reordered_res_1_2_2_bits_meta_prefetch;
  reg              ld_in_reordered_0_valid;
  reg  [49:0]      ld_in_reordered_0_bits_vaddr;
  reg              ld_in_reordered_0_bits_miss;
  reg  [2:0]       ld_in_reordered_0_bits_meta_prefetch;
  reg              ld_in_reordered_1_valid;
  reg  [49:0]      ld_in_reordered_1_bits_vaddr;
  reg              ld_in_reordered_1_bits_miss;
  reg  [2:0]       ld_in_reordered_1_bits_meta_prefetch;
  reg              ld_in_reordered_2_valid;
  reg  [49:0]      ld_in_reordered_2_bits_vaddr;
  reg              ld_in_reordered_2_bits_miss;
  reg  [2:0]       ld_in_reordered_2_bits_meta_prefetch;
  wire             needAlloc_0 =
    ld_in_reordered_0_valid
    & {valids_0
         & {entries_0_vaddr[20:16] ^ entries_0_vaddr[25:21] ^ entries_0_vaddr[30:26],
            entries_0_vaddr[15:6]} == {ld_in_reordered_0_bits_vaddr[20:16]
                                         ^ ld_in_reordered_0_bits_vaddr[25:21]
                                         ^ ld_in_reordered_0_bits_vaddr[30:26],
                                       ld_in_reordered_0_bits_vaddr[15:6]},
       valids_1
         & {entries_1_vaddr[20:16] ^ entries_1_vaddr[25:21] ^ entries_1_vaddr[30:26],
            entries_1_vaddr[15:6]} == {ld_in_reordered_0_bits_vaddr[20:16]
                                         ^ ld_in_reordered_0_bits_vaddr[25:21]
                                         ^ ld_in_reordered_0_bits_vaddr[30:26],
                                       ld_in_reordered_0_bits_vaddr[15:6]},
       valids_2
         & {entries_2_vaddr[20:16] ^ entries_2_vaddr[25:21] ^ entries_2_vaddr[30:26],
            entries_2_vaddr[15:6]} == {ld_in_reordered_0_bits_vaddr[20:16]
                                         ^ ld_in_reordered_0_bits_vaddr[25:21]
                                         ^ ld_in_reordered_0_bits_vaddr[30:26],
                                       ld_in_reordered_0_bits_vaddr[15:6]},
       valids_3
         & {entries_3_vaddr[20:16] ^ entries_3_vaddr[25:21] ^ entries_3_vaddr[30:26],
            entries_3_vaddr[15:6]} == {ld_in_reordered_0_bits_vaddr[20:16]
                                         ^ ld_in_reordered_0_bits_vaddr[25:21]
                                         ^ ld_in_reordered_0_bits_vaddr[30:26],
                                       ld_in_reordered_0_bits_vaddr[15:6]}} == 4'h0;
  wire             canAlloc_0 =
    needAlloc_0
    & (enqPtrExt_0_flag ^ deqPtrExt_flag ^ enqPtrExt_0_value >= deqPtrExt_value);
  wire             _GEN = canAlloc_0 & enqPtrExt_0_value == 2'h0;
  wire             _GEN_0 = canAlloc_0 & enqPtrExt_0_value == 2'h1;
  wire             _GEN_1 = canAlloc_0 & enqPtrExt_0_value == 2'h2;
  wire             _GEN_2 = canAlloc_0 & (&enqPtrExt_0_value);
  wire             needAlloc_1 =
    ld_in_reordered_1_valid
    & {valids_0
         & {entries_0_vaddr[20:16] ^ entries_0_vaddr[25:21] ^ entries_0_vaddr[30:26],
            entries_0_vaddr[15:6]} == {ld_in_reordered_1_bits_vaddr[20:16]
                                         ^ ld_in_reordered_1_bits_vaddr[25:21]
                                         ^ ld_in_reordered_1_bits_vaddr[30:26],
                                       ld_in_reordered_1_bits_vaddr[15:6]},
       valids_1
         & {entries_1_vaddr[20:16] ^ entries_1_vaddr[25:21] ^ entries_1_vaddr[30:26],
            entries_1_vaddr[15:6]} == {ld_in_reordered_1_bits_vaddr[20:16]
                                         ^ ld_in_reordered_1_bits_vaddr[25:21]
                                         ^ ld_in_reordered_1_bits_vaddr[30:26],
                                       ld_in_reordered_1_bits_vaddr[15:6]},
       valids_2
         & {entries_2_vaddr[20:16] ^ entries_2_vaddr[25:21] ^ entries_2_vaddr[30:26],
            entries_2_vaddr[15:6]} == {ld_in_reordered_1_bits_vaddr[20:16]
                                         ^ ld_in_reordered_1_bits_vaddr[25:21]
                                         ^ ld_in_reordered_1_bits_vaddr[30:26],
                                       ld_in_reordered_1_bits_vaddr[15:6]},
       valids_3
         & {entries_3_vaddr[20:16] ^ entries_3_vaddr[25:21] ^ entries_3_vaddr[30:26],
            entries_3_vaddr[15:6]} == {ld_in_reordered_1_bits_vaddr[20:16]
                                         ^ ld_in_reordered_1_bits_vaddr[25:21]
                                         ^ ld_in_reordered_1_bits_vaddr[30:26],
                                       ld_in_reordered_1_bits_vaddr[15:6]}} == 4'h0
    & ~(ld_in_reordered_0_valid
        & {ld_in_reordered_0_bits_vaddr[20:16] ^ ld_in_reordered_0_bits_vaddr[25:21]
             ^ ld_in_reordered_0_bits_vaddr[30:26],
           ld_in_reordered_0_bits_vaddr[15:6]} == {ld_in_reordered_1_bits_vaddr[20:16]
                                                     ^ ld_in_reordered_1_bits_vaddr[25:21]
                                                     ^ ld_in_reordered_1_bits_vaddr[30:26],
                                                   ld_in_reordered_1_bits_vaddr[15:6]});
  wire [1:0]       _GEN_3 = {1'h0, needAlloc_0};
  wire [3:0]       _GEN_4 =
    {{enqPtrExt_0_flag}, {enqPtrExt_2_flag}, {enqPtrExt_1_flag}, {enqPtrExt_0_flag}};
  wire [3:0][1:0]  _GEN_5 =
    {{enqPtrExt_0_value}, {enqPtrExt_2_value}, {enqPtrExt_1_value}, {enqPtrExt_0_value}};
  wire             canAlloc_1 =
    needAlloc_1 & (_GEN_4[_GEN_3] ^ deqPtrExt_flag ^ _GEN_5[_GEN_3] >= deqPtrExt_value);
  wire             _GEN_6 = _GEN_5[_GEN_3] == 2'h0;
  wire             _GEN_7 = _GEN_5[_GEN_3] == 2'h1;
  wire             _GEN_8 = _GEN_5[_GEN_3] == 2'h2;
  wire [1:0]       index = 2'(_GEN_3 + {1'h0, needAlloc_1});
  wire             canAlloc_2 =
    ld_in_reordered_2_valid
    & {valids_0
         & {entries_0_vaddr[20:16] ^ entries_0_vaddr[25:21] ^ entries_0_vaddr[30:26],
            entries_0_vaddr[15:6]} == {ld_in_reordered_2_bits_vaddr[20:16]
                                         ^ ld_in_reordered_2_bits_vaddr[25:21]
                                         ^ ld_in_reordered_2_bits_vaddr[30:26],
                                       ld_in_reordered_2_bits_vaddr[15:6]},
       valids_1
         & {entries_1_vaddr[20:16] ^ entries_1_vaddr[25:21] ^ entries_1_vaddr[30:26],
            entries_1_vaddr[15:6]} == {ld_in_reordered_2_bits_vaddr[20:16]
                                         ^ ld_in_reordered_2_bits_vaddr[25:21]
                                         ^ ld_in_reordered_2_bits_vaddr[30:26],
                                       ld_in_reordered_2_bits_vaddr[15:6]},
       valids_2
         & {entries_2_vaddr[20:16] ^ entries_2_vaddr[25:21] ^ entries_2_vaddr[30:26],
            entries_2_vaddr[15:6]} == {ld_in_reordered_2_bits_vaddr[20:16]
                                         ^ ld_in_reordered_2_bits_vaddr[25:21]
                                         ^ ld_in_reordered_2_bits_vaddr[30:26],
                                       ld_in_reordered_2_bits_vaddr[15:6]},
       valids_3
         & {entries_3_vaddr[20:16] ^ entries_3_vaddr[25:21] ^ entries_3_vaddr[30:26],
            entries_3_vaddr[15:6]} == {ld_in_reordered_2_bits_vaddr[20:16]
                                         ^ ld_in_reordered_2_bits_vaddr[25:21]
                                         ^ ld_in_reordered_2_bits_vaddr[30:26],
                                       ld_in_reordered_2_bits_vaddr[15:6]}} == 4'h0
    & {ld_in_reordered_0_valid
         & {ld_in_reordered_0_bits_vaddr[20:16] ^ ld_in_reordered_0_bits_vaddr[25:21]
              ^ ld_in_reordered_0_bits_vaddr[30:26],
            ld_in_reordered_0_bits_vaddr[15:6]} == {ld_in_reordered_2_bits_vaddr[20:16]
                                                      ^ ld_in_reordered_2_bits_vaddr[25:21]
                                                      ^ ld_in_reordered_2_bits_vaddr[30:26],
                                                    ld_in_reordered_2_bits_vaddr[15:6]},
       ld_in_reordered_1_valid
         & {ld_in_reordered_1_bits_vaddr[20:16] ^ ld_in_reordered_1_bits_vaddr[25:21]
              ^ ld_in_reordered_1_bits_vaddr[30:26],
            ld_in_reordered_1_bits_vaddr[15:6]} == {ld_in_reordered_2_bits_vaddr[20:16]
                                                      ^ ld_in_reordered_2_bits_vaddr[25:21]
                                                      ^ ld_in_reordered_2_bits_vaddr[30:26],
                                                    ld_in_reordered_2_bits_vaddr[15:6]}} == 2'h0
    & (_GEN_4[index] ^ deqPtrExt_flag ^ _GEN_5[index] >= deqPtrExt_value);
  wire             _GEN_9 = canAlloc_2 & _GEN_5[index] == 2'h0;
  wire             _GEN_10 = canAlloc_2 & _GEN_5[index] == 2'h1;
  wire             _GEN_11 = canAlloc_2 & _GEN_5[index] == 2'h2;
  wire             _GEN_12 = canAlloc_2 & (&_GEN_5[index]);
  wire             _GEN_13 = deqPtrExt_value == 2'h0;
  wire [3:0]       _GEN_14 = {{valids_3}, {valids_2}, {valids_1}, {_GEN_13 & valids_0}};
  wire             io_train_req_valid_0 = _GEN_14[deqPtrExt_value];
  wire [3:0][49:0] _GEN_15 =
    {{entries_3_vaddr}, {entries_2_vaddr}, {entries_1_vaddr}, {entries_0_vaddr}};
  wire [3:0]       _GEN_16 =
    {{entries_3_miss}, {entries_2_miss}, {entries_1_miss}, {entries_0_miss}};
  wire [3:0]       _GEN_17 =
    {{entries_3_pfHitStream},
     {entries_2_pfHitStream},
     {entries_1_pfHitStream},
     {entries_0_pfHitStream}};
  reg              REG;
  wire             ld_in_reordered_tmp_source_1_older =
    (&{io_ld_in_0_valid, io_ld_in_1_valid})
    & (io_ld_in_1_bits_uop_robIdx_flag ^ io_ld_in_0_bits_uop_robIdx_flag
       ^ io_ld_in_1_bits_uop_robIdx_value < io_ld_in_0_bits_uop_robIdx_value);
  wire             ld_in_reordered_tmp_1_source_1_older =
    (&{ld_in_reordered_res_0_1_1_valid, ld_in_reordered_res_0_1_2_valid})
    & (ld_in_reordered_res_0_1_2_bits_uop_robIdx_flag
       ^ ld_in_reordered_res_0_1_1_bits_uop_robIdx_flag
       ^ ld_in_reordered_res_0_1_2_bits_uop_robIdx_value < ld_in_reordered_res_0_1_1_bits_uop_robIdx_value);
  wire             ld_in_reordered_tmp_2_source_1_older =
    (&{ld_in_reordered_res_1_2_0_valid, ld_in_reordered_res_1_2_1_valid})
    & (ld_in_reordered_res_1_2_1_bits_uop_robIdx_flag
       ^ ld_in_reordered_res_1_2_0_bits_uop_robIdx_flag
       ^ ld_in_reordered_res_1_2_1_bits_uop_robIdx_value < ld_in_reordered_res_1_2_0_bits_uop_robIdx_value);
  wire             reqs_l_0_pfHitStream = ld_in_reordered_0_bits_meta_prefetch == 3'h3;
  wire             reqs_l_1_pfHitStream = ld_in_reordered_1_bits_meta_prefetch == 3'h3;
  wire             reqs_l_2_pfHitStream = ld_in_reordered_2_bits_meta_prefetch == 3'h3;
  always @(posedge clock) begin
    if (_GEN_9) begin
      entries_0_vaddr <= ld_in_reordered_2_bits_vaddr;
      entries_0_miss <= ld_in_reordered_2_bits_miss;
      entries_0_pfHitStream <= reqs_l_2_pfHitStream;
    end
    else if (canAlloc_1 & _GEN_6) begin
      entries_0_vaddr <= ld_in_reordered_1_bits_vaddr;
      entries_0_miss <= ld_in_reordered_1_bits_miss;
      entries_0_pfHitStream <= reqs_l_1_pfHitStream;
    end
    else if (_GEN) begin
      entries_0_vaddr <= ld_in_reordered_0_bits_vaddr;
      entries_0_miss <= ld_in_reordered_0_bits_miss;
      entries_0_pfHitStream <= reqs_l_0_pfHitStream;
    end
    if (_GEN_10) begin
      entries_1_vaddr <= ld_in_reordered_2_bits_vaddr;
      entries_1_miss <= ld_in_reordered_2_bits_miss;
      entries_1_pfHitStream <= reqs_l_2_pfHitStream;
    end
    else if (canAlloc_1 & _GEN_7) begin
      entries_1_vaddr <= ld_in_reordered_1_bits_vaddr;
      entries_1_miss <= ld_in_reordered_1_bits_miss;
      entries_1_pfHitStream <= reqs_l_1_pfHitStream;
    end
    else if (_GEN_0) begin
      entries_1_vaddr <= ld_in_reordered_0_bits_vaddr;
      entries_1_miss <= ld_in_reordered_0_bits_miss;
      entries_1_pfHitStream <= reqs_l_0_pfHitStream;
    end
    if (_GEN_11) begin
      entries_2_vaddr <= ld_in_reordered_2_bits_vaddr;
      entries_2_miss <= ld_in_reordered_2_bits_miss;
      entries_2_pfHitStream <= reqs_l_2_pfHitStream;
    end
    else if (canAlloc_1 & _GEN_8) begin
      entries_2_vaddr <= ld_in_reordered_1_bits_vaddr;
      entries_2_miss <= ld_in_reordered_1_bits_miss;
      entries_2_pfHitStream <= reqs_l_1_pfHitStream;
    end
    else if (_GEN_1) begin
      entries_2_vaddr <= ld_in_reordered_0_bits_vaddr;
      entries_2_miss <= ld_in_reordered_0_bits_miss;
      entries_2_pfHitStream <= reqs_l_0_pfHitStream;
    end
    if (_GEN_12) begin
      entries_3_vaddr <= ld_in_reordered_2_bits_vaddr;
      entries_3_miss <= ld_in_reordered_2_bits_miss;
      entries_3_pfHitStream <= reqs_l_2_pfHitStream;
    end
    else if (canAlloc_1 & (&_GEN_5[_GEN_3])) begin
      entries_3_vaddr <= ld_in_reordered_1_bits_vaddr;
      entries_3_miss <= ld_in_reordered_1_bits_miss;
      entries_3_pfHitStream <= reqs_l_1_pfHitStream;
    end
    else if (_GEN_2) begin
      entries_3_vaddr <= ld_in_reordered_0_bits_vaddr;
      entries_3_miss <= ld_in_reordered_0_bits_miss;
      entries_3_pfHitStream <= reqs_l_0_pfHitStream;
    end
    ld_in_reordered_res_0_1_0_valid <=
      ld_in_reordered_tmp_source_1_older ? io_ld_in_1_valid : io_ld_in_0_valid;
    ld_in_reordered_res_0_1_0_bits_uop_robIdx_flag <=
      ld_in_reordered_tmp_source_1_older
        ? io_ld_in_1_bits_uop_robIdx_flag
        : io_ld_in_0_bits_uop_robIdx_flag;
    ld_in_reordered_res_0_1_0_bits_uop_robIdx_value <=
      ld_in_reordered_tmp_source_1_older
        ? io_ld_in_1_bits_uop_robIdx_value
        : io_ld_in_0_bits_uop_robIdx_value;
    ld_in_reordered_res_0_1_0_bits_vaddr <=
      ld_in_reordered_tmp_source_1_older ? io_ld_in_1_bits_vaddr : io_ld_in_0_bits_vaddr;
    ld_in_reordered_res_0_1_0_bits_miss <=
      ld_in_reordered_tmp_source_1_older ? io_ld_in_1_bits_miss : io_ld_in_0_bits_miss;
    ld_in_reordered_res_0_1_0_bits_meta_prefetch <=
      ld_in_reordered_tmp_source_1_older
        ? io_ld_in_1_bits_meta_prefetch
        : io_ld_in_0_bits_meta_prefetch;
    ld_in_reordered_res_0_1_1_valid <=
      ld_in_reordered_tmp_source_1_older ? io_ld_in_0_valid : io_ld_in_1_valid;
    ld_in_reordered_res_0_1_1_bits_uop_robIdx_flag <=
      ld_in_reordered_tmp_source_1_older
        ? io_ld_in_0_bits_uop_robIdx_flag
        : io_ld_in_1_bits_uop_robIdx_flag;
    ld_in_reordered_res_0_1_1_bits_uop_robIdx_value <=
      ld_in_reordered_tmp_source_1_older
        ? io_ld_in_0_bits_uop_robIdx_value
        : io_ld_in_1_bits_uop_robIdx_value;
    ld_in_reordered_res_0_1_1_bits_vaddr <=
      ld_in_reordered_tmp_source_1_older ? io_ld_in_0_bits_vaddr : io_ld_in_1_bits_vaddr;
    ld_in_reordered_res_0_1_1_bits_miss <=
      ld_in_reordered_tmp_source_1_older ? io_ld_in_0_bits_miss : io_ld_in_1_bits_miss;
    ld_in_reordered_res_0_1_1_bits_meta_prefetch <=
      ld_in_reordered_tmp_source_1_older
        ? io_ld_in_0_bits_meta_prefetch
        : io_ld_in_1_bits_meta_prefetch;
    ld_in_reordered_res_0_1_2_valid <= io_ld_in_2_valid;
    ld_in_reordered_res_0_1_2_bits_uop_robIdx_flag <= io_ld_in_2_bits_uop_robIdx_flag;
    ld_in_reordered_res_0_1_2_bits_uop_robIdx_value <= io_ld_in_2_bits_uop_robIdx_value;
    ld_in_reordered_res_0_1_2_bits_vaddr <= io_ld_in_2_bits_vaddr;
    ld_in_reordered_res_0_1_2_bits_miss <= io_ld_in_2_bits_miss;
    ld_in_reordered_res_0_1_2_bits_meta_prefetch <= io_ld_in_2_bits_meta_prefetch;
    ld_in_reordered_res_1_2_0_valid <= ld_in_reordered_res_0_1_0_valid;
    ld_in_reordered_res_1_2_0_bits_uop_robIdx_flag <=
      ld_in_reordered_res_0_1_0_bits_uop_robIdx_flag;
    ld_in_reordered_res_1_2_0_bits_uop_robIdx_value <=
      ld_in_reordered_res_0_1_0_bits_uop_robIdx_value;
    ld_in_reordered_res_1_2_0_bits_vaddr <= ld_in_reordered_res_0_1_0_bits_vaddr;
    ld_in_reordered_res_1_2_0_bits_miss <= ld_in_reordered_res_0_1_0_bits_miss;
    ld_in_reordered_res_1_2_0_bits_meta_prefetch <=
      ld_in_reordered_res_0_1_0_bits_meta_prefetch;
    ld_in_reordered_res_1_2_1_valid <=
      ld_in_reordered_tmp_1_source_1_older
        ? ld_in_reordered_res_0_1_2_valid
        : ld_in_reordered_res_0_1_1_valid;
    ld_in_reordered_res_1_2_1_bits_uop_robIdx_flag <=
      ld_in_reordered_tmp_1_source_1_older
        ? ld_in_reordered_res_0_1_2_bits_uop_robIdx_flag
        : ld_in_reordered_res_0_1_1_bits_uop_robIdx_flag;
    ld_in_reordered_res_1_2_1_bits_uop_robIdx_value <=
      ld_in_reordered_tmp_1_source_1_older
        ? ld_in_reordered_res_0_1_2_bits_uop_robIdx_value
        : ld_in_reordered_res_0_1_1_bits_uop_robIdx_value;
    ld_in_reordered_res_1_2_1_bits_vaddr <=
      ld_in_reordered_tmp_1_source_1_older
        ? ld_in_reordered_res_0_1_2_bits_vaddr
        : ld_in_reordered_res_0_1_1_bits_vaddr;
    ld_in_reordered_res_1_2_1_bits_miss <=
      ld_in_reordered_tmp_1_source_1_older
        ? ld_in_reordered_res_0_1_2_bits_miss
        : ld_in_reordered_res_0_1_1_bits_miss;
    ld_in_reordered_res_1_2_1_bits_meta_prefetch <=
      ld_in_reordered_tmp_1_source_1_older
        ? ld_in_reordered_res_0_1_2_bits_meta_prefetch
        : ld_in_reordered_res_0_1_1_bits_meta_prefetch;
    ld_in_reordered_res_1_2_2_valid <=
      ld_in_reordered_tmp_1_source_1_older
        ? ld_in_reordered_res_0_1_1_valid
        : ld_in_reordered_res_0_1_2_valid;
    ld_in_reordered_res_1_2_2_bits_vaddr <=
      ld_in_reordered_tmp_1_source_1_older
        ? ld_in_reordered_res_0_1_1_bits_vaddr
        : ld_in_reordered_res_0_1_2_bits_vaddr;
    ld_in_reordered_res_1_2_2_bits_miss <=
      ld_in_reordered_tmp_1_source_1_older
        ? ld_in_reordered_res_0_1_1_bits_miss
        : ld_in_reordered_res_0_1_2_bits_miss;
    ld_in_reordered_res_1_2_2_bits_meta_prefetch <=
      ld_in_reordered_tmp_1_source_1_older
        ? ld_in_reordered_res_0_1_1_bits_meta_prefetch
        : ld_in_reordered_res_0_1_2_bits_meta_prefetch;
    ld_in_reordered_0_valid <=
      ld_in_reordered_tmp_2_source_1_older
        ? ld_in_reordered_res_1_2_1_valid
        : ld_in_reordered_res_1_2_0_valid;
    ld_in_reordered_0_bits_vaddr <=
      ld_in_reordered_tmp_2_source_1_older
        ? ld_in_reordered_res_1_2_1_bits_vaddr
        : ld_in_reordered_res_1_2_0_bits_vaddr;
    ld_in_reordered_0_bits_miss <=
      ld_in_reordered_tmp_2_source_1_older
        ? ld_in_reordered_res_1_2_1_bits_miss
        : ld_in_reordered_res_1_2_0_bits_miss;
    ld_in_reordered_0_bits_meta_prefetch <=
      ld_in_reordered_tmp_2_source_1_older
        ? ld_in_reordered_res_1_2_1_bits_meta_prefetch
        : ld_in_reordered_res_1_2_0_bits_meta_prefetch;
    ld_in_reordered_1_valid <=
      ld_in_reordered_tmp_2_source_1_older
        ? ld_in_reordered_res_1_2_0_valid
        : ld_in_reordered_res_1_2_1_valid;
    ld_in_reordered_1_bits_vaddr <=
      ld_in_reordered_tmp_2_source_1_older
        ? ld_in_reordered_res_1_2_0_bits_vaddr
        : ld_in_reordered_res_1_2_1_bits_vaddr;
    ld_in_reordered_1_bits_miss <=
      ld_in_reordered_tmp_2_source_1_older
        ? ld_in_reordered_res_1_2_0_bits_miss
        : ld_in_reordered_res_1_2_1_bits_miss;
    ld_in_reordered_1_bits_meta_prefetch <=
      ld_in_reordered_tmp_2_source_1_older
        ? ld_in_reordered_res_1_2_0_bits_meta_prefetch
        : ld_in_reordered_res_1_2_1_bits_meta_prefetch;
    ld_in_reordered_2_valid <= ld_in_reordered_res_1_2_2_valid;
    ld_in_reordered_2_bits_vaddr <= ld_in_reordered_res_1_2_2_bits_vaddr;
    ld_in_reordered_2_bits_miss <= ld_in_reordered_res_1_2_2_bits_miss;
    ld_in_reordered_2_bits_meta_prefetch <= ld_in_reordered_res_1_2_2_bits_meta_prefetch;
    REG <= 1'h0;
  end // always @(posedge)
  wire [2:0]       _GEN_18 = {canAlloc_2, canAlloc_1, canAlloc_0};
  wire [2:0]       _GEN_19 =
    {1'h0, 2'({1'h0, canAlloc_0} + 2'({1'h0, canAlloc_1} + {1'h0, canAlloc_2}))};
  wire [2:0]       _enqPtrExt_0_new_ptr_T_1 =
    3'({enqPtrExt_0_flag, enqPtrExt_0_value} + _GEN_19);
  wire [2:0]       _enqPtrExt_1_new_ptr_T_1 =
    3'({enqPtrExt_1_flag, enqPtrExt_1_value} + _GEN_19);
  wire [2:0]       _enqPtrExt_2_new_ptr_T_1 =
    3'({enqPtrExt_2_flag, enqPtrExt_2_value} + _GEN_19);
  wire             _GEN_20 = io_train_req_ready & io_train_req_valid_0;
  wire [2:0]       _deqPtrExt_new_ptr_T_1 = 3'({deqPtrExt_flag, deqPtrExt_value} + 3'h1);
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      valids_0 <= 1'h0;
      valids_1 <= 1'h0;
      valids_2 <= 1'h0;
      valids_3 <= 1'h0;
      enqPtrExt_0_flag <= 1'h0;
      enqPtrExt_0_value <= 2'h0;
      enqPtrExt_1_flag <= 1'h0;
      enqPtrExt_1_value <= 2'h1;
      enqPtrExt_2_flag <= 1'h0;
      enqPtrExt_2_value <= 2'h2;
      deqPtrExt_flag <= 1'h0;
      deqPtrExt_value <= 2'h0;
    end
    else begin
      valids_0 <=
        ~(REG | _GEN_20 & _GEN_13)
        & (_GEN_9 | (canAlloc_1 ? _GEN_6 | _GEN | valids_0 : _GEN | valids_0));
      valids_1 <=
        ~(REG | _GEN_20 & deqPtrExt_value == 2'h1)
        & (_GEN_10 | (canAlloc_1 ? _GEN_7 | _GEN_0 | valids_1 : _GEN_0 | valids_1));
      valids_2 <=
        ~(REG | _GEN_20 & deqPtrExt_value == 2'h2)
        & (_GEN_11 | (canAlloc_1 ? _GEN_8 | _GEN_1 | valids_2 : _GEN_1 | valids_2));
      valids_3 <=
        ~(REG | _GEN_20 & (&deqPtrExt_value))
        & (_GEN_12
           | (canAlloc_1 ? (&_GEN_5[_GEN_3]) | _GEN_2 | valids_3 : _GEN_2 | valids_3));
      enqPtrExt_0_flag <=
        ~REG & ((|_GEN_18) ? _enqPtrExt_0_new_ptr_T_1[2] : enqPtrExt_0_flag);
      if (REG) begin
        enqPtrExt_0_value <= 2'h0;
        enqPtrExt_1_value <= 2'h1;
        enqPtrExt_2_value <= 2'h2;
        deqPtrExt_value <= 2'h0;
      end
      else begin
        if (|_GEN_18) begin
          enqPtrExt_0_value <= _enqPtrExt_0_new_ptr_T_1[1:0];
          enqPtrExt_1_value <= _enqPtrExt_1_new_ptr_T_1[1:0];
          enqPtrExt_2_value <= _enqPtrExt_2_new_ptr_T_1[1:0];
        end
        if (_GEN_20)
          deqPtrExt_value <= _deqPtrExt_new_ptr_T_1[1:0];
      end
      enqPtrExt_1_flag <=
        ~REG & ((|_GEN_18) ? _enqPtrExt_1_new_ptr_T_1[2] : enqPtrExt_1_flag);
      enqPtrExt_2_flag <=
        ~REG & ((|_GEN_18) ? _enqPtrExt_2_new_ptr_T_1[2] : enqPtrExt_2_flag);
      deqPtrExt_flag <= ~REG & (_GEN_20 ? _deqPtrExt_new_ptr_T_1[2] : deqPtrExt_flag);
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:568];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [9:0] i = 10'h0; i < 10'h239; i += 10'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        entries_0_vaddr = {_RANDOM[10'h0], _RANDOM[10'h1][17:0]};
        entries_0_miss = _RANDOM[10'h4][20];
        entries_0_pfHitStream = _RANDOM[10'h4][21];
        entries_1_vaddr = {_RANDOM[10'h4][31:22], _RANDOM[10'h5], _RANDOM[10'h6][7:0]};
        entries_1_miss = _RANDOM[10'h9][10];
        entries_1_pfHitStream = _RANDOM[10'h9][11];
        entries_2_vaddr = {_RANDOM[10'h9][31:12], _RANDOM[10'hA][29:0]};
        entries_2_miss = _RANDOM[10'hE][0];
        entries_2_pfHitStream = _RANDOM[10'hE][1];
        entries_3_vaddr = {_RANDOM[10'hE][31:2], _RANDOM[10'hF][19:0]};
        entries_3_miss = _RANDOM[10'h12][22];
        entries_3_pfHitStream = _RANDOM[10'h12][23];
        valids_0 = _RANDOM[10'h12][24];
        valids_1 = _RANDOM[10'h12][25];
        valids_2 = _RANDOM[10'h12][26];
        valids_3 = _RANDOM[10'h12][27];
        enqPtrExt_0_flag = _RANDOM[10'h12][28];
        enqPtrExt_0_value = _RANDOM[10'h12][30:29];
        enqPtrExt_1_flag = _RANDOM[10'h12][31];
        enqPtrExt_1_value = _RANDOM[10'h13][1:0];
        enqPtrExt_2_flag = _RANDOM[10'h13][2];
        enqPtrExt_2_value = _RANDOM[10'h13][4:3];
        deqPtrExt_flag = _RANDOM[10'h13][5];
        deqPtrExt_value = _RANDOM[10'h13][7:6];
        ld_in_reordered_res_0_1_0_valid = _RANDOM[10'h13][8];
        ld_in_reordered_res_0_1_0_bits_uop_robIdx_flag = _RANDOM[10'h25][21];
        ld_in_reordered_res_0_1_0_bits_uop_robIdx_value = _RANDOM[10'h25][29:22];
        ld_in_reordered_res_0_1_0_bits_vaddr =
          {_RANDOM[10'h39][31:22], _RANDOM[10'h3A], _RANDOM[10'h3B][7:0]};
        ld_in_reordered_res_0_1_0_bits_miss = _RANDOM[10'h45][13];
        ld_in_reordered_res_0_1_0_bits_meta_prefetch = _RANDOM[10'h50][7:5];
        ld_in_reordered_res_0_1_1_valid = _RANDOM[10'h50][9];
        ld_in_reordered_res_0_1_1_bits_uop_robIdx_flag = _RANDOM[10'h62][22];
        ld_in_reordered_res_0_1_1_bits_uop_robIdx_value = _RANDOM[10'h62][30:23];
        ld_in_reordered_res_0_1_1_bits_vaddr =
          {_RANDOM[10'h76][31:23], _RANDOM[10'h77], _RANDOM[10'h78][8:0]};
        ld_in_reordered_res_0_1_1_bits_miss = _RANDOM[10'h82][14];
        ld_in_reordered_res_0_1_1_bits_meta_prefetch = _RANDOM[10'h8D][8:6];
        ld_in_reordered_res_0_1_2_valid = _RANDOM[10'h8D][10];
        ld_in_reordered_res_0_1_2_bits_uop_robIdx_flag = _RANDOM[10'h9F][23];
        ld_in_reordered_res_0_1_2_bits_uop_robIdx_value = _RANDOM[10'h9F][31:24];
        ld_in_reordered_res_0_1_2_bits_vaddr =
          {_RANDOM[10'hB3][31:24], _RANDOM[10'hB4], _RANDOM[10'hB5][9:0]};
        ld_in_reordered_res_0_1_2_bits_miss = _RANDOM[10'hBF][15];
        ld_in_reordered_res_0_1_2_bits_meta_prefetch = _RANDOM[10'hCA][9:7];
        ld_in_reordered_res_1_2_0_valid = _RANDOM[10'hCA][11];
        ld_in_reordered_res_1_2_0_bits_uop_robIdx_flag = _RANDOM[10'hDC][24];
        ld_in_reordered_res_1_2_0_bits_uop_robIdx_value =
          {_RANDOM[10'hDC][31:25], _RANDOM[10'hDD][0]};
        ld_in_reordered_res_1_2_0_bits_vaddr =
          {_RANDOM[10'hF0][31:25], _RANDOM[10'hF1], _RANDOM[10'hF2][10:0]};
        ld_in_reordered_res_1_2_0_bits_miss = _RANDOM[10'hFC][16];
        ld_in_reordered_res_1_2_0_bits_meta_prefetch = _RANDOM[10'h107][10:8];
        ld_in_reordered_res_1_2_1_valid = _RANDOM[10'h107][12];
        ld_in_reordered_res_1_2_1_bits_uop_robIdx_flag = _RANDOM[10'h119][25];
        ld_in_reordered_res_1_2_1_bits_uop_robIdx_value =
          {_RANDOM[10'h119][31:26], _RANDOM[10'h11A][1:0]};
        ld_in_reordered_res_1_2_1_bits_vaddr =
          {_RANDOM[10'h12D][31:26], _RANDOM[10'h12E], _RANDOM[10'h12F][11:0]};
        ld_in_reordered_res_1_2_1_bits_miss = _RANDOM[10'h139][17];
        ld_in_reordered_res_1_2_1_bits_meta_prefetch = _RANDOM[10'h144][11:9];
        ld_in_reordered_res_1_2_2_valid = _RANDOM[10'h144][13];
        ld_in_reordered_res_1_2_2_bits_vaddr =
          {_RANDOM[10'h16A][31:27], _RANDOM[10'h16B], _RANDOM[10'h16C][12:0]};
        ld_in_reordered_res_1_2_2_bits_miss = _RANDOM[10'h176][18];
        ld_in_reordered_res_1_2_2_bits_meta_prefetch = _RANDOM[10'h181][12:10];
        ld_in_reordered_0_valid = _RANDOM[10'h181][14];
        ld_in_reordered_0_bits_vaddr =
          {_RANDOM[10'h1A7][31:28], _RANDOM[10'h1A8], _RANDOM[10'h1A9][13:0]};
        ld_in_reordered_0_bits_miss = _RANDOM[10'h1B3][19];
        ld_in_reordered_0_bits_meta_prefetch = _RANDOM[10'h1BE][13:11];
        ld_in_reordered_1_valid = _RANDOM[10'h1BE][15];
        ld_in_reordered_1_bits_vaddr =
          {_RANDOM[10'h1E4][31:29], _RANDOM[10'h1E5], _RANDOM[10'h1E6][14:0]};
        ld_in_reordered_1_bits_miss = _RANDOM[10'h1F0][20];
        ld_in_reordered_1_bits_meta_prefetch = _RANDOM[10'h1FB][14:12];
        ld_in_reordered_2_valid = _RANDOM[10'h1FB][16];
        ld_in_reordered_2_bits_vaddr =
          {_RANDOM[10'h221][31:30], _RANDOM[10'h222], _RANDOM[10'h223][15:0]};
        ld_in_reordered_2_bits_miss = _RANDOM[10'h22D][21];
        ld_in_reordered_2_bits_meta_prefetch = _RANDOM[10'h238][15:13];
        REG = _RANDOM[10'h238][17];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        valids_0 = 1'h0;
        valids_1 = 1'h0;
        valids_2 = 1'h0;
        valids_3 = 1'h0;
        enqPtrExt_0_flag = 1'h0;
        enqPtrExt_0_value = 2'h0;
        enqPtrExt_1_flag = 1'h0;
        enqPtrExt_1_value = 2'h1;
        enqPtrExt_2_flag = 1'h0;
        enqPtrExt_2_value = 2'h2;
        deqPtrExt_flag = 1'h0;
        deqPtrExt_value = 2'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_train_req_valid = io_train_req_valid_0;
  assign io_train_req_bits_vaddr = _GEN_15[deqPtrExt_value];
  assign io_train_req_bits_miss = _GEN_16[deqPtrExt_value];
  assign io_train_req_bits_pfHitStream = _GEN_17[deqPtrExt_value];
endmodule

