// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module SieModule(
  input         clock,
  input         reset,
  input         w_wen,
  input  [63:0] w_wdata,
  output [63:0] rdata,
  output        regOut_SSIE,
  output        regOut_STIE,
  output        regOut_SEIE,
  output        regOut_LCOFIE,
  output        regOut_LC14IE,
  output        regOut_LC15IE,
  output        regOut_LC16IE,
  output        regOut_LC17IE,
  output        regOut_LC18IE,
  output        regOut_LC19IE,
  output        regOut_LC20IE,
  output        regOut_LC21IE,
  output        regOut_LC22IE,
  output        regOut_LC23IE,
  output        regOut_LC24IE,
  output        regOut_LC25IE,
  output        regOut_LC26IE,
  output        regOut_LC27IE,
  output        regOut_LC28IE,
  output        regOut_LC29IE,
  output        regOut_LC30IE,
  output        regOut_LC31IE,
  output        regOut_LC32IE,
  output        regOut_LC33IE,
  output        regOut_LC34IE,
  output        regOut_LPRASEIE,
  output        regOut_LC36IE,
  output        regOut_LC37IE,
  output        regOut_LC38IE,
  output        regOut_LC39IE,
  output        regOut_LC40IE,
  output        regOut_LC41IE,
  output        regOut_LC42IE,
  output        regOut_HPRASEIE,
  output        regOut_LC44IE,
  output        regOut_LC45IE,
  output        regOut_LC46IE,
  output        regOut_LC47IE,
  output        regOut_LC48IE,
  output        regOut_LC49IE,
  output        regOut_LC50IE,
  output        regOut_LC51IE,
  output        regOut_LC52IE,
  output        regOut_LC53IE,
  output        regOut_LC54IE,
  output        regOut_LC55IE,
  output        regOut_LC56IE,
  output        regOut_LC57IE,
  output        regOut_LC58IE,
  output        regOut_LC59IE,
  output        regOut_LC60IE,
  output        regOut_LC61IE,
  output        regOut_LC62IE,
  output        regOut_LC63IE,
  input         mideleg_SSI,
  input         mideleg_STI,
  input         mideleg_SEI,
  input         mideleg_LCOFI,
  input         mie_SSIE,
  input         mie_VSSIE,
  input         mie_MSIE,
  input         mie_STIE,
  input         mie_VSTIE,
  input         mie_MTIE,
  input         mie_SEIE,
  input         mie_VSEIE,
  input         mie_MEIE,
  input         mie_SGEIE,
  input         mie_LCOFIE,
  input         mvien_SSIE,
  input         mvien_SEIE,
  input         mvien_LCOFIE,
  input         mvien_LC14IE,
  input         mvien_LC15IE,
  input         mvien_LC16IE,
  input         mvien_LC17IE,
  input         mvien_LC18IE,
  input         mvien_LC19IE,
  input         mvien_LC20IE,
  input         mvien_LC21IE,
  input         mvien_LC22IE,
  input         mvien_LC23IE,
  input         mvien_LC24IE,
  input         mvien_LC25IE,
  input         mvien_LC26IE,
  input         mvien_LC27IE,
  input         mvien_LC28IE,
  input         mvien_LC29IE,
  input         mvien_LC30IE,
  input         mvien_LC31IE,
  input         mvien_LC32IE,
  input         mvien_LC33IE,
  input         mvien_LC34IE,
  input         mvien_LPRASEIE,
  input         mvien_LC36IE,
  input         mvien_LC37IE,
  input         mvien_LC38IE,
  input         mvien_LC39IE,
  input         mvien_LC40IE,
  input         mvien_LC41IE,
  input         mvien_LC42IE,
  input         mvien_HPRASEIE,
  input         mvien_LC44IE,
  input         mvien_LC45IE,
  input         mvien_LC46IE,
  input         mvien_LC47IE,
  input         mvien_LC48IE,
  input         mvien_LC49IE,
  input         mvien_LC50IE,
  input         mvien_LC51IE,
  input         mvien_LC52IE,
  input         mvien_LC53IE,
  input         mvien_LC54IE,
  input         mvien_LC55IE,
  input         mvien_LC56IE,
  input         mvien_LC57IE,
  input         mvien_LC58IE,
  input         mvien_LC59IE,
  input         mvien_LC60IE,
  input         mvien_LC61IE,
  input         mvien_LC62IE,
  input         mvien_LC63IE,
  output        toMie_SSIE_valid,
  output        toMie_SSIE_bits,
  output        toMie_STIE_valid,
  output        toMie_STIE_bits,
  output        toMie_SEIE_valid,
  output        toMie_SEIE_bits,
  output        toMie_LCOFIE_valid,
  output        toMie_LCOFIE_bits,
  input         fromVSie_VSSIE_valid,
  input         fromVSie_VSSIE_bits,
  input         fromVSie_VSTIE_valid,
  input         fromVSie_VSTIE_bits,
  input         fromVSie_VSEIE_valid,
  input         fromVSie_VSEIE_bits,
  input         fromVSie_LCOFIE_valid,
  input         fromVSie_LCOFIE_bits,
  input         fromVSie_LC14IE_valid,
  input         fromVSie_LC14IE_bits,
  input         fromVSie_LC15IE_valid,
  input         fromVSie_LC15IE_bits,
  input         fromVSie_LC16IE_valid,
  input         fromVSie_LC16IE_bits,
  input         fromVSie_LC17IE_valid,
  input         fromVSie_LC17IE_bits,
  input         fromVSie_LC18IE_valid,
  input         fromVSie_LC18IE_bits,
  input         fromVSie_LC19IE_valid,
  input         fromVSie_LC19IE_bits,
  input         fromVSie_LC20IE_valid,
  input         fromVSie_LC20IE_bits,
  input         fromVSie_LC21IE_valid,
  input         fromVSie_LC21IE_bits,
  input         fromVSie_LC22IE_valid,
  input         fromVSie_LC22IE_bits,
  input         fromVSie_LC23IE_valid,
  input         fromVSie_LC23IE_bits,
  input         fromVSie_LC24IE_valid,
  input         fromVSie_LC24IE_bits,
  input         fromVSie_LC25IE_valid,
  input         fromVSie_LC25IE_bits,
  input         fromVSie_LC26IE_valid,
  input         fromVSie_LC26IE_bits,
  input         fromVSie_LC27IE_valid,
  input         fromVSie_LC27IE_bits,
  input         fromVSie_LC28IE_valid,
  input         fromVSie_LC28IE_bits,
  input         fromVSie_LC29IE_valid,
  input         fromVSie_LC29IE_bits,
  input         fromVSie_LC30IE_valid,
  input         fromVSie_LC30IE_bits,
  input         fromVSie_LC31IE_valid,
  input         fromVSie_LC31IE_bits,
  input         fromVSie_LC32IE_valid,
  input         fromVSie_LC32IE_bits,
  input         fromVSie_LC33IE_valid,
  input         fromVSie_LC33IE_bits,
  input         fromVSie_LC34IE_valid,
  input         fromVSie_LC34IE_bits,
  input         fromVSie_LPRASEIE_valid,
  input         fromVSie_LPRASEIE_bits,
  input         fromVSie_LC36IE_valid,
  input         fromVSie_LC36IE_bits,
  input         fromVSie_LC37IE_valid,
  input         fromVSie_LC37IE_bits,
  input         fromVSie_LC38IE_valid,
  input         fromVSie_LC38IE_bits,
  input         fromVSie_LC39IE_valid,
  input         fromVSie_LC39IE_bits,
  input         fromVSie_LC40IE_valid,
  input         fromVSie_LC40IE_bits,
  input         fromVSie_LC41IE_valid,
  input         fromVSie_LC41IE_bits,
  input         fromVSie_LC42IE_valid,
  input         fromVSie_LC42IE_bits,
  input         fromVSie_HPRASEIE_valid,
  input         fromVSie_HPRASEIE_bits,
  input         fromVSie_LC44IE_valid,
  input         fromVSie_LC44IE_bits,
  input         fromVSie_LC45IE_valid,
  input         fromVSie_LC45IE_bits,
  input         fromVSie_LC46IE_valid,
  input         fromVSie_LC46IE_bits,
  input         fromVSie_LC47IE_valid,
  input         fromVSie_LC47IE_bits,
  input         fromVSie_LC48IE_valid,
  input         fromVSie_LC48IE_bits,
  input         fromVSie_LC49IE_valid,
  input         fromVSie_LC49IE_bits,
  input         fromVSie_LC50IE_valid,
  input         fromVSie_LC50IE_bits,
  input         fromVSie_LC51IE_valid,
  input         fromVSie_LC51IE_bits,
  input         fromVSie_LC52IE_valid,
  input         fromVSie_LC52IE_bits,
  input         fromVSie_LC53IE_valid,
  input         fromVSie_LC53IE_bits,
  input         fromVSie_LC54IE_valid,
  input         fromVSie_LC54IE_bits,
  input         fromVSie_LC55IE_valid,
  input         fromVSie_LC55IE_bits,
  input         fromVSie_LC56IE_valid,
  input         fromVSie_LC56IE_bits,
  input         fromVSie_LC57IE_valid,
  input         fromVSie_LC57IE_bits,
  input         fromVSie_LC58IE_valid,
  input         fromVSie_LC58IE_bits,
  input         fromVSie_LC59IE_valid,
  input         fromVSie_LC59IE_bits,
  input         fromVSie_LC60IE_valid,
  input         fromVSie_LC60IE_bits,
  input         fromVSie_LC61IE_valid,
  input         fromVSie_LC61IE_bits,
  input         fromVSie_LC62IE_valid,
  input         fromVSie_LC62IE_bits,
  input         fromVSie_LC63IE_valid,
  input         fromVSie_LC63IE_bits
);

  wire        _regOut_SSIE_T;
  wire        _regOut_STIE_T;
  wire        _regOut_SEIE_T;
  wire [62:0] _GEN;
  reg         reg_SSIE;
  reg         reg_SEIE;
  reg         reg_LCOFIE;
  reg         reg_LC14IE;
  reg         reg_LC15IE;
  reg         reg_LC16IE;
  reg         reg_LC17IE;
  reg         reg_LC18IE;
  reg         reg_LC19IE;
  reg         reg_LC20IE;
  reg         reg_LC21IE;
  reg         reg_LC22IE;
  reg         reg_LC23IE;
  reg         reg_LC24IE;
  reg         reg_LC25IE;
  reg         reg_LC26IE;
  reg         reg_LC27IE;
  reg         reg_LC28IE;
  reg         reg_LC29IE;
  reg         reg_LC30IE;
  reg         reg_LC31IE;
  reg         reg_LC32IE;
  reg         reg_LC33IE;
  reg         reg_LC34IE;
  reg         reg_LPRASEIE;
  reg         reg_LC36IE;
  reg         reg_LC37IE;
  reg         reg_LC38IE;
  reg         reg_LC39IE;
  reg         reg_LC40IE;
  reg         reg_LC41IE;
  reg         reg_LC42IE;
  reg         reg_HPRASEIE;
  reg         reg_LC44IE;
  reg         reg_LC45IE;
  reg         reg_LC46IE;
  reg         reg_LC47IE;
  reg         reg_LC48IE;
  reg         reg_LC49IE;
  reg         reg_LC50IE;
  reg         reg_LC51IE;
  reg         reg_LC52IE;
  reg         reg_LC53IE;
  reg         reg_LC54IE;
  reg         reg_LC55IE;
  reg         reg_LC56IE;
  reg         reg_LC57IE;
  reg         reg_LC58IE;
  reg         reg_LC59IE;
  reg         reg_LC60IE;
  reg         reg_LC61IE;
  reg         reg_LC62IE;
  reg         reg_LC63IE;
  assign _GEN =
    {50'h0, mideleg_LCOFI, 3'h5, mideleg_SEI, 3'h1, mideleg_STI, 3'h1, mideleg_SSI}
    & {50'h0,
       mie_LCOFIE,
       mie_SGEIE,
       mie_MEIE,
       mie_VSEIE,
       mie_SEIE,
       1'h0,
       mie_MTIE,
       mie_VSTIE,
       mie_STIE,
       1'h0,
       mie_MSIE,
       mie_VSSIE,
       mie_SSIE}
    | {50'h3FFFFFFFFFFFF,
       ~mideleg_LCOFI,
       3'h2,
       ~mideleg_SEI,
       3'h6,
       ~mideleg_STI,
       3'h6,
       ~mideleg_SSI}
    & {mvien_LC63IE,
       mvien_LC62IE,
       mvien_LC61IE,
       mvien_LC60IE,
       mvien_LC59IE,
       mvien_LC58IE,
       mvien_LC57IE,
       mvien_LC56IE,
       mvien_LC55IE,
       mvien_LC54IE,
       mvien_LC53IE,
       mvien_LC52IE,
       mvien_LC51IE,
       mvien_LC50IE,
       mvien_LC49IE,
       mvien_LC48IE,
       mvien_LC47IE,
       mvien_LC46IE,
       mvien_LC45IE,
       mvien_LC44IE,
       mvien_HPRASEIE,
       mvien_LC42IE,
       mvien_LC41IE,
       mvien_LC40IE,
       mvien_LC39IE,
       mvien_LC38IE,
       mvien_LC37IE,
       mvien_LC36IE,
       mvien_LPRASEIE,
       mvien_LC34IE,
       mvien_LC33IE,
       mvien_LC32IE,
       mvien_LC31IE,
       mvien_LC30IE,
       mvien_LC29IE,
       mvien_LC28IE,
       mvien_LC27IE,
       mvien_LC26IE,
       mvien_LC25IE,
       mvien_LC24IE,
       mvien_LC23IE,
       mvien_LC22IE,
       mvien_LC21IE,
       mvien_LC20IE,
       mvien_LC19IE,
       mvien_LC18IE,
       mvien_LC17IE,
       mvien_LC16IE,
       mvien_LC15IE,
       mvien_LC14IE,
       mvien_LCOFIE,
       3'h0,
       mvien_SEIE,
       7'h0,
       mvien_SSIE}
    & {reg_LC63IE,
       reg_LC62IE,
       reg_LC61IE,
       reg_LC60IE,
       reg_LC59IE,
       reg_LC58IE,
       reg_LC57IE,
       reg_LC56IE,
       reg_LC55IE,
       reg_LC54IE,
       reg_LC53IE,
       reg_LC52IE,
       reg_LC51IE,
       reg_LC50IE,
       reg_LC49IE,
       reg_LC48IE,
       reg_LC47IE,
       reg_LC46IE,
       reg_LC45IE,
       reg_LC44IE,
       reg_HPRASEIE,
       reg_LC42IE,
       reg_LC41IE,
       reg_LC40IE,
       reg_LC39IE,
       reg_LC38IE,
       reg_LC37IE,
       reg_LC36IE,
       reg_LPRASEIE,
       reg_LC34IE,
       reg_LC33IE,
       reg_LC32IE,
       reg_LC31IE,
       reg_LC30IE,
       reg_LC29IE,
       reg_LC28IE,
       reg_LC27IE,
       reg_LC26IE,
       reg_LC25IE,
       reg_LC24IE,
       reg_LC23IE,
       reg_LC22IE,
       reg_LC21IE,
       reg_LC20IE,
       reg_LC19IE,
       reg_LC18IE,
       reg_LC17IE,
       reg_LC16IE,
       reg_LC15IE,
       reg_LC14IE,
       reg_LCOFIE,
       3'h0,
       reg_SEIE,
       7'h0,
       reg_SSIE};
  assign _regOut_SEIE_T = _GEN[8];
  assign _regOut_STIE_T = _GEN[4];
  assign _regOut_SSIE_T = _GEN[0];
  wire        _GEN_0 = ~mideleg_LCOFI & mvien_LCOFIE;
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      reg_SSIE <= 1'h0;
      reg_SEIE <= 1'h0;
      reg_LCOFIE <= 1'h0;
      reg_LC14IE <= 1'h0;
      reg_LC15IE <= 1'h0;
      reg_LC16IE <= 1'h0;
      reg_LC17IE <= 1'h0;
      reg_LC18IE <= 1'h0;
      reg_LC19IE <= 1'h0;
      reg_LC20IE <= 1'h0;
      reg_LC21IE <= 1'h0;
      reg_LC22IE <= 1'h0;
      reg_LC23IE <= 1'h0;
      reg_LC24IE <= 1'h0;
      reg_LC25IE <= 1'h0;
      reg_LC26IE <= 1'h0;
      reg_LC27IE <= 1'h0;
      reg_LC28IE <= 1'h0;
      reg_LC29IE <= 1'h0;
      reg_LC30IE <= 1'h0;
      reg_LC31IE <= 1'h0;
      reg_LC32IE <= 1'h0;
      reg_LC33IE <= 1'h0;
      reg_LC34IE <= 1'h0;
      reg_LPRASEIE <= 1'h0;
      reg_LC36IE <= 1'h0;
      reg_LC37IE <= 1'h0;
      reg_LC38IE <= 1'h0;
      reg_LC39IE <= 1'h0;
      reg_LC40IE <= 1'h0;
      reg_LC41IE <= 1'h0;
      reg_LC42IE <= 1'h0;
      reg_HPRASEIE <= 1'h0;
      reg_LC44IE <= 1'h0;
      reg_LC45IE <= 1'h0;
      reg_LC46IE <= 1'h0;
      reg_LC47IE <= 1'h0;
      reg_LC48IE <= 1'h0;
      reg_LC49IE <= 1'h0;
      reg_LC50IE <= 1'h0;
      reg_LC51IE <= 1'h0;
      reg_LC52IE <= 1'h0;
      reg_LC53IE <= 1'h0;
      reg_LC54IE <= 1'h0;
      reg_LC55IE <= 1'h0;
      reg_LC56IE <= 1'h0;
      reg_LC57IE <= 1'h0;
      reg_LC58IE <= 1'h0;
      reg_LC59IE <= 1'h0;
      reg_LC60IE <= 1'h0;
      reg_LC61IE <= 1'h0;
      reg_LC62IE <= 1'h0;
      reg_LC63IE <= 1'h0;
    end
    else begin
      if (w_wen & ~mideleg_SSI & mvien_SSIE)
        reg_SSIE <= w_wen & w_wdata[1];
      if (w_wen & ~mideleg_SEI & mvien_SEIE)
        reg_SEIE <= w_wen & w_wdata[9];
      if (w_wen & _GEN_0 | fromVSie_LCOFIE_valid & _GEN_0)
        reg_LCOFIE <= w_wen & w_wdata[13] | fromVSie_LCOFIE_valid & fromVSie_LCOFIE_bits;
      if (w_wen & mvien_LC14IE | fromVSie_LC14IE_valid & mvien_LC14IE)
        reg_LC14IE <= w_wen & w_wdata[14] | fromVSie_LC14IE_valid & fromVSie_LC14IE_bits;
      if (w_wen & mvien_LC15IE | fromVSie_LC15IE_valid & mvien_LC15IE)
        reg_LC15IE <= w_wen & w_wdata[15] | fromVSie_LC15IE_valid & fromVSie_LC15IE_bits;
      if (w_wen & mvien_LC16IE | fromVSie_LC16IE_valid & mvien_LC16IE)
        reg_LC16IE <= w_wen & w_wdata[16] | fromVSie_LC16IE_valid & fromVSie_LC16IE_bits;
      if (w_wen & mvien_LC17IE | fromVSie_LC17IE_valid & mvien_LC17IE)
        reg_LC17IE <= w_wen & w_wdata[17] | fromVSie_LC17IE_valid & fromVSie_LC17IE_bits;
      if (w_wen & mvien_LC18IE | fromVSie_LC18IE_valid & mvien_LC18IE)
        reg_LC18IE <= w_wen & w_wdata[18] | fromVSie_LC18IE_valid & fromVSie_LC18IE_bits;
      if (w_wen & mvien_LC19IE | fromVSie_LC19IE_valid & mvien_LC19IE)
        reg_LC19IE <= w_wen & w_wdata[19] | fromVSie_LC19IE_valid & fromVSie_LC19IE_bits;
      if (w_wen & mvien_LC20IE | fromVSie_LC20IE_valid & mvien_LC20IE)
        reg_LC20IE <= w_wen & w_wdata[20] | fromVSie_LC20IE_valid & fromVSie_LC20IE_bits;
      if (w_wen & mvien_LC21IE | fromVSie_LC21IE_valid & mvien_LC21IE)
        reg_LC21IE <= w_wen & w_wdata[21] | fromVSie_LC21IE_valid & fromVSie_LC21IE_bits;
      if (w_wen & mvien_LC22IE | fromVSie_LC22IE_valid & mvien_LC22IE)
        reg_LC22IE <= w_wen & w_wdata[22] | fromVSie_LC22IE_valid & fromVSie_LC22IE_bits;
      if (w_wen & mvien_LC23IE | fromVSie_LC23IE_valid & mvien_LC23IE)
        reg_LC23IE <= w_wen & w_wdata[23] | fromVSie_LC23IE_valid & fromVSie_LC23IE_bits;
      if (w_wen & mvien_LC24IE | fromVSie_LC24IE_valid & mvien_LC24IE)
        reg_LC24IE <= w_wen & w_wdata[24] | fromVSie_LC24IE_valid & fromVSie_LC24IE_bits;
      if (w_wen & mvien_LC25IE | fromVSie_LC25IE_valid & mvien_LC25IE)
        reg_LC25IE <= w_wen & w_wdata[25] | fromVSie_LC25IE_valid & fromVSie_LC25IE_bits;
      if (w_wen & mvien_LC26IE | fromVSie_LC26IE_valid & mvien_LC26IE)
        reg_LC26IE <= w_wen & w_wdata[26] | fromVSie_LC26IE_valid & fromVSie_LC26IE_bits;
      if (w_wen & mvien_LC27IE | fromVSie_LC27IE_valid & mvien_LC27IE)
        reg_LC27IE <= w_wen & w_wdata[27] | fromVSie_LC27IE_valid & fromVSie_LC27IE_bits;
      if (w_wen & mvien_LC28IE | fromVSie_LC28IE_valid & mvien_LC28IE)
        reg_LC28IE <= w_wen & w_wdata[28] | fromVSie_LC28IE_valid & fromVSie_LC28IE_bits;
      if (w_wen & mvien_LC29IE | fromVSie_LC29IE_valid & mvien_LC29IE)
        reg_LC29IE <= w_wen & w_wdata[29] | fromVSie_LC29IE_valid & fromVSie_LC29IE_bits;
      if (w_wen & mvien_LC30IE | fromVSie_LC30IE_valid & mvien_LC30IE)
        reg_LC30IE <= w_wen & w_wdata[30] | fromVSie_LC30IE_valid & fromVSie_LC30IE_bits;
      if (w_wen & mvien_LC31IE | fromVSie_LC31IE_valid & mvien_LC31IE)
        reg_LC31IE <= w_wen & w_wdata[31] | fromVSie_LC31IE_valid & fromVSie_LC31IE_bits;
      if (w_wen & mvien_LC32IE | fromVSie_LC32IE_valid & mvien_LC32IE)
        reg_LC32IE <= w_wen & w_wdata[32] | fromVSie_LC32IE_valid & fromVSie_LC32IE_bits;
      if (w_wen & mvien_LC33IE | fromVSie_LC33IE_valid & mvien_LC33IE)
        reg_LC33IE <= w_wen & w_wdata[33] | fromVSie_LC33IE_valid & fromVSie_LC33IE_bits;
      if (w_wen & mvien_LC34IE | fromVSie_LC34IE_valid & mvien_LC34IE)
        reg_LC34IE <= w_wen & w_wdata[34] | fromVSie_LC34IE_valid & fromVSie_LC34IE_bits;
      if (w_wen & mvien_LPRASEIE | fromVSie_LPRASEIE_valid & mvien_LPRASEIE)
        reg_LPRASEIE <=
          w_wen & w_wdata[35] | fromVSie_LPRASEIE_valid & fromVSie_LPRASEIE_bits;
      if (w_wen & mvien_LC36IE | fromVSie_LC36IE_valid & mvien_LC36IE)
        reg_LC36IE <= w_wen & w_wdata[36] | fromVSie_LC36IE_valid & fromVSie_LC36IE_bits;
      if (w_wen & mvien_LC37IE | fromVSie_LC37IE_valid & mvien_LC37IE)
        reg_LC37IE <= w_wen & w_wdata[37] | fromVSie_LC37IE_valid & fromVSie_LC37IE_bits;
      if (w_wen & mvien_LC38IE | fromVSie_LC38IE_valid & mvien_LC38IE)
        reg_LC38IE <= w_wen & w_wdata[38] | fromVSie_LC38IE_valid & fromVSie_LC38IE_bits;
      if (w_wen & mvien_LC39IE | fromVSie_LC39IE_valid & mvien_LC39IE)
        reg_LC39IE <= w_wen & w_wdata[39] | fromVSie_LC39IE_valid & fromVSie_LC39IE_bits;
      if (w_wen & mvien_LC40IE | fromVSie_LC40IE_valid & mvien_LC40IE)
        reg_LC40IE <= w_wen & w_wdata[40] | fromVSie_LC40IE_valid & fromVSie_LC40IE_bits;
      if (w_wen & mvien_LC41IE | fromVSie_LC41IE_valid & mvien_LC41IE)
        reg_LC41IE <= w_wen & w_wdata[41] | fromVSie_LC41IE_valid & fromVSie_LC41IE_bits;
      if (w_wen & mvien_LC42IE | fromVSie_LC42IE_valid & mvien_LC42IE)
        reg_LC42IE <= w_wen & w_wdata[42] | fromVSie_LC42IE_valid & fromVSie_LC42IE_bits;
      if (w_wen & mvien_HPRASEIE | fromVSie_HPRASEIE_valid & mvien_HPRASEIE)
        reg_HPRASEIE <=
          w_wen & w_wdata[43] | fromVSie_HPRASEIE_valid & fromVSie_HPRASEIE_bits;
      if (w_wen & mvien_LC44IE | fromVSie_LC44IE_valid & mvien_LC44IE)
        reg_LC44IE <= w_wen & w_wdata[44] | fromVSie_LC44IE_valid & fromVSie_LC44IE_bits;
      if (w_wen & mvien_LC45IE | fromVSie_LC45IE_valid & mvien_LC45IE)
        reg_LC45IE <= w_wen & w_wdata[45] | fromVSie_LC45IE_valid & fromVSie_LC45IE_bits;
      if (w_wen & mvien_LC46IE | fromVSie_LC46IE_valid & mvien_LC46IE)
        reg_LC46IE <= w_wen & w_wdata[46] | fromVSie_LC46IE_valid & fromVSie_LC46IE_bits;
      if (w_wen & mvien_LC47IE | fromVSie_LC47IE_valid & mvien_LC47IE)
        reg_LC47IE <= w_wen & w_wdata[47] | fromVSie_LC47IE_valid & fromVSie_LC47IE_bits;
      if (w_wen & mvien_LC48IE | fromVSie_LC48IE_valid & mvien_LC48IE)
        reg_LC48IE <= w_wen & w_wdata[48] | fromVSie_LC48IE_valid & fromVSie_LC48IE_bits;
      if (w_wen & mvien_LC49IE | fromVSie_LC49IE_valid & mvien_LC49IE)
        reg_LC49IE <= w_wen & w_wdata[49] | fromVSie_LC49IE_valid & fromVSie_LC49IE_bits;
      if (w_wen & mvien_LC50IE | fromVSie_LC50IE_valid & mvien_LC50IE)
        reg_LC50IE <= w_wen & w_wdata[50] | fromVSie_LC50IE_valid & fromVSie_LC50IE_bits;
      if (w_wen & mvien_LC51IE | fromVSie_LC51IE_valid & mvien_LC51IE)
        reg_LC51IE <= w_wen & w_wdata[51] | fromVSie_LC51IE_valid & fromVSie_LC51IE_bits;
      if (w_wen & mvien_LC52IE | fromVSie_LC52IE_valid & mvien_LC52IE)
        reg_LC52IE <= w_wen & w_wdata[52] | fromVSie_LC52IE_valid & fromVSie_LC52IE_bits;
      if (w_wen & mvien_LC53IE | fromVSie_LC53IE_valid & mvien_LC53IE)
        reg_LC53IE <= w_wen & w_wdata[53] | fromVSie_LC53IE_valid & fromVSie_LC53IE_bits;
      if (w_wen & mvien_LC54IE | fromVSie_LC54IE_valid & mvien_LC54IE)
        reg_LC54IE <= w_wen & w_wdata[54] | fromVSie_LC54IE_valid & fromVSie_LC54IE_bits;
      if (w_wen & mvien_LC55IE | fromVSie_LC55IE_valid & mvien_LC55IE)
        reg_LC55IE <= w_wen & w_wdata[55] | fromVSie_LC55IE_valid & fromVSie_LC55IE_bits;
      if (w_wen & mvien_LC56IE | fromVSie_LC56IE_valid & mvien_LC56IE)
        reg_LC56IE <= w_wen & w_wdata[56] | fromVSie_LC56IE_valid & fromVSie_LC56IE_bits;
      if (w_wen & mvien_LC57IE | fromVSie_LC57IE_valid & mvien_LC57IE)
        reg_LC57IE <= w_wen & w_wdata[57] | fromVSie_LC57IE_valid & fromVSie_LC57IE_bits;
      if (w_wen & mvien_LC58IE | fromVSie_LC58IE_valid & mvien_LC58IE)
        reg_LC58IE <= w_wen & w_wdata[58] | fromVSie_LC58IE_valid & fromVSie_LC58IE_bits;
      if (w_wen & mvien_LC59IE | fromVSie_LC59IE_valid & mvien_LC59IE)
        reg_LC59IE <= w_wen & w_wdata[59] | fromVSie_LC59IE_valid & fromVSie_LC59IE_bits;
      if (w_wen & mvien_LC60IE | fromVSie_LC60IE_valid & mvien_LC60IE)
        reg_LC60IE <= w_wen & w_wdata[60] | fromVSie_LC60IE_valid & fromVSie_LC60IE_bits;
      if (w_wen & mvien_LC61IE | fromVSie_LC61IE_valid & mvien_LC61IE)
        reg_LC61IE <= w_wen & w_wdata[61] | fromVSie_LC61IE_valid & fromVSie_LC61IE_bits;
      if (w_wen & mvien_LC62IE | fromVSie_LC62IE_valid & mvien_LC62IE)
        reg_LC62IE <= w_wen & w_wdata[62] | fromVSie_LC62IE_valid & fromVSie_LC62IE_bits;
      if (w_wen & mvien_LC63IE | fromVSie_LC63IE_valid & mvien_LC63IE)
        reg_LC63IE <= w_wen & w_wdata[63] | fromVSie_LC63IE_valid & fromVSie_LC63IE_bits;
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:1];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM[i[0]] = `RANDOM;
        end
        reg_SSIE = _RANDOM[1'h0][0];
        reg_SEIE = _RANDOM[1'h0][6];
        reg_LCOFIE = _RANDOM[1'h0][10];
        reg_LC14IE = _RANDOM[1'h0][11];
        reg_LC15IE = _RANDOM[1'h0][12];
        reg_LC16IE = _RANDOM[1'h0][13];
        reg_LC17IE = _RANDOM[1'h0][14];
        reg_LC18IE = _RANDOM[1'h0][15];
        reg_LC19IE = _RANDOM[1'h0][16];
        reg_LC20IE = _RANDOM[1'h0][17];
        reg_LC21IE = _RANDOM[1'h0][18];
        reg_LC22IE = _RANDOM[1'h0][19];
        reg_LC23IE = _RANDOM[1'h0][20];
        reg_LC24IE = _RANDOM[1'h0][21];
        reg_LC25IE = _RANDOM[1'h0][22];
        reg_LC26IE = _RANDOM[1'h0][23];
        reg_LC27IE = _RANDOM[1'h0][24];
        reg_LC28IE = _RANDOM[1'h0][25];
        reg_LC29IE = _RANDOM[1'h0][26];
        reg_LC30IE = _RANDOM[1'h0][27];
        reg_LC31IE = _RANDOM[1'h0][28];
        reg_LC32IE = _RANDOM[1'h0][29];
        reg_LC33IE = _RANDOM[1'h0][30];
        reg_LC34IE = _RANDOM[1'h0][31];
        reg_LPRASEIE = _RANDOM[1'h1][0];
        reg_LC36IE = _RANDOM[1'h1][1];
        reg_LC37IE = _RANDOM[1'h1][2];
        reg_LC38IE = _RANDOM[1'h1][3];
        reg_LC39IE = _RANDOM[1'h1][4];
        reg_LC40IE = _RANDOM[1'h1][5];
        reg_LC41IE = _RANDOM[1'h1][6];
        reg_LC42IE = _RANDOM[1'h1][7];
        reg_HPRASEIE = _RANDOM[1'h1][8];
        reg_LC44IE = _RANDOM[1'h1][9];
        reg_LC45IE = _RANDOM[1'h1][10];
        reg_LC46IE = _RANDOM[1'h1][11];
        reg_LC47IE = _RANDOM[1'h1][12];
        reg_LC48IE = _RANDOM[1'h1][13];
        reg_LC49IE = _RANDOM[1'h1][14];
        reg_LC50IE = _RANDOM[1'h1][15];
        reg_LC51IE = _RANDOM[1'h1][16];
        reg_LC52IE = _RANDOM[1'h1][17];
        reg_LC53IE = _RANDOM[1'h1][18];
        reg_LC54IE = _RANDOM[1'h1][19];
        reg_LC55IE = _RANDOM[1'h1][20];
        reg_LC56IE = _RANDOM[1'h1][21];
        reg_LC57IE = _RANDOM[1'h1][22];
        reg_LC58IE = _RANDOM[1'h1][23];
        reg_LC59IE = _RANDOM[1'h1][24];
        reg_LC60IE = _RANDOM[1'h1][25];
        reg_LC61IE = _RANDOM[1'h1][26];
        reg_LC62IE = _RANDOM[1'h1][27];
        reg_LC63IE = _RANDOM[1'h1][28];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        reg_SSIE = 1'h0;
        reg_SEIE = 1'h0;
        reg_LCOFIE = 1'h0;
        reg_LC14IE = 1'h0;
        reg_LC15IE = 1'h0;
        reg_LC16IE = 1'h0;
        reg_LC17IE = 1'h0;
        reg_LC18IE = 1'h0;
        reg_LC19IE = 1'h0;
        reg_LC20IE = 1'h0;
        reg_LC21IE = 1'h0;
        reg_LC22IE = 1'h0;
        reg_LC23IE = 1'h0;
        reg_LC24IE = 1'h0;
        reg_LC25IE = 1'h0;
        reg_LC26IE = 1'h0;
        reg_LC27IE = 1'h0;
        reg_LC28IE = 1'h0;
        reg_LC29IE = 1'h0;
        reg_LC30IE = 1'h0;
        reg_LC31IE = 1'h0;
        reg_LC32IE = 1'h0;
        reg_LC33IE = 1'h0;
        reg_LC34IE = 1'h0;
        reg_LPRASEIE = 1'h0;
        reg_LC36IE = 1'h0;
        reg_LC37IE = 1'h0;
        reg_LC38IE = 1'h0;
        reg_LC39IE = 1'h0;
        reg_LC40IE = 1'h0;
        reg_LC41IE = 1'h0;
        reg_LC42IE = 1'h0;
        reg_HPRASEIE = 1'h0;
        reg_LC44IE = 1'h0;
        reg_LC45IE = 1'h0;
        reg_LC46IE = 1'h0;
        reg_LC47IE = 1'h0;
        reg_LC48IE = 1'h0;
        reg_LC49IE = 1'h0;
        reg_LC50IE = 1'h0;
        reg_LC51IE = 1'h0;
        reg_LC52IE = 1'h0;
        reg_LC53IE = 1'h0;
        reg_LC54IE = 1'h0;
        reg_LC55IE = 1'h0;
        reg_LC56IE = 1'h0;
        reg_LC57IE = 1'h0;
        reg_LC58IE = 1'h0;
        reg_LC59IE = 1'h0;
        reg_LC60IE = 1'h0;
        reg_LC61IE = 1'h0;
        reg_LC62IE = 1'h0;
        reg_LC63IE = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign rdata =
    {_GEN[62:12], 3'h0, _regOut_SEIE_T, 3'h0, _regOut_STIE_T, 3'h0, _regOut_SSIE_T, 1'h0};
  assign regOut_SSIE = _regOut_SSIE_T;
  assign regOut_STIE = _regOut_STIE_T;
  assign regOut_SEIE = _regOut_SEIE_T;
  assign regOut_LCOFIE = _GEN[12];
  assign regOut_LC14IE = _GEN[13];
  assign regOut_LC15IE = _GEN[14];
  assign regOut_LC16IE = _GEN[15];
  assign regOut_LC17IE = _GEN[16];
  assign regOut_LC18IE = _GEN[17];
  assign regOut_LC19IE = _GEN[18];
  assign regOut_LC20IE = _GEN[19];
  assign regOut_LC21IE = _GEN[20];
  assign regOut_LC22IE = _GEN[21];
  assign regOut_LC23IE = _GEN[22];
  assign regOut_LC24IE = _GEN[23];
  assign regOut_LC25IE = _GEN[24];
  assign regOut_LC26IE = _GEN[25];
  assign regOut_LC27IE = _GEN[26];
  assign regOut_LC28IE = _GEN[27];
  assign regOut_LC29IE = _GEN[28];
  assign regOut_LC30IE = _GEN[29];
  assign regOut_LC31IE = _GEN[30];
  assign regOut_LC32IE = _GEN[31];
  assign regOut_LC33IE = _GEN[32];
  assign regOut_LC34IE = _GEN[33];
  assign regOut_LPRASEIE = _GEN[34];
  assign regOut_LC36IE = _GEN[35];
  assign regOut_LC37IE = _GEN[36];
  assign regOut_LC38IE = _GEN[37];
  assign regOut_LC39IE = _GEN[38];
  assign regOut_LC40IE = _GEN[39];
  assign regOut_LC41IE = _GEN[40];
  assign regOut_LC42IE = _GEN[41];
  assign regOut_HPRASEIE = _GEN[42];
  assign regOut_LC44IE = _GEN[43];
  assign regOut_LC45IE = _GEN[44];
  assign regOut_LC46IE = _GEN[45];
  assign regOut_LC47IE = _GEN[46];
  assign regOut_LC48IE = _GEN[47];
  assign regOut_LC49IE = _GEN[48];
  assign regOut_LC50IE = _GEN[49];
  assign regOut_LC51IE = _GEN[50];
  assign regOut_LC52IE = _GEN[51];
  assign regOut_LC53IE = _GEN[52];
  assign regOut_LC54IE = _GEN[53];
  assign regOut_LC55IE = _GEN[54];
  assign regOut_LC56IE = _GEN[55];
  assign regOut_LC57IE = _GEN[56];
  assign regOut_LC58IE = _GEN[57];
  assign regOut_LC59IE = _GEN[58];
  assign regOut_LC60IE = _GEN[59];
  assign regOut_LC61IE = _GEN[60];
  assign regOut_LC62IE = _GEN[61];
  assign regOut_LC63IE = _GEN[62];
  assign toMie_SSIE_valid = w_wen & mideleg_SSI;
  assign toMie_SSIE_bits = w_wen & mideleg_SSI & w_wdata[1];
  assign toMie_STIE_valid = w_wen & mideleg_STI;
  assign toMie_STIE_bits = w_wen & mideleg_STI & w_wdata[5];
  assign toMie_SEIE_valid = w_wen & mideleg_SEI;
  assign toMie_SEIE_bits = w_wen & mideleg_SEI & w_wdata[9];
  assign toMie_LCOFIE_valid = w_wen & mideleg_LCOFI;
  assign toMie_LCOFIE_bits = w_wen & mideleg_LCOFI & w_wdata[13];
endmodule

