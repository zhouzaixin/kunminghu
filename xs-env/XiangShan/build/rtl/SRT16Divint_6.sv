// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module SRT16Divint_6(
  input         clock,
  input         reset,
  input         io_sign,
  input  [63:0] io_dividend,
  input  [63:0] io_divisor,
  input         io_flush,
  input  [1:0]  io_sew,
  input         io_div_in_valid,
  input         io_div_out_ready,
  output        io_div_out_valid,
  output [63:0] io_div_out_q,
  output [63:0] io_div_out_rem
);

  wire             io_div_ready;
  wire [63:0]      _IterBlock_io_nxt_q_A;
  wire [63:0]      _IterBlock_io_nxt_q_B;
  wire [7:0]       _IterBlock_io_nxt_sel_0_0;
  wire [7:0]       _IterBlock_io_nxt_sel_0_1;
  wire [7:0]       _IterBlock_io_nxt_sel_1_0;
  wire [7:0]       _IterBlock_io_nxt_sel_1_1;
  wire [7:0]       _IterBlock_io_nxt_sel_2_0;
  wire [7:0]       _IterBlock_io_nxt_sel_2_1;
  wire [7:0]       _IterBlock_io_nxt_sel_3_0;
  wire [7:0]       _IterBlock_io_nxt_sel_3_1;
  wire [8:0]       _IterBlock_io_nxt_spec_0_0_0;
  wire [8:0]       _IterBlock_io_nxt_spec_0_0_1;
  wire [8:0]       _IterBlock_io_nxt_spec_0_1_0;
  wire [8:0]       _IterBlock_io_nxt_spec_0_1_1;
  wire [8:0]       _IterBlock_io_nxt_spec_0_2_0;
  wire [8:0]       _IterBlock_io_nxt_spec_0_2_1;
  wire [8:0]       _IterBlock_io_nxt_spec_0_3_0;
  wire [8:0]       _IterBlock_io_nxt_spec_0_3_1;
  wire [8:0]       _IterBlock_io_nxt_spec_1_0_0;
  wire [8:0]       _IterBlock_io_nxt_spec_1_0_1;
  wire [8:0]       _IterBlock_io_nxt_spec_1_1_0;
  wire [8:0]       _IterBlock_io_nxt_spec_1_1_1;
  wire [8:0]       _IterBlock_io_nxt_spec_1_2_0;
  wire [8:0]       _IterBlock_io_nxt_spec_1_2_1;
  wire [8:0]       _IterBlock_io_nxt_spec_1_3_0;
  wire [8:0]       _IterBlock_io_nxt_spec_1_3_1;
  wire [8:0]       _IterBlock_io_nxt_spec_2_0_0;
  wire [8:0]       _IterBlock_io_nxt_spec_2_0_1;
  wire [8:0]       _IterBlock_io_nxt_spec_2_1_0;
  wire [8:0]       _IterBlock_io_nxt_spec_2_1_1;
  wire [8:0]       _IterBlock_io_nxt_spec_2_2_0;
  wire [8:0]       _IterBlock_io_nxt_spec_2_2_1;
  wire [8:0]       _IterBlock_io_nxt_spec_2_3_0;
  wire [8:0]       _IterBlock_io_nxt_spec_2_3_1;
  wire [8:0]       _IterBlock_io_nxt_spec_3_0_0;
  wire [8:0]       _IterBlock_io_nxt_spec_3_0_1;
  wire [8:0]       _IterBlock_io_nxt_spec_3_1_0;
  wire [8:0]       _IterBlock_io_nxt_spec_3_1_1;
  wire [8:0]       _IterBlock_io_nxt_spec_3_2_0;
  wire [8:0]       _IterBlock_io_nxt_spec_3_2_1;
  wire [8:0]       _IterBlock_io_nxt_spec_3_3_0;
  wire [8:0]       _IterBlock_io_nxt_spec_3_3_1;
  wire [8:0]       _IterBlock_io_nxt_spec_4_0_0;
  wire [8:0]       _IterBlock_io_nxt_spec_4_0_1;
  wire [8:0]       _IterBlock_io_nxt_spec_4_1_0;
  wire [8:0]       _IterBlock_io_nxt_spec_4_1_1;
  wire [8:0]       _IterBlock_io_nxt_spec_4_2_0;
  wire [8:0]       _IterBlock_io_nxt_spec_4_2_1;
  wire [8:0]       _IterBlock_io_nxt_spec_4_3_0;
  wire [8:0]       _IterBlock_io_nxt_spec_4_3_1;
  wire [69:0]      _IterBlock_io_nxt_iterB_0;
  wire [69:0]      _IterBlock_io_nxt_iterB_1;
  wire [8:0]       _qds_cons_io_m_neg_1;
  wire [8:0]       _qds_cons_io_m_neg_0;
  wire [8:0]       _qds_cons_io_m_pos_1;
  wire [8:0]       _qds_cons_io_m_pos_2;
  reg  [5:0]       stateReg;
  wire             in_handshake = io_div_in_valid & io_div_ready;
  assign io_div_ready = stateReg[0];
  reg              x_sign_reg;
  reg  [63:0]      iter_q_A_reg;
  reg  [63:0]      iter_q_B_reg;
  reg  [7:0]       sel_reg_0_0;
  reg  [7:0]       sel_reg_0_1;
  reg  [7:0]       sel_reg_1_0;
  reg  [7:0]       sel_reg_1_1;
  reg  [7:0]       sel_reg_2_0;
  reg  [7:0]       sel_reg_2_1;
  reg  [7:0]       sel_reg_3_0;
  reg  [7:0]       sel_reg_3_1;
  reg  [8:0]       spec_reg_0_0_0;
  reg  [8:0]       spec_reg_0_0_1;
  reg  [8:0]       spec_reg_0_1_0;
  reg  [8:0]       spec_reg_0_1_1;
  reg  [8:0]       spec_reg_0_2_0;
  reg  [8:0]       spec_reg_0_2_1;
  reg  [8:0]       spec_reg_0_3_0;
  reg  [8:0]       spec_reg_0_3_1;
  reg  [8:0]       spec_reg_1_0_0;
  reg  [8:0]       spec_reg_1_0_1;
  reg  [8:0]       spec_reg_1_1_0;
  reg  [8:0]       spec_reg_1_1_1;
  reg  [8:0]       spec_reg_1_2_0;
  reg  [8:0]       spec_reg_1_2_1;
  reg  [8:0]       spec_reg_1_3_0;
  reg  [8:0]       spec_reg_1_3_1;
  reg  [8:0]       spec_reg_2_0_0;
  reg  [8:0]       spec_reg_2_0_1;
  reg  [8:0]       spec_reg_2_1_0;
  reg  [8:0]       spec_reg_2_1_1;
  reg  [8:0]       spec_reg_2_2_0;
  reg  [8:0]       spec_reg_2_2_1;
  reg  [8:0]       spec_reg_2_3_0;
  reg  [8:0]       spec_reg_2_3_1;
  reg  [8:0]       spec_reg_3_0_0;
  reg  [8:0]       spec_reg_3_0_1;
  reg  [8:0]       spec_reg_3_1_0;
  reg  [8:0]       spec_reg_3_1_1;
  reg  [8:0]       spec_reg_3_2_0;
  reg  [8:0]       spec_reg_3_2_1;
  reg  [8:0]       spec_reg_3_3_0;
  reg  [8:0]       spec_reg_3_3_1;
  reg  [8:0]       spec_reg_4_0_0;
  reg  [8:0]       spec_reg_4_0_1;
  reg  [8:0]       spec_reg_4_1_0;
  reg  [8:0]       spec_reg_4_1_1;
  reg  [8:0]       spec_reg_4_2_0;
  reg  [8:0]       spec_reg_4_2_1;
  reg  [8:0]       spec_reg_4_3_0;
  reg  [8:0]       spec_reg_4_3_1;
  reg  [69:0]      iterB_reg_0;
  reg  [69:0]      iterB_reg_1;
  reg  [63:0]      abs_x_reg;
  reg  [63:0]      abs_d_reg;
  reg  [5:0]       lzc_d_reg;
  reg              zero_d_reg;
  reg              q_sign_reg;
  wire [66:0]      norm_x = {3'h0, iter_q_A_reg} << iterB_reg_0[12:11];
  wire [66:0]      norm_d = {3'h0, iter_q_B_reg} << iterB_reg_0[8:7];
  wire             _early_rem_T = iterB_reg_0[6] | iterB_reg_0[10];
  wire             early_finish = _early_rem_T | iterB_reg_0[9];
  reg              early_finish_q;
  reg  [3:0]       iter_num_reg;
  wire [3:0][69:0] _GEN =
    {{{3'h0, norm_x}}, {{norm_x, 3'h0}}, {{1'h0, norm_x, 2'h0}}, {{2'h0, norm_x, 1'h0}}};
  wire [69:0]      _w_align_init_0_T_9 = _GEN[iterB_reg_0[1:0]];
  wire [66:0]      _GEN_0 = 67'(67'h0 - norm_d);
  reg  [69:0]      iter_cons_reg_0;
  reg  [69:0]      iter_cons_reg_1;
  reg  [69:0]      iter_cons_reg_3;
  reg  [69:0]      iter_cons_reg_4;
  reg  [10:0]      spec_r2ud_reg_0;
  reg  [10:0]      spec_r2ud_reg_1;
  reg  [10:0]      spec_r2ud_reg_3;
  reg  [10:0]      spec_r2ud_reg_4;
  reg  [8:0]       d_trunc_reg_0;
  reg  [8:0]       d_trunc_reg_1;
  reg  [8:0]       d_trunc_reg_2;
  reg  [8:0]       d_trunc_reg_3;
  reg  [7:0]       sel_cons_reg_0_0;
  reg  [7:0]       sel_cons_reg_0_1;
  reg  [7:0]       sel_cons_reg_0_2;
  reg  [7:0]       sel_cons_reg_0_3;
  reg  [7:0]       sel_cons_reg_1_0;
  reg  [7:0]       sel_cons_reg_1_1;
  reg  [7:0]       sel_cons_reg_1_2;
  reg  [7:0]       sel_cons_reg_1_3;
  reg  [7:0]       sel_cons_reg_2_0;
  reg  [7:0]       sel_cons_reg_2_1;
  reg  [7:0]       sel_cons_reg_2_2;
  reg  [7:0]       sel_cons_reg_2_3;
  reg  [7:0]       sel_cons_reg_3_0;
  reg  [7:0]       sel_cons_reg_3_1;
  reg  [7:0]       sel_cons_reg_3_2;
  reg  [7:0]       sel_cons_reg_3_3;
  reg  [7:0]       sel_cons_reg_4_0;
  reg  [7:0]       sel_cons_reg_4_1;
  reg  [7:0]       sel_cons_reg_4_2;
  reg  [7:0]       sel_cons_reg_4_3;
  reg  [8:0]       spec_cons_reg_0_0;
  reg  [8:0]       spec_cons_reg_0_1;
  reg  [8:0]       spec_cons_reg_0_2;
  reg  [8:0]       spec_cons_reg_0_3;
  reg  [8:0]       spec_cons_reg_1_0;
  reg  [8:0]       spec_cons_reg_1_1;
  reg  [8:0]       spec_cons_reg_1_2;
  reg  [8:0]       spec_cons_reg_1_3;
  reg  [8:0]       spec_cons_reg_2_0;
  reg  [8:0]       spec_cons_reg_2_1;
  reg  [8:0]       spec_cons_reg_2_2;
  reg  [8:0]       spec_cons_reg_2_3;
  reg  [8:0]       spec_cons_reg_3_0;
  reg  [8:0]       spec_cons_reg_3_1;
  reg  [8:0]       spec_cons_reg_3_2;
  reg  [8:0]       spec_cons_reg_3_3;
  reg  [8:0]       spec_cons_reg_4_0;
  reg  [8:0]       spec_cons_reg_4_1;
  reg  [8:0]       spec_cons_reg_4_2;
  reg  [8:0]       spec_cons_reg_4_3;
  wire [7:0]       sel_cons_0_0 = 8'(_GEN_0[63:56] + _qds_cons_io_m_neg_1[8:1]);
  wire [7:0]       sel_cons_0_1 = 8'(_GEN_0[63:56] + _qds_cons_io_m_neg_0[8:1]);
  wire [7:0]       sel_cons_0_2 = 8'(_GEN_0[63:56] + _qds_cons_io_m_pos_1[8:1]);
  wire [7:0]       sel_cons_0_3 = 8'(_GEN_0[63:56] + _qds_cons_io_m_pos_2[8:1]);
  wire [7:0]       sel_cons_1_0 = 8'(_GEN_0[64:57] + _qds_cons_io_m_neg_1[8:1]);
  wire [7:0]       sel_cons_1_1 = 8'(_GEN_0[64:57] + _qds_cons_io_m_neg_0[8:1]);
  wire [7:0]       sel_cons_1_2 = 8'(_GEN_0[64:57] + _qds_cons_io_m_pos_1[8:1]);
  wire [7:0]       sel_cons_1_3 = 8'(_GEN_0[64:57] + _qds_cons_io_m_pos_2[8:1]);
  wire [7:0]       sel_cons_3_0 = 8'(norm_d[64:57] + _qds_cons_io_m_neg_1[8:1]);
  wire [7:0]       sel_cons_3_1 = 8'(norm_d[64:57] + _qds_cons_io_m_neg_0[8:1]);
  wire [7:0]       sel_cons_3_2 = 8'(norm_d[64:57] + _qds_cons_io_m_pos_1[8:1]);
  wire [7:0]       sel_cons_3_3 = 8'(norm_d[64:57] + _qds_cons_io_m_pos_2[8:1]);
  wire [7:0]       sel_cons_4_0 = 8'(norm_d[63:56] + _qds_cons_io_m_neg_1[8:1]);
  wire [7:0]       sel_cons_4_1 = 8'(norm_d[63:56] + _qds_cons_io_m_neg_0[8:1]);
  wire [7:0]       sel_cons_4_2 = 8'(norm_d[63:56] + _qds_cons_io_m_pos_1[8:1]);
  wire [7:0]       sel_cons_4_3 = 8'(norm_d[63:56] + _qds_cons_io_m_pos_2[8:1]);
  reg  [63:0]      q_A_sign_c_reg;
  reg  [63:0]      q_B_sign_c_reg;
  reg  [69:0]      Bypass_final_rem_reg;
  reg  [69:0]      Bypass_final_rem_plus_d_reg;
  wire             adjust =
    (x_sign_reg
       ? (|Bypass_final_rem_reg) & ~(Bypass_final_rem_reg[69])
       : Bypass_final_rem_reg[69]) & ~early_finish_q;
  wire [69:0]      rem_adjust =
    adjust ? Bypass_final_rem_plus_d_reg : Bypass_final_rem_reg;
  wire [69:0]      rem_adjust_ralign =
    $signed($signed(rem_adjust) >>> 7'({1'h0, lzc_d_reg} + 7'h5));
  always @(posedge clock or posedge reset) begin
    if (reset)
      stateReg <= 6'h1;
    else if (io_flush)
      stateReg <= 6'h1;
    else if (stateReg == 6'h1) begin
      if (in_handshake)
        stateReg <= 6'h2;
    end
    else if (stateReg == 6'h2)
      stateReg <= 6'h4;
    else if (stateReg == 6'h4)
      stateReg <= early_finish ? 6'h10 : 6'h8;
    else if (stateReg == 6'h8)
      stateReg <= (|iter_num_reg) ? 6'h8 : 6'h10;
    else if (stateReg == 6'h10)
      stateReg <= 6'h20;
    else if (stateReg == 6'h20 & io_div_out_ready)
      stateReg <= 6'h1;
  end // always @(posedge, posedge)
  wire [69:0]      _GEN_1 = {4'h0, _early_rem_T ? {abs_x_reg, 2'h0} : 66'h0};
  wire [3:0][63:0] _GEN_2 =
    {{io_dividend},
     {{{32{io_sign & io_dividend[31]}}, io_dividend[31:0]}},
     {{{48{io_sign & io_dividend[15]}}, io_dividend[15:0]}},
     {{{56{io_sign & io_dividend[7]}}, io_dividend[7:0]}}};
  wire [3:0][63:0] _GEN_3 =
    {{io_divisor},
     {{{32{io_sign & io_divisor[31]}}, io_divisor[31:0]}},
     {{{48{io_sign & io_divisor[15]}}, io_divisor[15:0]}},
     {{{56{io_sign & io_divisor[7]}}, io_divisor[7:0]}}};
  wire [3:0]       _GEN_4 =
    {{io_dividend[63]}, {io_dividend[31]}, {io_dividend[15]}, {io_dividend[7]}};
  wire             x_sign = io_sign & _GEN_4[io_sew];
  wire [3:0]       _GEN_5 =
    {{io_divisor[63]}, {io_divisor[31]}, {io_divisor[15]}, {io_divisor[7]}};
  wire             d_sign = io_sign & _GEN_5[io_sew];
  wire [63:0]      neg_x_q = 64'(64'h0 - (in_handshake ? _GEN_2[io_sew] : iter_q_A_reg));
  wire [63:0]      neg_d_q = 64'(64'h0 - (in_handshake ? _GEN_3[io_sew] : iter_q_B_reg));
  wire [5:0]       _x_enc_T_127 =
    abs_x_reg[63]
      ? 6'h0
      : abs_x_reg[62]
          ? 6'h1
          : abs_x_reg[61]
              ? 6'h2
              : abs_x_reg[60]
                  ? 6'h3
                  : abs_x_reg[59]
                      ? 6'h4
                      : abs_x_reg[58]
                          ? 6'h5
                          : abs_x_reg[57]
                              ? 6'h6
                              : abs_x_reg[56]
                                  ? 6'h7
                                  : abs_x_reg[55]
                                      ? 6'h8
                                      : abs_x_reg[54]
                                          ? 6'h9
                                          : abs_x_reg[53]
                                              ? 6'hA
                                              : abs_x_reg[52]
                                                  ? 6'hB
                                                  : abs_x_reg[51]
                                                      ? 6'hC
                                                      : abs_x_reg[50]
                                                          ? 6'hD
                                                          : abs_x_reg[49]
                                                              ? 6'hE
                                                              : abs_x_reg[48]
                                                                  ? 6'hF
                                                                  : abs_x_reg[47]
                                                                      ? 6'h10
                                                                      : abs_x_reg[46]
                                                                          ? 6'h11
                                                                          : abs_x_reg[45]
                                                                              ? 6'h12
                                                                              : abs_x_reg[44]
                                                                                  ? 6'h13
                                                                                  : abs_x_reg[43]
                                                                                      ? 6'h14
                                                                                      : abs_x_reg[42]
                                                                                          ? 6'h15
                                                                                          : abs_x_reg[41]
                                                                                              ? 6'h16
                                                                                              : abs_x_reg[40]
                                                                                                  ? 6'h17
                                                                                                  : abs_x_reg[39]
                                                                                                      ? 6'h18
                                                                                                      : abs_x_reg[38]
                                                                                                          ? 6'h19
                                                                                                          : abs_x_reg[37]
                                                                                                              ? 6'h1A
                                                                                                              : abs_x_reg[36]
                                                                                                                  ? 6'h1B
                                                                                                                  : abs_x_reg[35]
                                                                                                                      ? 6'h1C
                                                                                                                      : abs_x_reg[34]
                                                                                                                          ? 6'h1D
                                                                                                                          : abs_x_reg[33]
                                                                                                                              ? 6'h1E
                                                                                                                              : abs_x_reg[32]
                                                                                                                                  ? 6'h1F
                                                                                                                                  : abs_x_reg[31]
                                                                                                                                      ? 6'h20
                                                                                                                                      : abs_x_reg[30]
                                                                                                                                          ? 6'h21
                                                                                                                                          : abs_x_reg[29]
                                                                                                                                              ? 6'h22
                                                                                                                                              : abs_x_reg[28]
                                                                                                                                                  ? 6'h23
                                                                                                                                                  : abs_x_reg[27]
                                                                                                                                                      ? 6'h24
                                                                                                                                                      : abs_x_reg[26]
                                                                                                                                                          ? 6'h25
                                                                                                                                                          : abs_x_reg[25]
                                                                                                                                                              ? 6'h26
                                                                                                                                                              : abs_x_reg[24]
                                                                                                                                                                  ? 6'h27
                                                                                                                                                                  : abs_x_reg[23]
                                                                                                                                                                      ? 6'h28
                                                                                                                                                                      : abs_x_reg[22]
                                                                                                                                                                          ? 6'h29
                                                                                                                                                                          : abs_x_reg[21]
                                                                                                                                                                              ? 6'h2A
                                                                                                                                                                              : abs_x_reg[20]
                                                                                                                                                                                  ? 6'h2B
                                                                                                                                                                                  : abs_x_reg[19]
                                                                                                                                                                                      ? 6'h2C
                                                                                                                                                                                      : abs_x_reg[18]
                                                                                                                                                                                          ? 6'h2D
                                                                                                                                                                                          : abs_x_reg[17]
                                                                                                                                                                                              ? 6'h2E
                                                                                                                                                                                              : abs_x_reg[16]
                                                                                                                                                                                                  ? 6'h2F
                                                                                                                                                                                                  : abs_x_reg[15]
                                                                                                                                                                                                      ? 6'h30
                                                                                                                                                                                                      : abs_x_reg[14]
                                                                                                                                                                                                          ? 6'h31
                                                                                                                                                                                                          : abs_x_reg[13]
                                                                                                                                                                                                              ? 6'h32
                                                                                                                                                                                                              : abs_x_reg[12]
                                                                                                                                                                                                                  ? 6'h33
                                                                                                                                                                                                                  : abs_x_reg[11]
                                                                                                                                                                                                                      ? 6'h34
                                                                                                                                                                                                                      : abs_x_reg[10]
                                                                                                                                                                                                                          ? 6'h35
                                                                                                                                                                                                                          : abs_x_reg[9]
                                                                                                                                                                                                                              ? 6'h36
                                                                                                                                                                                                                              : abs_x_reg[8]
                                                                                                                                                                                                                                  ? 6'h37
                                                                                                                                                                                                                                  : abs_x_reg[7]
                                                                                                                                                                                                                                      ? 6'h38
                                                                                                                                                                                                                                      : abs_x_reg[6]
                                                                                                                                                                                                                                          ? 6'h39
                                                                                                                                                                                                                                          : abs_x_reg[5]
                                                                                                                                                                                                                                              ? 6'h3A
                                                                                                                                                                                                                                              : abs_x_reg[4]
                                                                                                                                                                                                                                                  ? 6'h3B
                                                                                                                                                                                                                                                  : abs_x_reg[3]
                                                                                                                                                                                                                                                      ? 6'h3C
                                                                                                                                                                                                                                                      : abs_x_reg[2]
                                                                                                                                                                                                                                                          ? 6'h3D
                                                                                                                                                                                                                                                          : {5'h1F,
                                                                                                                                                                                                                                                             ~(abs_x_reg[1])};
  wire [5:0]       _d_enc_T_127 =
    abs_d_reg[63]
      ? 6'h0
      : abs_d_reg[62]
          ? 6'h1
          : abs_d_reg[61]
              ? 6'h2
              : abs_d_reg[60]
                  ? 6'h3
                  : abs_d_reg[59]
                      ? 6'h4
                      : abs_d_reg[58]
                          ? 6'h5
                          : abs_d_reg[57]
                              ? 6'h6
                              : abs_d_reg[56]
                                  ? 6'h7
                                  : abs_d_reg[55]
                                      ? 6'h8
                                      : abs_d_reg[54]
                                          ? 6'h9
                                          : abs_d_reg[53]
                                              ? 6'hA
                                              : abs_d_reg[52]
                                                  ? 6'hB
                                                  : abs_d_reg[51]
                                                      ? 6'hC
                                                      : abs_d_reg[50]
                                                          ? 6'hD
                                                          : abs_d_reg[49]
                                                              ? 6'hE
                                                              : abs_d_reg[48]
                                                                  ? 6'hF
                                                                  : abs_d_reg[47]
                                                                      ? 6'h10
                                                                      : abs_d_reg[46]
                                                                          ? 6'h11
                                                                          : abs_d_reg[45]
                                                                              ? 6'h12
                                                                              : abs_d_reg[44]
                                                                                  ? 6'h13
                                                                                  : abs_d_reg[43]
                                                                                      ? 6'h14
                                                                                      : abs_d_reg[42]
                                                                                          ? 6'h15
                                                                                          : abs_d_reg[41]
                                                                                              ? 6'h16
                                                                                              : abs_d_reg[40]
                                                                                                  ? 6'h17
                                                                                                  : abs_d_reg[39]
                                                                                                      ? 6'h18
                                                                                                      : abs_d_reg[38]
                                                                                                          ? 6'h19
                                                                                                          : abs_d_reg[37]
                                                                                                              ? 6'h1A
                                                                                                              : abs_d_reg[36]
                                                                                                                  ? 6'h1B
                                                                                                                  : abs_d_reg[35]
                                                                                                                      ? 6'h1C
                                                                                                                      : abs_d_reg[34]
                                                                                                                          ? 6'h1D
                                                                                                                          : abs_d_reg[33]
                                                                                                                              ? 6'h1E
                                                                                                                              : abs_d_reg[32]
                                                                                                                                  ? 6'h1F
                                                                                                                                  : abs_d_reg[31]
                                                                                                                                      ? 6'h20
                                                                                                                                      : abs_d_reg[30]
                                                                                                                                          ? 6'h21
                                                                                                                                          : abs_d_reg[29]
                                                                                                                                              ? 6'h22
                                                                                                                                              : abs_d_reg[28]
                                                                                                                                                  ? 6'h23
                                                                                                                                                  : abs_d_reg[27]
                                                                                                                                                      ? 6'h24
                                                                                                                                                      : abs_d_reg[26]
                                                                                                                                                          ? 6'h25
                                                                                                                                                          : abs_d_reg[25]
                                                                                                                                                              ? 6'h26
                                                                                                                                                              : abs_d_reg[24]
                                                                                                                                                                  ? 6'h27
                                                                                                                                                                  : abs_d_reg[23]
                                                                                                                                                                      ? 6'h28
                                                                                                                                                                      : abs_d_reg[22]
                                                                                                                                                                          ? 6'h29
                                                                                                                                                                          : abs_d_reg[21]
                                                                                                                                                                              ? 6'h2A
                                                                                                                                                                              : abs_d_reg[20]
                                                                                                                                                                                  ? 6'h2B
                                                                                                                                                                                  : abs_d_reg[19]
                                                                                                                                                                                      ? 6'h2C
                                                                                                                                                                                      : abs_d_reg[18]
                                                                                                                                                                                          ? 6'h2D
                                                                                                                                                                                          : abs_d_reg[17]
                                                                                                                                                                                              ? 6'h2E
                                                                                                                                                                                              : abs_d_reg[16]
                                                                                                                                                                                                  ? 6'h2F
                                                                                                                                                                                                  : abs_d_reg[15]
                                                                                                                                                                                                      ? 6'h30
                                                                                                                                                                                                      : abs_d_reg[14]
                                                                                                                                                                                                          ? 6'h31
                                                                                                                                                                                                          : abs_d_reg[13]
                                                                                                                                                                                                              ? 6'h32
                                                                                                                                                                                                              : abs_d_reg[12]
                                                                                                                                                                                                                  ? 6'h33
                                                                                                                                                                                                                  : abs_d_reg[11]
                                                                                                                                                                                                                      ? 6'h34
                                                                                                                                                                                                                      : abs_d_reg[10]
                                                                                                                                                                                                                          ? 6'h35
                                                                                                                                                                                                                          : abs_d_reg[9]
                                                                                                                                                                                                                              ? 6'h36
                                                                                                                                                                                                                              : abs_d_reg[8]
                                                                                                                                                                                                                                  ? 6'h37
                                                                                                                                                                                                                                  : abs_d_reg[7]
                                                                                                                                                                                                                                      ? 6'h38
                                                                                                                                                                                                                                      : abs_d_reg[6]
                                                                                                                                                                                                                                          ? 6'h39
                                                                                                                                                                                                                                          : abs_d_reg[5]
                                                                                                                                                                                                                                              ? 6'h3A
                                                                                                                                                                                                                                              : abs_d_reg[4]
                                                                                                                                                                                                                                                  ? 6'h3B
                                                                                                                                                                                                                                                  : abs_d_reg[3]
                                                                                                                                                                                                                                                      ? 6'h3C
                                                                                                                                                                                                                                                      : abs_d_reg[2]
                                                                                                                                                                                                                                                          ? 6'h3D
                                                                                                                                                                                                                                                          : {5'h1F,
                                                                                                                                                                                                                                                             ~(abs_d_reg[1])};
  wire             zero_d = abs_d_reg == 64'h0;
  wire [69:0]      _Bypass_final_rem_plus_d_T_9 = 70'(iterB_reg_0 + iterB_reg_1);
  wire [126:0]     _norm_x_part_T_2 =
    {63'h0, abs_x_reg} << {121'h0, _x_enc_T_127[5:2], 2'h0};
  wire [126:0]     _norm_d_part_T_2 =
    {63'h0, abs_d_reg} << {121'h0, _d_enc_T_127[5:2], 2'h0};
  wire [69:0]      _GEN_6 =
    {56'h0,
     abs_x_reg == 64'h0,
     _x_enc_T_127[1:0],
     zero_d,
     &_d_enc_T_127,
     _d_enc_T_127[1:0],
     7'({1'h0, _d_enc_T_127} - {1'h0, _x_enc_T_127})};
  always @(posedge clock) begin
    if (stateReg[1])
      x_sign_reg <= x_sign;
    if (stateReg[1] | stateReg[2] | stateReg[3])
      iter_q_A_reg <=
        stateReg[1]
          ? _norm_x_part_T_2[63:0]
          : stateReg[2]
              ? (~early_finish | iterB_reg_0[6]
                   ? 64'h0
                   : iterB_reg_0[10] ? 64'hFFFFFFFFFFFFFFFF : abs_x_reg)
              : _IterBlock_io_nxt_q_A;
    if (stateReg[1] | stateReg[2] | stateReg[3])
      iter_q_B_reg <=
        stateReg[1]
          ? _norm_d_part_T_2[63:0]
          : stateReg[2] ? 64'h0 : _IterBlock_io_nxt_q_B;
    if (stateReg[2] | stateReg[3]) begin
      sel_reg_0_0 <= stateReg[2] ? _w_align_init_0_T_9[69:62] : _IterBlock_io_nxt_sel_0_0;
      sel_reg_0_1 <= stateReg[2] ? _qds_cons_io_m_neg_1[8:1] : _IterBlock_io_nxt_sel_0_1;
      sel_reg_1_0 <= stateReg[2] ? _w_align_init_0_T_9[69:62] : _IterBlock_io_nxt_sel_1_0;
      sel_reg_1_1 <= stateReg[2] ? _qds_cons_io_m_neg_0[8:1] : _IterBlock_io_nxt_sel_1_1;
      sel_reg_2_0 <= stateReg[2] ? _w_align_init_0_T_9[69:62] : _IterBlock_io_nxt_sel_2_0;
      sel_reg_2_1 <= stateReg[2] ? _qds_cons_io_m_pos_1[8:1] : _IterBlock_io_nxt_sel_2_1;
      sel_reg_3_0 <= stateReg[2] ? _w_align_init_0_T_9[69:62] : _IterBlock_io_nxt_sel_3_0;
      sel_reg_3_1 <= stateReg[2] ? _qds_cons_io_m_pos_2[8:1] : _IterBlock_io_nxt_sel_3_1;
    end
    if (stateReg[2] | stateReg[3]) begin
      spec_reg_0_0_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_0_0_0;
      spec_reg_0_0_1 <= stateReg[2] ? {sel_cons_0_0, 1'h0} : _IterBlock_io_nxt_spec_0_0_1;
      spec_reg_0_1_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_0_1_0;
      spec_reg_0_1_1 <= stateReg[2] ? {sel_cons_0_1, 1'h0} : _IterBlock_io_nxt_spec_0_1_1;
      spec_reg_0_2_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_0_2_0;
      spec_reg_0_2_1 <= stateReg[2] ? {sel_cons_0_2, 1'h0} : _IterBlock_io_nxt_spec_0_2_1;
      spec_reg_0_3_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_0_3_0;
      spec_reg_0_3_1 <= stateReg[2] ? {sel_cons_0_3, 1'h0} : _IterBlock_io_nxt_spec_0_3_1;
      spec_reg_1_0_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_1_0_0;
      spec_reg_1_0_1 <= stateReg[2] ? {sel_cons_1_0, 1'h0} : _IterBlock_io_nxt_spec_1_0_1;
      spec_reg_1_1_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_1_1_0;
      spec_reg_1_1_1 <= stateReg[2] ? {sel_cons_1_1, 1'h0} : _IterBlock_io_nxt_spec_1_1_1;
      spec_reg_1_2_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_1_2_0;
      spec_reg_1_2_1 <= stateReg[2] ? {sel_cons_1_2, 1'h0} : _IterBlock_io_nxt_spec_1_2_1;
      spec_reg_1_3_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_1_3_0;
      spec_reg_1_3_1 <= stateReg[2] ? {sel_cons_1_3, 1'h0} : _IterBlock_io_nxt_spec_1_3_1;
      spec_reg_2_0_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_2_0_0;
      spec_reg_2_0_1 <=
        stateReg[2] ? {_qds_cons_io_m_neg_1[8:1], 1'h0} : _IterBlock_io_nxt_spec_2_0_1;
      spec_reg_2_1_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_2_1_0;
      spec_reg_2_1_1 <=
        stateReg[2] ? {_qds_cons_io_m_neg_0[8:1], 1'h0} : _IterBlock_io_nxt_spec_2_1_1;
      spec_reg_2_2_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_2_2_0;
      spec_reg_2_2_1 <=
        stateReg[2] ? {_qds_cons_io_m_pos_1[8:1], 1'h0} : _IterBlock_io_nxt_spec_2_2_1;
      spec_reg_2_3_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_2_3_0;
      spec_reg_2_3_1 <=
        stateReg[2] ? {_qds_cons_io_m_pos_2[8:1], 1'h0} : _IterBlock_io_nxt_spec_2_3_1;
      spec_reg_3_0_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_3_0_0;
      spec_reg_3_0_1 <= stateReg[2] ? {sel_cons_3_0, 1'h0} : _IterBlock_io_nxt_spec_3_0_1;
      spec_reg_3_1_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_3_1_0;
      spec_reg_3_1_1 <= stateReg[2] ? {sel_cons_3_1, 1'h0} : _IterBlock_io_nxt_spec_3_1_1;
      spec_reg_3_2_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_3_2_0;
      spec_reg_3_2_1 <= stateReg[2] ? {sel_cons_3_2, 1'h0} : _IterBlock_io_nxt_spec_3_2_1;
      spec_reg_3_3_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_3_3_0;
      spec_reg_3_3_1 <= stateReg[2] ? {sel_cons_3_3, 1'h0} : _IterBlock_io_nxt_spec_3_3_1;
      spec_reg_4_0_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_4_0_0;
      spec_reg_4_0_1 <= stateReg[2] ? {sel_cons_4_0, 1'h0} : _IterBlock_io_nxt_spec_4_0_1;
      spec_reg_4_1_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_4_1_0;
      spec_reg_4_1_1 <= stateReg[2] ? {sel_cons_4_1, 1'h0} : _IterBlock_io_nxt_spec_4_1_1;
      spec_reg_4_2_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_4_2_0;
      spec_reg_4_2_1 <= stateReg[2] ? {sel_cons_4_2, 1'h0} : _IterBlock_io_nxt_spec_4_2_1;
      spec_reg_4_3_0 <=
        stateReg[2] ? _w_align_init_0_T_9[67:59] : _IterBlock_io_nxt_spec_4_3_0;
      spec_reg_4_3_1 <= stateReg[2] ? {sel_cons_4_3, 1'h0} : _IterBlock_io_nxt_spec_4_3_1;
    end
    if (stateReg[1] | stateReg[2] | stateReg[3]) begin
      if (stateReg[1])
        iterB_reg_0 <= _GEN_6;
      else if (stateReg[2]) begin
        if (early_finish)
          iterB_reg_0 <= _GEN_1;
        else
          iterB_reg_0 <= _w_align_init_0_T_9;
      end
      else
        iterB_reg_0 <= _IterBlock_io_nxt_iterB_0;
      iterB_reg_1 <=
        stateReg[1]
          ? _GEN_6
          : stateReg[2] ? (early_finish ? _GEN_1 : 70'h0) : _IterBlock_io_nxt_iterB_1;
    end
    if (in_handshake) begin
      abs_x_reg <= x_sign ? neg_x_q : _GEN_2[io_sew];
      abs_d_reg <= d_sign ? neg_d_q : _GEN_3[io_sew];
    end
    if (stateReg[1])
      lzc_d_reg <= _d_enc_T_127;
    if (stateReg[1])
      zero_d_reg <= zero_d;
    if (stateReg[1])
      q_sign_reg <= x_sign ^ d_sign;
    if (stateReg[2])
      early_finish_q <= early_finish;
    if (stateReg[2] | stateReg[3]) begin
      if (stateReg[2])
        iter_num_reg <= 4'(iterB_reg_0[5:2] + {3'h0, &(iterB_reg_0[1:0])});
      else
        iter_num_reg <= 4'(iter_num_reg - 4'h1);
    end
    if (stateReg[2]) begin
      iter_cons_reg_0 <= {_GEN_0[65:0], 4'h0};
      iter_cons_reg_1 <= {_GEN_0, 3'h0};
      iter_cons_reg_3 <= {norm_d, 3'h0};
      iter_cons_reg_4 <= {norm_d[65:0], 4'h0};
    end
    if (stateReg[2]) begin
      spec_r2ud_reg_0 <= _GEN_0[61:51];
      spec_r2ud_reg_1 <= _GEN_0[62:52];
      spec_r2ud_reg_3 <= norm_d[62:52];
      spec_r2ud_reg_4 <= norm_d[61:51];
    end
    if (stateReg[2]) begin
      d_trunc_reg_0 <= _GEN_0[63:55];
      d_trunc_reg_1 <= _GEN_0[64:56];
      d_trunc_reg_2 <= norm_d[64:56];
      d_trunc_reg_3 <= norm_d[63:55];
    end
    if (stateReg[2]) begin
      sel_cons_reg_0_0 <= sel_cons_0_0;
      sel_cons_reg_0_1 <= sel_cons_0_1;
      sel_cons_reg_0_2 <= sel_cons_0_2;
      sel_cons_reg_0_3 <= sel_cons_0_3;
      sel_cons_reg_1_0 <= sel_cons_1_0;
      sel_cons_reg_1_1 <= sel_cons_1_1;
      sel_cons_reg_1_2 <= sel_cons_1_2;
      sel_cons_reg_1_3 <= sel_cons_1_3;
      sel_cons_reg_2_0 <= _qds_cons_io_m_neg_1[8:1];
      sel_cons_reg_2_1 <= _qds_cons_io_m_neg_0[8:1];
      sel_cons_reg_2_2 <= _qds_cons_io_m_pos_1[8:1];
      sel_cons_reg_2_3 <= _qds_cons_io_m_pos_2[8:1];
      sel_cons_reg_3_0 <= sel_cons_3_0;
      sel_cons_reg_3_1 <= sel_cons_3_1;
      sel_cons_reg_3_2 <= sel_cons_3_2;
      sel_cons_reg_3_3 <= sel_cons_3_3;
      sel_cons_reg_4_0 <= sel_cons_4_0;
      sel_cons_reg_4_1 <= sel_cons_4_1;
      sel_cons_reg_4_2 <= sel_cons_4_2;
      sel_cons_reg_4_3 <= sel_cons_4_3;
    end
    if (stateReg[2]) begin
      spec_cons_reg_0_0 <= 9'(_GEN_0[61:53] + _qds_cons_io_m_neg_1);
      spec_cons_reg_0_1 <= 9'(_GEN_0[61:53] + _qds_cons_io_m_neg_0);
      spec_cons_reg_0_2 <= 9'(_GEN_0[61:53] + _qds_cons_io_m_pos_1);
      spec_cons_reg_0_3 <= 9'(_GEN_0[61:53] + _qds_cons_io_m_pos_2);
      spec_cons_reg_1_0 <= 9'(_GEN_0[62:54] + _qds_cons_io_m_neg_1);
      spec_cons_reg_1_1 <= 9'(_GEN_0[62:54] + _qds_cons_io_m_neg_0);
      spec_cons_reg_1_2 <= 9'(_GEN_0[62:54] + _qds_cons_io_m_pos_1);
      spec_cons_reg_1_3 <= 9'(_GEN_0[62:54] + _qds_cons_io_m_pos_2);
      spec_cons_reg_2_0 <= _qds_cons_io_m_neg_1;
      spec_cons_reg_2_1 <= _qds_cons_io_m_neg_0;
      spec_cons_reg_2_2 <= _qds_cons_io_m_pos_1;
      spec_cons_reg_2_3 <= _qds_cons_io_m_pos_2;
      spec_cons_reg_3_0 <= 9'(norm_d[62:54] + _qds_cons_io_m_neg_1);
      spec_cons_reg_3_1 <= 9'(norm_d[62:54] + _qds_cons_io_m_neg_0);
      spec_cons_reg_3_2 <= 9'(norm_d[62:54] + _qds_cons_io_m_pos_1);
      spec_cons_reg_3_3 <= 9'(norm_d[62:54] + _qds_cons_io_m_pos_2);
      spec_cons_reg_4_0 <= 9'(norm_d[61:53] + _qds_cons_io_m_neg_1);
      spec_cons_reg_4_1 <= 9'(norm_d[61:53] + _qds_cons_io_m_neg_0);
      spec_cons_reg_4_2 <= 9'(norm_d[61:53] + _qds_cons_io_m_pos_1);
      spec_cons_reg_4_3 <= 9'(norm_d[61:53] + _qds_cons_io_m_pos_2);
    end
    if (stateReg[4])
      q_A_sign_c_reg <= q_sign_reg & ~zero_d_reg ? neg_x_q : iter_q_A_reg;
    if (stateReg[4])
      q_B_sign_c_reg <= q_sign_reg & ~zero_d_reg ? neg_d_q : iter_q_B_reg;
    if (stateReg[4])
      Bypass_final_rem_reg <=
        x_sign_reg
          ? 70'(~iterB_reg_0 + 70'(~iterB_reg_1 + 70'h2))
          : _Bypass_final_rem_plus_d_T_9;
    if (stateReg[4])
      Bypass_final_rem_plus_d_reg <=
        x_sign_reg
          ? 70'(70'(~iterB_reg_0 + ~iterB_reg_1)
                + 70'({iter_cons_reg_1[67:0], 2'h0} + 70'h2))
          : 70'(_Bypass_final_rem_plus_d_T_9 + {iter_cons_reg_3[67:0], 2'h0});
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:69];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [6:0] i = 7'h0; i < 7'h46; i += 7'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        stateReg = _RANDOM[7'h0][5:0];
        x_sign_reg = _RANDOM[7'h0][6];
        iter_q_A_reg = {_RANDOM[7'h0][31:7], _RANDOM[7'h1], _RANDOM[7'h2][6:0]};
        iter_q_B_reg = {_RANDOM[7'h2][31:7], _RANDOM[7'h3], _RANDOM[7'h4][6:0]};
        sel_reg_0_0 = _RANDOM[7'h4][14:7];
        sel_reg_0_1 = _RANDOM[7'h4][22:15];
        sel_reg_1_0 = _RANDOM[7'h4][30:23];
        sel_reg_1_1 = {_RANDOM[7'h4][31], _RANDOM[7'h5][6:0]};
        sel_reg_2_0 = _RANDOM[7'h5][14:7];
        sel_reg_2_1 = _RANDOM[7'h5][22:15];
        sel_reg_3_0 = _RANDOM[7'h5][30:23];
        sel_reg_3_1 = {_RANDOM[7'h5][31], _RANDOM[7'h6][6:0]};
        spec_reg_0_0_0 = _RANDOM[7'h6][15:7];
        spec_reg_0_0_1 = _RANDOM[7'h6][24:16];
        spec_reg_0_1_0 = {_RANDOM[7'h6][31:25], _RANDOM[7'h7][1:0]};
        spec_reg_0_1_1 = _RANDOM[7'h7][10:2];
        spec_reg_0_2_0 = _RANDOM[7'h7][19:11];
        spec_reg_0_2_1 = _RANDOM[7'h7][28:20];
        spec_reg_0_3_0 = {_RANDOM[7'h7][31:29], _RANDOM[7'h8][5:0]};
        spec_reg_0_3_1 = _RANDOM[7'h8][14:6];
        spec_reg_1_0_0 = _RANDOM[7'h8][23:15];
        spec_reg_1_0_1 = {_RANDOM[7'h8][31:24], _RANDOM[7'h9][0]};
        spec_reg_1_1_0 = _RANDOM[7'h9][9:1];
        spec_reg_1_1_1 = _RANDOM[7'h9][18:10];
        spec_reg_1_2_0 = _RANDOM[7'h9][27:19];
        spec_reg_1_2_1 = {_RANDOM[7'h9][31:28], _RANDOM[7'hA][4:0]};
        spec_reg_1_3_0 = _RANDOM[7'hA][13:5];
        spec_reg_1_3_1 = _RANDOM[7'hA][22:14];
        spec_reg_2_0_0 = _RANDOM[7'hA][31:23];
        spec_reg_2_0_1 = _RANDOM[7'hB][8:0];
        spec_reg_2_1_0 = _RANDOM[7'hB][17:9];
        spec_reg_2_1_1 = _RANDOM[7'hB][26:18];
        spec_reg_2_2_0 = {_RANDOM[7'hB][31:27], _RANDOM[7'hC][3:0]};
        spec_reg_2_2_1 = _RANDOM[7'hC][12:4];
        spec_reg_2_3_0 = _RANDOM[7'hC][21:13];
        spec_reg_2_3_1 = _RANDOM[7'hC][30:22];
        spec_reg_3_0_0 = {_RANDOM[7'hC][31], _RANDOM[7'hD][7:0]};
        spec_reg_3_0_1 = _RANDOM[7'hD][16:8];
        spec_reg_3_1_0 = _RANDOM[7'hD][25:17];
        spec_reg_3_1_1 = {_RANDOM[7'hD][31:26], _RANDOM[7'hE][2:0]};
        spec_reg_3_2_0 = _RANDOM[7'hE][11:3];
        spec_reg_3_2_1 = _RANDOM[7'hE][20:12];
        spec_reg_3_3_0 = _RANDOM[7'hE][29:21];
        spec_reg_3_3_1 = {_RANDOM[7'hE][31:30], _RANDOM[7'hF][6:0]};
        spec_reg_4_0_0 = _RANDOM[7'hF][15:7];
        spec_reg_4_0_1 = _RANDOM[7'hF][24:16];
        spec_reg_4_1_0 = {_RANDOM[7'hF][31:25], _RANDOM[7'h10][1:0]};
        spec_reg_4_1_1 = _RANDOM[7'h10][10:2];
        spec_reg_4_2_0 = _RANDOM[7'h10][19:11];
        spec_reg_4_2_1 = _RANDOM[7'h10][28:20];
        spec_reg_4_3_0 = {_RANDOM[7'h10][31:29], _RANDOM[7'h11][5:0]};
        spec_reg_4_3_1 = _RANDOM[7'h11][14:6];
        iterB_reg_0 = {_RANDOM[7'h11][31:15], _RANDOM[7'h12], _RANDOM[7'h13][20:0]};
        iterB_reg_1 = {_RANDOM[7'h13][31:21], _RANDOM[7'h14], _RANDOM[7'h15][26:0]};
        abs_x_reg = {_RANDOM[7'h15][31:27], _RANDOM[7'h16], _RANDOM[7'h17][26:0]};
        abs_d_reg = {_RANDOM[7'h17][31:27], _RANDOM[7'h18], _RANDOM[7'h19][26:0]};
        lzc_d_reg = {_RANDOM[7'h19][31:27], _RANDOM[7'h1A][0]};
        zero_d_reg = _RANDOM[7'h1A][1];
        q_sign_reg = _RANDOM[7'h1A][2];
        early_finish_q = _RANDOM[7'h1A][3];
        iter_num_reg = _RANDOM[7'h1A][7:4];
        iter_cons_reg_0 = {_RANDOM[7'h1A][31:8], _RANDOM[7'h1B], _RANDOM[7'h1C][13:0]};
        iter_cons_reg_1 = {_RANDOM[7'h1C][31:14], _RANDOM[7'h1D], _RANDOM[7'h1E][19:0]};
        iter_cons_reg_3 = {_RANDOM[7'h20][31:26], _RANDOM[7'h21], _RANDOM[7'h22]};
        iter_cons_reg_4 = {_RANDOM[7'h23], _RANDOM[7'h24], _RANDOM[7'h25][5:0]};
        spec_r2ud_reg_0 = _RANDOM[7'h2F][16:6];
        spec_r2ud_reg_1 = _RANDOM[7'h2F][27:17];
        spec_r2ud_reg_3 = _RANDOM[7'h30][17:7];
        spec_r2ud_reg_4 = _RANDOM[7'h30][28:18];
        d_trunc_reg_0 = {_RANDOM[7'h30][31:29], _RANDOM[7'h31][5:0]};
        d_trunc_reg_1 = _RANDOM[7'h31][14:6];
        d_trunc_reg_2 = _RANDOM[7'h31][23:15];
        d_trunc_reg_3 = {_RANDOM[7'h31][31:24], _RANDOM[7'h32][0]};
        sel_cons_reg_0_0 = _RANDOM[7'h32][8:1];
        sel_cons_reg_0_1 = _RANDOM[7'h32][16:9];
        sel_cons_reg_0_2 = _RANDOM[7'h32][24:17];
        sel_cons_reg_0_3 = {_RANDOM[7'h32][31:25], _RANDOM[7'h33][0]};
        sel_cons_reg_1_0 = _RANDOM[7'h33][8:1];
        sel_cons_reg_1_1 = _RANDOM[7'h33][16:9];
        sel_cons_reg_1_2 = _RANDOM[7'h33][24:17];
        sel_cons_reg_1_3 = {_RANDOM[7'h33][31:25], _RANDOM[7'h34][0]};
        sel_cons_reg_2_0 = _RANDOM[7'h34][8:1];
        sel_cons_reg_2_1 = _RANDOM[7'h34][16:9];
        sel_cons_reg_2_2 = _RANDOM[7'h34][24:17];
        sel_cons_reg_2_3 = {_RANDOM[7'h34][31:25], _RANDOM[7'h35][0]};
        sel_cons_reg_3_0 = _RANDOM[7'h35][8:1];
        sel_cons_reg_3_1 = _RANDOM[7'h35][16:9];
        sel_cons_reg_3_2 = _RANDOM[7'h35][24:17];
        sel_cons_reg_3_3 = {_RANDOM[7'h35][31:25], _RANDOM[7'h36][0]};
        sel_cons_reg_4_0 = _RANDOM[7'h36][8:1];
        sel_cons_reg_4_1 = _RANDOM[7'h36][16:9];
        sel_cons_reg_4_2 = _RANDOM[7'h36][24:17];
        sel_cons_reg_4_3 = {_RANDOM[7'h36][31:25], _RANDOM[7'h37][0]};
        spec_cons_reg_0_0 = _RANDOM[7'h37][9:1];
        spec_cons_reg_0_1 = _RANDOM[7'h37][18:10];
        spec_cons_reg_0_2 = _RANDOM[7'h37][27:19];
        spec_cons_reg_0_3 = {_RANDOM[7'h37][31:28], _RANDOM[7'h38][4:0]};
        spec_cons_reg_1_0 = _RANDOM[7'h38][13:5];
        spec_cons_reg_1_1 = _RANDOM[7'h38][22:14];
        spec_cons_reg_1_2 = _RANDOM[7'h38][31:23];
        spec_cons_reg_1_3 = _RANDOM[7'h39][8:0];
        spec_cons_reg_2_0 = _RANDOM[7'h39][17:9];
        spec_cons_reg_2_1 = _RANDOM[7'h39][26:18];
        spec_cons_reg_2_2 = {_RANDOM[7'h39][31:27], _RANDOM[7'h3A][3:0]};
        spec_cons_reg_2_3 = _RANDOM[7'h3A][12:4];
        spec_cons_reg_3_0 = _RANDOM[7'h3A][21:13];
        spec_cons_reg_3_1 = _RANDOM[7'h3A][30:22];
        spec_cons_reg_3_2 = {_RANDOM[7'h3A][31], _RANDOM[7'h3B][7:0]};
        spec_cons_reg_3_3 = _RANDOM[7'h3B][16:8];
        spec_cons_reg_4_0 = _RANDOM[7'h3B][25:17];
        spec_cons_reg_4_1 = {_RANDOM[7'h3B][31:26], _RANDOM[7'h3C][2:0]};
        spec_cons_reg_4_2 = _RANDOM[7'h3C][11:3];
        spec_cons_reg_4_3 = _RANDOM[7'h3C][20:12];
        q_A_sign_c_reg = {_RANDOM[7'h3C][31:21], _RANDOM[7'h3D], _RANDOM[7'h3E][20:0]};
        q_B_sign_c_reg = {_RANDOM[7'h3E][31:21], _RANDOM[7'h3F], _RANDOM[7'h40][20:0]};
        Bypass_final_rem_reg =
          {_RANDOM[7'h40][31:21], _RANDOM[7'h41], _RANDOM[7'h42][26:0]};
        Bypass_final_rem_plus_d_reg =
          {_RANDOM[7'h42][31:27], _RANDOM[7'h43], _RANDOM[7'h44], _RANDOM[7'h45][0]};
      `endif // RANDOMIZE_REG_INIT
      if (reset)
        stateReg = 6'h1;
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  SRT4qdsCons qds_cons (
    .io_d_trunc_3 (norm_d[62:60]),
    .io_m_neg_1   (_qds_cons_io_m_neg_1),
    .io_m_neg_0   (_qds_cons_io_m_neg_0),
    .io_m_pos_1   (_qds_cons_io_m_pos_1),
    .io_m_pos_2   (_qds_cons_io_m_pos_2)
  );
  IterBlock_v4_6 IterBlock (
    .io_Sel_cons_0_0   (sel_cons_reg_0_0),
    .io_Sel_cons_0_1   (sel_cons_reg_0_1),
    .io_Sel_cons_0_2   (sel_cons_reg_0_2),
    .io_Sel_cons_0_3   (sel_cons_reg_0_3),
    .io_Sel_cons_1_0   (sel_cons_reg_1_0),
    .io_Sel_cons_1_1   (sel_cons_reg_1_1),
    .io_Sel_cons_1_2   (sel_cons_reg_1_2),
    .io_Sel_cons_1_3   (sel_cons_reg_1_3),
    .io_Sel_cons_2_0   (sel_cons_reg_2_0),
    .io_Sel_cons_2_1   (sel_cons_reg_2_1),
    .io_Sel_cons_2_2   (sel_cons_reg_2_2),
    .io_Sel_cons_2_3   (sel_cons_reg_2_3),
    .io_Sel_cons_3_0   (sel_cons_reg_3_0),
    .io_Sel_cons_3_1   (sel_cons_reg_3_1),
    .io_Sel_cons_3_2   (sel_cons_reg_3_2),
    .io_Sel_cons_3_3   (sel_cons_reg_3_3),
    .io_Sel_cons_4_0   (sel_cons_reg_4_0),
    .io_Sel_cons_4_1   (sel_cons_reg_4_1),
    .io_Sel_cons_4_2   (sel_cons_reg_4_2),
    .io_Sel_cons_4_3   (sel_cons_reg_4_3),
    .io_Spec_cons_0_0  (spec_cons_reg_0_0),
    .io_Spec_cons_0_1  (spec_cons_reg_0_1),
    .io_Spec_cons_0_2  (spec_cons_reg_0_2),
    .io_Spec_cons_0_3  (spec_cons_reg_0_3),
    .io_Spec_cons_1_0  (spec_cons_reg_1_0),
    .io_Spec_cons_1_1  (spec_cons_reg_1_1),
    .io_Spec_cons_1_2  (spec_cons_reg_1_2),
    .io_Spec_cons_1_3  (spec_cons_reg_1_3),
    .io_Spec_cons_2_0  (spec_cons_reg_2_0),
    .io_Spec_cons_2_1  (spec_cons_reg_2_1),
    .io_Spec_cons_2_2  (spec_cons_reg_2_2),
    .io_Spec_cons_2_3  (spec_cons_reg_2_3),
    .io_Spec_cons_3_0  (spec_cons_reg_3_0),
    .io_Spec_cons_3_1  (spec_cons_reg_3_1),
    .io_Spec_cons_3_2  (spec_cons_reg_3_2),
    .io_Spec_cons_3_3  (spec_cons_reg_3_3),
    .io_Spec_cons_4_0  (spec_cons_reg_4_0),
    .io_Spec_cons_4_1  (spec_cons_reg_4_1),
    .io_Spec_cons_4_2  (spec_cons_reg_4_2),
    .io_Spec_cons_4_3  (spec_cons_reg_4_3),
    .io_iter_cons_0    (iter_cons_reg_0),
    .io_iter_cons_1    (iter_cons_reg_1),
    .io_iter_cons_3    (iter_cons_reg_3),
    .io_iter_cons_4    (iter_cons_reg_4),
    .io_d_trunc_0      (d_trunc_reg_0),
    .io_d_trunc_1      (d_trunc_reg_1),
    .io_d_trunc_2      (d_trunc_reg_2),
    .io_d_trunc_3      (d_trunc_reg_3),
    .io_spec_r2ud_0    (spec_r2ud_reg_0),
    .io_spec_r2ud_1    (spec_r2ud_reg_1),
    .io_spec_r2ud_3    (spec_r2ud_reg_3),
    .io_spec_r2ud_4    (spec_r2ud_reg_4),
    .io_pre_q_A        (iter_q_A_reg),
    .io_pre_q_B        (iter_q_B_reg),
    .io_nxt_q_A        (_IterBlock_io_nxt_q_A),
    .io_nxt_q_B        (_IterBlock_io_nxt_q_B),
    .io_pre_sel_0_0    (sel_reg_0_0),
    .io_pre_sel_0_1    (sel_reg_0_1),
    .io_pre_sel_1_0    (sel_reg_1_0),
    .io_pre_sel_1_1    (sel_reg_1_1),
    .io_pre_sel_2_0    (sel_reg_2_0),
    .io_pre_sel_2_1    (sel_reg_2_1),
    .io_pre_sel_3_0    (sel_reg_3_0),
    .io_pre_sel_3_1    (sel_reg_3_1),
    .io_nxt_sel_0_0    (_IterBlock_io_nxt_sel_0_0),
    .io_nxt_sel_0_1    (_IterBlock_io_nxt_sel_0_1),
    .io_nxt_sel_1_0    (_IterBlock_io_nxt_sel_1_0),
    .io_nxt_sel_1_1    (_IterBlock_io_nxt_sel_1_1),
    .io_nxt_sel_2_0    (_IterBlock_io_nxt_sel_2_0),
    .io_nxt_sel_2_1    (_IterBlock_io_nxt_sel_2_1),
    .io_nxt_sel_3_0    (_IterBlock_io_nxt_sel_3_0),
    .io_nxt_sel_3_1    (_IterBlock_io_nxt_sel_3_1),
    .io_pre_spec_0_0_0 (spec_reg_0_0_0),
    .io_pre_spec_0_0_1 (spec_reg_0_0_1),
    .io_pre_spec_0_1_0 (spec_reg_0_1_0),
    .io_pre_spec_0_1_1 (spec_reg_0_1_1),
    .io_pre_spec_0_2_0 (spec_reg_0_2_0),
    .io_pre_spec_0_2_1 (spec_reg_0_2_1),
    .io_pre_spec_0_3_0 (spec_reg_0_3_0),
    .io_pre_spec_0_3_1 (spec_reg_0_3_1),
    .io_pre_spec_1_0_0 (spec_reg_1_0_0),
    .io_pre_spec_1_0_1 (spec_reg_1_0_1),
    .io_pre_spec_1_1_0 (spec_reg_1_1_0),
    .io_pre_spec_1_1_1 (spec_reg_1_1_1),
    .io_pre_spec_1_2_0 (spec_reg_1_2_0),
    .io_pre_spec_1_2_1 (spec_reg_1_2_1),
    .io_pre_spec_1_3_0 (spec_reg_1_3_0),
    .io_pre_spec_1_3_1 (spec_reg_1_3_1),
    .io_pre_spec_2_0_0 (spec_reg_2_0_0),
    .io_pre_spec_2_0_1 (spec_reg_2_0_1),
    .io_pre_spec_2_1_0 (spec_reg_2_1_0),
    .io_pre_spec_2_1_1 (spec_reg_2_1_1),
    .io_pre_spec_2_2_0 (spec_reg_2_2_0),
    .io_pre_spec_2_2_1 (spec_reg_2_2_1),
    .io_pre_spec_2_3_0 (spec_reg_2_3_0),
    .io_pre_spec_2_3_1 (spec_reg_2_3_1),
    .io_pre_spec_3_0_0 (spec_reg_3_0_0),
    .io_pre_spec_3_0_1 (spec_reg_3_0_1),
    .io_pre_spec_3_1_0 (spec_reg_3_1_0),
    .io_pre_spec_3_1_1 (spec_reg_3_1_1),
    .io_pre_spec_3_2_0 (spec_reg_3_2_0),
    .io_pre_spec_3_2_1 (spec_reg_3_2_1),
    .io_pre_spec_3_3_0 (spec_reg_3_3_0),
    .io_pre_spec_3_3_1 (spec_reg_3_3_1),
    .io_pre_spec_4_0_0 (spec_reg_4_0_0),
    .io_pre_spec_4_0_1 (spec_reg_4_0_1),
    .io_pre_spec_4_1_0 (spec_reg_4_1_0),
    .io_pre_spec_4_1_1 (spec_reg_4_1_1),
    .io_pre_spec_4_2_0 (spec_reg_4_2_0),
    .io_pre_spec_4_2_1 (spec_reg_4_2_1),
    .io_pre_spec_4_3_0 (spec_reg_4_3_0),
    .io_pre_spec_4_3_1 (spec_reg_4_3_1),
    .io_nxt_spec_0_0_0 (_IterBlock_io_nxt_spec_0_0_0),
    .io_nxt_spec_0_0_1 (_IterBlock_io_nxt_spec_0_0_1),
    .io_nxt_spec_0_1_0 (_IterBlock_io_nxt_spec_0_1_0),
    .io_nxt_spec_0_1_1 (_IterBlock_io_nxt_spec_0_1_1),
    .io_nxt_spec_0_2_0 (_IterBlock_io_nxt_spec_0_2_0),
    .io_nxt_spec_0_2_1 (_IterBlock_io_nxt_spec_0_2_1),
    .io_nxt_spec_0_3_0 (_IterBlock_io_nxt_spec_0_3_0),
    .io_nxt_spec_0_3_1 (_IterBlock_io_nxt_spec_0_3_1),
    .io_nxt_spec_1_0_0 (_IterBlock_io_nxt_spec_1_0_0),
    .io_nxt_spec_1_0_1 (_IterBlock_io_nxt_spec_1_0_1),
    .io_nxt_spec_1_1_0 (_IterBlock_io_nxt_spec_1_1_0),
    .io_nxt_spec_1_1_1 (_IterBlock_io_nxt_spec_1_1_1),
    .io_nxt_spec_1_2_0 (_IterBlock_io_nxt_spec_1_2_0),
    .io_nxt_spec_1_2_1 (_IterBlock_io_nxt_spec_1_2_1),
    .io_nxt_spec_1_3_0 (_IterBlock_io_nxt_spec_1_3_0),
    .io_nxt_spec_1_3_1 (_IterBlock_io_nxt_spec_1_3_1),
    .io_nxt_spec_2_0_0 (_IterBlock_io_nxt_spec_2_0_0),
    .io_nxt_spec_2_0_1 (_IterBlock_io_nxt_spec_2_0_1),
    .io_nxt_spec_2_1_0 (_IterBlock_io_nxt_spec_2_1_0),
    .io_nxt_spec_2_1_1 (_IterBlock_io_nxt_spec_2_1_1),
    .io_nxt_spec_2_2_0 (_IterBlock_io_nxt_spec_2_2_0),
    .io_nxt_spec_2_2_1 (_IterBlock_io_nxt_spec_2_2_1),
    .io_nxt_spec_2_3_0 (_IterBlock_io_nxt_spec_2_3_0),
    .io_nxt_spec_2_3_1 (_IterBlock_io_nxt_spec_2_3_1),
    .io_nxt_spec_3_0_0 (_IterBlock_io_nxt_spec_3_0_0),
    .io_nxt_spec_3_0_1 (_IterBlock_io_nxt_spec_3_0_1),
    .io_nxt_spec_3_1_0 (_IterBlock_io_nxt_spec_3_1_0),
    .io_nxt_spec_3_1_1 (_IterBlock_io_nxt_spec_3_1_1),
    .io_nxt_spec_3_2_0 (_IterBlock_io_nxt_spec_3_2_0),
    .io_nxt_spec_3_2_1 (_IterBlock_io_nxt_spec_3_2_1),
    .io_nxt_spec_3_3_0 (_IterBlock_io_nxt_spec_3_3_0),
    .io_nxt_spec_3_3_1 (_IterBlock_io_nxt_spec_3_3_1),
    .io_nxt_spec_4_0_0 (_IterBlock_io_nxt_spec_4_0_0),
    .io_nxt_spec_4_0_1 (_IterBlock_io_nxt_spec_4_0_1),
    .io_nxt_spec_4_1_0 (_IterBlock_io_nxt_spec_4_1_0),
    .io_nxt_spec_4_1_1 (_IterBlock_io_nxt_spec_4_1_1),
    .io_nxt_spec_4_2_0 (_IterBlock_io_nxt_spec_4_2_0),
    .io_nxt_spec_4_2_1 (_IterBlock_io_nxt_spec_4_2_1),
    .io_nxt_spec_4_3_0 (_IterBlock_io_nxt_spec_4_3_0),
    .io_nxt_spec_4_3_1 (_IterBlock_io_nxt_spec_4_3_1),
    .io_pre_iterB_0    (iterB_reg_0),
    .io_pre_iterB_1    (iterB_reg_1),
    .io_nxt_iterB_0    (_IterBlock_io_nxt_iterB_0),
    .io_nxt_iterB_1    (_IterBlock_io_nxt_iterB_1)
  );
  assign io_div_out_valid = stateReg[5];
  assign io_div_out_q = adjust ? q_B_sign_c_reg : q_A_sign_c_reg;
  assign io_div_out_rem = early_finish_q ? rem_adjust[66:3] : rem_adjust_ralign[63:0];
endmodule

