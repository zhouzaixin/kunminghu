// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module WbFuBusyTable(
  input  [2:0] io_in_intSchdBusyTable_2_1_fpWbBusyTable,
  input  [2:0] io_in_intSchdBusyTable_1_0_intWbBusyTable,
  input  [2:0] io_in_intSchdBusyTable_0_0_intWbBusyTable,
  input  [1:0] io_in_fpSchdBusyTable_2_0_intWbBusyTable,
  input  [3:0] io_in_fpSchdBusyTable_2_0_fpWbBusyTable,
  input  [1:0] io_in_fpSchdBusyTable_1_0_intWbBusyTable,
  input  [3:0] io_in_fpSchdBusyTable_1_0_fpWbBusyTable,
  input  [2:0] io_in_fpSchdBusyTable_0_0_intWbBusyTable,
  input  [3:0] io_in_fpSchdBusyTable_0_0_fpWbBusyTable,
  input  [2:0] io_in_vfSchdBusyTable_1_1_fpWbBusyTable,
  input  [2:0] io_in_vfSchdBusyTable_1_1_vfWbBusyTable,
  input  [2:0] io_in_vfSchdBusyTable_1_1_v0WbBusyTable,
  input  [4:0] io_in_vfSchdBusyTable_1_0_vfWbBusyTable,
  input  [4:0] io_in_vfSchdBusyTable_1_0_v0WbBusyTable,
  input  [4:0] io_in_vfSchdBusyTable_0_1_intWbBusyTable,
  input  [2:0] io_in_vfSchdBusyTable_0_1_fpWbBusyTable,
  input  [3:0] io_in_vfSchdBusyTable_0_1_vfWbBusyTable,
  input  [3:0] io_in_vfSchdBusyTable_0_1_v0WbBusyTable,
  input  [1:0] io_in_vfSchdBusyTable_0_1_vlWbBusyTable,
  input  [4:0] io_in_vfSchdBusyTable_0_0_vfWbBusyTable,
  input  [4:0] io_in_vfSchdBusyTable_0_0_v0WbBusyTable,
  output [2:0] io_out_intRespRead_2_1_fpWbBusyTable,
  output       io_out_intRespRead_2_1_vfWbBusyTable,
  output       io_out_intRespRead_2_1_v0WbBusyTable,
  output       io_out_intRespRead_2_0_intWbBusyTable,
  output       io_out_intRespRead_1_1_intWbBusyTable,
  output [2:0] io_out_intRespRead_1_0_intWbBusyTable,
  output       io_out_intRespRead_0_1_intWbBusyTable,
  output [2:0] io_out_intRespRead_0_0_intWbBusyTable,
  output [1:0] io_out_fpRespRead_2_0_intWbBusyTable,
  output [3:0] io_out_fpRespRead_2_0_fpWbBusyTable,
  output [1:0] io_out_fpRespRead_1_0_intWbBusyTable,
  output [3:0] io_out_fpRespRead_1_0_fpWbBusyTable,
  output [2:0] io_out_fpRespRead_0_0_intWbBusyTable,
  output [3:0] io_out_fpRespRead_0_0_fpWbBusyTable,
  output [2:0] io_out_vfRespRead_1_1_fpWbBusyTable,
  output [2:0] io_out_vfRespRead_1_1_vfWbBusyTable,
  output [2:0] io_out_vfRespRead_1_1_v0WbBusyTable,
  output [4:0] io_out_vfRespRead_1_0_vfWbBusyTable,
  output [4:0] io_out_vfRespRead_1_0_v0WbBusyTable,
  output [4:0] io_out_vfRespRead_0_1_intWbBusyTable,
  output [2:0] io_out_vfRespRead_0_1_fpWbBusyTable,
  output [3:0] io_out_vfRespRead_0_1_vfWbBusyTable,
  output [3:0] io_out_vfRespRead_0_1_v0WbBusyTable,
  output [1:0] io_out_vfRespRead_0_1_vlWbBusyTable,
  output [4:0] io_out_vfRespRead_0_0_vfWbBusyTable,
  output [4:0] io_out_vfRespRead_0_0_v0WbBusyTable
);

  wire [2:0] intWbBusyTable_0_2 =
    io_in_intSchdBusyTable_0_0_intWbBusyTable | io_in_fpSchdBusyTable_0_0_intWbBusyTable;
  wire [4:0] intWbBusyTable_2_2 =
    {2'h0,
     io_in_intSchdBusyTable_1_0_intWbBusyTable[2],
     io_in_intSchdBusyTable_1_0_intWbBusyTable[1:0]
       | io_in_fpSchdBusyTable_1_0_intWbBusyTable}
    | io_in_vfSchdBusyTable_0_1_intWbBusyTable;
  wire [2:0] _io_out_vfRespRead_0_1_fpWbBusyTable_T_4 =
    io_in_fpSchdBusyTable_0_0_fpWbBusyTable[2:0]
    | io_in_vfSchdBusyTable_0_1_fpWbBusyTable;
  wire [2:0] _io_out_vfRespRead_1_1_fpWbBusyTable_T_4 =
    io_in_fpSchdBusyTable_1_0_fpWbBusyTable[2:0]
    | io_in_vfSchdBusyTable_1_1_fpWbBusyTable;
  wire [3:0] fpWbBusyTable_3_2 =
    {1'h0, io_in_intSchdBusyTable_2_1_fpWbBusyTable}
    | io_in_fpSchdBusyTable_2_0_fpWbBusyTable;
  wire [3:0] _io_out_vfRespRead_0_1_vfWbBusyTable_T_4 =
    io_in_vfSchdBusyTable_0_0_vfWbBusyTable[3:0]
    | io_in_vfSchdBusyTable_0_1_vfWbBusyTable;
  wire [3:0] _io_out_vfRespRead_0_1_v0WbBusyTable_T_4 =
    io_in_vfSchdBusyTable_0_0_v0WbBusyTable[3:0]
    | io_in_vfSchdBusyTable_0_1_v0WbBusyTable;
  assign io_out_intRespRead_2_1_fpWbBusyTable = fpWbBusyTable_3_2[2:0];
  assign io_out_intRespRead_2_1_vfWbBusyTable =
    io_in_vfSchdBusyTable_1_1_vfWbBusyTable[0];
  assign io_out_intRespRead_2_1_v0WbBusyTable =
    io_in_vfSchdBusyTable_1_1_v0WbBusyTable[0];
  assign io_out_intRespRead_2_0_intWbBusyTable =
    io_in_fpSchdBusyTable_2_0_intWbBusyTable[0];
  assign io_out_intRespRead_1_1_intWbBusyTable = intWbBusyTable_2_2[0];
  assign io_out_intRespRead_1_0_intWbBusyTable = intWbBusyTable_2_2[2:0];
  assign io_out_intRespRead_0_1_intWbBusyTable = intWbBusyTable_0_2[0];
  assign io_out_intRespRead_0_0_intWbBusyTable = intWbBusyTable_0_2;
  assign io_out_fpRespRead_2_0_intWbBusyTable = io_in_fpSchdBusyTable_2_0_intWbBusyTable;
  assign io_out_fpRespRead_2_0_fpWbBusyTable = fpWbBusyTable_3_2;
  assign io_out_fpRespRead_1_0_intWbBusyTable = intWbBusyTable_2_2[1:0];
  assign io_out_fpRespRead_1_0_fpWbBusyTable =
    {io_in_fpSchdBusyTable_1_0_fpWbBusyTable[3],
     _io_out_vfRespRead_1_1_fpWbBusyTable_T_4};
  assign io_out_fpRespRead_0_0_intWbBusyTable = intWbBusyTable_0_2;
  assign io_out_fpRespRead_0_0_fpWbBusyTable =
    {io_in_fpSchdBusyTable_0_0_fpWbBusyTable[3],
     _io_out_vfRespRead_0_1_fpWbBusyTable_T_4};
  assign io_out_vfRespRead_1_1_fpWbBusyTable = _io_out_vfRespRead_1_1_fpWbBusyTable_T_4;
  assign io_out_vfRespRead_1_1_vfWbBusyTable = io_in_vfSchdBusyTable_1_1_vfWbBusyTable;
  assign io_out_vfRespRead_1_1_v0WbBusyTable = io_in_vfSchdBusyTable_1_1_v0WbBusyTable;
  assign io_out_vfRespRead_1_0_vfWbBusyTable = io_in_vfSchdBusyTable_1_0_vfWbBusyTable;
  assign io_out_vfRespRead_1_0_v0WbBusyTable = io_in_vfSchdBusyTable_1_0_v0WbBusyTable;
  assign io_out_vfRespRead_0_1_intWbBusyTable = intWbBusyTable_2_2;
  assign io_out_vfRespRead_0_1_fpWbBusyTable = _io_out_vfRespRead_0_1_fpWbBusyTable_T_4;
  assign io_out_vfRespRead_0_1_vfWbBusyTable = _io_out_vfRespRead_0_1_vfWbBusyTable_T_4;
  assign io_out_vfRespRead_0_1_v0WbBusyTable = _io_out_vfRespRead_0_1_v0WbBusyTable_T_4;
  assign io_out_vfRespRead_0_1_vlWbBusyTable = io_in_vfSchdBusyTable_0_1_vlWbBusyTable;
  assign io_out_vfRespRead_0_0_vfWbBusyTable =
    {io_in_vfSchdBusyTable_0_0_vfWbBusyTable[4],
     _io_out_vfRespRead_0_1_vfWbBusyTable_T_4};
  assign io_out_vfRespRead_0_0_v0WbBusyTable =
    {io_in_vfSchdBusyTable_0_0_v0WbBusyTable[4],
     _io_out_vfRespRead_0_1_v0WbBusyTable_T_4};
endmodule

