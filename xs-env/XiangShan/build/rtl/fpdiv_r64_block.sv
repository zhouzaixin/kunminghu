// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module fpdiv_r64_block(
  input  [71:0] io_f_r_s_i,
  input  [71:0] io_f_r_c_i,
  input  [59:0] io_divisor_i,
  input  [5:0]  io_nr_f_r_6b_for_nxt_cycle_s0_qds_i,
  input  [6:0]  io_nr_f_r_7b_for_nxt_cycle_s1_qds_i,
  output [4:0]  io_nxt_quo_dig_o_0_0,
  output [4:0]  io_nxt_quo_dig_o_0_1,
  output [4:0]  io_nxt_quo_dig_o_0_2,
  output [71:0] io_nxt_f_r_s_o_2,
  output [71:0] io_nxt_f_r_c_o_2,
  output [5:0]  io_adder_6b_res_for_nxt_cycle_s0_qds_o,
  output [6:0]  io_adder_7b_res_for_nxt_cycle_s1_qds_o
);

  wire [4:0]   _u_r4_qds_s2_0_io_quo_dig_o;
  wire [71:0]  _U_CSA_2_0_io_out_sum;
  wire [71:0]  _U_CSA_2_0_io_out_car;
  wire [71:0]  _U_CSA_2_1_io_out_sum;
  wire [71:0]  _U_CSA_2_1_io_out_car;
  wire [71:0]  _U_CSA_2_3_io_out_sum;
  wire [71:0]  _U_CSA_2_3_io_out_car;
  wire [71:0]  _U_CSA_2_4_io_out_sum;
  wire [71:0]  _U_CSA_2_4_io_out_car;
  wire [4:0]   _u_r4_qds_s1_6_io_quo_dig_o;
  wire [71:0]  _U_CSA_1_0_io_out_sum;
  wire [71:0]  _U_CSA_1_0_io_out_car;
  wire [71:0]  _U_CSA_1_1_io_out_sum;
  wire [71:0]  _U_CSA_1_1_io_out_car;
  wire [71:0]  _U_CSA_1_3_io_out_sum;
  wire [71:0]  _U_CSA_1_3_io_out_car;
  wire [71:0]  _U_CSA_1_4_io_out_sum;
  wire [71:0]  _U_CSA_1_4_io_out_car;
  wire [4:0]   _u_r4_qds_s0_0_io_quo_dig_o;
  wire [199:0] _U_CSA_0_0_io_out_sum;
  wire [199:0] _U_CSA_0_0_io_out_car;
  wire [199:0] _U_CSA_0_1_io_out_sum;
  wire [199:0] _U_CSA_0_1_io_out_car;
  wire [199:0] _U_CSA_0_3_io_out_sum;
  wire [199:0] _U_CSA_0_3_io_out_car;
  wire [199:0] _U_CSA_0_4_io_out_sum;
  wire [199:0] _U_CSA_0_4_io_out_car;
  wire [56:0]  _GEN = ~(io_divisor_i[59:3]);
  wire [14:0]  _GEN_0 = ~(io_divisor_i[59:45]);
  wire [71:0]  divisor_mul_neg_2 = {1'h1, _GEN, 14'h3000};
  wire [71:0]  divisor_mul_neg_1 = {2'h3, _GEN, 13'h1000};
  wire [71:0]  divisor_mul_pos_1 = {2'h0, io_divisor_i[59:3], 13'h0};
  wire [71:0]  divisor_mul_pos_2 = {1'h0, io_divisor_i[59:3], 14'h0};
  wire [199:0] U_CSA_0_in_a =
    {io_f_r_s_i[69:12],
     3'h0,
     io_f_r_s_i[69:41],
     3'h0,
     io_f_r_s_i[33:5],
     3'h0,
     io_f_r_s_i[69:54],
     3'h0,
     io_f_r_s_i[51:36],
     3'h0,
     io_f_r_s_i[33:18],
     3'h0,
     io_f_r_s_i[15:0],
     2'h0};
  wire [199:0] U_CSA_0_in_b =
    {io_f_r_c_i[69:12],
     3'h0,
     io_f_r_c_i[69:41],
     3'h0,
     io_f_r_c_i[33:5],
     3'h0,
     io_f_r_c_i[69:54],
     3'h0,
     io_f_r_c_i[51:36],
     3'h0,
     io_f_r_c_i[33:18],
     3'h0,
     io_f_r_c_i[15:0],
     2'h0};
  wire [57:0]  nxt_f_r_s_s0_dig0 =
    (_u_r4_qds_s0_0_io_quo_dig_o[4] ? _U_CSA_0_4_io_out_sum[197:140] : 58'h0)
    | (_u_r4_qds_s0_0_io_quo_dig_o[3] ? _U_CSA_0_3_io_out_sum[197:140] : 58'h0)
    | (_u_r4_qds_s0_0_io_quo_dig_o[2] ? {io_f_r_s_i[67:12], 2'h0} : 58'h0)
    | (_u_r4_qds_s0_0_io_quo_dig_o[1] ? _U_CSA_0_1_io_out_sum[197:140] : 58'h0)
    | (_u_r4_qds_s0_0_io_quo_dig_o[0] ? _U_CSA_0_0_io_out_sum[197:140] : 58'h0);
  wire [57:0]  nxt_f_r_c_s0_dig0 =
    (_u_r4_qds_s0_0_io_quo_dig_o[4] ? _U_CSA_0_4_io_out_car[197:140] : 58'h0)
    | (_u_r4_qds_s0_0_io_quo_dig_o[3] ? _U_CSA_0_3_io_out_car[197:140] : 58'h0)
    | (_u_r4_qds_s0_0_io_quo_dig_o[2] ? {io_f_r_c_i[67:12], 2'h0} : 58'h0)
    | (_u_r4_qds_s0_0_io_quo_dig_o[1] ? _U_CSA_0_1_io_out_car[197:140] | 58'h1 : 58'h0)
    | (_u_r4_qds_s0_0_io_quo_dig_o[0] ? _U_CSA_0_0_io_out_car[197:140] | 58'h1 : 58'h0);
  wire [71:0]  U_CSA_1_in_a = {nxt_f_r_s_s0_dig0, 14'h0};
  wire [71:0]  U_CSA_1_in_b = {nxt_f_r_c_s0_dig0, 14'h0};
  wire [57:0]  nxt_f_r_s_s1_dig0 =
    (_u_r4_qds_s1_6_io_quo_dig_o[4] ? _U_CSA_1_4_io_out_sum[69:12] : 58'h0)
    | (_u_r4_qds_s1_6_io_quo_dig_o[3] ? _U_CSA_1_3_io_out_sum[69:12] : 58'h0)
    | (_u_r4_qds_s1_6_io_quo_dig_o[2] ? {nxt_f_r_s_s0_dig0[55:0], 2'h0} : 58'h0)
    | (_u_r4_qds_s1_6_io_quo_dig_o[1] ? _U_CSA_1_1_io_out_sum[69:12] : 58'h0)
    | (_u_r4_qds_s1_6_io_quo_dig_o[0] ? _U_CSA_1_0_io_out_sum[69:12] : 58'h0);
  wire [57:0]  nxt_f_r_c_s1_dig0 =
    (_u_r4_qds_s1_6_io_quo_dig_o[4] ? _U_CSA_1_4_io_out_car[69:12] : 58'h0)
    | (_u_r4_qds_s1_6_io_quo_dig_o[3] ? _U_CSA_1_3_io_out_car[69:12] : 58'h0)
    | (_u_r4_qds_s1_6_io_quo_dig_o[2] ? {nxt_f_r_c_s0_dig0[55:0], 2'h0} : 58'h0)
    | (_u_r4_qds_s1_6_io_quo_dig_o[1] ? _U_CSA_1_1_io_out_car[69:12] | 58'h1 : 58'h0)
    | (_u_r4_qds_s1_6_io_quo_dig_o[0] ? _U_CSA_1_0_io_out_car[69:12] | 58'h1 : 58'h0);
  wire [71:0]  U_CSA_2_in_a = {nxt_f_r_s_s1_dig0, 14'h0};
  wire [71:0]  U_CSA_2_in_b = {nxt_f_r_c_s1_dig0, 14'h0};
  wire [6:0]   _adder_7b_for_nxt_cycle_s0_qds_spec_f64_0_0_T =
    7'(nxt_f_r_s_s1_dig0[55:49] + nxt_f_r_c_s1_dig0[55:49]);
  wire [6:0]   _adder_7b_for_nxt_cycle_s0_qds_spec_f64_0_4_T_2 =
    7'(_adder_7b_for_nxt_cycle_s0_qds_spec_f64_0_0_T + io_divisor_i[58:52]);
  wire [6:0]   _adder_7b_for_nxt_cycle_s0_qds_spec_f64_0_3_T_2 =
    7'(_adder_7b_for_nxt_cycle_s0_qds_spec_f64_0_0_T + io_divisor_i[59:53]);
  wire [6:0]   _adder_7b_for_nxt_cycle_s0_qds_spec_f64_0_1_T_2 =
    7'(_adder_7b_for_nxt_cycle_s0_qds_spec_f64_0_0_T + _GEN[56:50]);
  wire [6:0]   _adder_7b_for_nxt_cycle_s0_qds_spec_f64_0_0_T_2 =
    7'(_adder_7b_for_nxt_cycle_s0_qds_spec_f64_0_0_T + _GEN[55:49]);
  wire [7:0]   _adder_8b_for_nxt_cycle_s1_qds_spec_f64_0_0_T =
    8'(nxt_f_r_s_s1_dig0[53:46] + nxt_f_r_c_s1_dig0[53:46]);
  wire [7:0]   _adder_8b_for_nxt_cycle_s1_qds_spec_f64_0_4_T_2 =
    8'(_adder_8b_for_nxt_cycle_s1_qds_spec_f64_0_0_T + io_divisor_i[56:49]);
  wire [7:0]   _adder_8b_for_nxt_cycle_s1_qds_spec_f64_0_3_T_2 =
    8'(_adder_8b_for_nxt_cycle_s1_qds_spec_f64_0_0_T + io_divisor_i[57:50]);
  wire [7:0]   _adder_8b_for_nxt_cycle_s1_qds_spec_f64_0_1_T_2 =
    8'(_adder_8b_for_nxt_cycle_s1_qds_spec_f64_0_0_T + _GEN[54:47]);
  wire [7:0]   _adder_8b_for_nxt_cycle_s1_qds_spec_f64_0_0_T_2 =
    8'(_adder_8b_for_nxt_cycle_s1_qds_spec_f64_0_0_T + _GEN[53:46]);
  CSA3to2_20 U_CSA_0_4 (
    .io_in_a    (U_CSA_0_in_a),
    .io_in_b    (U_CSA_0_in_b),
    .io_in_c
      ({1'h0,
        io_divisor_i[59:3],
        4'h0,
        io_divisor_i[59:32],
        36'h0,
        io_divisor_i[59:45],
        59'h0}),
    .io_out_sum (_U_CSA_0_4_io_out_sum),
    .io_out_car (_U_CSA_0_4_io_out_car)
  );
  CSA3to2_20 U_CSA_0_3 (
    .io_in_a    (U_CSA_0_in_a),
    .io_in_b    (U_CSA_0_in_b),
    .io_in_c
      ({2'h0,
        io_divisor_i[59:3],
        4'h0,
        io_divisor_i[59:32],
        36'h0,
        io_divisor_i[59:45],
        58'h0}),
    .io_out_sum (_U_CSA_0_3_io_out_sum),
    .io_out_car (_U_CSA_0_3_io_out_car)
  );
  CSA3to2_20 U_CSA_0_1 (
    .io_in_a    (U_CSA_0_in_a),
    .io_in_b    (U_CSA_0_in_b),
    .io_in_c
      ({2'h3,
        _GEN,
        4'hB,
        ~(io_divisor_i[59:32]),
        36'h800000003,
        _GEN_0,
        58'h200000000000000}),
    .io_out_sum (_U_CSA_0_1_io_out_sum),
    .io_out_car (_U_CSA_0_1_io_out_car)
  );
  CSA3to2_20 U_CSA_0_0 (
    .io_in_a    (U_CSA_0_in_a),
    .io_in_b    (U_CSA_0_in_b),
    .io_in_c
      ({1'h1,
        _GEN,
        4'hD,
        ~(io_divisor_i[59:32]),
        36'hC00000001,
        _GEN_0,
        59'h600000000000000}),
    .io_out_sum (_U_CSA_0_0_io_out_sum),
    .io_out_car (_U_CSA_0_0_io_out_car)
  );
  r4_qds_v2 u_r4_qds_s0_0 (
    .io_rem_i     (io_nr_f_r_6b_for_nxt_cycle_s0_qds_i),
    .io_quo_dig_o (_u_r4_qds_s0_0_io_quo_dig_o)
  );
  CSA3to2_24 U_CSA_1_4 (
    .io_in_a    (U_CSA_1_in_a),
    .io_in_b    (U_CSA_1_in_b),
    .io_in_c    (divisor_mul_pos_2),
    .io_out_sum (_U_CSA_1_4_io_out_sum),
    .io_out_car (_U_CSA_1_4_io_out_car)
  );
  CSA3to2_24 U_CSA_1_3 (
    .io_in_a    (U_CSA_1_in_a),
    .io_in_b    (U_CSA_1_in_b),
    .io_in_c    (divisor_mul_pos_1),
    .io_out_sum (_U_CSA_1_3_io_out_sum),
    .io_out_car (_U_CSA_1_3_io_out_car)
  );
  CSA3to2_24 U_CSA_1_1 (
    .io_in_a    (U_CSA_1_in_a),
    .io_in_b    (U_CSA_1_in_b),
    .io_in_c    (divisor_mul_neg_1),
    .io_out_sum (_U_CSA_1_1_io_out_sum),
    .io_out_car (_U_CSA_1_1_io_out_car)
  );
  CSA3to2_24 U_CSA_1_0 (
    .io_in_a    (U_CSA_1_in_a),
    .io_in_b    (U_CSA_1_in_b),
    .io_in_c    (divisor_mul_neg_2),
    .io_out_sum (_U_CSA_1_0_io_out_sum),
    .io_out_car (_U_CSA_1_0_io_out_car)
  );
  r4_qds_v2_spec u_r4_qds_s1_6 (
    .io_rem_i               (io_nr_f_r_7b_for_nxt_cycle_s1_qds_i),
    .io_divisor_mul_pos_2_i (io_divisor_i[58:52]),
    .io_divisor_mul_pos_1_i (io_divisor_i[59:53]),
    .io_divisor_mul_neg_1_i (_GEN_0[14:8]),
    .io_divisor_mul_neg_2_i (_GEN_0[13:7]),
    .io_prev_quo_dig_i      (_u_r4_qds_s0_0_io_quo_dig_o),
    .io_quo_dig_o           (_u_r4_qds_s1_6_io_quo_dig_o)
  );
  CSA3to2_24 U_CSA_2_4 (
    .io_in_a    (U_CSA_2_in_a),
    .io_in_b    (U_CSA_2_in_b),
    .io_in_c    (divisor_mul_pos_2),
    .io_out_sum (_U_CSA_2_4_io_out_sum),
    .io_out_car (_U_CSA_2_4_io_out_car)
  );
  CSA3to2_24 U_CSA_2_3 (
    .io_in_a    (U_CSA_2_in_a),
    .io_in_b    (U_CSA_2_in_b),
    .io_in_c    (divisor_mul_pos_1),
    .io_out_sum (_U_CSA_2_3_io_out_sum),
    .io_out_car (_U_CSA_2_3_io_out_car)
  );
  CSA3to2_24 U_CSA_2_1 (
    .io_in_a    (U_CSA_2_in_a),
    .io_in_b    (U_CSA_2_in_b),
    .io_in_c    (divisor_mul_neg_1),
    .io_out_sum (_U_CSA_2_1_io_out_sum),
    .io_out_car (_U_CSA_2_1_io_out_car)
  );
  CSA3to2_24 U_CSA_2_0 (
    .io_in_a    (U_CSA_2_in_a),
    .io_in_b    (U_CSA_2_in_b),
    .io_in_c    (divisor_mul_neg_2),
    .io_out_sum (_U_CSA_2_0_io_out_sum),
    .io_out_car (_U_CSA_2_0_io_out_car)
  );
  r4_qds_v2_spec u_r4_qds_s2_0 (
    .io_rem_i
      ((_u_r4_qds_s0_0_io_quo_dig_o[4]
          ? 7'(_U_CSA_0_4_io_out_sum[195:189] + _U_CSA_0_4_io_out_car[195:189])
          : 7'h0)
       | (_u_r4_qds_s0_0_io_quo_dig_o[3]
            ? 7'(_U_CSA_0_3_io_out_sum[195:189] + _U_CSA_0_3_io_out_car[195:189])
            : 7'h0)
       | (_u_r4_qds_s0_0_io_quo_dig_o[2]
            ? 7'(io_f_r_s_i[65:59] + io_f_r_c_i[65:59])
            : 7'h0)
       | (_u_r4_qds_s0_0_io_quo_dig_o[1]
            ? 7'(_U_CSA_0_1_io_out_sum[195:189] + _U_CSA_0_1_io_out_car[195:189])
            : 7'h0)
       | (_u_r4_qds_s0_0_io_quo_dig_o[0]
            ? 7'(_U_CSA_0_0_io_out_sum[195:189] + _U_CSA_0_0_io_out_car[195:189])
            : 7'h0)),
    .io_divisor_mul_pos_2_i (io_divisor_i[58:52]),
    .io_divisor_mul_pos_1_i (io_divisor_i[59:53]),
    .io_divisor_mul_neg_1_i (_GEN[56:50]),
    .io_divisor_mul_neg_2_i (_GEN[55:49]),
    .io_prev_quo_dig_i      (_u_r4_qds_s1_6_io_quo_dig_o),
    .io_quo_dig_o           (_u_r4_qds_s2_0_io_quo_dig_o)
  );
  assign io_nxt_quo_dig_o_0_0 = _u_r4_qds_s0_0_io_quo_dig_o;
  assign io_nxt_quo_dig_o_0_1 = _u_r4_qds_s1_6_io_quo_dig_o;
  assign io_nxt_quo_dig_o_0_2 = _u_r4_qds_s2_0_io_quo_dig_o;
  assign io_nxt_f_r_s_o_2 =
    {(_u_r4_qds_s2_0_io_quo_dig_o[4] ? _U_CSA_2_4_io_out_sum[71:12] : 60'h0)
       | (_u_r4_qds_s2_0_io_quo_dig_o[3] ? _U_CSA_2_3_io_out_sum[71:12] : 60'h0)
       | (_u_r4_qds_s2_0_io_quo_dig_o[2] ? {nxt_f_r_s_s1_dig0, 2'h0} : 60'h0)
       | (_u_r4_qds_s2_0_io_quo_dig_o[1] ? _U_CSA_2_1_io_out_sum[71:12] : 60'h0)
       | (_u_r4_qds_s2_0_io_quo_dig_o[0] ? _U_CSA_2_0_io_out_sum[71:12] : 60'h0),
     12'h0};
  assign io_nxt_f_r_c_o_2 =
    {(_u_r4_qds_s2_0_io_quo_dig_o[4] ? _U_CSA_2_4_io_out_car[71:12] : 60'h0)
       | (_u_r4_qds_s2_0_io_quo_dig_o[3] ? _U_CSA_2_3_io_out_car[71:12] : 60'h0)
       | (_u_r4_qds_s2_0_io_quo_dig_o[2] ? {nxt_f_r_c_s1_dig0, 2'h0} : 60'h0)
       | (_u_r4_qds_s2_0_io_quo_dig_o[1] ? _U_CSA_2_1_io_out_car[71:12] | 60'h1 : 60'h0)
       | (_u_r4_qds_s2_0_io_quo_dig_o[0] ? _U_CSA_2_0_io_out_car[71:12] | 60'h1 : 60'h0),
     12'h0};
  assign io_adder_6b_res_for_nxt_cycle_s0_qds_o =
    (_u_r4_qds_s2_0_io_quo_dig_o[4]
       ? _adder_7b_for_nxt_cycle_s0_qds_spec_f64_0_4_T_2[6:1]
       : 6'h0)
    | (_u_r4_qds_s2_0_io_quo_dig_o[3]
         ? _adder_7b_for_nxt_cycle_s0_qds_spec_f64_0_3_T_2[6:1]
         : 6'h0)
    | (_u_r4_qds_s2_0_io_quo_dig_o[2]
         ? _adder_7b_for_nxt_cycle_s0_qds_spec_f64_0_0_T[6:1]
         : 6'h0)
    | (_u_r4_qds_s2_0_io_quo_dig_o[1]
         ? _adder_7b_for_nxt_cycle_s0_qds_spec_f64_0_1_T_2[6:1]
         : 6'h0)
    | (_u_r4_qds_s2_0_io_quo_dig_o[0]
         ? _adder_7b_for_nxt_cycle_s0_qds_spec_f64_0_0_T_2[6:1]
         : 6'h0);
  assign io_adder_7b_res_for_nxt_cycle_s1_qds_o =
    (_u_r4_qds_s2_0_io_quo_dig_o[4]
       ? _adder_8b_for_nxt_cycle_s1_qds_spec_f64_0_4_T_2[7:1]
       : 7'h0)
    | (_u_r4_qds_s2_0_io_quo_dig_o[3]
         ? _adder_8b_for_nxt_cycle_s1_qds_spec_f64_0_3_T_2[7:1]
         : 7'h0)
    | (_u_r4_qds_s2_0_io_quo_dig_o[2]
         ? _adder_8b_for_nxt_cycle_s1_qds_spec_f64_0_0_T[7:1]
         : 7'h0)
    | (_u_r4_qds_s2_0_io_quo_dig_o[1]
         ? _adder_8b_for_nxt_cycle_s1_qds_spec_f64_0_1_T_2[7:1]
         : 7'h0)
    | (_u_r4_qds_s2_0_io_quo_dig_o[0]
         ? _adder_8b_for_nxt_cycle_s1_qds_spec_f64_0_0_T_2[7:1]
         : 7'h0);
endmodule

