// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module SyncDataModuleTemplate_BackendPC_64entry(
  input         clock,
  input         reset,
  input         io_ren_0,
  input         io_ren_2,
  input         io_ren_3,
  input         io_ren_4,
  input         io_ren_5,
  input         io_ren_6,
  input         io_ren_7,
  input         io_ren_8,
  input         io_ren_9,
  input         io_ren_10,
  input         io_ren_11,
  input         io_ren_12,
  input         io_ren_13,
  input         io_ren_14,
  input  [5:0]  io_raddr_0,
  input  [5:0]  io_raddr_2,
  input  [5:0]  io_raddr_3,
  input  [5:0]  io_raddr_4,
  input  [5:0]  io_raddr_5,
  input  [5:0]  io_raddr_6,
  input  [5:0]  io_raddr_7,
  input  [5:0]  io_raddr_8,
  input  [5:0]  io_raddr_9,
  input  [5:0]  io_raddr_10,
  input  [5:0]  io_raddr_11,
  input  [5:0]  io_raddr_12,
  input  [5:0]  io_raddr_13,
  input  [5:0]  io_raddr_14,
  output [49:0] io_rdata_0_startAddr,
  output [49:0] io_rdata_2_startAddr,
  output [49:0] io_rdata_3_startAddr,
  output [49:0] io_rdata_4_startAddr,
  output [49:0] io_rdata_5_startAddr,
  output [49:0] io_rdata_6_startAddr,
  output [49:0] io_rdata_7_startAddr,
  output [49:0] io_rdata_8_startAddr,
  output [49:0] io_rdata_9_startAddr,
  output [49:0] io_rdata_10_startAddr,
  output [49:0] io_rdata_11_startAddr,
  output [49:0] io_rdata_12_startAddr,
  output [49:0] io_rdata_13_startAddr,
  output [49:0] io_rdata_14_startAddr,
  input         io_wen_0,
  input  [5:0]  io_waddr_0,
  input  [49:0] io_wdata_0_startAddr
);

  wire [49:0] _dataBanks_3_io_rdata_0_startAddr;
  wire [49:0] _dataBanks_3_io_rdata_2_startAddr;
  wire [49:0] _dataBanks_3_io_rdata_3_startAddr;
  wire [49:0] _dataBanks_3_io_rdata_4_startAddr;
  wire [49:0] _dataBanks_3_io_rdata_5_startAddr;
  wire [49:0] _dataBanks_3_io_rdata_6_startAddr;
  wire [49:0] _dataBanks_3_io_rdata_7_startAddr;
  wire [49:0] _dataBanks_3_io_rdata_8_startAddr;
  wire [49:0] _dataBanks_3_io_rdata_9_startAddr;
  wire [49:0] _dataBanks_3_io_rdata_10_startAddr;
  wire [49:0] _dataBanks_3_io_rdata_11_startAddr;
  wire [49:0] _dataBanks_3_io_rdata_12_startAddr;
  wire [49:0] _dataBanks_3_io_rdata_13_startAddr;
  wire [49:0] _dataBanks_3_io_rdata_14_startAddr;
  wire [49:0] _dataBanks_2_io_rdata_0_startAddr;
  wire [49:0] _dataBanks_2_io_rdata_2_startAddr;
  wire [49:0] _dataBanks_2_io_rdata_3_startAddr;
  wire [49:0] _dataBanks_2_io_rdata_4_startAddr;
  wire [49:0] _dataBanks_2_io_rdata_5_startAddr;
  wire [49:0] _dataBanks_2_io_rdata_6_startAddr;
  wire [49:0] _dataBanks_2_io_rdata_7_startAddr;
  wire [49:0] _dataBanks_2_io_rdata_8_startAddr;
  wire [49:0] _dataBanks_2_io_rdata_9_startAddr;
  wire [49:0] _dataBanks_2_io_rdata_10_startAddr;
  wire [49:0] _dataBanks_2_io_rdata_11_startAddr;
  wire [49:0] _dataBanks_2_io_rdata_12_startAddr;
  wire [49:0] _dataBanks_2_io_rdata_13_startAddr;
  wire [49:0] _dataBanks_2_io_rdata_14_startAddr;
  wire [49:0] _dataBanks_1_io_rdata_0_startAddr;
  wire [49:0] _dataBanks_1_io_rdata_2_startAddr;
  wire [49:0] _dataBanks_1_io_rdata_3_startAddr;
  wire [49:0] _dataBanks_1_io_rdata_4_startAddr;
  wire [49:0] _dataBanks_1_io_rdata_5_startAddr;
  wire [49:0] _dataBanks_1_io_rdata_6_startAddr;
  wire [49:0] _dataBanks_1_io_rdata_7_startAddr;
  wire [49:0] _dataBanks_1_io_rdata_8_startAddr;
  wire [49:0] _dataBanks_1_io_rdata_9_startAddr;
  wire [49:0] _dataBanks_1_io_rdata_10_startAddr;
  wire [49:0] _dataBanks_1_io_rdata_11_startAddr;
  wire [49:0] _dataBanks_1_io_rdata_12_startAddr;
  wire [49:0] _dataBanks_1_io_rdata_13_startAddr;
  wire [49:0] _dataBanks_1_io_rdata_14_startAddr;
  wire [49:0] _dataBanks_0_io_rdata_0_startAddr;
  wire [49:0] _dataBanks_0_io_rdata_2_startAddr;
  wire [49:0] _dataBanks_0_io_rdata_3_startAddr;
  wire [49:0] _dataBanks_0_io_rdata_4_startAddr;
  wire [49:0] _dataBanks_0_io_rdata_5_startAddr;
  wire [49:0] _dataBanks_0_io_rdata_6_startAddr;
  wire [49:0] _dataBanks_0_io_rdata_7_startAddr;
  wire [49:0] _dataBanks_0_io_rdata_8_startAddr;
  wire [49:0] _dataBanks_0_io_rdata_9_startAddr;
  wire [49:0] _dataBanks_0_io_rdata_10_startAddr;
  wire [49:0] _dataBanks_0_io_rdata_11_startAddr;
  wire [49:0] _dataBanks_0_io_rdata_12_startAddr;
  wire [49:0] _dataBanks_0_io_rdata_13_startAddr;
  wire [49:0] _dataBanks_0_io_rdata_14_startAddr;
  reg  [5:0]  raddr_dup_0;
  reg  [5:0]  raddr_dup_2;
  reg  [5:0]  raddr_dup_3;
  reg  [5:0]  raddr_dup_4;
  reg  [5:0]  raddr_dup_5;
  reg  [5:0]  raddr_dup_6;
  reg  [5:0]  raddr_dup_7;
  reg  [5:0]  raddr_dup_8;
  reg  [5:0]  raddr_dup_9;
  reg  [5:0]  raddr_dup_10;
  reg  [5:0]  raddr_dup_11;
  reg  [5:0]  raddr_dup_12;
  reg  [5:0]  raddr_dup_13;
  reg  [5:0]  raddr_dup_14;
  reg         wen_dup_last_REG;
  reg  [5:0]  waddr_dup_0;
  reg  [49:0] r_startAddr;
  reg  [5:0]  raddr_dup_0_1;
  reg  [5:0]  raddr_dup_2_1;
  reg  [5:0]  raddr_dup_3_1;
  reg  [5:0]  raddr_dup_4_1;
  reg  [5:0]  raddr_dup_5_1;
  reg  [5:0]  raddr_dup_6_1;
  reg  [5:0]  raddr_dup_7_1;
  reg  [5:0]  raddr_dup_8_1;
  reg  [5:0]  raddr_dup_9_1;
  reg  [5:0]  raddr_dup_10_1;
  reg  [5:0]  raddr_dup_11_1;
  reg  [5:0]  raddr_dup_12_1;
  reg  [5:0]  raddr_dup_13_1;
  reg  [5:0]  raddr_dup_14_1;
  reg         wen_dup_last_REG_1;
  reg  [5:0]  waddr_dup_0_1;
  reg  [49:0] r_1_startAddr;
  reg  [5:0]  raddr_dup_0_2;
  reg  [5:0]  raddr_dup_2_2;
  reg  [5:0]  raddr_dup_3_2;
  reg  [5:0]  raddr_dup_4_2;
  reg  [5:0]  raddr_dup_5_2;
  reg  [5:0]  raddr_dup_6_2;
  reg  [5:0]  raddr_dup_7_2;
  reg  [5:0]  raddr_dup_8_2;
  reg  [5:0]  raddr_dup_9_2;
  reg  [5:0]  raddr_dup_10_2;
  reg  [5:0]  raddr_dup_11_2;
  reg  [5:0]  raddr_dup_12_2;
  reg  [5:0]  raddr_dup_13_2;
  reg  [5:0]  raddr_dup_14_2;
  reg         wen_dup_last_REG_2;
  reg  [5:0]  waddr_dup_0_2;
  reg  [49:0] r_2_startAddr;
  reg  [5:0]  raddr_dup_0_3;
  reg  [5:0]  raddr_dup_2_3;
  reg  [5:0]  raddr_dup_3_3;
  reg  [5:0]  raddr_dup_4_3;
  reg  [5:0]  raddr_dup_5_3;
  reg  [5:0]  raddr_dup_6_3;
  reg  [5:0]  raddr_dup_7_3;
  reg  [5:0]  raddr_dup_8_3;
  reg  [5:0]  raddr_dup_9_3;
  reg  [5:0]  raddr_dup_10_3;
  reg  [5:0]  raddr_dup_11_3;
  reg  [5:0]  raddr_dup_12_3;
  reg  [5:0]  raddr_dup_13_3;
  reg  [5:0]  raddr_dup_14_3;
  reg         wen_dup_last_REG_3;
  reg  [5:0]  waddr_dup_0_3;
  reg  [49:0] r_3_startAddr;
  reg  [5:0]  raddr_dup;
  reg  [5:0]  raddr_dup_16;
  reg  [5:0]  raddr_dup_17;
  reg  [5:0]  raddr_dup_18;
  reg  [5:0]  raddr_dup_19;
  reg  [5:0]  raddr_dup_20;
  reg  [5:0]  raddr_dup_21;
  reg  [5:0]  raddr_dup_22;
  reg  [5:0]  raddr_dup_23;
  reg  [5:0]  raddr_dup_24;
  reg  [5:0]  raddr_dup_25;
  reg  [5:0]  raddr_dup_26;
  reg  [5:0]  raddr_dup_27;
  reg  [5:0]  raddr_dup_28;
  always @(posedge clock) begin
    if (io_ren_0) begin
      raddr_dup_0 <= io_raddr_0;
      raddr_dup_0_1 <= io_raddr_0;
      raddr_dup_0_2 <= io_raddr_0;
      raddr_dup_0_3 <= io_raddr_0;
      raddr_dup <= io_raddr_0;
    end
    if (io_ren_2) begin
      raddr_dup_2 <= io_raddr_2;
      raddr_dup_2_1 <= io_raddr_2;
      raddr_dup_2_2 <= io_raddr_2;
      raddr_dup_2_3 <= io_raddr_2;
      raddr_dup_16 <= io_raddr_2;
    end
    if (io_ren_3) begin
      raddr_dup_3 <= io_raddr_3;
      raddr_dup_3_1 <= io_raddr_3;
      raddr_dup_3_2 <= io_raddr_3;
      raddr_dup_3_3 <= io_raddr_3;
      raddr_dup_17 <= io_raddr_3;
    end
    if (io_ren_4) begin
      raddr_dup_4 <= io_raddr_4;
      raddr_dup_4_1 <= io_raddr_4;
      raddr_dup_4_2 <= io_raddr_4;
      raddr_dup_4_3 <= io_raddr_4;
      raddr_dup_18 <= io_raddr_4;
    end
    if (io_ren_5) begin
      raddr_dup_5 <= io_raddr_5;
      raddr_dup_5_1 <= io_raddr_5;
      raddr_dup_5_2 <= io_raddr_5;
      raddr_dup_5_3 <= io_raddr_5;
      raddr_dup_19 <= io_raddr_5;
    end
    if (io_ren_6) begin
      raddr_dup_6 <= io_raddr_6;
      raddr_dup_6_1 <= io_raddr_6;
      raddr_dup_6_2 <= io_raddr_6;
      raddr_dup_6_3 <= io_raddr_6;
      raddr_dup_20 <= io_raddr_6;
    end
    if (io_ren_7) begin
      raddr_dup_7 <= io_raddr_7;
      raddr_dup_7_1 <= io_raddr_7;
      raddr_dup_7_2 <= io_raddr_7;
      raddr_dup_7_3 <= io_raddr_7;
      raddr_dup_21 <= io_raddr_7;
    end
    if (io_ren_8) begin
      raddr_dup_8 <= io_raddr_8;
      raddr_dup_8_1 <= io_raddr_8;
      raddr_dup_8_2 <= io_raddr_8;
      raddr_dup_8_3 <= io_raddr_8;
      raddr_dup_22 <= io_raddr_8;
    end
    if (io_ren_9) begin
      raddr_dup_9 <= io_raddr_9;
      raddr_dup_9_1 <= io_raddr_9;
      raddr_dup_9_2 <= io_raddr_9;
      raddr_dup_9_3 <= io_raddr_9;
      raddr_dup_23 <= io_raddr_9;
    end
    if (io_ren_10) begin
      raddr_dup_10 <= io_raddr_10;
      raddr_dup_10_1 <= io_raddr_10;
      raddr_dup_10_2 <= io_raddr_10;
      raddr_dup_10_3 <= io_raddr_10;
      raddr_dup_24 <= io_raddr_10;
    end
    if (io_ren_11) begin
      raddr_dup_11 <= io_raddr_11;
      raddr_dup_11_1 <= io_raddr_11;
      raddr_dup_11_2 <= io_raddr_11;
      raddr_dup_11_3 <= io_raddr_11;
      raddr_dup_25 <= io_raddr_11;
    end
    if (io_ren_12) begin
      raddr_dup_12 <= io_raddr_12;
      raddr_dup_12_1 <= io_raddr_12;
      raddr_dup_12_2 <= io_raddr_12;
      raddr_dup_12_3 <= io_raddr_12;
      raddr_dup_26 <= io_raddr_12;
    end
    if (io_ren_13) begin
      raddr_dup_13 <= io_raddr_13;
      raddr_dup_13_1 <= io_raddr_13;
      raddr_dup_13_2 <= io_raddr_13;
      raddr_dup_13_3 <= io_raddr_13;
      raddr_dup_27 <= io_raddr_13;
    end
    if (io_ren_14) begin
      raddr_dup_14 <= io_raddr_14;
      raddr_dup_14_1 <= io_raddr_14;
      raddr_dup_14_2 <= io_raddr_14;
      raddr_dup_14_3 <= io_raddr_14;
      raddr_dup_28 <= io_raddr_14;
    end
    if (io_wen_0) begin
      waddr_dup_0 <= io_waddr_0;
      r_startAddr <= io_wdata_0_startAddr;
      waddr_dup_0_1 <= io_waddr_0;
      r_1_startAddr <= io_wdata_0_startAddr;
      waddr_dup_0_2 <= io_waddr_0;
      r_2_startAddr <= io_wdata_0_startAddr;
      waddr_dup_0_3 <= io_waddr_0;
      r_3_startAddr <= io_wdata_0_startAddr;
    end
  end // always @(posedge)
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      wen_dup_last_REG <= 1'h0;
      wen_dup_last_REG_1 <= 1'h0;
      wen_dup_last_REG_2 <= 1'h0;
      wen_dup_last_REG_3 <= 1'h0;
    end
    else begin
      wen_dup_last_REG <= io_wen_0;
      wen_dup_last_REG_1 <= io_wen_0;
      wen_dup_last_REG_2 <= io_wen_0;
      wen_dup_last_REG_3 <= io_wen_0;
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:29];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [4:0] i = 5'h0; i < 5'h1E; i += 5'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        raddr_dup_0 = _RANDOM[5'h0][5:0];
        raddr_dup_2 = _RANDOM[5'h0][17:12];
        raddr_dup_3 = _RANDOM[5'h0][23:18];
        raddr_dup_4 = _RANDOM[5'h0][29:24];
        raddr_dup_5 = {_RANDOM[5'h0][31:30], _RANDOM[5'h1][3:0]};
        raddr_dup_6 = _RANDOM[5'h1][9:4];
        raddr_dup_7 = _RANDOM[5'h1][15:10];
        raddr_dup_8 = _RANDOM[5'h1][21:16];
        raddr_dup_9 = _RANDOM[5'h1][27:22];
        raddr_dup_10 = {_RANDOM[5'h1][31:28], _RANDOM[5'h2][1:0]};
        raddr_dup_11 = _RANDOM[5'h2][7:2];
        raddr_dup_12 = _RANDOM[5'h2][13:8];
        raddr_dup_13 = _RANDOM[5'h2][19:14];
        raddr_dup_14 = _RANDOM[5'h2][25:20];
        wen_dup_last_REG = _RANDOM[5'h2][26];
        waddr_dup_0 = {_RANDOM[5'h2][31:27], _RANDOM[5'h3][0]};
        r_startAddr = {_RANDOM[5'h3][31:1], _RANDOM[5'h4][18:0]};
        raddr_dup_0_1 = _RANDOM[5'h6][27:22];
        raddr_dup_2_1 = _RANDOM[5'h7][7:2];
        raddr_dup_3_1 = _RANDOM[5'h7][13:8];
        raddr_dup_4_1 = _RANDOM[5'h7][19:14];
        raddr_dup_5_1 = _RANDOM[5'h7][25:20];
        raddr_dup_6_1 = _RANDOM[5'h7][31:26];
        raddr_dup_7_1 = _RANDOM[5'h8][5:0];
        raddr_dup_8_1 = _RANDOM[5'h8][11:6];
        raddr_dup_9_1 = _RANDOM[5'h8][17:12];
        raddr_dup_10_1 = _RANDOM[5'h8][23:18];
        raddr_dup_11_1 = _RANDOM[5'h8][29:24];
        raddr_dup_12_1 = {_RANDOM[5'h8][31:30], _RANDOM[5'h9][3:0]};
        raddr_dup_13_1 = _RANDOM[5'h9][9:4];
        raddr_dup_14_1 = _RANDOM[5'h9][15:10];
        wen_dup_last_REG_1 = _RANDOM[5'h9][16];
        waddr_dup_0_1 = _RANDOM[5'h9][22:17];
        r_1_startAddr = {_RANDOM[5'h9][31:23], _RANDOM[5'hA], _RANDOM[5'hB][8:0]};
        raddr_dup_0_2 = _RANDOM[5'hD][17:12];
        raddr_dup_2_2 = _RANDOM[5'hD][29:24];
        raddr_dup_3_2 = {_RANDOM[5'hD][31:30], _RANDOM[5'hE][3:0]};
        raddr_dup_4_2 = _RANDOM[5'hE][9:4];
        raddr_dup_5_2 = _RANDOM[5'hE][15:10];
        raddr_dup_6_2 = _RANDOM[5'hE][21:16];
        raddr_dup_7_2 = _RANDOM[5'hE][27:22];
        raddr_dup_8_2 = {_RANDOM[5'hE][31:28], _RANDOM[5'hF][1:0]};
        raddr_dup_9_2 = _RANDOM[5'hF][7:2];
        raddr_dup_10_2 = _RANDOM[5'hF][13:8];
        raddr_dup_11_2 = _RANDOM[5'hF][19:14];
        raddr_dup_12_2 = _RANDOM[5'hF][25:20];
        raddr_dup_13_2 = _RANDOM[5'hF][31:26];
        raddr_dup_14_2 = _RANDOM[5'h10][5:0];
        wen_dup_last_REG_2 = _RANDOM[5'h10][6];
        waddr_dup_0_2 = _RANDOM[5'h10][12:7];
        r_2_startAddr = {_RANDOM[5'h10][31:13], _RANDOM[5'h11][30:0]};
        raddr_dup_0_3 = _RANDOM[5'h14][7:2];
        raddr_dup_2_3 = _RANDOM[5'h14][19:14];
        raddr_dup_3_3 = _RANDOM[5'h14][25:20];
        raddr_dup_4_3 = _RANDOM[5'h14][31:26];
        raddr_dup_5_3 = _RANDOM[5'h15][5:0];
        raddr_dup_6_3 = _RANDOM[5'h15][11:6];
        raddr_dup_7_3 = _RANDOM[5'h15][17:12];
        raddr_dup_8_3 = _RANDOM[5'h15][23:18];
        raddr_dup_9_3 = _RANDOM[5'h15][29:24];
        raddr_dup_10_3 = {_RANDOM[5'h15][31:30], _RANDOM[5'h16][3:0]};
        raddr_dup_11_3 = _RANDOM[5'h16][9:4];
        raddr_dup_12_3 = _RANDOM[5'h16][15:10];
        raddr_dup_13_3 = _RANDOM[5'h16][21:16];
        raddr_dup_14_3 = _RANDOM[5'h16][27:22];
        wen_dup_last_REG_3 = _RANDOM[5'h16][28];
        waddr_dup_0_3 = {_RANDOM[5'h16][31:29], _RANDOM[5'h17][2:0]};
        r_3_startAddr = {_RANDOM[5'h17][31:3], _RANDOM[5'h18][20:0]};
        raddr_dup = _RANDOM[5'h1A][29:24];
        raddr_dup_16 = _RANDOM[5'h1B][9:4];
        raddr_dup_17 = _RANDOM[5'h1B][15:10];
        raddr_dup_18 = _RANDOM[5'h1B][21:16];
        raddr_dup_19 = _RANDOM[5'h1B][27:22];
        raddr_dup_20 = {_RANDOM[5'h1B][31:28], _RANDOM[5'h1C][1:0]};
        raddr_dup_21 = _RANDOM[5'h1C][7:2];
        raddr_dup_22 = _RANDOM[5'h1C][13:8];
        raddr_dup_23 = _RANDOM[5'h1C][19:14];
        raddr_dup_24 = _RANDOM[5'h1C][25:20];
        raddr_dup_25 = _RANDOM[5'h1C][31:26];
        raddr_dup_26 = _RANDOM[5'h1D][5:0];
        raddr_dup_27 = _RANDOM[5'h1D][11:6];
        raddr_dup_28 = _RANDOM[5'h1D][17:12];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        wen_dup_last_REG = 1'h0;
        wen_dup_last_REG_1 = 1'h0;
        wen_dup_last_REG_2 = 1'h0;
        wen_dup_last_REG_3 = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  DataModule_BackendPC_16entry dataBanks_0 (
    .clock                 (clock),
    .io_raddr_0            (raddr_dup_0[3:0]),
    .io_raddr_2            (raddr_dup_2[3:0]),
    .io_raddr_3            (raddr_dup_3[3:0]),
    .io_raddr_4            (raddr_dup_4[3:0]),
    .io_raddr_5            (raddr_dup_5[3:0]),
    .io_raddr_6            (raddr_dup_6[3:0]),
    .io_raddr_7            (raddr_dup_7[3:0]),
    .io_raddr_8            (raddr_dup_8[3:0]),
    .io_raddr_9            (raddr_dup_9[3:0]),
    .io_raddr_10           (raddr_dup_10[3:0]),
    .io_raddr_11           (raddr_dup_11[3:0]),
    .io_raddr_12           (raddr_dup_12[3:0]),
    .io_raddr_13           (raddr_dup_13[3:0]),
    .io_raddr_14           (raddr_dup_14[3:0]),
    .io_rdata_0_startAddr  (_dataBanks_0_io_rdata_0_startAddr),
    .io_rdata_2_startAddr  (_dataBanks_0_io_rdata_2_startAddr),
    .io_rdata_3_startAddr  (_dataBanks_0_io_rdata_3_startAddr),
    .io_rdata_4_startAddr  (_dataBanks_0_io_rdata_4_startAddr),
    .io_rdata_5_startAddr  (_dataBanks_0_io_rdata_5_startAddr),
    .io_rdata_6_startAddr  (_dataBanks_0_io_rdata_6_startAddr),
    .io_rdata_7_startAddr  (_dataBanks_0_io_rdata_7_startAddr),
    .io_rdata_8_startAddr  (_dataBanks_0_io_rdata_8_startAddr),
    .io_rdata_9_startAddr  (_dataBanks_0_io_rdata_9_startAddr),
    .io_rdata_10_startAddr (_dataBanks_0_io_rdata_10_startAddr),
    .io_rdata_11_startAddr (_dataBanks_0_io_rdata_11_startAddr),
    .io_rdata_12_startAddr (_dataBanks_0_io_rdata_12_startAddr),
    .io_rdata_13_startAddr (_dataBanks_0_io_rdata_13_startAddr),
    .io_rdata_14_startAddr (_dataBanks_0_io_rdata_14_startAddr),
    .io_wen_0              (wen_dup_last_REG & waddr_dup_0[5:4] == 2'h0),
    .io_waddr_0            (waddr_dup_0[3:0]),
    .io_wdata_0_startAddr  (r_startAddr)
  );
  DataModule_BackendPC_16entry dataBanks_1 (
    .clock                 (clock),
    .io_raddr_0            (raddr_dup_0_1[3:0]),
    .io_raddr_2            (raddr_dup_2_1[3:0]),
    .io_raddr_3            (raddr_dup_3_1[3:0]),
    .io_raddr_4            (raddr_dup_4_1[3:0]),
    .io_raddr_5            (raddr_dup_5_1[3:0]),
    .io_raddr_6            (raddr_dup_6_1[3:0]),
    .io_raddr_7            (raddr_dup_7_1[3:0]),
    .io_raddr_8            (raddr_dup_8_1[3:0]),
    .io_raddr_9            (raddr_dup_9_1[3:0]),
    .io_raddr_10           (raddr_dup_10_1[3:0]),
    .io_raddr_11           (raddr_dup_11_1[3:0]),
    .io_raddr_12           (raddr_dup_12_1[3:0]),
    .io_raddr_13           (raddr_dup_13_1[3:0]),
    .io_raddr_14           (raddr_dup_14_1[3:0]),
    .io_rdata_0_startAddr  (_dataBanks_1_io_rdata_0_startAddr),
    .io_rdata_2_startAddr  (_dataBanks_1_io_rdata_2_startAddr),
    .io_rdata_3_startAddr  (_dataBanks_1_io_rdata_3_startAddr),
    .io_rdata_4_startAddr  (_dataBanks_1_io_rdata_4_startAddr),
    .io_rdata_5_startAddr  (_dataBanks_1_io_rdata_5_startAddr),
    .io_rdata_6_startAddr  (_dataBanks_1_io_rdata_6_startAddr),
    .io_rdata_7_startAddr  (_dataBanks_1_io_rdata_7_startAddr),
    .io_rdata_8_startAddr  (_dataBanks_1_io_rdata_8_startAddr),
    .io_rdata_9_startAddr  (_dataBanks_1_io_rdata_9_startAddr),
    .io_rdata_10_startAddr (_dataBanks_1_io_rdata_10_startAddr),
    .io_rdata_11_startAddr (_dataBanks_1_io_rdata_11_startAddr),
    .io_rdata_12_startAddr (_dataBanks_1_io_rdata_12_startAddr),
    .io_rdata_13_startAddr (_dataBanks_1_io_rdata_13_startAddr),
    .io_rdata_14_startAddr (_dataBanks_1_io_rdata_14_startAddr),
    .io_wen_0              (wen_dup_last_REG_1 & waddr_dup_0_1[5:4] == 2'h1),
    .io_waddr_0            (waddr_dup_0_1[3:0]),
    .io_wdata_0_startAddr  (r_1_startAddr)
  );
  DataModule_BackendPC_16entry dataBanks_2 (
    .clock                 (clock),
    .io_raddr_0            (raddr_dup_0_2[3:0]),
    .io_raddr_2            (raddr_dup_2_2[3:0]),
    .io_raddr_3            (raddr_dup_3_2[3:0]),
    .io_raddr_4            (raddr_dup_4_2[3:0]),
    .io_raddr_5            (raddr_dup_5_2[3:0]),
    .io_raddr_6            (raddr_dup_6_2[3:0]),
    .io_raddr_7            (raddr_dup_7_2[3:0]),
    .io_raddr_8            (raddr_dup_8_2[3:0]),
    .io_raddr_9            (raddr_dup_9_2[3:0]),
    .io_raddr_10           (raddr_dup_10_2[3:0]),
    .io_raddr_11           (raddr_dup_11_2[3:0]),
    .io_raddr_12           (raddr_dup_12_2[3:0]),
    .io_raddr_13           (raddr_dup_13_2[3:0]),
    .io_raddr_14           (raddr_dup_14_2[3:0]),
    .io_rdata_0_startAddr  (_dataBanks_2_io_rdata_0_startAddr),
    .io_rdata_2_startAddr  (_dataBanks_2_io_rdata_2_startAddr),
    .io_rdata_3_startAddr  (_dataBanks_2_io_rdata_3_startAddr),
    .io_rdata_4_startAddr  (_dataBanks_2_io_rdata_4_startAddr),
    .io_rdata_5_startAddr  (_dataBanks_2_io_rdata_5_startAddr),
    .io_rdata_6_startAddr  (_dataBanks_2_io_rdata_6_startAddr),
    .io_rdata_7_startAddr  (_dataBanks_2_io_rdata_7_startAddr),
    .io_rdata_8_startAddr  (_dataBanks_2_io_rdata_8_startAddr),
    .io_rdata_9_startAddr  (_dataBanks_2_io_rdata_9_startAddr),
    .io_rdata_10_startAddr (_dataBanks_2_io_rdata_10_startAddr),
    .io_rdata_11_startAddr (_dataBanks_2_io_rdata_11_startAddr),
    .io_rdata_12_startAddr (_dataBanks_2_io_rdata_12_startAddr),
    .io_rdata_13_startAddr (_dataBanks_2_io_rdata_13_startAddr),
    .io_rdata_14_startAddr (_dataBanks_2_io_rdata_14_startAddr),
    .io_wen_0              (wen_dup_last_REG_2 & waddr_dup_0_2[5:4] == 2'h2),
    .io_waddr_0            (waddr_dup_0_2[3:0]),
    .io_wdata_0_startAddr  (r_2_startAddr)
  );
  DataModule_BackendPC_16entry dataBanks_3 (
    .clock                 (clock),
    .io_raddr_0            (raddr_dup_0_3[3:0]),
    .io_raddr_2            (raddr_dup_2_3[3:0]),
    .io_raddr_3            (raddr_dup_3_3[3:0]),
    .io_raddr_4            (raddr_dup_4_3[3:0]),
    .io_raddr_5            (raddr_dup_5_3[3:0]),
    .io_raddr_6            (raddr_dup_6_3[3:0]),
    .io_raddr_7            (raddr_dup_7_3[3:0]),
    .io_raddr_8            (raddr_dup_8_3[3:0]),
    .io_raddr_9            (raddr_dup_9_3[3:0]),
    .io_raddr_10           (raddr_dup_10_3[3:0]),
    .io_raddr_11           (raddr_dup_11_3[3:0]),
    .io_raddr_12           (raddr_dup_12_3[3:0]),
    .io_raddr_13           (raddr_dup_13_3[3:0]),
    .io_raddr_14           (raddr_dup_14_3[3:0]),
    .io_rdata_0_startAddr  (_dataBanks_3_io_rdata_0_startAddr),
    .io_rdata_2_startAddr  (_dataBanks_3_io_rdata_2_startAddr),
    .io_rdata_3_startAddr  (_dataBanks_3_io_rdata_3_startAddr),
    .io_rdata_4_startAddr  (_dataBanks_3_io_rdata_4_startAddr),
    .io_rdata_5_startAddr  (_dataBanks_3_io_rdata_5_startAddr),
    .io_rdata_6_startAddr  (_dataBanks_3_io_rdata_6_startAddr),
    .io_rdata_7_startAddr  (_dataBanks_3_io_rdata_7_startAddr),
    .io_rdata_8_startAddr  (_dataBanks_3_io_rdata_8_startAddr),
    .io_rdata_9_startAddr  (_dataBanks_3_io_rdata_9_startAddr),
    .io_rdata_10_startAddr (_dataBanks_3_io_rdata_10_startAddr),
    .io_rdata_11_startAddr (_dataBanks_3_io_rdata_11_startAddr),
    .io_rdata_12_startAddr (_dataBanks_3_io_rdata_12_startAddr),
    .io_rdata_13_startAddr (_dataBanks_3_io_rdata_13_startAddr),
    .io_rdata_14_startAddr (_dataBanks_3_io_rdata_14_startAddr),
    .io_wen_0              (wen_dup_last_REG_3 & (&(waddr_dup_0_3[5:4]))),
    .io_waddr_0            (waddr_dup_0_3[3:0]),
    .io_wdata_0_startAddr  (r_3_startAddr)
  );
  assign io_rdata_0_startAddr =
    (raddr_dup[5:4] == 2'h0 ? _dataBanks_0_io_rdata_0_startAddr : 50'h0)
    | (raddr_dup[5:4] == 2'h1 ? _dataBanks_1_io_rdata_0_startAddr : 50'h0)
    | (raddr_dup[5:4] == 2'h2 ? _dataBanks_2_io_rdata_0_startAddr : 50'h0)
    | ((&(raddr_dup[5:4])) ? _dataBanks_3_io_rdata_0_startAddr : 50'h0);
  assign io_rdata_2_startAddr =
    (raddr_dup_16[5:4] == 2'h0 ? _dataBanks_0_io_rdata_2_startAddr : 50'h0)
    | (raddr_dup_16[5:4] == 2'h1 ? _dataBanks_1_io_rdata_2_startAddr : 50'h0)
    | (raddr_dup_16[5:4] == 2'h2 ? _dataBanks_2_io_rdata_2_startAddr : 50'h0)
    | ((&(raddr_dup_16[5:4])) ? _dataBanks_3_io_rdata_2_startAddr : 50'h0);
  assign io_rdata_3_startAddr =
    (raddr_dup_17[5:4] == 2'h0 ? _dataBanks_0_io_rdata_3_startAddr : 50'h0)
    | (raddr_dup_17[5:4] == 2'h1 ? _dataBanks_1_io_rdata_3_startAddr : 50'h0)
    | (raddr_dup_17[5:4] == 2'h2 ? _dataBanks_2_io_rdata_3_startAddr : 50'h0)
    | ((&(raddr_dup_17[5:4])) ? _dataBanks_3_io_rdata_3_startAddr : 50'h0);
  assign io_rdata_4_startAddr =
    (raddr_dup_18[5:4] == 2'h0 ? _dataBanks_0_io_rdata_4_startAddr : 50'h0)
    | (raddr_dup_18[5:4] == 2'h1 ? _dataBanks_1_io_rdata_4_startAddr : 50'h0)
    | (raddr_dup_18[5:4] == 2'h2 ? _dataBanks_2_io_rdata_4_startAddr : 50'h0)
    | ((&(raddr_dup_18[5:4])) ? _dataBanks_3_io_rdata_4_startAddr : 50'h0);
  assign io_rdata_5_startAddr =
    (raddr_dup_19[5:4] == 2'h0 ? _dataBanks_0_io_rdata_5_startAddr : 50'h0)
    | (raddr_dup_19[5:4] == 2'h1 ? _dataBanks_1_io_rdata_5_startAddr : 50'h0)
    | (raddr_dup_19[5:4] == 2'h2 ? _dataBanks_2_io_rdata_5_startAddr : 50'h0)
    | ((&(raddr_dup_19[5:4])) ? _dataBanks_3_io_rdata_5_startAddr : 50'h0);
  assign io_rdata_6_startAddr =
    (raddr_dup_20[5:4] == 2'h0 ? _dataBanks_0_io_rdata_6_startAddr : 50'h0)
    | (raddr_dup_20[5:4] == 2'h1 ? _dataBanks_1_io_rdata_6_startAddr : 50'h0)
    | (raddr_dup_20[5:4] == 2'h2 ? _dataBanks_2_io_rdata_6_startAddr : 50'h0)
    | ((&(raddr_dup_20[5:4])) ? _dataBanks_3_io_rdata_6_startAddr : 50'h0);
  assign io_rdata_7_startAddr =
    (raddr_dup_21[5:4] == 2'h0 ? _dataBanks_0_io_rdata_7_startAddr : 50'h0)
    | (raddr_dup_21[5:4] == 2'h1 ? _dataBanks_1_io_rdata_7_startAddr : 50'h0)
    | (raddr_dup_21[5:4] == 2'h2 ? _dataBanks_2_io_rdata_7_startAddr : 50'h0)
    | ((&(raddr_dup_21[5:4])) ? _dataBanks_3_io_rdata_7_startAddr : 50'h0);
  assign io_rdata_8_startAddr =
    (raddr_dup_22[5:4] == 2'h0 ? _dataBanks_0_io_rdata_8_startAddr : 50'h0)
    | (raddr_dup_22[5:4] == 2'h1 ? _dataBanks_1_io_rdata_8_startAddr : 50'h0)
    | (raddr_dup_22[5:4] == 2'h2 ? _dataBanks_2_io_rdata_8_startAddr : 50'h0)
    | ((&(raddr_dup_22[5:4])) ? _dataBanks_3_io_rdata_8_startAddr : 50'h0);
  assign io_rdata_9_startAddr =
    (raddr_dup_23[5:4] == 2'h0 ? _dataBanks_0_io_rdata_9_startAddr : 50'h0)
    | (raddr_dup_23[5:4] == 2'h1 ? _dataBanks_1_io_rdata_9_startAddr : 50'h0)
    | (raddr_dup_23[5:4] == 2'h2 ? _dataBanks_2_io_rdata_9_startAddr : 50'h0)
    | ((&(raddr_dup_23[5:4])) ? _dataBanks_3_io_rdata_9_startAddr : 50'h0);
  assign io_rdata_10_startAddr =
    (raddr_dup_24[5:4] == 2'h0 ? _dataBanks_0_io_rdata_10_startAddr : 50'h0)
    | (raddr_dup_24[5:4] == 2'h1 ? _dataBanks_1_io_rdata_10_startAddr : 50'h0)
    | (raddr_dup_24[5:4] == 2'h2 ? _dataBanks_2_io_rdata_10_startAddr : 50'h0)
    | ((&(raddr_dup_24[5:4])) ? _dataBanks_3_io_rdata_10_startAddr : 50'h0);
  assign io_rdata_11_startAddr =
    (raddr_dup_25[5:4] == 2'h0 ? _dataBanks_0_io_rdata_11_startAddr : 50'h0)
    | (raddr_dup_25[5:4] == 2'h1 ? _dataBanks_1_io_rdata_11_startAddr : 50'h0)
    | (raddr_dup_25[5:4] == 2'h2 ? _dataBanks_2_io_rdata_11_startAddr : 50'h0)
    | ((&(raddr_dup_25[5:4])) ? _dataBanks_3_io_rdata_11_startAddr : 50'h0);
  assign io_rdata_12_startAddr =
    (raddr_dup_26[5:4] == 2'h0 ? _dataBanks_0_io_rdata_12_startAddr : 50'h0)
    | (raddr_dup_26[5:4] == 2'h1 ? _dataBanks_1_io_rdata_12_startAddr : 50'h0)
    | (raddr_dup_26[5:4] == 2'h2 ? _dataBanks_2_io_rdata_12_startAddr : 50'h0)
    | ((&(raddr_dup_26[5:4])) ? _dataBanks_3_io_rdata_12_startAddr : 50'h0);
  assign io_rdata_13_startAddr =
    (raddr_dup_27[5:4] == 2'h0 ? _dataBanks_0_io_rdata_13_startAddr : 50'h0)
    | (raddr_dup_27[5:4] == 2'h1 ? _dataBanks_1_io_rdata_13_startAddr : 50'h0)
    | (raddr_dup_27[5:4] == 2'h2 ? _dataBanks_2_io_rdata_13_startAddr : 50'h0)
    | ((&(raddr_dup_27[5:4])) ? _dataBanks_3_io_rdata_13_startAddr : 50'h0);
  assign io_rdata_14_startAddr =
    (raddr_dup_28[5:4] == 2'h0 ? _dataBanks_0_io_rdata_14_startAddr : 50'h0)
    | (raddr_dup_28[5:4] == 2'h1 ? _dataBanks_1_io_rdata_14_startAddr : 50'h0)
    | (raddr_dup_28[5:4] == 2'h2 ? _dataBanks_2_io_rdata_14_startAddr : 50'h0)
    | ((&(raddr_dup_28[5:4])) ? _dataBanks_3_io_rdata_14_startAddr : 50'h0);
endmodule

