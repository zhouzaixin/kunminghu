// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module TLDebugModuleOuterAsync(
  output [3:0]  auto_asource_out_a_mem_0_opcode,
  output [8:0]  auto_asource_out_a_mem_0_address,
  output [31:0] auto_asource_out_a_mem_0_data,
  input         auto_asource_out_a_ridx,
  output        auto_asource_out_a_widx,
  input  [3:0]  auto_asource_out_d_mem_0_opcode,
  input  [1:0]  auto_asource_out_d_mem_0_size,
  input         auto_asource_out_d_mem_0_source,
  input  [31:0] auto_asource_out_d_mem_0_data,
  output        auto_asource_out_d_ridx,
  input         auto_asource_out_d_widx,
  output        auto_dmOuter_int_out_0,
  input         io_dmi_clock,
  input         io_dmi_reset,
  output        io_dmi_req_ready,
  input         io_dmi_req_valid,
  input  [6:0]  io_dmi_req_bits_addr,
  input  [31:0] io_dmi_req_bits_data,
  input  [1:0]  io_dmi_req_bits_op,
  input         io_dmi_resp_ready,
  output        io_dmi_resp_valid,
  output [31:0] io_dmi_resp_bits_data,
  output [1:0]  io_dmi_resp_bits_resp,
  output        io_ctrl_ndreset,
  output        io_ctrl_dmactive,
  input         io_ctrl_dmactiveAck,
  output        io_innerCtrl_mem_0_resumereq,
  output [9:0]  io_innerCtrl_mem_0_hartsel,
  output        io_innerCtrl_mem_0_ackhavereset,
  output        io_innerCtrl_mem_0_hrmask_0,
  input         io_innerCtrl_ridx,
  output        io_innerCtrl_widx,
  input         io_hgDebugInt_0,
  output        io_hartResetReq_0
);

  wire        _io_innerCtrl_source_io_enq_ready;
  wire        _dmactiveAck_dmactiveAckSync_io_q;
  wire        _asource_auto_in_a_ready;
  wire        _asource_auto_in_d_valid;
  wire [3:0]  _asource_auto_in_d_bits_opcode;
  wire        _asource_auto_in_d_bits_denied;
  wire [31:0] _asource_auto_in_d_bits_data;
  wire        _asource_auto_in_d_bits_corrupt;
  wire        _dmiBypass_auto_node_out_out_a_valid;
  wire [3:0]  _dmiBypass_auto_node_out_out_a_bits_opcode;
  wire [8:0]  _dmiBypass_auto_node_out_out_a_bits_address;
  wire [31:0] _dmiBypass_auto_node_out_out_a_bits_data;
  wire        _dmiBypass_auto_node_out_out_d_ready;
  wire        _dmiBypass_auto_node_in_in_a_ready;
  wire        _dmiBypass_auto_node_in_in_d_valid;
  wire        _dmiBypass_auto_node_in_in_d_bits_denied;
  wire [31:0] _dmiBypass_auto_node_in_in_d_bits_data;
  wire        _dmiBypass_auto_node_in_in_d_bits_corrupt;
  wire        _dmOuter_auto_dmi_in_a_ready;
  wire        _dmOuter_auto_dmi_in_d_valid;
  wire [31:0] _dmOuter_auto_dmi_in_d_bits_data;
  wire        _dmOuter_io_ctrl_dmactive;
  wire        _dmOuter_io_innerCtrl_valid;
  wire        _dmOuter_io_innerCtrl_bits_resumereq;
  wire [9:0]  _dmOuter_io_innerCtrl_bits_hartsel;
  wire        _dmOuter_io_innerCtrl_bits_ackhavereset;
  wire        _dmOuter_io_innerCtrl_bits_hrmask_0;
  wire        _dmi2tl_auto_out_a_valid;
  wire [3:0]  _dmi2tl_auto_out_a_bits_opcode;
  wire [8:0]  _dmi2tl_auto_out_a_bits_address;
  wire [31:0] _dmi2tl_auto_out_a_bits_data;
  wire        _dmi2tl_auto_out_d_ready;
  wire        _dmiXbar_auto_in_a_ready;
  wire        _dmiXbar_auto_in_d_valid;
  wire        _dmiXbar_auto_in_d_bits_denied;
  wire [31:0] _dmiXbar_auto_in_d_bits_data;
  wire        _dmiXbar_auto_in_d_bits_corrupt;
  wire        _dmiXbar_auto_out_1_a_valid;
  wire [3:0]  _dmiXbar_auto_out_1_a_bits_opcode;
  wire [6:0]  _dmiXbar_auto_out_1_a_bits_address;
  wire [31:0] _dmiXbar_auto_out_1_a_bits_data;
  wire        _dmiXbar_auto_out_1_d_ready;
  wire        _dmiXbar_auto_out_0_a_valid;
  wire [3:0]  _dmiXbar_auto_out_0_a_bits_opcode;
  wire [8:0]  _dmiXbar_auto_out_0_a_bits_address;
  wire [31:0] _dmiXbar_auto_out_0_a_bits_data;
  wire        _dmiXbar_auto_out_0_d_ready;
  TLXbar_5 dmiXbar (
    .clock                     (io_dmi_clock),
    .reset                     (io_dmi_reset),
    .auto_in_a_ready           (_dmiXbar_auto_in_a_ready),
    .auto_in_a_valid           (_dmi2tl_auto_out_a_valid),
    .auto_in_a_bits_opcode     (_dmi2tl_auto_out_a_bits_opcode),
    .auto_in_a_bits_address    (_dmi2tl_auto_out_a_bits_address),
    .auto_in_a_bits_data       (_dmi2tl_auto_out_a_bits_data),
    .auto_in_d_ready           (_dmi2tl_auto_out_d_ready),
    .auto_in_d_valid           (_dmiXbar_auto_in_d_valid),
    .auto_in_d_bits_denied     (_dmiXbar_auto_in_d_bits_denied),
    .auto_in_d_bits_data       (_dmiXbar_auto_in_d_bits_data),
    .auto_in_d_bits_corrupt    (_dmiXbar_auto_in_d_bits_corrupt),
    .auto_out_1_a_ready        (_dmOuter_auto_dmi_in_a_ready),
    .auto_out_1_a_valid        (_dmiXbar_auto_out_1_a_valid),
    .auto_out_1_a_bits_opcode  (_dmiXbar_auto_out_1_a_bits_opcode),
    .auto_out_1_a_bits_address (_dmiXbar_auto_out_1_a_bits_address),
    .auto_out_1_a_bits_data    (_dmiXbar_auto_out_1_a_bits_data),
    .auto_out_1_d_ready        (_dmiXbar_auto_out_1_d_ready),
    .auto_out_1_d_valid        (_dmOuter_auto_dmi_in_d_valid),
    .auto_out_1_d_bits_data    (_dmOuter_auto_dmi_in_d_bits_data),
    .auto_out_0_a_ready        (_dmiBypass_auto_node_in_in_a_ready),
    .auto_out_0_a_valid        (_dmiXbar_auto_out_0_a_valid),
    .auto_out_0_a_bits_opcode  (_dmiXbar_auto_out_0_a_bits_opcode),
    .auto_out_0_a_bits_address (_dmiXbar_auto_out_0_a_bits_address),
    .auto_out_0_a_bits_data    (_dmiXbar_auto_out_0_a_bits_data),
    .auto_out_0_d_ready        (_dmiXbar_auto_out_0_d_ready),
    .auto_out_0_d_valid        (_dmiBypass_auto_node_in_in_d_valid),
    .auto_out_0_d_bits_denied  (_dmiBypass_auto_node_in_in_d_bits_denied),
    .auto_out_0_d_bits_data    (_dmiBypass_auto_node_in_in_d_bits_data),
    .auto_out_0_d_bits_corrupt (_dmiBypass_auto_node_in_in_d_bits_corrupt)
  );
  DMIToTL dmi2tl (
    .auto_out_a_ready        (_dmiXbar_auto_in_a_ready),
    .auto_out_a_valid        (_dmi2tl_auto_out_a_valid),
    .auto_out_a_bits_opcode  (_dmi2tl_auto_out_a_bits_opcode),
    .auto_out_a_bits_address (_dmi2tl_auto_out_a_bits_address),
    .auto_out_a_bits_data    (_dmi2tl_auto_out_a_bits_data),
    .auto_out_d_ready        (_dmi2tl_auto_out_d_ready),
    .auto_out_d_valid        (_dmiXbar_auto_in_d_valid),
    .auto_out_d_bits_denied  (_dmiXbar_auto_in_d_bits_denied),
    .auto_out_d_bits_data    (_dmiXbar_auto_in_d_bits_data),
    .auto_out_d_bits_corrupt (_dmiXbar_auto_in_d_bits_corrupt),
    .io_dmi_req_ready        (io_dmi_req_ready),
    .io_dmi_req_valid        (io_dmi_req_valid),
    .io_dmi_req_bits_addr    (io_dmi_req_bits_addr),
    .io_dmi_req_bits_data    (io_dmi_req_bits_data),
    .io_dmi_req_bits_op      (io_dmi_req_bits_op),
    .io_dmi_resp_ready       (io_dmi_resp_ready),
    .io_dmi_resp_valid       (io_dmi_resp_valid),
    .io_dmi_resp_bits_data   (io_dmi_resp_bits_data),
    .io_dmi_resp_bits_resp   (io_dmi_resp_bits_resp)
  );
  TLDebugModuleOuter dmOuter (
    .clock                          (io_dmi_clock),
    .reset                          (io_dmi_reset),
    .auto_dmi_in_a_ready            (_dmOuter_auto_dmi_in_a_ready),
    .auto_dmi_in_a_valid            (_dmiXbar_auto_out_1_a_valid),
    .auto_dmi_in_a_bits_opcode      (_dmiXbar_auto_out_1_a_bits_opcode),
    .auto_dmi_in_a_bits_address     (_dmiXbar_auto_out_1_a_bits_address),
    .auto_dmi_in_a_bits_data        (_dmiXbar_auto_out_1_a_bits_data),
    .auto_dmi_in_d_ready            (_dmiXbar_auto_out_1_d_ready),
    .auto_dmi_in_d_valid            (_dmOuter_auto_dmi_in_d_valid),
    .auto_dmi_in_d_bits_data        (_dmOuter_auto_dmi_in_d_bits_data),
    .auto_int_out_0                 (auto_dmOuter_int_out_0),
    .io_ctrl_ndreset                (io_ctrl_ndreset),
    .io_ctrl_dmactive               (_dmOuter_io_ctrl_dmactive),
    .io_ctrl_dmactiveAck            (_dmactiveAck_dmactiveAckSync_io_q),
    .io_innerCtrl_ready             (_io_innerCtrl_source_io_enq_ready),
    .io_innerCtrl_valid             (_dmOuter_io_innerCtrl_valid),
    .io_innerCtrl_bits_resumereq    (_dmOuter_io_innerCtrl_bits_resumereq),
    .io_innerCtrl_bits_hartsel      (_dmOuter_io_innerCtrl_bits_hartsel),
    .io_innerCtrl_bits_ackhavereset (_dmOuter_io_innerCtrl_bits_ackhavereset),
    .io_innerCtrl_bits_hrmask_0     (_dmOuter_io_innerCtrl_bits_hrmask_0),
    .io_hgDebugInt_0                (io_hgDebugInt_0),
    .io_hartResetReq_0              (io_hartResetReq_0)
  );
  TLBusBypass dmiBypass (
    .clock                            (io_dmi_clock),
    .reset                            (io_dmi_reset),
    .auto_node_out_out_a_ready        (_asource_auto_in_a_ready),
    .auto_node_out_out_a_valid        (_dmiBypass_auto_node_out_out_a_valid),
    .auto_node_out_out_a_bits_opcode  (_dmiBypass_auto_node_out_out_a_bits_opcode),
    .auto_node_out_out_a_bits_address (_dmiBypass_auto_node_out_out_a_bits_address),
    .auto_node_out_out_a_bits_data    (_dmiBypass_auto_node_out_out_a_bits_data),
    .auto_node_out_out_d_ready        (_dmiBypass_auto_node_out_out_d_ready),
    .auto_node_out_out_d_valid        (_asource_auto_in_d_valid),
    .auto_node_out_out_d_bits_opcode  (_asource_auto_in_d_bits_opcode),
    .auto_node_out_out_d_bits_denied  (_asource_auto_in_d_bits_denied),
    .auto_node_out_out_d_bits_data    (_asource_auto_in_d_bits_data),
    .auto_node_out_out_d_bits_corrupt (_asource_auto_in_d_bits_corrupt),
    .auto_node_in_in_a_ready          (_dmiBypass_auto_node_in_in_a_ready),
    .auto_node_in_in_a_valid          (_dmiXbar_auto_out_0_a_valid),
    .auto_node_in_in_a_bits_opcode    (_dmiXbar_auto_out_0_a_bits_opcode),
    .auto_node_in_in_a_bits_address   (_dmiXbar_auto_out_0_a_bits_address),
    .auto_node_in_in_a_bits_data      (_dmiXbar_auto_out_0_a_bits_data),
    .auto_node_in_in_d_ready          (_dmiXbar_auto_out_0_d_ready),
    .auto_node_in_in_d_valid          (_dmiBypass_auto_node_in_in_d_valid),
    .auto_node_in_in_d_bits_denied    (_dmiBypass_auto_node_in_in_d_bits_denied),
    .auto_node_in_in_d_bits_data      (_dmiBypass_auto_node_in_in_d_bits_data),
    .auto_node_in_in_d_bits_corrupt   (_dmiBypass_auto_node_in_in_d_bits_corrupt),
    .io_bypass
      (~_dmOuter_io_ctrl_dmactive | ~_dmactiveAck_dmactiveAckSync_io_q)
  );
  TLAsyncCrossingSource asource (
    .clock                    (io_dmi_clock),
    .reset                    (io_dmi_reset),
    .auto_in_a_ready          (_asource_auto_in_a_ready),
    .auto_in_a_valid          (_dmiBypass_auto_node_out_out_a_valid),
    .auto_in_a_bits_opcode    (_dmiBypass_auto_node_out_out_a_bits_opcode),
    .auto_in_a_bits_address   (_dmiBypass_auto_node_out_out_a_bits_address),
    .auto_in_a_bits_data      (_dmiBypass_auto_node_out_out_a_bits_data),
    .auto_in_d_ready          (_dmiBypass_auto_node_out_out_d_ready),
    .auto_in_d_valid          (_asource_auto_in_d_valid),
    .auto_in_d_bits_opcode    (_asource_auto_in_d_bits_opcode),
    .auto_in_d_bits_denied    (_asource_auto_in_d_bits_denied),
    .auto_in_d_bits_data      (_asource_auto_in_d_bits_data),
    .auto_in_d_bits_corrupt   (_asource_auto_in_d_bits_corrupt),
    .auto_out_a_mem_0_opcode  (auto_asource_out_a_mem_0_opcode),
    .auto_out_a_mem_0_address (auto_asource_out_a_mem_0_address),
    .auto_out_a_mem_0_data    (auto_asource_out_a_mem_0_data),
    .auto_out_a_ridx          (auto_asource_out_a_ridx),
    .auto_out_a_widx          (auto_asource_out_a_widx),
    .auto_out_d_mem_0_opcode  (auto_asource_out_d_mem_0_opcode),
    .auto_out_d_mem_0_size    (auto_asource_out_d_mem_0_size),
    .auto_out_d_mem_0_source  (auto_asource_out_d_mem_0_source),
    .auto_out_d_mem_0_data    (auto_asource_out_d_mem_0_data),
    .auto_out_d_ridx          (auto_asource_out_d_ridx),
    .auto_out_d_widx          (auto_asource_out_d_widx)
  );
  AsyncResetSynchronizerShiftReg_w1_d3_i0 dmactiveAck_dmactiveAckSync (
    .clock (io_dmi_clock),
    .reset (io_dmi_reset),
    .io_d  (io_ctrl_dmactiveAck),
    .io_q  (_dmactiveAck_dmactiveAckSync_io_q)
  );
  AsyncQueueSource_1 io_innerCtrl_source (
    .clock                       (io_dmi_clock),
    .reset                       (io_dmi_reset),
    .io_enq_ready                (_io_innerCtrl_source_io_enq_ready),
    .io_enq_valid                (_dmOuter_io_innerCtrl_valid),
    .io_enq_bits_resumereq       (_dmOuter_io_innerCtrl_bits_resumereq),
    .io_enq_bits_hartsel         (_dmOuter_io_innerCtrl_bits_hartsel),
    .io_enq_bits_ackhavereset    (_dmOuter_io_innerCtrl_bits_ackhavereset),
    .io_enq_bits_hrmask_0        (_dmOuter_io_innerCtrl_bits_hrmask_0),
    .io_async_mem_0_resumereq    (io_innerCtrl_mem_0_resumereq),
    .io_async_mem_0_hartsel      (io_innerCtrl_mem_0_hartsel),
    .io_async_mem_0_ackhavereset (io_innerCtrl_mem_0_ackhavereset),
    .io_async_mem_0_hrmask_0     (io_innerCtrl_mem_0_hrmask_0),
    .io_async_ridx               (io_innerCtrl_ridx),
    .io_async_widx               (io_innerCtrl_widx)
  );
  assign io_ctrl_dmactive = _dmOuter_io_ctrl_dmactive;
endmodule

