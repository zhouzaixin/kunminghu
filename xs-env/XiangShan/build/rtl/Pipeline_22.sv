// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module Pipeline_22(
  input         clock,
  input         reset,
  output        io_in_ready,
  input         io_in_valid,
  input  [7:0]  io_in_bits_cmd,
  input  [63:0] io_in_bits_data_0,
  input  [63:0] io_in_bits_data_1,
  input  [63:0] io_in_bits_data_2,
  input  [63:0] io_in_bits_data_3,
  input  [63:0] io_in_bits_data_4,
  input  [63:0] io_in_bits_data_5,
  input  [63:0] io_in_bits_data_6,
  input  [63:0] io_in_bits_data_7,
  input  [63:0] io_in_bits_set,
  input  [63:0] io_in_bits_tag,
  input  [63:0] io_in_bits_way,
  input  [63:0] io_in_bits_dir,
  input         io_out_ready,
  output        io_out_valid,
  output [7:0]  io_out_bits_cmd,
  output [63:0] io_out_bits_data_0,
  output [63:0] io_out_bits_data_1,
  output [63:0] io_out_bits_data_2,
  output [63:0] io_out_bits_data_3,
  output [63:0] io_out_bits_data_4,
  output [63:0] io_out_bits_data_5,
  output [63:0] io_out_bits_data_6,
  output [63:0] io_out_bits_data_7,
  output [63:0] io_out_bits_set,
  output [63:0] io_out_bits_tag,
  output [63:0] io_out_bits_way,
  output [63:0] io_out_bits_dir
);

  wire        _stages_1_io_enq_ready;
  wire        _stages_0_io_deq_valid;
  wire [7:0]  _stages_0_io_deq_bits_cmd;
  wire [63:0] _stages_0_io_deq_bits_data_0;
  wire [63:0] _stages_0_io_deq_bits_data_1;
  wire [63:0] _stages_0_io_deq_bits_data_2;
  wire [63:0] _stages_0_io_deq_bits_data_3;
  wire [63:0] _stages_0_io_deq_bits_data_4;
  wire [63:0] _stages_0_io_deq_bits_data_5;
  wire [63:0] _stages_0_io_deq_bits_data_6;
  wire [63:0] _stages_0_io_deq_bits_data_7;
  wire [63:0] _stages_0_io_deq_bits_set;
  wire [63:0] _stages_0_io_deq_bits_tag;
  wire [63:0] _stages_0_io_deq_bits_way;
  wire [63:0] _stages_0_io_deq_bits_dir;
  Queue1_CtrlReq stages_0 (
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (io_in_ready),
    .io_enq_valid       (io_in_valid),
    .io_enq_bits_cmd    (io_in_bits_cmd),
    .io_enq_bits_data_0 (io_in_bits_data_0),
    .io_enq_bits_data_1 (io_in_bits_data_1),
    .io_enq_bits_data_2 (io_in_bits_data_2),
    .io_enq_bits_data_3 (io_in_bits_data_3),
    .io_enq_bits_data_4 (io_in_bits_data_4),
    .io_enq_bits_data_5 (io_in_bits_data_5),
    .io_enq_bits_data_6 (io_in_bits_data_6),
    .io_enq_bits_data_7 (io_in_bits_data_7),
    .io_enq_bits_set    (io_in_bits_set),
    .io_enq_bits_tag    (io_in_bits_tag),
    .io_enq_bits_way    (io_in_bits_way),
    .io_enq_bits_dir    (io_in_bits_dir),
    .io_deq_ready       (_stages_1_io_enq_ready),
    .io_deq_valid       (_stages_0_io_deq_valid),
    .io_deq_bits_cmd    (_stages_0_io_deq_bits_cmd),
    .io_deq_bits_data_0 (_stages_0_io_deq_bits_data_0),
    .io_deq_bits_data_1 (_stages_0_io_deq_bits_data_1),
    .io_deq_bits_data_2 (_stages_0_io_deq_bits_data_2),
    .io_deq_bits_data_3 (_stages_0_io_deq_bits_data_3),
    .io_deq_bits_data_4 (_stages_0_io_deq_bits_data_4),
    .io_deq_bits_data_5 (_stages_0_io_deq_bits_data_5),
    .io_deq_bits_data_6 (_stages_0_io_deq_bits_data_6),
    .io_deq_bits_data_7 (_stages_0_io_deq_bits_data_7),
    .io_deq_bits_set    (_stages_0_io_deq_bits_set),
    .io_deq_bits_tag    (_stages_0_io_deq_bits_tag),
    .io_deq_bits_way    (_stages_0_io_deq_bits_way),
    .io_deq_bits_dir    (_stages_0_io_deq_bits_dir)
  );
  Queue1_CtrlReq stages_1 (
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (_stages_1_io_enq_ready),
    .io_enq_valid       (_stages_0_io_deq_valid),
    .io_enq_bits_cmd    (_stages_0_io_deq_bits_cmd),
    .io_enq_bits_data_0 (_stages_0_io_deq_bits_data_0),
    .io_enq_bits_data_1 (_stages_0_io_deq_bits_data_1),
    .io_enq_bits_data_2 (_stages_0_io_deq_bits_data_2),
    .io_enq_bits_data_3 (_stages_0_io_deq_bits_data_3),
    .io_enq_bits_data_4 (_stages_0_io_deq_bits_data_4),
    .io_enq_bits_data_5 (_stages_0_io_deq_bits_data_5),
    .io_enq_bits_data_6 (_stages_0_io_deq_bits_data_6),
    .io_enq_bits_data_7 (_stages_0_io_deq_bits_data_7),
    .io_enq_bits_set    (_stages_0_io_deq_bits_set),
    .io_enq_bits_tag    (_stages_0_io_deq_bits_tag),
    .io_enq_bits_way    (_stages_0_io_deq_bits_way),
    .io_enq_bits_dir    (_stages_0_io_deq_bits_dir),
    .io_deq_ready       (io_out_ready),
    .io_deq_valid       (io_out_valid),
    .io_deq_bits_cmd    (io_out_bits_cmd),
    .io_deq_bits_data_0 (io_out_bits_data_0),
    .io_deq_bits_data_1 (io_out_bits_data_1),
    .io_deq_bits_data_2 (io_out_bits_data_2),
    .io_deq_bits_data_3 (io_out_bits_data_3),
    .io_deq_bits_data_4 (io_out_bits_data_4),
    .io_deq_bits_data_5 (io_out_bits_data_5),
    .io_deq_bits_data_6 (io_out_bits_data_6),
    .io_deq_bits_data_7 (io_out_bits_data_7),
    .io_deq_bits_set    (io_out_bits_set),
    .io_deq_bits_tag    (io_out_bits_tag),
    .io_deq_bits_way    (io_out_bits_way),
    .io_deq_bits_dir    (io_out_bits_dir)
  );
endmodule

