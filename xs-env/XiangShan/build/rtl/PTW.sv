// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module PTW(
  input         clock,
  input         reset,
  input         io_sfence_valid,
  input  [3:0]  io_csr_satp_mode,
  input  [15:0] io_csr_satp_asid,
  input  [43:0] io_csr_satp_ppn,
  input         io_csr_satp_changed,
  input  [3:0]  io_csr_vsatp_mode,
  input  [15:0] io_csr_vsatp_asid,
  input  [43:0] io_csr_vsatp_ppn,
  input         io_csr_vsatp_changed,
  input  [3:0]  io_csr_hgatp_mode,
  input  [15:0] io_csr_hgatp_vmid,
  input         io_csr_hgatp_changed,
  input         io_csr_priv_mxr,
  input         io_csr_mPBMTE,
  input         io_csr_hPBMTE,
  output        io_req_ready,
  input         io_req_valid,
  input  [37:0] io_req_bits_req_info_vpn,
  input  [1:0]  io_req_bits_req_info_s2xlate,
  input  [1:0]  io_req_bits_req_info_source,
  input         io_req_bits_l3Hit,
  input         io_req_bits_l2Hit,
  input  [43:0] io_req_bits_ppn,
  input         io_req_bits_stage1Hit,
  input  [34:0] io_req_bits_stage1_entry_0_tag,
  input  [15:0] io_req_bits_stage1_entry_0_asid,
  input  [13:0] io_req_bits_stage1_entry_0_vmid,
  input         io_req_bits_stage1_entry_0_n,
  input  [1:0]  io_req_bits_stage1_entry_0_pbmt,
  input         io_req_bits_stage1_entry_0_perm_d,
  input         io_req_bits_stage1_entry_0_perm_a,
  input         io_req_bits_stage1_entry_0_perm_g,
  input         io_req_bits_stage1_entry_0_perm_u,
  input         io_req_bits_stage1_entry_0_perm_x,
  input         io_req_bits_stage1_entry_0_perm_w,
  input         io_req_bits_stage1_entry_0_perm_r,
  input  [1:0]  io_req_bits_stage1_entry_0_level,
  input         io_req_bits_stage1_entry_0_v,
  input  [40:0] io_req_bits_stage1_entry_0_ppn,
  input  [2:0]  io_req_bits_stage1_entry_0_ppn_low,
  input         io_req_bits_stage1_entry_0_pf,
  input  [34:0] io_req_bits_stage1_entry_1_tag,
  input  [15:0] io_req_bits_stage1_entry_1_asid,
  input  [13:0] io_req_bits_stage1_entry_1_vmid,
  input         io_req_bits_stage1_entry_1_n,
  input  [1:0]  io_req_bits_stage1_entry_1_pbmt,
  input         io_req_bits_stage1_entry_1_perm_d,
  input         io_req_bits_stage1_entry_1_perm_a,
  input         io_req_bits_stage1_entry_1_perm_g,
  input         io_req_bits_stage1_entry_1_perm_u,
  input         io_req_bits_stage1_entry_1_perm_x,
  input         io_req_bits_stage1_entry_1_perm_w,
  input         io_req_bits_stage1_entry_1_perm_r,
  input  [1:0]  io_req_bits_stage1_entry_1_level,
  input         io_req_bits_stage1_entry_1_v,
  input  [40:0] io_req_bits_stage1_entry_1_ppn,
  input  [2:0]  io_req_bits_stage1_entry_1_ppn_low,
  input         io_req_bits_stage1_entry_1_pf,
  input  [34:0] io_req_bits_stage1_entry_2_tag,
  input  [15:0] io_req_bits_stage1_entry_2_asid,
  input  [13:0] io_req_bits_stage1_entry_2_vmid,
  input         io_req_bits_stage1_entry_2_n,
  input  [1:0]  io_req_bits_stage1_entry_2_pbmt,
  input         io_req_bits_stage1_entry_2_perm_d,
  input         io_req_bits_stage1_entry_2_perm_a,
  input         io_req_bits_stage1_entry_2_perm_g,
  input         io_req_bits_stage1_entry_2_perm_u,
  input         io_req_bits_stage1_entry_2_perm_x,
  input         io_req_bits_stage1_entry_2_perm_w,
  input         io_req_bits_stage1_entry_2_perm_r,
  input  [1:0]  io_req_bits_stage1_entry_2_level,
  input         io_req_bits_stage1_entry_2_v,
  input  [40:0] io_req_bits_stage1_entry_2_ppn,
  input  [2:0]  io_req_bits_stage1_entry_2_ppn_low,
  input         io_req_bits_stage1_entry_2_pf,
  input  [34:0] io_req_bits_stage1_entry_3_tag,
  input  [15:0] io_req_bits_stage1_entry_3_asid,
  input  [13:0] io_req_bits_stage1_entry_3_vmid,
  input         io_req_bits_stage1_entry_3_n,
  input  [1:0]  io_req_bits_stage1_entry_3_pbmt,
  input         io_req_bits_stage1_entry_3_perm_d,
  input         io_req_bits_stage1_entry_3_perm_a,
  input         io_req_bits_stage1_entry_3_perm_g,
  input         io_req_bits_stage1_entry_3_perm_u,
  input         io_req_bits_stage1_entry_3_perm_x,
  input         io_req_bits_stage1_entry_3_perm_w,
  input         io_req_bits_stage1_entry_3_perm_r,
  input  [1:0]  io_req_bits_stage1_entry_3_level,
  input         io_req_bits_stage1_entry_3_v,
  input  [40:0] io_req_bits_stage1_entry_3_ppn,
  input  [2:0]  io_req_bits_stage1_entry_3_ppn_low,
  input         io_req_bits_stage1_entry_3_pf,
  input  [34:0] io_req_bits_stage1_entry_4_tag,
  input  [15:0] io_req_bits_stage1_entry_4_asid,
  input  [13:0] io_req_bits_stage1_entry_4_vmid,
  input         io_req_bits_stage1_entry_4_n,
  input  [1:0]  io_req_bits_stage1_entry_4_pbmt,
  input         io_req_bits_stage1_entry_4_perm_d,
  input         io_req_bits_stage1_entry_4_perm_a,
  input         io_req_bits_stage1_entry_4_perm_g,
  input         io_req_bits_stage1_entry_4_perm_u,
  input         io_req_bits_stage1_entry_4_perm_x,
  input         io_req_bits_stage1_entry_4_perm_w,
  input         io_req_bits_stage1_entry_4_perm_r,
  input  [1:0]  io_req_bits_stage1_entry_4_level,
  input         io_req_bits_stage1_entry_4_v,
  input  [40:0] io_req_bits_stage1_entry_4_ppn,
  input  [2:0]  io_req_bits_stage1_entry_4_ppn_low,
  input         io_req_bits_stage1_entry_4_pf,
  input  [34:0] io_req_bits_stage1_entry_5_tag,
  input  [15:0] io_req_bits_stage1_entry_5_asid,
  input  [13:0] io_req_bits_stage1_entry_5_vmid,
  input         io_req_bits_stage1_entry_5_n,
  input  [1:0]  io_req_bits_stage1_entry_5_pbmt,
  input         io_req_bits_stage1_entry_5_perm_d,
  input         io_req_bits_stage1_entry_5_perm_a,
  input         io_req_bits_stage1_entry_5_perm_g,
  input         io_req_bits_stage1_entry_5_perm_u,
  input         io_req_bits_stage1_entry_5_perm_x,
  input         io_req_bits_stage1_entry_5_perm_w,
  input         io_req_bits_stage1_entry_5_perm_r,
  input  [1:0]  io_req_bits_stage1_entry_5_level,
  input         io_req_bits_stage1_entry_5_v,
  input  [40:0] io_req_bits_stage1_entry_5_ppn,
  input  [2:0]  io_req_bits_stage1_entry_5_ppn_low,
  input         io_req_bits_stage1_entry_5_pf,
  input  [34:0] io_req_bits_stage1_entry_6_tag,
  input  [15:0] io_req_bits_stage1_entry_6_asid,
  input  [13:0] io_req_bits_stage1_entry_6_vmid,
  input         io_req_bits_stage1_entry_6_n,
  input  [1:0]  io_req_bits_stage1_entry_6_pbmt,
  input         io_req_bits_stage1_entry_6_perm_d,
  input         io_req_bits_stage1_entry_6_perm_a,
  input         io_req_bits_stage1_entry_6_perm_g,
  input         io_req_bits_stage1_entry_6_perm_u,
  input         io_req_bits_stage1_entry_6_perm_x,
  input         io_req_bits_stage1_entry_6_perm_w,
  input         io_req_bits_stage1_entry_6_perm_r,
  input  [1:0]  io_req_bits_stage1_entry_6_level,
  input         io_req_bits_stage1_entry_6_v,
  input  [40:0] io_req_bits_stage1_entry_6_ppn,
  input  [2:0]  io_req_bits_stage1_entry_6_ppn_low,
  input         io_req_bits_stage1_entry_6_pf,
  input  [34:0] io_req_bits_stage1_entry_7_tag,
  input  [15:0] io_req_bits_stage1_entry_7_asid,
  input  [13:0] io_req_bits_stage1_entry_7_vmid,
  input         io_req_bits_stage1_entry_7_n,
  input  [1:0]  io_req_bits_stage1_entry_7_pbmt,
  input         io_req_bits_stage1_entry_7_perm_d,
  input         io_req_bits_stage1_entry_7_perm_a,
  input         io_req_bits_stage1_entry_7_perm_g,
  input         io_req_bits_stage1_entry_7_perm_u,
  input         io_req_bits_stage1_entry_7_perm_x,
  input         io_req_bits_stage1_entry_7_perm_w,
  input         io_req_bits_stage1_entry_7_perm_r,
  input  [1:0]  io_req_bits_stage1_entry_7_level,
  input         io_req_bits_stage1_entry_7_v,
  input  [40:0] io_req_bits_stage1_entry_7_ppn,
  input  [2:0]  io_req_bits_stage1_entry_7_ppn_low,
  input         io_req_bits_stage1_entry_7_pf,
  input         io_req_bits_stage1_pteidx_0,
  input         io_req_bits_stage1_pteidx_1,
  input         io_req_bits_stage1_pteidx_2,
  input         io_req_bits_stage1_pteidx_3,
  input         io_req_bits_stage1_pteidx_4,
  input         io_req_bits_stage1_pteidx_5,
  input         io_req_bits_stage1_pteidx_6,
  input         io_req_bits_stage1_pteidx_7,
  input         io_req_bits_stage1_not_super,
  input         io_resp_ready,
  output        io_resp_valid,
  output [1:0]  io_resp_bits_source,
  output [1:0]  io_resp_bits_s2xlate,
  output [34:0] io_resp_bits_resp_entry_0_tag,
  output [15:0] io_resp_bits_resp_entry_0_asid,
  output [13:0] io_resp_bits_resp_entry_0_vmid,
  output        io_resp_bits_resp_entry_0_n,
  output [1:0]  io_resp_bits_resp_entry_0_pbmt,
  output        io_resp_bits_resp_entry_0_perm_d,
  output        io_resp_bits_resp_entry_0_perm_a,
  output        io_resp_bits_resp_entry_0_perm_g,
  output        io_resp_bits_resp_entry_0_perm_u,
  output        io_resp_bits_resp_entry_0_perm_x,
  output        io_resp_bits_resp_entry_0_perm_w,
  output        io_resp_bits_resp_entry_0_perm_r,
  output [1:0]  io_resp_bits_resp_entry_0_level,
  output        io_resp_bits_resp_entry_0_v,
  output [40:0] io_resp_bits_resp_entry_0_ppn,
  output [2:0]  io_resp_bits_resp_entry_0_ppn_low,
  output        io_resp_bits_resp_entry_0_af,
  output        io_resp_bits_resp_entry_0_pf,
  output [34:0] io_resp_bits_resp_entry_1_tag,
  output [15:0] io_resp_bits_resp_entry_1_asid,
  output [13:0] io_resp_bits_resp_entry_1_vmid,
  output        io_resp_bits_resp_entry_1_n,
  output [1:0]  io_resp_bits_resp_entry_1_pbmt,
  output        io_resp_bits_resp_entry_1_perm_d,
  output        io_resp_bits_resp_entry_1_perm_a,
  output        io_resp_bits_resp_entry_1_perm_g,
  output        io_resp_bits_resp_entry_1_perm_u,
  output        io_resp_bits_resp_entry_1_perm_x,
  output        io_resp_bits_resp_entry_1_perm_w,
  output        io_resp_bits_resp_entry_1_perm_r,
  output [1:0]  io_resp_bits_resp_entry_1_level,
  output        io_resp_bits_resp_entry_1_v,
  output [40:0] io_resp_bits_resp_entry_1_ppn,
  output [2:0]  io_resp_bits_resp_entry_1_ppn_low,
  output        io_resp_bits_resp_entry_1_af,
  output        io_resp_bits_resp_entry_1_pf,
  output [34:0] io_resp_bits_resp_entry_2_tag,
  output [15:0] io_resp_bits_resp_entry_2_asid,
  output [13:0] io_resp_bits_resp_entry_2_vmid,
  output        io_resp_bits_resp_entry_2_n,
  output [1:0]  io_resp_bits_resp_entry_2_pbmt,
  output        io_resp_bits_resp_entry_2_perm_d,
  output        io_resp_bits_resp_entry_2_perm_a,
  output        io_resp_bits_resp_entry_2_perm_g,
  output        io_resp_bits_resp_entry_2_perm_u,
  output        io_resp_bits_resp_entry_2_perm_x,
  output        io_resp_bits_resp_entry_2_perm_w,
  output        io_resp_bits_resp_entry_2_perm_r,
  output [1:0]  io_resp_bits_resp_entry_2_level,
  output        io_resp_bits_resp_entry_2_v,
  output [40:0] io_resp_bits_resp_entry_2_ppn,
  output [2:0]  io_resp_bits_resp_entry_2_ppn_low,
  output        io_resp_bits_resp_entry_2_af,
  output        io_resp_bits_resp_entry_2_pf,
  output [34:0] io_resp_bits_resp_entry_3_tag,
  output [15:0] io_resp_bits_resp_entry_3_asid,
  output [13:0] io_resp_bits_resp_entry_3_vmid,
  output        io_resp_bits_resp_entry_3_n,
  output [1:0]  io_resp_bits_resp_entry_3_pbmt,
  output        io_resp_bits_resp_entry_3_perm_d,
  output        io_resp_bits_resp_entry_3_perm_a,
  output        io_resp_bits_resp_entry_3_perm_g,
  output        io_resp_bits_resp_entry_3_perm_u,
  output        io_resp_bits_resp_entry_3_perm_x,
  output        io_resp_bits_resp_entry_3_perm_w,
  output        io_resp_bits_resp_entry_3_perm_r,
  output [1:0]  io_resp_bits_resp_entry_3_level,
  output        io_resp_bits_resp_entry_3_v,
  output [40:0] io_resp_bits_resp_entry_3_ppn,
  output [2:0]  io_resp_bits_resp_entry_3_ppn_low,
  output        io_resp_bits_resp_entry_3_af,
  output        io_resp_bits_resp_entry_3_pf,
  output [34:0] io_resp_bits_resp_entry_4_tag,
  output [15:0] io_resp_bits_resp_entry_4_asid,
  output [13:0] io_resp_bits_resp_entry_4_vmid,
  output        io_resp_bits_resp_entry_4_n,
  output [1:0]  io_resp_bits_resp_entry_4_pbmt,
  output        io_resp_bits_resp_entry_4_perm_d,
  output        io_resp_bits_resp_entry_4_perm_a,
  output        io_resp_bits_resp_entry_4_perm_g,
  output        io_resp_bits_resp_entry_4_perm_u,
  output        io_resp_bits_resp_entry_4_perm_x,
  output        io_resp_bits_resp_entry_4_perm_w,
  output        io_resp_bits_resp_entry_4_perm_r,
  output [1:0]  io_resp_bits_resp_entry_4_level,
  output        io_resp_bits_resp_entry_4_v,
  output [40:0] io_resp_bits_resp_entry_4_ppn,
  output [2:0]  io_resp_bits_resp_entry_4_ppn_low,
  output        io_resp_bits_resp_entry_4_af,
  output        io_resp_bits_resp_entry_4_pf,
  output [34:0] io_resp_bits_resp_entry_5_tag,
  output [15:0] io_resp_bits_resp_entry_5_asid,
  output [13:0] io_resp_bits_resp_entry_5_vmid,
  output        io_resp_bits_resp_entry_5_n,
  output [1:0]  io_resp_bits_resp_entry_5_pbmt,
  output        io_resp_bits_resp_entry_5_perm_d,
  output        io_resp_bits_resp_entry_5_perm_a,
  output        io_resp_bits_resp_entry_5_perm_g,
  output        io_resp_bits_resp_entry_5_perm_u,
  output        io_resp_bits_resp_entry_5_perm_x,
  output        io_resp_bits_resp_entry_5_perm_w,
  output        io_resp_bits_resp_entry_5_perm_r,
  output [1:0]  io_resp_bits_resp_entry_5_level,
  output        io_resp_bits_resp_entry_5_v,
  output [40:0] io_resp_bits_resp_entry_5_ppn,
  output [2:0]  io_resp_bits_resp_entry_5_ppn_low,
  output        io_resp_bits_resp_entry_5_af,
  output        io_resp_bits_resp_entry_5_pf,
  output [34:0] io_resp_bits_resp_entry_6_tag,
  output [15:0] io_resp_bits_resp_entry_6_asid,
  output [13:0] io_resp_bits_resp_entry_6_vmid,
  output        io_resp_bits_resp_entry_6_n,
  output [1:0]  io_resp_bits_resp_entry_6_pbmt,
  output        io_resp_bits_resp_entry_6_perm_d,
  output        io_resp_bits_resp_entry_6_perm_a,
  output        io_resp_bits_resp_entry_6_perm_g,
  output        io_resp_bits_resp_entry_6_perm_u,
  output        io_resp_bits_resp_entry_6_perm_x,
  output        io_resp_bits_resp_entry_6_perm_w,
  output        io_resp_bits_resp_entry_6_perm_r,
  output [1:0]  io_resp_bits_resp_entry_6_level,
  output        io_resp_bits_resp_entry_6_v,
  output [40:0] io_resp_bits_resp_entry_6_ppn,
  output [2:0]  io_resp_bits_resp_entry_6_ppn_low,
  output        io_resp_bits_resp_entry_6_af,
  output        io_resp_bits_resp_entry_6_pf,
  output [34:0] io_resp_bits_resp_entry_7_tag,
  output [15:0] io_resp_bits_resp_entry_7_asid,
  output [13:0] io_resp_bits_resp_entry_7_vmid,
  output        io_resp_bits_resp_entry_7_n,
  output [1:0]  io_resp_bits_resp_entry_7_pbmt,
  output        io_resp_bits_resp_entry_7_perm_d,
  output        io_resp_bits_resp_entry_7_perm_a,
  output        io_resp_bits_resp_entry_7_perm_g,
  output        io_resp_bits_resp_entry_7_perm_u,
  output        io_resp_bits_resp_entry_7_perm_x,
  output        io_resp_bits_resp_entry_7_perm_w,
  output        io_resp_bits_resp_entry_7_perm_r,
  output [1:0]  io_resp_bits_resp_entry_7_level,
  output        io_resp_bits_resp_entry_7_v,
  output [40:0] io_resp_bits_resp_entry_7_ppn,
  output [2:0]  io_resp_bits_resp_entry_7_ppn_low,
  output        io_resp_bits_resp_entry_7_af,
  output        io_resp_bits_resp_entry_7_pf,
  output        io_resp_bits_resp_pteidx_0,
  output        io_resp_bits_resp_pteidx_1,
  output        io_resp_bits_resp_pteidx_2,
  output        io_resp_bits_resp_pteidx_3,
  output        io_resp_bits_resp_pteidx_4,
  output        io_resp_bits_resp_pteidx_5,
  output        io_resp_bits_resp_pteidx_6,
  output        io_resp_bits_resp_pteidx_7,
  output        io_resp_bits_resp_not_super,
  output [37:0] io_resp_bits_h_resp_entry_tag,
  output [13:0] io_resp_bits_h_resp_entry_vmid,
  output        io_resp_bits_h_resp_entry_n,
  output [1:0]  io_resp_bits_h_resp_entry_pbmt,
  output [37:0] io_resp_bits_h_resp_entry_ppn,
  output        io_resp_bits_h_resp_entry_perm_d,
  output        io_resp_bits_h_resp_entry_perm_a,
  output        io_resp_bits_h_resp_entry_perm_g,
  output        io_resp_bits_h_resp_entry_perm_u,
  output        io_resp_bits_h_resp_entry_perm_x,
  output        io_resp_bits_h_resp_entry_perm_w,
  output        io_resp_bits_h_resp_entry_perm_r,
  output [1:0]  io_resp_bits_h_resp_entry_level,
  output        io_resp_bits_h_resp_gpf,
  output        io_resp_bits_h_resp_gaf,
  input         io_llptw_ready,
  output        io_llptw_valid,
  output [37:0] io_llptw_bits_req_info_vpn,
  output [1:0]  io_llptw_bits_req_info_s2xlate,
  output [1:0]  io_llptw_bits_req_info_source,
  input         io_hptw_req_ready,
  output        io_hptw_req_valid,
  output [1:0]  io_hptw_req_bits_source,
  output [43:0] io_hptw_req_bits_gvpn,
  input         io_hptw_resp_valid,
  input  [37:0] io_hptw_resp_bits_h_resp_entry_tag,
  input  [13:0] io_hptw_resp_bits_h_resp_entry_vmid,
  input         io_hptw_resp_bits_h_resp_entry_n,
  input  [1:0]  io_hptw_resp_bits_h_resp_entry_pbmt,
  input  [37:0] io_hptw_resp_bits_h_resp_entry_ppn,
  input         io_hptw_resp_bits_h_resp_entry_perm_d,
  input         io_hptw_resp_bits_h_resp_entry_perm_a,
  input         io_hptw_resp_bits_h_resp_entry_perm_g,
  input         io_hptw_resp_bits_h_resp_entry_perm_u,
  input         io_hptw_resp_bits_h_resp_entry_perm_x,
  input         io_hptw_resp_bits_h_resp_entry_perm_w,
  input         io_hptw_resp_bits_h_resp_entry_perm_r,
  input  [1:0]  io_hptw_resp_bits_h_resp_entry_level,
  input         io_hptw_resp_bits_h_resp_gpf,
  input         io_hptw_resp_bits_h_resp_gaf,
  input         io_mem_req_ready,
  output        io_mem_req_valid,
  output [47:0] io_mem_req_bits_addr,
  input         io_mem_resp_valid,
  input  [63:0] io_mem_resp_bits,
  input         io_mem_mask,
  output [47:0] io_pmp_req_bits_addr,
  input         io_pmp_resp_ld,
  input         io_pmp_resp_mmio,
  output [37:0] io_refill_req_info_vpn,
  output [1:0]  io_refill_req_info_s2xlate,
  output [1:0]  io_refill_req_info_source,
  output [1:0]  io_refill_level,
  output [5:0]  io_perf_0_value,
  output [5:0]  io_perf_1_value,
  output [5:0]  io_perf_2_value,
  output [5:0]  io_perf_3_value,
  output [5:0]  io_perf_4_value,
  output [5:0]  io_perf_5_value,
  output [5:0]  io_perf_6_value
);

  reg              idle;
  reg  [1:0]       req_s2xlate;
  wire             onlyS1xlate = req_s2xlate == 2'h1;
  wire             onlyS2xlate = req_s2xlate == 2'h2;
  wire             perfEvents_0_2 = idle & io_req_valid;
  wire             _GEN =
    perfEvents_0_2 ? (|io_req_bits_req_info_s2xlate) : (|req_s2xlate);
  wire [3:0]       satp_mode = _GEN ? io_csr_vsatp_mode : io_csr_satp_mode;
  wire [15:0]      satp_asid = _GEN ? io_csr_vsatp_asid : io_csr_satp_asid;
  wire [43:0]      satp_ppn = _GEN ? io_csr_vsatp_ppn : io_csr_satp_ppn;
  wire             s2xlate = (|req_s2xlate) & ~onlyS1xlate;
  reg  [1:0]       level;
  reg  [1:0]       af_level;
  reg  [1:0]       gpf_level;
  reg  [43:0]      ppn;
  reg  [37:0]      vpn;
  reg              l3Hit;
  reg              l2Hit;
  reg              s_pmp_check;
  reg              s_mem_req;
  reg              s_llptw_req;
  reg              w_mem_resp;
  reg              s_hptw_req;
  reg              w_hptw_resp;
  reg              s_last_hptw_req;
  reg              w_last_hptw_resp;
  reg              mem_addr_update;
  wire             _pageFault_pf_T_6 = io_mem_resp_bits[1] | io_mem_resp_bits[3];
  wire             pageFault =
    (|(io_mem_resp_bits[60:54])) | (&(io_mem_resp_bits[62:61]))
    | ~((|req_s2xlate) ? io_csr_hPBMTE : io_csr_mPBMTE) & (|(io_mem_resp_bits[62:61]))
    | (~(_pageFault_pf_T_6 | io_mem_resp_bits[2]) & io_mem_resp_bits[0]
         ? io_mem_resp_bits[4] | io_mem_resp_bits[6] | io_mem_resp_bits[7]
           | io_mem_resp_bits[63] | (|(io_mem_resp_bits[62:61]))
         : ~(io_mem_resp_bits[0]) | ~(io_mem_resp_bits[1]) & io_mem_resp_bits[2]
           | io_mem_resp_bits[63] & (io_mem_resp_bits[13:10] != 4'h8 | (|level))
           | (_pageFault_pf_T_6 | io_mem_resp_bits[2]) & io_mem_resp_bits[0]
           & ~(level == 2'h0 | level == 2'h1 & io_mem_resp_bits[18:10] == 9'h0
               | level == 2'h2 & io_mem_resp_bits[27:10] == 18'h0 | (&level)
               & io_mem_resp_bits[36:10] == 27'h0));
  reg              accessFault;
  reg              hptw_pageFault;
  reg              hptw_accessFault;
  reg              need_last_s2xlate;
  reg              stage1Hit;
  reg  [34:0]      stage1_entry_0_tag;
  reg  [15:0]      stage1_entry_0_asid;
  reg  [13:0]      stage1_entry_0_vmid;
  reg              stage1_entry_0_n;
  reg  [1:0]       stage1_entry_0_pbmt;
  reg              stage1_entry_0_perm_d;
  reg              stage1_entry_0_perm_a;
  reg              stage1_entry_0_perm_g;
  reg              stage1_entry_0_perm_u;
  reg              stage1_entry_0_perm_x;
  reg              stage1_entry_0_perm_w;
  reg              stage1_entry_0_perm_r;
  reg  [1:0]       stage1_entry_0_level;
  reg              stage1_entry_0_v;
  reg  [40:0]      stage1_entry_0_ppn;
  reg  [2:0]       stage1_entry_0_ppn_low;
  reg              stage1_entry_0_pf;
  reg  [34:0]      stage1_entry_1_tag;
  reg  [15:0]      stage1_entry_1_asid;
  reg  [13:0]      stage1_entry_1_vmid;
  reg              stage1_entry_1_n;
  reg  [1:0]       stage1_entry_1_pbmt;
  reg              stage1_entry_1_perm_d;
  reg              stage1_entry_1_perm_a;
  reg              stage1_entry_1_perm_g;
  reg              stage1_entry_1_perm_u;
  reg              stage1_entry_1_perm_x;
  reg              stage1_entry_1_perm_w;
  reg              stage1_entry_1_perm_r;
  reg  [1:0]       stage1_entry_1_level;
  reg              stage1_entry_1_v;
  reg  [40:0]      stage1_entry_1_ppn;
  reg  [2:0]       stage1_entry_1_ppn_low;
  reg              stage1_entry_1_pf;
  reg  [34:0]      stage1_entry_2_tag;
  reg  [15:0]      stage1_entry_2_asid;
  reg  [13:0]      stage1_entry_2_vmid;
  reg              stage1_entry_2_n;
  reg  [1:0]       stage1_entry_2_pbmt;
  reg              stage1_entry_2_perm_d;
  reg              stage1_entry_2_perm_a;
  reg              stage1_entry_2_perm_g;
  reg              stage1_entry_2_perm_u;
  reg              stage1_entry_2_perm_x;
  reg              stage1_entry_2_perm_w;
  reg              stage1_entry_2_perm_r;
  reg  [1:0]       stage1_entry_2_level;
  reg              stage1_entry_2_v;
  reg  [40:0]      stage1_entry_2_ppn;
  reg  [2:0]       stage1_entry_2_ppn_low;
  reg              stage1_entry_2_pf;
  reg  [34:0]      stage1_entry_3_tag;
  reg  [15:0]      stage1_entry_3_asid;
  reg  [13:0]      stage1_entry_3_vmid;
  reg              stage1_entry_3_n;
  reg  [1:0]       stage1_entry_3_pbmt;
  reg              stage1_entry_3_perm_d;
  reg              stage1_entry_3_perm_a;
  reg              stage1_entry_3_perm_g;
  reg              stage1_entry_3_perm_u;
  reg              stage1_entry_3_perm_x;
  reg              stage1_entry_3_perm_w;
  reg              stage1_entry_3_perm_r;
  reg  [1:0]       stage1_entry_3_level;
  reg              stage1_entry_3_v;
  reg  [40:0]      stage1_entry_3_ppn;
  reg  [2:0]       stage1_entry_3_ppn_low;
  reg              stage1_entry_3_pf;
  reg  [34:0]      stage1_entry_4_tag;
  reg  [15:0]      stage1_entry_4_asid;
  reg  [13:0]      stage1_entry_4_vmid;
  reg              stage1_entry_4_n;
  reg  [1:0]       stage1_entry_4_pbmt;
  reg              stage1_entry_4_perm_d;
  reg              stage1_entry_4_perm_a;
  reg              stage1_entry_4_perm_g;
  reg              stage1_entry_4_perm_u;
  reg              stage1_entry_4_perm_x;
  reg              stage1_entry_4_perm_w;
  reg              stage1_entry_4_perm_r;
  reg  [1:0]       stage1_entry_4_level;
  reg              stage1_entry_4_v;
  reg  [40:0]      stage1_entry_4_ppn;
  reg  [2:0]       stage1_entry_4_ppn_low;
  reg              stage1_entry_4_pf;
  reg  [34:0]      stage1_entry_5_tag;
  reg  [15:0]      stage1_entry_5_asid;
  reg  [13:0]      stage1_entry_5_vmid;
  reg              stage1_entry_5_n;
  reg  [1:0]       stage1_entry_5_pbmt;
  reg              stage1_entry_5_perm_d;
  reg              stage1_entry_5_perm_a;
  reg              stage1_entry_5_perm_g;
  reg              stage1_entry_5_perm_u;
  reg              stage1_entry_5_perm_x;
  reg              stage1_entry_5_perm_w;
  reg              stage1_entry_5_perm_r;
  reg  [1:0]       stage1_entry_5_level;
  reg              stage1_entry_5_v;
  reg  [40:0]      stage1_entry_5_ppn;
  reg  [2:0]       stage1_entry_5_ppn_low;
  reg              stage1_entry_5_pf;
  reg  [34:0]      stage1_entry_6_tag;
  reg  [15:0]      stage1_entry_6_asid;
  reg  [13:0]      stage1_entry_6_vmid;
  reg              stage1_entry_6_n;
  reg  [1:0]       stage1_entry_6_pbmt;
  reg              stage1_entry_6_perm_d;
  reg              stage1_entry_6_perm_a;
  reg              stage1_entry_6_perm_g;
  reg              stage1_entry_6_perm_u;
  reg              stage1_entry_6_perm_x;
  reg              stage1_entry_6_perm_w;
  reg              stage1_entry_6_perm_r;
  reg  [1:0]       stage1_entry_6_level;
  reg              stage1_entry_6_v;
  reg  [40:0]      stage1_entry_6_ppn;
  reg  [2:0]       stage1_entry_6_ppn_low;
  reg              stage1_entry_6_pf;
  reg  [34:0]      stage1_entry_7_tag;
  reg  [15:0]      stage1_entry_7_asid;
  reg  [13:0]      stage1_entry_7_vmid;
  reg              stage1_entry_7_n;
  reg  [1:0]       stage1_entry_7_pbmt;
  reg              stage1_entry_7_perm_d;
  reg              stage1_entry_7_perm_a;
  reg              stage1_entry_7_perm_g;
  reg              stage1_entry_7_perm_u;
  reg              stage1_entry_7_perm_x;
  reg              stage1_entry_7_perm_w;
  reg              stage1_entry_7_perm_r;
  reg  [1:0]       stage1_entry_7_level;
  reg              stage1_entry_7_v;
  reg  [40:0]      stage1_entry_7_ppn;
  reg  [2:0]       stage1_entry_7_ppn_low;
  reg              stage1_entry_7_pf;
  reg              stage1_pteidx_0;
  reg              stage1_pteidx_1;
  reg              stage1_pteidx_2;
  reg              stage1_pteidx_3;
  reg              stage1_pteidx_4;
  reg              stage1_pteidx_5;
  reg              stage1_pteidx_6;
  reg              stage1_pteidx_7;
  reg              stage1_not_super;
  reg              hptw_resp_stage2;
  wire             ppn_af =
    (|req_s2xlate)
      ? onlyS1xlate & (|(io_mem_resp_bits[53:46])) & io_mem_resp_bits[0]
      : (|(io_mem_resp_bits[53:46])) & io_mem_resp_bits[0];
  wire             find_pte =
    (io_mem_resp_bits[1] | io_mem_resp_bits[3] | io_mem_resp_bits[2])
    & io_mem_resp_bits[0] | ppn_af | pageFault;
  reg  [1:0]       source;
  wire             _GEN_0 = satp_mode == 4'h9;
  wire [44:0]      _GEN_1 =
    (&af_level)
      ? {satp_ppn[35:0], vpn[35:27]}
      : af_level == 2'h2
          ? (_GEN_0
               ? {l3Hit ? ppn[35:0] : io_mem_resp_bits[45:10], vpn[26:18]}
               : {satp_ppn[35:0], vpn[26:18]})
          : {l2Hit ? ppn[35:0] : io_mem_resp_bits[45:10], vpn[17:9]};
  reg  [37:0]      hptw_resp_entry_tag;
  reg  [13:0]      hptw_resp_entry_vmid;
  reg              hptw_resp_entry_n;
  reg  [1:0]       hptw_resp_entry_pbmt;
  reg  [37:0]      hptw_resp_entry_ppn;
  reg              hptw_resp_entry_perm_d;
  reg              hptw_resp_entry_perm_a;
  reg              hptw_resp_entry_perm_g;
  reg              hptw_resp_entry_perm_u;
  reg              hptw_resp_entry_perm_x;
  reg              hptw_resp_entry_perm_w;
  reg              hptw_resp_entry_perm_r;
  reg  [1:0]       hptw_resp_entry_level;
  reg              hptw_resp_gpf;
  reg              hptw_resp_gaf;
  reg              update_full_gvpn_mem_resp;
  reg  [43:0]      full_gvpn_reg;
  wire [43:0]      full_gvpn =
    update_full_gvpn_mem_resp ? io_mem_resp_bits[53:10] : full_gvpn_reg;
  wire [3:0][43:0] _GEN_2 =
    {{{io_mem_resp_bits[53:37], vpn[26:0]}},
     {{io_mem_resp_bits[53:28], vpn[17:0]}},
     {{io_mem_resp_bits[53:19], vpn[8:0]}},
     {io_mem_resp_bits[53:10]}};
  wire [55:0]      gpaddr =
    stage1Hit | onlyS2xlate
      ? {full_gvpn, 12'h0}
      : s_last_hptw_req ? {8'h0, _GEN_1, 3'h0} : {_GEN_2[level], 12'h0};
  wire             _guestFault_T = hptw_pageFault | hptw_accessFault;
  wire             _check_gpa_high_fail_T_5 = io_csr_hgatp_mode == 4'h8;
  wire             _check_gpa_high_fail_T_8 = io_csr_hgatp_mode == 4'h9;
  wire             gvpn_gpf =
    ~_guestFault_T
    & (s2xlate & _check_gpa_high_fail_T_5
         ? (|(full_gvpn[43:29]))
         : s2xlate & _check_gpa_high_fail_T_8 & (|(full_gvpn[43:38])));
  wire             guestFault = _guestFault_T | gvpn_gpf;
  wire [3:0][37:0] _GEN_3 =
    {{{hptw_resp_entry_ppn[37:27], gpaddr[38:12]}},
     {{hptw_resp_entry_ppn[37:18], gpaddr[29:12]}},
     {{hptw_resp_entry_ppn[37:9], gpaddr[20:12]}},
     {hptw_resp_entry_n
        ? {hptw_resp_entry_ppn[37:4], gpaddr[15:12]}
        : hptw_resp_entry_ppn}};
  reg              pte_valid;
  wire             ptw_resp_1_pf = pte_valid & pageFault & ~accessFault;
  wire             ptw_resp_1_af =
    accessFault | ppn_af & ~(pte_valid & (pageFault | guestFault));
  wire [1:0]       ptw_resp_1_level =
    accessFault ? af_level : guestFault ? gpf_level : level;
  wire             ptw_resp_1_n = pte_valid & io_mem_resp_bits[63];
  wire [1:0]       ptw_resp_1_pbmt = pte_valid ? io_mem_resp_bits[62:61] : 2'h0;
  wire [35:0]      _GEN_4 = pte_valid ? io_mem_resp_bits[45:10] : ppn[35:0];
  wire             ptw_resp_perm_pm_d = pte_valid & io_mem_resp_bits[7];
  wire             ptw_resp_perm_pm_a = pte_valid & io_mem_resp_bits[6];
  wire             ptw_resp_perm_pm_g = pte_valid & io_mem_resp_bits[5];
  wire             ptw_resp_perm_pm_u = pte_valid & io_mem_resp_bits[4];
  wire             ptw_resp_perm_pm_x = pte_valid & io_mem_resp_bits[3];
  wire             ptw_resp_perm_pm_w = pte_valid & io_mem_resp_bits[2];
  wire             ptw_resp_perm_pm_r = pte_valid & io_mem_resp_bits[1];
  wire             ptw_resp_1_v = pte_valid & io_mem_resp_bits[0];
  wire [40:0]      ptw_resp_1_ppn =
    {pte_valid ? io_mem_resp_bits[53:46] : ppn[43:36], _GEN_4[35:3]};
  wire             io_resp_valid_0 =
    stage1Hit
      ? ~idle & hptw_resp_stage2
      : ~idle & mem_addr_update & ~need_last_s2xlate
        & (guestFault | w_mem_resp & find_pte | s_pmp_check & accessFault | onlyS2xlate);
  wire             _gpf_level_T_5 = l3Hit | l2Hit;
  wire             _io_resp_bits_resp_T_4 =
    stage1Hit | _gpf_level_T_5 & guestFault & ~pte_valid;
  wire             io_llptw_valid_0 =
    ~s_llptw_req & level == 2'h1 & ~find_pte & ~accessFault & ~guestFault;
  wire [47:0]      _io_mem_req_bits_addr_T =
    s2xlate ? {_GEN_3[hptw_resp_entry_level][35:0], gpaddr[11:0]} : {_GEN_1, 3'h0};
  wire             io_mem_req_valid_0 =
    ~s_mem_req & ~io_mem_mask & ~accessFault & s_pmp_check;
  wire             io_hptw_req_valid_0 = ~s_hptw_req | ~s_last_hptw_req;
  wire             _GEN_5 = perfEvents_0_2 & io_req_bits_stage1Hit;
  wire             _GEN_6 = perfEvents_0_2 & ~io_req_bits_stage1Hit;
  wire             _GEN_7 = _GEN_0 & io_req_bits_l3Hit;
  wire             _GEN_8 = _GEN_7 | io_req_bits_l2Hit;
  wire             _GEN_9 = _GEN_6 | _GEN_5;
  wire             _check_gpa_high_fail_T = io_req_bits_req_info_s2xlate == 2'h2;
  wire             _GEN_10 = io_hptw_resp_valid & ~w_hptw_resp;
  wire             g_perm_fail =
    ~io_hptw_resp_bits_h_resp_gaf & ~io_hptw_resp_bits_h_resp_entry_perm_r
    & ~(io_csr_priv_mxr & io_hptw_resp_bits_h_resp_entry_perm_x);
  wire             _hptw_resp_gpf_T = io_hptw_resp_bits_h_resp_gpf | g_perm_fail;
  wire             _GEN_11 = io_hptw_resp_valid & ~w_last_hptw_resp;
  wire             _GEN_12 = _GEN_11 & stage1Hit;
  wire             _GEN_13 = _GEN_11 & ~stage1Hit;
  wire             _GEN_14 = _GEN_13 | _GEN_12;
  wire             perfEvents_4_2 = io_mem_req_ready & io_mem_req_valid_0;
  wire             _GEN_15 =
    level[1] & ~onlyS2xlate & ~(guestFault | find_pte | accessFault);
  wire             _GEN_16 = s2xlate & need_last_s2xlate;
  reg              perfEvents_5_2;
  reg              io_perf_0_value_REG;
  reg              io_perf_0_value_REG_1;
  reg              io_perf_1_value_REG;
  reg              io_perf_1_value_REG_1;
  reg              io_perf_2_value_REG;
  reg              io_perf_2_value_REG_1;
  reg              io_perf_3_value_REG;
  reg              io_perf_3_value_REG_1;
  reg              io_perf_4_value_REG;
  reg              io_perf_4_value_REG_1;
  reg              io_perf_5_value_REG;
  reg              io_perf_5_value_REG_1;
  reg              io_perf_6_value_REG;
  reg              io_perf_6_value_REG_1;
  wire [3:0]       full_gvpn_reg_idx_hi_1 =
    {io_req_bits_stage1_pteidx_7,
     io_req_bits_stage1_pteidx_6,
     io_req_bits_stage1_pteidx_5,
     io_req_bits_stage1_pteidx_4};
  wire [2:0]       _full_gvpn_reg_idx_T_2 =
    {io_req_bits_stage1_pteidx_7,
     io_req_bits_stage1_pteidx_6,
     io_req_bits_stage1_pteidx_5}
    | {io_req_bits_stage1_pteidx_3,
       io_req_bits_stage1_pteidx_2,
       io_req_bits_stage1_pteidx_1};
  wire             _full_gvpn_reg_idx_T_4 =
    _full_gvpn_reg_idx_T_2[2] | _full_gvpn_reg_idx_T_2[0];
  wire [2:0]       full_gvpn_reg_idx =
    {|full_gvpn_reg_idx_hi_1, |(_full_gvpn_reg_idx_T_2[2:1]), _full_gvpn_reg_idx_T_4};
  wire [7:0][34:0] _GEN_17 =
    {{io_req_bits_stage1_entry_7_tag},
     {io_req_bits_stage1_entry_6_tag},
     {io_req_bits_stage1_entry_5_tag},
     {io_req_bits_stage1_entry_4_tag},
     {io_req_bits_stage1_entry_3_tag},
     {io_req_bits_stage1_entry_2_tag},
     {io_req_bits_stage1_entry_1_tag},
     {io_req_bits_stage1_entry_0_tag}};
  wire [7:0][1:0]  _GEN_18 =
    {{io_req_bits_stage1_entry_7_level},
     {io_req_bits_stage1_entry_6_level},
     {io_req_bits_stage1_entry_5_level},
     {io_req_bits_stage1_entry_4_level},
     {io_req_bits_stage1_entry_3_level},
     {io_req_bits_stage1_entry_2_level},
     {io_req_bits_stage1_entry_1_level},
     {io_req_bits_stage1_entry_0_level}};
  wire [7:0][40:0] _GEN_19 =
    {{io_req_bits_stage1_entry_7_ppn},
     {io_req_bits_stage1_entry_6_ppn},
     {io_req_bits_stage1_entry_5_ppn},
     {io_req_bits_stage1_entry_4_ppn},
     {io_req_bits_stage1_entry_3_ppn},
     {io_req_bits_stage1_entry_2_ppn},
     {io_req_bits_stage1_entry_1_ppn},
     {io_req_bits_stage1_entry_0_ppn}};
  wire [7:0][2:0]  _GEN_20 =
    {{io_req_bits_stage1_entry_7_ppn_low},
     {io_req_bits_stage1_entry_6_ppn_low},
     {io_req_bits_stage1_entry_5_ppn_low},
     {io_req_bits_stage1_entry_4_ppn_low},
     {io_req_bits_stage1_entry_3_ppn_low},
     {io_req_bits_stage1_entry_2_ppn_low},
     {io_req_bits_stage1_entry_1_ppn_low},
     {io_req_bits_stage1_entry_0_ppn_low}};
  always @(posedge clock) begin
    if (_GEN_9)
      req_s2xlate <= io_req_bits_req_info_s2xlate;
    if (_GEN_6) begin
      ppn <= _GEN_8 ? io_req_bits_ppn : satp_ppn;
      vpn <= io_req_bits_req_info_vpn;
      l3Hit <= _GEN_7;
      l2Hit <= io_req_bits_l2Hit;
    end
    if (perfEvents_0_2) begin
      stage1Hit <= io_req_bits_stage1Hit;
      stage1_entry_0_tag <= io_req_bits_stage1_entry_0_tag;
      stage1_entry_0_asid <= io_req_bits_stage1_entry_0_asid;
      stage1_entry_0_vmid <= io_req_bits_stage1_entry_0_vmid;
      stage1_entry_0_n <= io_req_bits_stage1_entry_0_n;
      stage1_entry_0_pbmt <= io_req_bits_stage1_entry_0_pbmt;
      stage1_entry_0_perm_d <= io_req_bits_stage1_entry_0_perm_d;
      stage1_entry_0_perm_a <= io_req_bits_stage1_entry_0_perm_a;
      stage1_entry_0_perm_g <= io_req_bits_stage1_entry_0_perm_g;
      stage1_entry_0_perm_u <= io_req_bits_stage1_entry_0_perm_u;
      stage1_entry_0_perm_x <= io_req_bits_stage1_entry_0_perm_x;
      stage1_entry_0_perm_w <= io_req_bits_stage1_entry_0_perm_w;
      stage1_entry_0_perm_r <= io_req_bits_stage1_entry_0_perm_r;
      stage1_entry_0_level <= io_req_bits_stage1_entry_0_level;
      stage1_entry_0_v <= io_req_bits_stage1_entry_0_v;
      stage1_entry_0_ppn <= io_req_bits_stage1_entry_0_ppn;
      stage1_entry_0_ppn_low <= io_req_bits_stage1_entry_0_ppn_low;
      stage1_entry_0_pf <= io_req_bits_stage1_entry_0_pf;
      stage1_entry_1_tag <= io_req_bits_stage1_entry_1_tag;
      stage1_entry_1_asid <= io_req_bits_stage1_entry_1_asid;
      stage1_entry_1_vmid <= io_req_bits_stage1_entry_1_vmid;
      stage1_entry_1_n <= io_req_bits_stage1_entry_1_n;
      stage1_entry_1_pbmt <= io_req_bits_stage1_entry_1_pbmt;
      stage1_entry_1_perm_d <= io_req_bits_stage1_entry_1_perm_d;
      stage1_entry_1_perm_a <= io_req_bits_stage1_entry_1_perm_a;
      stage1_entry_1_perm_g <= io_req_bits_stage1_entry_1_perm_g;
      stage1_entry_1_perm_u <= io_req_bits_stage1_entry_1_perm_u;
      stage1_entry_1_perm_x <= io_req_bits_stage1_entry_1_perm_x;
      stage1_entry_1_perm_w <= io_req_bits_stage1_entry_1_perm_w;
      stage1_entry_1_perm_r <= io_req_bits_stage1_entry_1_perm_r;
      stage1_entry_1_level <= io_req_bits_stage1_entry_1_level;
      stage1_entry_1_v <= io_req_bits_stage1_entry_1_v;
      stage1_entry_1_ppn <= io_req_bits_stage1_entry_1_ppn;
      stage1_entry_1_ppn_low <= io_req_bits_stage1_entry_1_ppn_low;
      stage1_entry_1_pf <= io_req_bits_stage1_entry_1_pf;
      stage1_entry_2_tag <= io_req_bits_stage1_entry_2_tag;
      stage1_entry_2_asid <= io_req_bits_stage1_entry_2_asid;
      stage1_entry_2_vmid <= io_req_bits_stage1_entry_2_vmid;
      stage1_entry_2_n <= io_req_bits_stage1_entry_2_n;
      stage1_entry_2_pbmt <= io_req_bits_stage1_entry_2_pbmt;
      stage1_entry_2_perm_d <= io_req_bits_stage1_entry_2_perm_d;
      stage1_entry_2_perm_a <= io_req_bits_stage1_entry_2_perm_a;
      stage1_entry_2_perm_g <= io_req_bits_stage1_entry_2_perm_g;
      stage1_entry_2_perm_u <= io_req_bits_stage1_entry_2_perm_u;
      stage1_entry_2_perm_x <= io_req_bits_stage1_entry_2_perm_x;
      stage1_entry_2_perm_w <= io_req_bits_stage1_entry_2_perm_w;
      stage1_entry_2_perm_r <= io_req_bits_stage1_entry_2_perm_r;
      stage1_entry_2_level <= io_req_bits_stage1_entry_2_level;
      stage1_entry_2_v <= io_req_bits_stage1_entry_2_v;
      stage1_entry_2_ppn <= io_req_bits_stage1_entry_2_ppn;
      stage1_entry_2_ppn_low <= io_req_bits_stage1_entry_2_ppn_low;
      stage1_entry_2_pf <= io_req_bits_stage1_entry_2_pf;
      stage1_entry_3_tag <= io_req_bits_stage1_entry_3_tag;
      stage1_entry_3_asid <= io_req_bits_stage1_entry_3_asid;
      stage1_entry_3_vmid <= io_req_bits_stage1_entry_3_vmid;
      stage1_entry_3_n <= io_req_bits_stage1_entry_3_n;
      stage1_entry_3_pbmt <= io_req_bits_stage1_entry_3_pbmt;
      stage1_entry_3_perm_d <= io_req_bits_stage1_entry_3_perm_d;
      stage1_entry_3_perm_a <= io_req_bits_stage1_entry_3_perm_a;
      stage1_entry_3_perm_g <= io_req_bits_stage1_entry_3_perm_g;
      stage1_entry_3_perm_u <= io_req_bits_stage1_entry_3_perm_u;
      stage1_entry_3_perm_x <= io_req_bits_stage1_entry_3_perm_x;
      stage1_entry_3_perm_w <= io_req_bits_stage1_entry_3_perm_w;
      stage1_entry_3_perm_r <= io_req_bits_stage1_entry_3_perm_r;
      stage1_entry_3_level <= io_req_bits_stage1_entry_3_level;
      stage1_entry_3_v <= io_req_bits_stage1_entry_3_v;
      stage1_entry_3_ppn <= io_req_bits_stage1_entry_3_ppn;
      stage1_entry_3_ppn_low <= io_req_bits_stage1_entry_3_ppn_low;
      stage1_entry_3_pf <= io_req_bits_stage1_entry_3_pf;
      stage1_entry_4_tag <= io_req_bits_stage1_entry_4_tag;
      stage1_entry_4_asid <= io_req_bits_stage1_entry_4_asid;
      stage1_entry_4_vmid <= io_req_bits_stage1_entry_4_vmid;
      stage1_entry_4_n <= io_req_bits_stage1_entry_4_n;
      stage1_entry_4_pbmt <= io_req_bits_stage1_entry_4_pbmt;
      stage1_entry_4_perm_d <= io_req_bits_stage1_entry_4_perm_d;
      stage1_entry_4_perm_a <= io_req_bits_stage1_entry_4_perm_a;
      stage1_entry_4_perm_g <= io_req_bits_stage1_entry_4_perm_g;
      stage1_entry_4_perm_u <= io_req_bits_stage1_entry_4_perm_u;
      stage1_entry_4_perm_x <= io_req_bits_stage1_entry_4_perm_x;
      stage1_entry_4_perm_w <= io_req_bits_stage1_entry_4_perm_w;
      stage1_entry_4_perm_r <= io_req_bits_stage1_entry_4_perm_r;
      stage1_entry_4_level <= io_req_bits_stage1_entry_4_level;
      stage1_entry_4_v <= io_req_bits_stage1_entry_4_v;
      stage1_entry_4_ppn <= io_req_bits_stage1_entry_4_ppn;
      stage1_entry_4_ppn_low <= io_req_bits_stage1_entry_4_ppn_low;
      stage1_entry_4_pf <= io_req_bits_stage1_entry_4_pf;
      stage1_entry_5_tag <= io_req_bits_stage1_entry_5_tag;
      stage1_entry_5_asid <= io_req_bits_stage1_entry_5_asid;
      stage1_entry_5_vmid <= io_req_bits_stage1_entry_5_vmid;
      stage1_entry_5_n <= io_req_bits_stage1_entry_5_n;
      stage1_entry_5_pbmt <= io_req_bits_stage1_entry_5_pbmt;
      stage1_entry_5_perm_d <= io_req_bits_stage1_entry_5_perm_d;
      stage1_entry_5_perm_a <= io_req_bits_stage1_entry_5_perm_a;
      stage1_entry_5_perm_g <= io_req_bits_stage1_entry_5_perm_g;
      stage1_entry_5_perm_u <= io_req_bits_stage1_entry_5_perm_u;
      stage1_entry_5_perm_x <= io_req_bits_stage1_entry_5_perm_x;
      stage1_entry_5_perm_w <= io_req_bits_stage1_entry_5_perm_w;
      stage1_entry_5_perm_r <= io_req_bits_stage1_entry_5_perm_r;
      stage1_entry_5_level <= io_req_bits_stage1_entry_5_level;
      stage1_entry_5_v <= io_req_bits_stage1_entry_5_v;
      stage1_entry_5_ppn <= io_req_bits_stage1_entry_5_ppn;
      stage1_entry_5_ppn_low <= io_req_bits_stage1_entry_5_ppn_low;
      stage1_entry_5_pf <= io_req_bits_stage1_entry_5_pf;
      stage1_entry_6_tag <= io_req_bits_stage1_entry_6_tag;
      stage1_entry_6_asid <= io_req_bits_stage1_entry_6_asid;
      stage1_entry_6_vmid <= io_req_bits_stage1_entry_6_vmid;
      stage1_entry_6_n <= io_req_bits_stage1_entry_6_n;
      stage1_entry_6_pbmt <= io_req_bits_stage1_entry_6_pbmt;
      stage1_entry_6_perm_d <= io_req_bits_stage1_entry_6_perm_d;
      stage1_entry_6_perm_a <= io_req_bits_stage1_entry_6_perm_a;
      stage1_entry_6_perm_g <= io_req_bits_stage1_entry_6_perm_g;
      stage1_entry_6_perm_u <= io_req_bits_stage1_entry_6_perm_u;
      stage1_entry_6_perm_x <= io_req_bits_stage1_entry_6_perm_x;
      stage1_entry_6_perm_w <= io_req_bits_stage1_entry_6_perm_w;
      stage1_entry_6_perm_r <= io_req_bits_stage1_entry_6_perm_r;
      stage1_entry_6_level <= io_req_bits_stage1_entry_6_level;
      stage1_entry_6_v <= io_req_bits_stage1_entry_6_v;
      stage1_entry_6_ppn <= io_req_bits_stage1_entry_6_ppn;
      stage1_entry_6_ppn_low <= io_req_bits_stage1_entry_6_ppn_low;
      stage1_entry_6_pf <= io_req_bits_stage1_entry_6_pf;
      stage1_entry_7_tag <= io_req_bits_stage1_entry_7_tag;
      stage1_entry_7_asid <= io_req_bits_stage1_entry_7_asid;
      stage1_entry_7_vmid <= io_req_bits_stage1_entry_7_vmid;
      stage1_entry_7_n <= io_req_bits_stage1_entry_7_n;
      stage1_entry_7_pbmt <= io_req_bits_stage1_entry_7_pbmt;
      stage1_entry_7_perm_d <= io_req_bits_stage1_entry_7_perm_d;
      stage1_entry_7_perm_a <= io_req_bits_stage1_entry_7_perm_a;
      stage1_entry_7_perm_g <= io_req_bits_stage1_entry_7_perm_g;
      stage1_entry_7_perm_u <= io_req_bits_stage1_entry_7_perm_u;
      stage1_entry_7_perm_x <= io_req_bits_stage1_entry_7_perm_x;
      stage1_entry_7_perm_w <= io_req_bits_stage1_entry_7_perm_w;
      stage1_entry_7_perm_r <= io_req_bits_stage1_entry_7_perm_r;
      stage1_entry_7_level <= io_req_bits_stage1_entry_7_level;
      stage1_entry_7_v <= io_req_bits_stage1_entry_7_v;
      stage1_entry_7_ppn <= io_req_bits_stage1_entry_7_ppn;
      stage1_entry_7_ppn_low <= io_req_bits_stage1_entry_7_ppn_low;
      stage1_entry_7_pf <= io_req_bits_stage1_entry_7_pf;
      stage1_pteidx_0 <= io_req_bits_stage1_pteidx_0;
      stage1_pteidx_1 <= io_req_bits_stage1_pteidx_1;
      stage1_pteidx_2 <= io_req_bits_stage1_pteidx_2;
      stage1_pteidx_3 <= io_req_bits_stage1_pteidx_3;
      stage1_pteidx_4 <= io_req_bits_stage1_pteidx_4;
      stage1_pteidx_5 <= io_req_bits_stage1_pteidx_5;
      stage1_pteidx_6 <= io_req_bits_stage1_pteidx_6;
      stage1_pteidx_7 <= io_req_bits_stage1_pteidx_7;
      stage1_not_super <= io_req_bits_stage1_not_super;
      source <= io_req_bits_req_info_source;
    end
    hptw_resp_stage2 <= _GEN_12 | ~_GEN_5 & hptw_resp_stage2;
    if (_GEN_13 | _GEN_12 | _GEN_10) begin
      hptw_resp_entry_tag <= io_hptw_resp_bits_h_resp_entry_tag;
      hptw_resp_entry_vmid <= io_hptw_resp_bits_h_resp_entry_vmid;
      hptw_resp_entry_n <= io_hptw_resp_bits_h_resp_entry_n;
      hptw_resp_entry_pbmt <= io_hptw_resp_bits_h_resp_entry_pbmt;
      hptw_resp_entry_ppn <= io_hptw_resp_bits_h_resp_entry_ppn;
      hptw_resp_entry_perm_d <= io_hptw_resp_bits_h_resp_entry_perm_d;
      hptw_resp_entry_perm_a <= io_hptw_resp_bits_h_resp_entry_perm_a;
      hptw_resp_entry_perm_g <= io_hptw_resp_bits_h_resp_entry_perm_g;
      hptw_resp_entry_perm_u <= io_hptw_resp_bits_h_resp_entry_perm_u;
      hptw_resp_entry_perm_x <= io_hptw_resp_bits_h_resp_entry_perm_x;
      hptw_resp_entry_perm_w <= io_hptw_resp_bits_h_resp_entry_perm_w;
      hptw_resp_entry_perm_r <= io_hptw_resp_bits_h_resp_entry_perm_r;
      hptw_resp_entry_level <= io_hptw_resp_bits_h_resp_entry_level;
      hptw_resp_gaf <= io_hptw_resp_bits_h_resp_gaf;
    end
    if (_GEN_14)
      hptw_resp_gpf <= io_hptw_resp_bits_h_resp_gpf;
    else if (_GEN_10)
      hptw_resp_gpf <= _hptw_resp_gpf_T;
    if (update_full_gvpn_mem_resp)
      full_gvpn_reg <= io_mem_resp_bits[53:10];
    else if (_GEN_6)
      full_gvpn_reg <= _check_gpa_high_fail_T ? {6'h0, io_req_bits_req_info_vpn} : 44'h0;
    else if (_GEN_5)
      full_gvpn_reg <=
        _GEN_18[full_gvpn_reg_idx] == 2'h0
          ? {_GEN_19[full_gvpn_reg_idx], _GEN_20[full_gvpn_reg_idx]}
          : {_GEN_18[full_gvpn_reg_idx] == 2'h1
               ? {_GEN_19[full_gvpn_reg_idx][40:6], _GEN_17[full_gvpn_reg_idx][5:0]}
               : _GEN_18[full_gvpn_reg_idx] == 2'h2
                   ? {_GEN_19[full_gvpn_reg_idx][40:15], _GEN_17[full_gvpn_reg_idx][14:0]}
                   : {_GEN_19[full_gvpn_reg_idx][40:24],
                      _GEN_17[full_gvpn_reg_idx][23:0]},
             |full_gvpn_reg_idx_hi_1,
             |(_full_gvpn_reg_idx_T_2[2:1]),
             _full_gvpn_reg_idx_T_4};
    io_perf_0_value_REG <= perfEvents_0_2;
    io_perf_0_value_REG_1 <= io_perf_0_value_REG;
    io_perf_1_value_REG <= ~idle;
    io_perf_1_value_REG_1 <= io_perf_1_value_REG;
    io_perf_2_value_REG <= idle;
    io_perf_2_value_REG_1 <= io_perf_2_value_REG;
    io_perf_3_value_REG <= io_resp_valid_0 & ~io_resp_ready;
    io_perf_3_value_REG_1 <= io_perf_3_value_REG;
    io_perf_4_value_REG <= perfEvents_4_2;
    io_perf_4_value_REG_1 <= io_perf_4_value_REG;
    io_perf_5_value_REG <= perfEvents_5_2;
    io_perf_5_value_REG_1 <= io_perf_5_value_REG;
    io_perf_6_value_REG <= io_mem_req_valid_0 & ~io_mem_req_ready;
    io_perf_6_value_REG_1 <= io_perf_6_value_REG;
  end // always @(posedge)
  wire             flush =
    io_sfence_valid | io_csr_satp_changed | io_csr_vsatp_changed | io_csr_hgatp_changed;
  wire             sent_to_pmp =
    ~idle & (~s_pmp_check | mem_addr_update)
    & ~(mem_addr_update & ~_GEN_15 & (io_llptw_valid_0 | ~_GEN_16 & io_resp_valid_0));
  wire             _GEN_21 =
    sent_to_pmp ? io_pmp_resp_ld | io_pmp_resp_mmio : accessFault;
  wire             _GEN_22 = ~_GEN_5 & need_last_s2xlate;
  wire             _GEN_23 = io_resp_ready & io_resp_valid_0;
  wire [1:0]       _GEN_24 =
    io_req_bits_l2Hit ? 2'h1 : _GEN_0 ? {1'h1, ~io_req_bits_l3Hit} : 2'h2;
  wire [14:0]      gvpn_wire = _GEN_8 ? io_req_bits_ppn[43:29] : satp_ppn[43:29];
  wire             _GEN_25 = ~_GEN_6 & (_GEN_23 & stage1Hit | ~_GEN_5 & idle);
  wire             check_gpa_high_fail =
    _check_gpa_high_fail_T & _check_gpa_high_fail_T_5
    & (|(io_req_bits_req_info_vpn[37:29]));
  wire             check_gpa_high_fail_1 =
    _check_gpa_high_fail_T_5
      ? (|gvpn_wire)
      : _check_gpa_high_fail_T_8 & (|(gvpn_wire[14:9]));
  wire             _GEN_26 = io_hptw_req_ready & io_hptw_req_valid_0;
  wire             _GEN_27 = _GEN_26 & ~s_hptw_req;
  wire             _GEN_28 =
    g_perm_fail | io_hptw_resp_bits_h_resp_gpf | io_hptw_resp_bits_h_resp_gaf;
  wire             _GEN_29 =
    (~_GEN_10 | ~_GEN_28)
    & (_GEN_6
         ? ~_check_gpa_high_fail_T & (&io_req_bits_req_info_s2xlate)
           & (~check_gpa_high_fail_1 | _GEN_22)
         : _GEN_22);
  wire             _GEN_30 = _GEN_26 & ~s_last_hptw_req;
  wire             _GEN_31 = sent_to_pmp & ~mem_addr_update;
  wire             _GEN_32 = accessFault & ~idle;
  wire             _GEN_33 = guestFault & ~idle;
  wire             _GEN_34 = _GEN_33 | _GEN_32;
  wire             _GEN_35 = io_mem_resp_valid & ~w_mem_resp;
  wire             _GEN_36 = ~_GEN_35 & (_GEN_34 | s_llptw_req);
  wire             _GEN_37 =
    _GEN_35 | _GEN_33 | _GEN_32 | _GEN_13 | _GEN_10 & _GEN_28
    | (_GEN_6
         ? (_check_gpa_high_fail_T
              ? check_gpa_high_fail | mem_addr_update
              : (&io_req_bits_req_info_s2xlate) & check_gpa_high_fail_1 | mem_addr_update)
         : mem_addr_update);
  wire             _GEN_38 = mem_addr_update & _GEN_15;
  wire             _GEN_39 = io_llptw_ready & io_llptw_valid_0;
  wire             _GEN_40 = ~mem_addr_update | _GEN_15;
  wire             _GEN_41 = guestFault | accessFault | pageFault | ppn_af;
  wire             _GEN_42 = io_resp_valid_0 & _GEN_23;
  wire             _GEN_43 = ~_GEN_16 & _GEN_42;
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      level <= 2'h3;
      af_level <= 2'h3;
      gpf_level <= 2'h3;
      s_pmp_check <= 1'h1;
      s_mem_req <= 1'h1;
      s_llptw_req <= 1'h1;
      w_mem_resp <= 1'h1;
      s_hptw_req <= 1'h1;
      w_hptw_resp <= 1'h1;
      s_last_hptw_req <= 1'h1;
      w_last_hptw_resp <= 1'h1;
      mem_addr_update <= 1'h0;
      idle <= 1'h1;
      accessFault <= 1'h0;
      hptw_pageFault <= 1'h0;
      hptw_accessFault <= 1'h0;
      need_last_s2xlate <= 1'h0;
      update_full_gvpn_mem_resp <= 1'h0;
      pte_valid <= 1'h0;
      perfEvents_5_2 <= 1'h0;
    end
    else begin
      if (_GEN_38)
        level <= 2'(level - 2'h1);
      else if (_GEN_6)
        level <= _GEN_24;
      if (_GEN_35) begin
        af_level <= 2'(af_level - 2'h1);
        if (satp_mode == 4'h8 & ~pte_valid & ~_gpf_level_T_5)
          gpf_level <= 2'(gpf_level - 2'h2);
        else
          gpf_level <= 2'(gpf_level - 2'h1);
      end
      else if (_GEN_6) begin
        af_level <= _GEN_24;
        gpf_level <= _GEN_0 ? (io_req_bits_l2Hit ? 2'h2 : {2{io_req_bits_l3Hit}}) : 2'h0;
      end
      s_pmp_check <=
        flush | _GEN_33 | _GEN_32 | _GEN_31 | ~(_GEN_10 & ~_GEN_28)
        & (~_GEN_6 | _check_gpa_high_fail_T | (&io_req_bits_req_info_s2xlate))
        & s_pmp_check;
      s_mem_req <=
        flush | (~_GEN_38 | s2xlate) & (perfEvents_4_2 | _GEN_34 | ~_GEN_31 & s_mem_req);
      s_llptw_req <=
        flush
        | (mem_addr_update
             ? _GEN_15 | (io_llptw_valid_0 ? _GEN_39 | _GEN_36 : _GEN_43 | _GEN_36)
             : _GEN_36);
      w_mem_resp <= flush | _GEN_35 | ~perfEvents_4_2 & (_GEN_34 | w_mem_resp);
      s_hptw_req <=
        flush | ~(mem_addr_update & _GEN_15 & s2xlate)
        & (_GEN_33 | _GEN_32 | _GEN_27
           | (~_GEN_6 | _check_gpa_high_fail_T | ~(&io_req_bits_req_info_s2xlate)
              | check_gpa_high_fail_1) & s_hptw_req);
      w_hptw_resp <= flush | _GEN_33 | _GEN_32 | _GEN_10 | ~_GEN_27 & w_hptw_resp;
      s_last_hptw_req <=
        flush | (~mem_addr_update | _GEN_15 | io_llptw_valid_0 | ~(_GEN_16 & ~_GEN_41))
        & (_GEN_33 | _GEN_32 | _GEN_30
           | (~(_GEN_6 & _check_gpa_high_fail_T) | check_gpa_high_fail) & ~_GEN_5
           & s_last_hptw_req);
      w_last_hptw_resp <=
        flush | _GEN_33 | _GEN_32 | _GEN_14 | ~_GEN_30 & w_last_hptw_resp;
      mem_addr_update <=
        ~flush
        & (mem_addr_update
             ? ~_GEN_15
               & (io_llptw_valid_0
                    ? ~_GEN_39 & _GEN_37
                    : _GEN_16 ? _GEN_41 & _GEN_37 : ~_GEN_42 & _GEN_37)
             : _GEN_37);
      idle <=
        flush
        | (_GEN_40 ? _GEN_25 : io_llptw_valid_0 ? _GEN_39 | _GEN_25 : _GEN_43 | _GEN_25);
      accessFault <=
        ~flush
        & (~mem_addr_update | _GEN_15 | io_llptw_valid_0 | _GEN_16 | ~io_resp_valid_0
             ? ~_GEN_6 & _GEN_21
             : ~(_GEN_23 | _GEN_6) & _GEN_21);
      if (_GEN_13)
        hptw_pageFault <= io_hptw_resp_bits_h_resp_gpf;
      else if (_GEN_10)
        hptw_pageFault <= _hptw_resp_gpf_T;
      else
        hptw_pageFault <= ~_GEN_9 & hptw_pageFault;
      if (_GEN_13 | _GEN_10)
        hptw_accessFault <= io_hptw_resp_bits_h_resp_gaf;
      else
        hptw_accessFault <= ~_GEN_9 & hptw_accessFault;
      if (_GEN_40)
        need_last_s2xlate <= ~_GEN_34 & _GEN_29;
      else if (io_llptw_valid_0)
        need_last_s2xlate <= ~(_GEN_39 | _GEN_34) & _GEN_29;
      else
        need_last_s2xlate <= ~(_GEN_16 | _GEN_34) & _GEN_29;
      update_full_gvpn_mem_resp <=
        ~update_full_gvpn_mem_resp & (_GEN_35 | update_full_gvpn_mem_resp);
      pte_valid <= _GEN_35 | ~_GEN_6 & pte_valid;
      perfEvents_5_2 <= perfEvents_4_2 | ~io_mem_resp_valid & perfEvents_5_2;
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:40];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [5:0] i = 6'h0; i < 6'h29; i += 6'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        req_s2xlate = _RANDOM[6'h0][1:0];
        level = _RANDOM[6'h0][3:2];
        af_level = _RANDOM[6'h0][5:4];
        gpf_level = _RANDOM[6'h0][7:6];
        ppn = {_RANDOM[6'h0][31:8], _RANDOM[6'h1][19:0]};
        vpn = {_RANDOM[6'h1][31:20], _RANDOM[6'h2][25:0]};
        l3Hit = _RANDOM[6'h2][26];
        l2Hit = _RANDOM[6'h2][27];
        s_pmp_check = _RANDOM[6'h2][28];
        s_mem_req = _RANDOM[6'h2][29];
        s_llptw_req = _RANDOM[6'h2][30];
        w_mem_resp = _RANDOM[6'h2][31];
        s_hptw_req = _RANDOM[6'h3][0];
        w_hptw_resp = _RANDOM[6'h3][1];
        s_last_hptw_req = _RANDOM[6'h3][2];
        w_last_hptw_resp = _RANDOM[6'h3][3];
        mem_addr_update = _RANDOM[6'h3][4];
        idle = _RANDOM[6'h3][5];
        accessFault = _RANDOM[6'h3][6];
        hptw_pageFault = _RANDOM[6'h3][7];
        hptw_accessFault = _RANDOM[6'h3][8];
        need_last_s2xlate = _RANDOM[6'h3][9];
        stage1Hit = _RANDOM[6'h3][10];
        stage1_entry_0_tag = {_RANDOM[6'h3][31:11], _RANDOM[6'h4][13:0]};
        stage1_entry_0_asid = _RANDOM[6'h4][29:14];
        stage1_entry_0_vmid = {_RANDOM[6'h4][31:30], _RANDOM[6'h5][11:0]};
        stage1_entry_0_n = _RANDOM[6'h5][12];
        stage1_entry_0_pbmt = _RANDOM[6'h5][14:13];
        stage1_entry_0_perm_d = _RANDOM[6'h5][15];
        stage1_entry_0_perm_a = _RANDOM[6'h5][16];
        stage1_entry_0_perm_g = _RANDOM[6'h5][17];
        stage1_entry_0_perm_u = _RANDOM[6'h5][18];
        stage1_entry_0_perm_x = _RANDOM[6'h5][19];
        stage1_entry_0_perm_w = _RANDOM[6'h5][20];
        stage1_entry_0_perm_r = _RANDOM[6'h5][21];
        stage1_entry_0_level = _RANDOM[6'h5][23:22];
        stage1_entry_0_v = _RANDOM[6'h5][25];
        stage1_entry_0_ppn = {_RANDOM[6'h5][31:26], _RANDOM[6'h6], _RANDOM[6'h7][2:0]};
        stage1_entry_0_ppn_low = _RANDOM[6'h7][5:3];
        stage1_entry_0_pf = _RANDOM[6'h7][7];
        stage1_entry_1_tag = {_RANDOM[6'h7][31:8], _RANDOM[6'h8][10:0]};
        stage1_entry_1_asid = _RANDOM[6'h8][26:11];
        stage1_entry_1_vmid = {_RANDOM[6'h8][31:27], _RANDOM[6'h9][8:0]};
        stage1_entry_1_n = _RANDOM[6'h9][9];
        stage1_entry_1_pbmt = _RANDOM[6'h9][11:10];
        stage1_entry_1_perm_d = _RANDOM[6'h9][12];
        stage1_entry_1_perm_a = _RANDOM[6'h9][13];
        stage1_entry_1_perm_g = _RANDOM[6'h9][14];
        stage1_entry_1_perm_u = _RANDOM[6'h9][15];
        stage1_entry_1_perm_x = _RANDOM[6'h9][16];
        stage1_entry_1_perm_w = _RANDOM[6'h9][17];
        stage1_entry_1_perm_r = _RANDOM[6'h9][18];
        stage1_entry_1_level = _RANDOM[6'h9][20:19];
        stage1_entry_1_v = _RANDOM[6'h9][22];
        stage1_entry_1_ppn = {_RANDOM[6'h9][31:23], _RANDOM[6'hA]};
        stage1_entry_1_ppn_low = _RANDOM[6'hB][2:0];
        stage1_entry_1_pf = _RANDOM[6'hB][4];
        stage1_entry_2_tag = {_RANDOM[6'hB][31:5], _RANDOM[6'hC][7:0]};
        stage1_entry_2_asid = _RANDOM[6'hC][23:8];
        stage1_entry_2_vmid = {_RANDOM[6'hC][31:24], _RANDOM[6'hD][5:0]};
        stage1_entry_2_n = _RANDOM[6'hD][6];
        stage1_entry_2_pbmt = _RANDOM[6'hD][8:7];
        stage1_entry_2_perm_d = _RANDOM[6'hD][9];
        stage1_entry_2_perm_a = _RANDOM[6'hD][10];
        stage1_entry_2_perm_g = _RANDOM[6'hD][11];
        stage1_entry_2_perm_u = _RANDOM[6'hD][12];
        stage1_entry_2_perm_x = _RANDOM[6'hD][13];
        stage1_entry_2_perm_w = _RANDOM[6'hD][14];
        stage1_entry_2_perm_r = _RANDOM[6'hD][15];
        stage1_entry_2_level = _RANDOM[6'hD][17:16];
        stage1_entry_2_v = _RANDOM[6'hD][19];
        stage1_entry_2_ppn = {_RANDOM[6'hD][31:20], _RANDOM[6'hE][28:0]};
        stage1_entry_2_ppn_low = _RANDOM[6'hE][31:29];
        stage1_entry_2_pf = _RANDOM[6'hF][1];
        stage1_entry_3_tag = {_RANDOM[6'hF][31:2], _RANDOM[6'h10][4:0]};
        stage1_entry_3_asid = _RANDOM[6'h10][20:5];
        stage1_entry_3_vmid = {_RANDOM[6'h10][31:21], _RANDOM[6'h11][2:0]};
        stage1_entry_3_n = _RANDOM[6'h11][3];
        stage1_entry_3_pbmt = _RANDOM[6'h11][5:4];
        stage1_entry_3_perm_d = _RANDOM[6'h11][6];
        stage1_entry_3_perm_a = _RANDOM[6'h11][7];
        stage1_entry_3_perm_g = _RANDOM[6'h11][8];
        stage1_entry_3_perm_u = _RANDOM[6'h11][9];
        stage1_entry_3_perm_x = _RANDOM[6'h11][10];
        stage1_entry_3_perm_w = _RANDOM[6'h11][11];
        stage1_entry_3_perm_r = _RANDOM[6'h11][12];
        stage1_entry_3_level = _RANDOM[6'h11][14:13];
        stage1_entry_3_v = _RANDOM[6'h11][16];
        stage1_entry_3_ppn = {_RANDOM[6'h11][31:17], _RANDOM[6'h12][25:0]};
        stage1_entry_3_ppn_low = _RANDOM[6'h12][28:26];
        stage1_entry_3_pf = _RANDOM[6'h12][30];
        stage1_entry_4_tag = {_RANDOM[6'h12][31], _RANDOM[6'h13], _RANDOM[6'h14][1:0]};
        stage1_entry_4_asid = _RANDOM[6'h14][17:2];
        stage1_entry_4_vmid = _RANDOM[6'h14][31:18];
        stage1_entry_4_n = _RANDOM[6'h15][0];
        stage1_entry_4_pbmt = _RANDOM[6'h15][2:1];
        stage1_entry_4_perm_d = _RANDOM[6'h15][3];
        stage1_entry_4_perm_a = _RANDOM[6'h15][4];
        stage1_entry_4_perm_g = _RANDOM[6'h15][5];
        stage1_entry_4_perm_u = _RANDOM[6'h15][6];
        stage1_entry_4_perm_x = _RANDOM[6'h15][7];
        stage1_entry_4_perm_w = _RANDOM[6'h15][8];
        stage1_entry_4_perm_r = _RANDOM[6'h15][9];
        stage1_entry_4_level = _RANDOM[6'h15][11:10];
        stage1_entry_4_v = _RANDOM[6'h15][13];
        stage1_entry_4_ppn = {_RANDOM[6'h15][31:14], _RANDOM[6'h16][22:0]};
        stage1_entry_4_ppn_low = _RANDOM[6'h16][25:23];
        stage1_entry_4_pf = _RANDOM[6'h16][27];
        stage1_entry_5_tag = {_RANDOM[6'h16][31:28], _RANDOM[6'h17][30:0]};
        stage1_entry_5_asid = {_RANDOM[6'h17][31], _RANDOM[6'h18][14:0]};
        stage1_entry_5_vmid = _RANDOM[6'h18][28:15];
        stage1_entry_5_n = _RANDOM[6'h18][29];
        stage1_entry_5_pbmt = _RANDOM[6'h18][31:30];
        stage1_entry_5_perm_d = _RANDOM[6'h19][0];
        stage1_entry_5_perm_a = _RANDOM[6'h19][1];
        stage1_entry_5_perm_g = _RANDOM[6'h19][2];
        stage1_entry_5_perm_u = _RANDOM[6'h19][3];
        stage1_entry_5_perm_x = _RANDOM[6'h19][4];
        stage1_entry_5_perm_w = _RANDOM[6'h19][5];
        stage1_entry_5_perm_r = _RANDOM[6'h19][6];
        stage1_entry_5_level = _RANDOM[6'h19][8:7];
        stage1_entry_5_v = _RANDOM[6'h19][10];
        stage1_entry_5_ppn = {_RANDOM[6'h19][31:11], _RANDOM[6'h1A][19:0]};
        stage1_entry_5_ppn_low = _RANDOM[6'h1A][22:20];
        stage1_entry_5_pf = _RANDOM[6'h1A][24];
        stage1_entry_6_tag = {_RANDOM[6'h1A][31:25], _RANDOM[6'h1B][27:0]};
        stage1_entry_6_asid = {_RANDOM[6'h1B][31:28], _RANDOM[6'h1C][11:0]};
        stage1_entry_6_vmid = _RANDOM[6'h1C][25:12];
        stage1_entry_6_n = _RANDOM[6'h1C][26];
        stage1_entry_6_pbmt = _RANDOM[6'h1C][28:27];
        stage1_entry_6_perm_d = _RANDOM[6'h1C][29];
        stage1_entry_6_perm_a = _RANDOM[6'h1C][30];
        stage1_entry_6_perm_g = _RANDOM[6'h1C][31];
        stage1_entry_6_perm_u = _RANDOM[6'h1D][0];
        stage1_entry_6_perm_x = _RANDOM[6'h1D][1];
        stage1_entry_6_perm_w = _RANDOM[6'h1D][2];
        stage1_entry_6_perm_r = _RANDOM[6'h1D][3];
        stage1_entry_6_level = _RANDOM[6'h1D][5:4];
        stage1_entry_6_v = _RANDOM[6'h1D][7];
        stage1_entry_6_ppn = {_RANDOM[6'h1D][31:8], _RANDOM[6'h1E][16:0]};
        stage1_entry_6_ppn_low = _RANDOM[6'h1E][19:17];
        stage1_entry_6_pf = _RANDOM[6'h1E][21];
        stage1_entry_7_tag = {_RANDOM[6'h1E][31:22], _RANDOM[6'h1F][24:0]};
        stage1_entry_7_asid = {_RANDOM[6'h1F][31:25], _RANDOM[6'h20][8:0]};
        stage1_entry_7_vmid = _RANDOM[6'h20][22:9];
        stage1_entry_7_n = _RANDOM[6'h20][23];
        stage1_entry_7_pbmt = _RANDOM[6'h20][25:24];
        stage1_entry_7_perm_d = _RANDOM[6'h20][26];
        stage1_entry_7_perm_a = _RANDOM[6'h20][27];
        stage1_entry_7_perm_g = _RANDOM[6'h20][28];
        stage1_entry_7_perm_u = _RANDOM[6'h20][29];
        stage1_entry_7_perm_x = _RANDOM[6'h20][30];
        stage1_entry_7_perm_w = _RANDOM[6'h20][31];
        stage1_entry_7_perm_r = _RANDOM[6'h21][0];
        stage1_entry_7_level = _RANDOM[6'h21][2:1];
        stage1_entry_7_v = _RANDOM[6'h21][4];
        stage1_entry_7_ppn = {_RANDOM[6'h21][31:5], _RANDOM[6'h22][13:0]};
        stage1_entry_7_ppn_low = _RANDOM[6'h22][16:14];
        stage1_entry_7_pf = _RANDOM[6'h22][18];
        stage1_pteidx_0 = _RANDOM[6'h22][19];
        stage1_pteidx_1 = _RANDOM[6'h22][20];
        stage1_pteidx_2 = _RANDOM[6'h22][21];
        stage1_pteidx_3 = _RANDOM[6'h22][22];
        stage1_pteidx_4 = _RANDOM[6'h22][23];
        stage1_pteidx_5 = _RANDOM[6'h22][24];
        stage1_pteidx_6 = _RANDOM[6'h22][25];
        stage1_pteidx_7 = _RANDOM[6'h22][26];
        stage1_not_super = _RANDOM[6'h22][27];
        hptw_resp_stage2 = _RANDOM[6'h22][29];
        source = _RANDOM[6'h22][31:30];
        hptw_resp_entry_tag = {_RANDOM[6'h23], _RANDOM[6'h24][5:0]};
        hptw_resp_entry_vmid = {_RANDOM[6'h24][31:22], _RANDOM[6'h25][3:0]};
        hptw_resp_entry_n = _RANDOM[6'h25][4];
        hptw_resp_entry_pbmt = _RANDOM[6'h25][6:5];
        hptw_resp_entry_ppn = {_RANDOM[6'h25][31:7], _RANDOM[6'h26][12:0]};
        hptw_resp_entry_perm_d = _RANDOM[6'h26][13];
        hptw_resp_entry_perm_a = _RANDOM[6'h26][14];
        hptw_resp_entry_perm_g = _RANDOM[6'h26][15];
        hptw_resp_entry_perm_u = _RANDOM[6'h26][16];
        hptw_resp_entry_perm_x = _RANDOM[6'h26][17];
        hptw_resp_entry_perm_w = _RANDOM[6'h26][18];
        hptw_resp_entry_perm_r = _RANDOM[6'h26][19];
        hptw_resp_entry_level = _RANDOM[6'h26][21:20];
        hptw_resp_gpf = _RANDOM[6'h26][24];
        hptw_resp_gaf = _RANDOM[6'h26][25];
        update_full_gvpn_mem_resp = _RANDOM[6'h26][26];
        full_gvpn_reg = {_RANDOM[6'h26][31:27], _RANDOM[6'h27], _RANDOM[6'h28][6:0]};
        pte_valid = _RANDOM[6'h28][7];
        perfEvents_5_2 = _RANDOM[6'h28][9];
        io_perf_0_value_REG = _RANDOM[6'h28][10];
        io_perf_0_value_REG_1 = _RANDOM[6'h28][11];
        io_perf_1_value_REG = _RANDOM[6'h28][12];
        io_perf_1_value_REG_1 = _RANDOM[6'h28][13];
        io_perf_2_value_REG = _RANDOM[6'h28][14];
        io_perf_2_value_REG_1 = _RANDOM[6'h28][15];
        io_perf_3_value_REG = _RANDOM[6'h28][16];
        io_perf_3_value_REG_1 = _RANDOM[6'h28][17];
        io_perf_4_value_REG = _RANDOM[6'h28][18];
        io_perf_4_value_REG_1 = _RANDOM[6'h28][19];
        io_perf_5_value_REG = _RANDOM[6'h28][20];
        io_perf_5_value_REG_1 = _RANDOM[6'h28][21];
        io_perf_6_value_REG = _RANDOM[6'h28][22];
        io_perf_6_value_REG_1 = _RANDOM[6'h28][23];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        level = 2'h3;
        af_level = 2'h3;
        gpf_level = 2'h3;
        s_pmp_check = 1'h1;
        s_mem_req = 1'h1;
        s_llptw_req = 1'h1;
        w_mem_resp = 1'h1;
        s_hptw_req = 1'h1;
        w_hptw_resp = 1'h1;
        s_last_hptw_req = 1'h1;
        w_last_hptw_resp = 1'h1;
        mem_addr_update = 1'h0;
        idle = 1'h1;
        accessFault = 1'h0;
        hptw_pageFault = 1'h0;
        hptw_accessFault = 1'h0;
        need_last_s2xlate = 1'h0;
        update_full_gvpn_mem_resp = 1'h0;
        pte_valid = 1'h0;
        perfEvents_5_2 = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_req_ready = idle;
  assign io_resp_valid = io_resp_valid_0;
  assign io_resp_bits_source = source;
  assign io_resp_bits_s2xlate = req_s2xlate;
  assign io_resp_bits_resp_entry_0_tag =
    _io_resp_bits_resp_T_4 ? stage1_entry_0_tag : vpn[37:3];
  assign io_resp_bits_resp_entry_0_asid =
    _io_resp_bits_resp_T_4 ? stage1_entry_0_asid : satp_asid;
  assign io_resp_bits_resp_entry_0_vmid =
    _io_resp_bits_resp_T_4 ? stage1_entry_0_vmid : io_csr_hgatp_vmid[13:0];
  assign io_resp_bits_resp_entry_0_n =
    _io_resp_bits_resp_T_4 ? stage1_entry_0_n : ptw_resp_1_n;
  assign io_resp_bits_resp_entry_0_pbmt =
    _io_resp_bits_resp_T_4 ? stage1_entry_0_pbmt : ptw_resp_1_pbmt;
  assign io_resp_bits_resp_entry_0_perm_d =
    _io_resp_bits_resp_T_4 ? stage1_entry_0_perm_d : ptw_resp_perm_pm_d;
  assign io_resp_bits_resp_entry_0_perm_a =
    _io_resp_bits_resp_T_4 ? stage1_entry_0_perm_a : ptw_resp_perm_pm_a;
  assign io_resp_bits_resp_entry_0_perm_g =
    _io_resp_bits_resp_T_4 ? stage1_entry_0_perm_g : ptw_resp_perm_pm_g;
  assign io_resp_bits_resp_entry_0_perm_u =
    _io_resp_bits_resp_T_4 ? stage1_entry_0_perm_u : ptw_resp_perm_pm_u;
  assign io_resp_bits_resp_entry_0_perm_x =
    _io_resp_bits_resp_T_4 ? stage1_entry_0_perm_x : ptw_resp_perm_pm_x;
  assign io_resp_bits_resp_entry_0_perm_w =
    _io_resp_bits_resp_T_4 ? stage1_entry_0_perm_w : ptw_resp_perm_pm_w;
  assign io_resp_bits_resp_entry_0_perm_r =
    _io_resp_bits_resp_T_4 ? stage1_entry_0_perm_r : ptw_resp_perm_pm_r;
  assign io_resp_bits_resp_entry_0_level =
    _io_resp_bits_resp_T_4 ? stage1_entry_0_level : ptw_resp_1_level;
  assign io_resp_bits_resp_entry_0_v =
    _io_resp_bits_resp_T_4 ? stage1_entry_0_v : ptw_resp_1_v;
  assign io_resp_bits_resp_entry_0_ppn =
    _io_resp_bits_resp_T_4 ? stage1_entry_0_ppn : ptw_resp_1_ppn;
  assign io_resp_bits_resp_entry_0_ppn_low =
    _io_resp_bits_resp_T_4 ? stage1_entry_0_ppn_low : _GEN_4[2:0];
  assign io_resp_bits_resp_entry_0_af = ~_io_resp_bits_resp_T_4 & ptw_resp_1_af;
  assign io_resp_bits_resp_entry_0_pf =
    _io_resp_bits_resp_T_4 ? stage1_entry_0_pf : ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_1_tag =
    _io_resp_bits_resp_T_4 ? stage1_entry_1_tag : vpn[37:3];
  assign io_resp_bits_resp_entry_1_asid =
    _io_resp_bits_resp_T_4 ? stage1_entry_1_asid : satp_asid;
  assign io_resp_bits_resp_entry_1_vmid =
    _io_resp_bits_resp_T_4 ? stage1_entry_1_vmid : io_csr_hgatp_vmid[13:0];
  assign io_resp_bits_resp_entry_1_n =
    _io_resp_bits_resp_T_4 ? stage1_entry_1_n : ptw_resp_1_n;
  assign io_resp_bits_resp_entry_1_pbmt =
    _io_resp_bits_resp_T_4 ? stage1_entry_1_pbmt : ptw_resp_1_pbmt;
  assign io_resp_bits_resp_entry_1_perm_d =
    _io_resp_bits_resp_T_4 ? stage1_entry_1_perm_d : ptw_resp_perm_pm_d;
  assign io_resp_bits_resp_entry_1_perm_a =
    _io_resp_bits_resp_T_4 ? stage1_entry_1_perm_a : ptw_resp_perm_pm_a;
  assign io_resp_bits_resp_entry_1_perm_g =
    _io_resp_bits_resp_T_4 ? stage1_entry_1_perm_g : ptw_resp_perm_pm_g;
  assign io_resp_bits_resp_entry_1_perm_u =
    _io_resp_bits_resp_T_4 ? stage1_entry_1_perm_u : ptw_resp_perm_pm_u;
  assign io_resp_bits_resp_entry_1_perm_x =
    _io_resp_bits_resp_T_4 ? stage1_entry_1_perm_x : ptw_resp_perm_pm_x;
  assign io_resp_bits_resp_entry_1_perm_w =
    _io_resp_bits_resp_T_4 ? stage1_entry_1_perm_w : ptw_resp_perm_pm_w;
  assign io_resp_bits_resp_entry_1_perm_r =
    _io_resp_bits_resp_T_4 ? stage1_entry_1_perm_r : ptw_resp_perm_pm_r;
  assign io_resp_bits_resp_entry_1_level =
    _io_resp_bits_resp_T_4 ? stage1_entry_1_level : ptw_resp_1_level;
  assign io_resp_bits_resp_entry_1_v =
    _io_resp_bits_resp_T_4 ? stage1_entry_1_v : ptw_resp_1_v;
  assign io_resp_bits_resp_entry_1_ppn =
    _io_resp_bits_resp_T_4 ? stage1_entry_1_ppn : ptw_resp_1_ppn;
  assign io_resp_bits_resp_entry_1_ppn_low =
    _io_resp_bits_resp_T_4 ? stage1_entry_1_ppn_low : _GEN_4[2:0];
  assign io_resp_bits_resp_entry_1_af = ~_io_resp_bits_resp_T_4 & ptw_resp_1_af;
  assign io_resp_bits_resp_entry_1_pf =
    _io_resp_bits_resp_T_4 ? stage1_entry_1_pf : ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_2_tag =
    _io_resp_bits_resp_T_4 ? stage1_entry_2_tag : vpn[37:3];
  assign io_resp_bits_resp_entry_2_asid =
    _io_resp_bits_resp_T_4 ? stage1_entry_2_asid : satp_asid;
  assign io_resp_bits_resp_entry_2_vmid =
    _io_resp_bits_resp_T_4 ? stage1_entry_2_vmid : io_csr_hgatp_vmid[13:0];
  assign io_resp_bits_resp_entry_2_n =
    _io_resp_bits_resp_T_4 ? stage1_entry_2_n : ptw_resp_1_n;
  assign io_resp_bits_resp_entry_2_pbmt =
    _io_resp_bits_resp_T_4 ? stage1_entry_2_pbmt : ptw_resp_1_pbmt;
  assign io_resp_bits_resp_entry_2_perm_d =
    _io_resp_bits_resp_T_4 ? stage1_entry_2_perm_d : ptw_resp_perm_pm_d;
  assign io_resp_bits_resp_entry_2_perm_a =
    _io_resp_bits_resp_T_4 ? stage1_entry_2_perm_a : ptw_resp_perm_pm_a;
  assign io_resp_bits_resp_entry_2_perm_g =
    _io_resp_bits_resp_T_4 ? stage1_entry_2_perm_g : ptw_resp_perm_pm_g;
  assign io_resp_bits_resp_entry_2_perm_u =
    _io_resp_bits_resp_T_4 ? stage1_entry_2_perm_u : ptw_resp_perm_pm_u;
  assign io_resp_bits_resp_entry_2_perm_x =
    _io_resp_bits_resp_T_4 ? stage1_entry_2_perm_x : ptw_resp_perm_pm_x;
  assign io_resp_bits_resp_entry_2_perm_w =
    _io_resp_bits_resp_T_4 ? stage1_entry_2_perm_w : ptw_resp_perm_pm_w;
  assign io_resp_bits_resp_entry_2_perm_r =
    _io_resp_bits_resp_T_4 ? stage1_entry_2_perm_r : ptw_resp_perm_pm_r;
  assign io_resp_bits_resp_entry_2_level =
    _io_resp_bits_resp_T_4 ? stage1_entry_2_level : ptw_resp_1_level;
  assign io_resp_bits_resp_entry_2_v =
    _io_resp_bits_resp_T_4 ? stage1_entry_2_v : ptw_resp_1_v;
  assign io_resp_bits_resp_entry_2_ppn =
    _io_resp_bits_resp_T_4 ? stage1_entry_2_ppn : ptw_resp_1_ppn;
  assign io_resp_bits_resp_entry_2_ppn_low =
    _io_resp_bits_resp_T_4 ? stage1_entry_2_ppn_low : _GEN_4[2:0];
  assign io_resp_bits_resp_entry_2_af = ~_io_resp_bits_resp_T_4 & ptw_resp_1_af;
  assign io_resp_bits_resp_entry_2_pf =
    _io_resp_bits_resp_T_4 ? stage1_entry_2_pf : ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_3_tag =
    _io_resp_bits_resp_T_4 ? stage1_entry_3_tag : vpn[37:3];
  assign io_resp_bits_resp_entry_3_asid =
    _io_resp_bits_resp_T_4 ? stage1_entry_3_asid : satp_asid;
  assign io_resp_bits_resp_entry_3_vmid =
    _io_resp_bits_resp_T_4 ? stage1_entry_3_vmid : io_csr_hgatp_vmid[13:0];
  assign io_resp_bits_resp_entry_3_n =
    _io_resp_bits_resp_T_4 ? stage1_entry_3_n : ptw_resp_1_n;
  assign io_resp_bits_resp_entry_3_pbmt =
    _io_resp_bits_resp_T_4 ? stage1_entry_3_pbmt : ptw_resp_1_pbmt;
  assign io_resp_bits_resp_entry_3_perm_d =
    _io_resp_bits_resp_T_4 ? stage1_entry_3_perm_d : ptw_resp_perm_pm_d;
  assign io_resp_bits_resp_entry_3_perm_a =
    _io_resp_bits_resp_T_4 ? stage1_entry_3_perm_a : ptw_resp_perm_pm_a;
  assign io_resp_bits_resp_entry_3_perm_g =
    _io_resp_bits_resp_T_4 ? stage1_entry_3_perm_g : ptw_resp_perm_pm_g;
  assign io_resp_bits_resp_entry_3_perm_u =
    _io_resp_bits_resp_T_4 ? stage1_entry_3_perm_u : ptw_resp_perm_pm_u;
  assign io_resp_bits_resp_entry_3_perm_x =
    _io_resp_bits_resp_T_4 ? stage1_entry_3_perm_x : ptw_resp_perm_pm_x;
  assign io_resp_bits_resp_entry_3_perm_w =
    _io_resp_bits_resp_T_4 ? stage1_entry_3_perm_w : ptw_resp_perm_pm_w;
  assign io_resp_bits_resp_entry_3_perm_r =
    _io_resp_bits_resp_T_4 ? stage1_entry_3_perm_r : ptw_resp_perm_pm_r;
  assign io_resp_bits_resp_entry_3_level =
    _io_resp_bits_resp_T_4 ? stage1_entry_3_level : ptw_resp_1_level;
  assign io_resp_bits_resp_entry_3_v =
    _io_resp_bits_resp_T_4 ? stage1_entry_3_v : ptw_resp_1_v;
  assign io_resp_bits_resp_entry_3_ppn =
    _io_resp_bits_resp_T_4 ? stage1_entry_3_ppn : ptw_resp_1_ppn;
  assign io_resp_bits_resp_entry_3_ppn_low =
    _io_resp_bits_resp_T_4 ? stage1_entry_3_ppn_low : _GEN_4[2:0];
  assign io_resp_bits_resp_entry_3_af = ~_io_resp_bits_resp_T_4 & ptw_resp_1_af;
  assign io_resp_bits_resp_entry_3_pf =
    _io_resp_bits_resp_T_4 ? stage1_entry_3_pf : ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_4_tag =
    _io_resp_bits_resp_T_4 ? stage1_entry_4_tag : vpn[37:3];
  assign io_resp_bits_resp_entry_4_asid =
    _io_resp_bits_resp_T_4 ? stage1_entry_4_asid : satp_asid;
  assign io_resp_bits_resp_entry_4_vmid =
    _io_resp_bits_resp_T_4 ? stage1_entry_4_vmid : io_csr_hgatp_vmid[13:0];
  assign io_resp_bits_resp_entry_4_n =
    _io_resp_bits_resp_T_4 ? stage1_entry_4_n : ptw_resp_1_n;
  assign io_resp_bits_resp_entry_4_pbmt =
    _io_resp_bits_resp_T_4 ? stage1_entry_4_pbmt : ptw_resp_1_pbmt;
  assign io_resp_bits_resp_entry_4_perm_d =
    _io_resp_bits_resp_T_4 ? stage1_entry_4_perm_d : ptw_resp_perm_pm_d;
  assign io_resp_bits_resp_entry_4_perm_a =
    _io_resp_bits_resp_T_4 ? stage1_entry_4_perm_a : ptw_resp_perm_pm_a;
  assign io_resp_bits_resp_entry_4_perm_g =
    _io_resp_bits_resp_T_4 ? stage1_entry_4_perm_g : ptw_resp_perm_pm_g;
  assign io_resp_bits_resp_entry_4_perm_u =
    _io_resp_bits_resp_T_4 ? stage1_entry_4_perm_u : ptw_resp_perm_pm_u;
  assign io_resp_bits_resp_entry_4_perm_x =
    _io_resp_bits_resp_T_4 ? stage1_entry_4_perm_x : ptw_resp_perm_pm_x;
  assign io_resp_bits_resp_entry_4_perm_w =
    _io_resp_bits_resp_T_4 ? stage1_entry_4_perm_w : ptw_resp_perm_pm_w;
  assign io_resp_bits_resp_entry_4_perm_r =
    _io_resp_bits_resp_T_4 ? stage1_entry_4_perm_r : ptw_resp_perm_pm_r;
  assign io_resp_bits_resp_entry_4_level =
    _io_resp_bits_resp_T_4 ? stage1_entry_4_level : ptw_resp_1_level;
  assign io_resp_bits_resp_entry_4_v =
    _io_resp_bits_resp_T_4 ? stage1_entry_4_v : ptw_resp_1_v;
  assign io_resp_bits_resp_entry_4_ppn =
    _io_resp_bits_resp_T_4 ? stage1_entry_4_ppn : ptw_resp_1_ppn;
  assign io_resp_bits_resp_entry_4_ppn_low =
    _io_resp_bits_resp_T_4 ? stage1_entry_4_ppn_low : _GEN_4[2:0];
  assign io_resp_bits_resp_entry_4_af = ~_io_resp_bits_resp_T_4 & ptw_resp_1_af;
  assign io_resp_bits_resp_entry_4_pf =
    _io_resp_bits_resp_T_4 ? stage1_entry_4_pf : ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_5_tag =
    _io_resp_bits_resp_T_4 ? stage1_entry_5_tag : vpn[37:3];
  assign io_resp_bits_resp_entry_5_asid =
    _io_resp_bits_resp_T_4 ? stage1_entry_5_asid : satp_asid;
  assign io_resp_bits_resp_entry_5_vmid =
    _io_resp_bits_resp_T_4 ? stage1_entry_5_vmid : io_csr_hgatp_vmid[13:0];
  assign io_resp_bits_resp_entry_5_n =
    _io_resp_bits_resp_T_4 ? stage1_entry_5_n : ptw_resp_1_n;
  assign io_resp_bits_resp_entry_5_pbmt =
    _io_resp_bits_resp_T_4 ? stage1_entry_5_pbmt : ptw_resp_1_pbmt;
  assign io_resp_bits_resp_entry_5_perm_d =
    _io_resp_bits_resp_T_4 ? stage1_entry_5_perm_d : ptw_resp_perm_pm_d;
  assign io_resp_bits_resp_entry_5_perm_a =
    _io_resp_bits_resp_T_4 ? stage1_entry_5_perm_a : ptw_resp_perm_pm_a;
  assign io_resp_bits_resp_entry_5_perm_g =
    _io_resp_bits_resp_T_4 ? stage1_entry_5_perm_g : ptw_resp_perm_pm_g;
  assign io_resp_bits_resp_entry_5_perm_u =
    _io_resp_bits_resp_T_4 ? stage1_entry_5_perm_u : ptw_resp_perm_pm_u;
  assign io_resp_bits_resp_entry_5_perm_x =
    _io_resp_bits_resp_T_4 ? stage1_entry_5_perm_x : ptw_resp_perm_pm_x;
  assign io_resp_bits_resp_entry_5_perm_w =
    _io_resp_bits_resp_T_4 ? stage1_entry_5_perm_w : ptw_resp_perm_pm_w;
  assign io_resp_bits_resp_entry_5_perm_r =
    _io_resp_bits_resp_T_4 ? stage1_entry_5_perm_r : ptw_resp_perm_pm_r;
  assign io_resp_bits_resp_entry_5_level =
    _io_resp_bits_resp_T_4 ? stage1_entry_5_level : ptw_resp_1_level;
  assign io_resp_bits_resp_entry_5_v =
    _io_resp_bits_resp_T_4 ? stage1_entry_5_v : ptw_resp_1_v;
  assign io_resp_bits_resp_entry_5_ppn =
    _io_resp_bits_resp_T_4 ? stage1_entry_5_ppn : ptw_resp_1_ppn;
  assign io_resp_bits_resp_entry_5_ppn_low =
    _io_resp_bits_resp_T_4 ? stage1_entry_5_ppn_low : _GEN_4[2:0];
  assign io_resp_bits_resp_entry_5_af = ~_io_resp_bits_resp_T_4 & ptw_resp_1_af;
  assign io_resp_bits_resp_entry_5_pf =
    _io_resp_bits_resp_T_4 ? stage1_entry_5_pf : ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_6_tag =
    _io_resp_bits_resp_T_4 ? stage1_entry_6_tag : vpn[37:3];
  assign io_resp_bits_resp_entry_6_asid =
    _io_resp_bits_resp_T_4 ? stage1_entry_6_asid : satp_asid;
  assign io_resp_bits_resp_entry_6_vmid =
    _io_resp_bits_resp_T_4 ? stage1_entry_6_vmid : io_csr_hgatp_vmid[13:0];
  assign io_resp_bits_resp_entry_6_n =
    _io_resp_bits_resp_T_4 ? stage1_entry_6_n : ptw_resp_1_n;
  assign io_resp_bits_resp_entry_6_pbmt =
    _io_resp_bits_resp_T_4 ? stage1_entry_6_pbmt : ptw_resp_1_pbmt;
  assign io_resp_bits_resp_entry_6_perm_d =
    _io_resp_bits_resp_T_4 ? stage1_entry_6_perm_d : ptw_resp_perm_pm_d;
  assign io_resp_bits_resp_entry_6_perm_a =
    _io_resp_bits_resp_T_4 ? stage1_entry_6_perm_a : ptw_resp_perm_pm_a;
  assign io_resp_bits_resp_entry_6_perm_g =
    _io_resp_bits_resp_T_4 ? stage1_entry_6_perm_g : ptw_resp_perm_pm_g;
  assign io_resp_bits_resp_entry_6_perm_u =
    _io_resp_bits_resp_T_4 ? stage1_entry_6_perm_u : ptw_resp_perm_pm_u;
  assign io_resp_bits_resp_entry_6_perm_x =
    _io_resp_bits_resp_T_4 ? stage1_entry_6_perm_x : ptw_resp_perm_pm_x;
  assign io_resp_bits_resp_entry_6_perm_w =
    _io_resp_bits_resp_T_4 ? stage1_entry_6_perm_w : ptw_resp_perm_pm_w;
  assign io_resp_bits_resp_entry_6_perm_r =
    _io_resp_bits_resp_T_4 ? stage1_entry_6_perm_r : ptw_resp_perm_pm_r;
  assign io_resp_bits_resp_entry_6_level =
    _io_resp_bits_resp_T_4 ? stage1_entry_6_level : ptw_resp_1_level;
  assign io_resp_bits_resp_entry_6_v =
    _io_resp_bits_resp_T_4 ? stage1_entry_6_v : ptw_resp_1_v;
  assign io_resp_bits_resp_entry_6_ppn =
    _io_resp_bits_resp_T_4 ? stage1_entry_6_ppn : ptw_resp_1_ppn;
  assign io_resp_bits_resp_entry_6_ppn_low =
    _io_resp_bits_resp_T_4 ? stage1_entry_6_ppn_low : _GEN_4[2:0];
  assign io_resp_bits_resp_entry_6_af = ~_io_resp_bits_resp_T_4 & ptw_resp_1_af;
  assign io_resp_bits_resp_entry_6_pf =
    _io_resp_bits_resp_T_4 ? stage1_entry_6_pf : ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_7_tag =
    _io_resp_bits_resp_T_4 ? stage1_entry_7_tag : vpn[37:3];
  assign io_resp_bits_resp_entry_7_asid =
    _io_resp_bits_resp_T_4 ? stage1_entry_7_asid : satp_asid;
  assign io_resp_bits_resp_entry_7_vmid =
    _io_resp_bits_resp_T_4 ? stage1_entry_7_vmid : io_csr_hgatp_vmid[13:0];
  assign io_resp_bits_resp_entry_7_n =
    _io_resp_bits_resp_T_4 ? stage1_entry_7_n : ptw_resp_1_n;
  assign io_resp_bits_resp_entry_7_pbmt =
    _io_resp_bits_resp_T_4 ? stage1_entry_7_pbmt : ptw_resp_1_pbmt;
  assign io_resp_bits_resp_entry_7_perm_d =
    _io_resp_bits_resp_T_4 ? stage1_entry_7_perm_d : ptw_resp_perm_pm_d;
  assign io_resp_bits_resp_entry_7_perm_a =
    _io_resp_bits_resp_T_4 ? stage1_entry_7_perm_a : ptw_resp_perm_pm_a;
  assign io_resp_bits_resp_entry_7_perm_g =
    _io_resp_bits_resp_T_4 ? stage1_entry_7_perm_g : ptw_resp_perm_pm_g;
  assign io_resp_bits_resp_entry_7_perm_u =
    _io_resp_bits_resp_T_4 ? stage1_entry_7_perm_u : ptw_resp_perm_pm_u;
  assign io_resp_bits_resp_entry_7_perm_x =
    _io_resp_bits_resp_T_4 ? stage1_entry_7_perm_x : ptw_resp_perm_pm_x;
  assign io_resp_bits_resp_entry_7_perm_w =
    _io_resp_bits_resp_T_4 ? stage1_entry_7_perm_w : ptw_resp_perm_pm_w;
  assign io_resp_bits_resp_entry_7_perm_r =
    _io_resp_bits_resp_T_4 ? stage1_entry_7_perm_r : ptw_resp_perm_pm_r;
  assign io_resp_bits_resp_entry_7_level =
    _io_resp_bits_resp_T_4 ? stage1_entry_7_level : ptw_resp_1_level;
  assign io_resp_bits_resp_entry_7_v =
    _io_resp_bits_resp_T_4 ? stage1_entry_7_v : ptw_resp_1_v;
  assign io_resp_bits_resp_entry_7_ppn =
    _io_resp_bits_resp_T_4 ? stage1_entry_7_ppn : ptw_resp_1_ppn;
  assign io_resp_bits_resp_entry_7_ppn_low =
    _io_resp_bits_resp_T_4 ? stage1_entry_7_ppn_low : _GEN_4[2:0];
  assign io_resp_bits_resp_entry_7_af = ~_io_resp_bits_resp_T_4 & ptw_resp_1_af;
  assign io_resp_bits_resp_entry_7_pf =
    _io_resp_bits_resp_T_4 ? stage1_entry_7_pf : ptw_resp_1_pf;
  assign io_resp_bits_resp_pteidx_0 =
    _io_resp_bits_resp_T_4 ? stage1_pteidx_0 : vpn[2:0] == 3'h0;
  assign io_resp_bits_resp_pteidx_1 =
    _io_resp_bits_resp_T_4 ? stage1_pteidx_1 : vpn[2:0] == 3'h1;
  assign io_resp_bits_resp_pteidx_2 =
    _io_resp_bits_resp_T_4 ? stage1_pteidx_2 : vpn[2:0] == 3'h2;
  assign io_resp_bits_resp_pteidx_3 =
    _io_resp_bits_resp_T_4 ? stage1_pteidx_3 : vpn[2:0] == 3'h3;
  assign io_resp_bits_resp_pteidx_4 =
    _io_resp_bits_resp_T_4 ? stage1_pteidx_4 : vpn[2:0] == 3'h4;
  assign io_resp_bits_resp_pteidx_5 =
    _io_resp_bits_resp_T_4 ? stage1_pteidx_5 : vpn[2:0] == 3'h5;
  assign io_resp_bits_resp_pteidx_6 =
    _io_resp_bits_resp_T_4 ? stage1_pteidx_6 : vpn[2:0] == 3'h6;
  assign io_resp_bits_resp_pteidx_7 =
    _io_resp_bits_resp_T_4 ? stage1_pteidx_7 : (&(vpn[2:0]));
  assign io_resp_bits_resp_not_super = _io_resp_bits_resp_T_4 & stage1_not_super;
  assign io_resp_bits_h_resp_entry_tag = gvpn_gpf ? gpaddr[49:12] : hptw_resp_entry_tag;
  assign io_resp_bits_h_resp_entry_vmid =
    gvpn_gpf ? io_csr_hgatp_vmid[13:0] : hptw_resp_entry_vmid;
  assign io_resp_bits_h_resp_entry_n = ~gvpn_gpf & hptw_resp_entry_n;
  assign io_resp_bits_h_resp_entry_pbmt = gvpn_gpf ? 2'h0 : hptw_resp_entry_pbmt;
  assign io_resp_bits_h_resp_entry_ppn = gvpn_gpf ? 38'h0 : hptw_resp_entry_ppn;
  assign io_resp_bits_h_resp_entry_perm_d = ~gvpn_gpf & hptw_resp_entry_perm_d;
  assign io_resp_bits_h_resp_entry_perm_a = ~gvpn_gpf & hptw_resp_entry_perm_a;
  assign io_resp_bits_h_resp_entry_perm_g = ~gvpn_gpf & hptw_resp_entry_perm_g;
  assign io_resp_bits_h_resp_entry_perm_u = ~gvpn_gpf & hptw_resp_entry_perm_u;
  assign io_resp_bits_h_resp_entry_perm_x = ~gvpn_gpf & hptw_resp_entry_perm_x;
  assign io_resp_bits_h_resp_entry_perm_w = ~gvpn_gpf & hptw_resp_entry_perm_w;
  assign io_resp_bits_h_resp_entry_perm_r = ~gvpn_gpf & hptw_resp_entry_perm_r;
  assign io_resp_bits_h_resp_entry_level = gvpn_gpf ? 2'h0 : hptw_resp_entry_level;
  assign io_resp_bits_h_resp_gpf = gvpn_gpf | hptw_resp_gpf;
  assign io_resp_bits_h_resp_gaf = ~gvpn_gpf & hptw_resp_gaf;
  assign io_llptw_valid = io_llptw_valid_0;
  assign io_llptw_bits_req_info_vpn = vpn;
  assign io_llptw_bits_req_info_s2xlate = req_s2xlate;
  assign io_llptw_bits_req_info_source = source;
  assign io_hptw_req_valid = io_hptw_req_valid_0;
  assign io_hptw_req_bits_source = source;
  assign io_hptw_req_bits_gvpn = gpaddr[55:12];
  assign io_mem_req_valid = io_mem_req_valid_0;
  assign io_mem_req_bits_addr = _io_mem_req_bits_addr_T;
  assign io_pmp_req_bits_addr = _io_mem_req_bits_addr_T;
  assign io_refill_req_info_vpn = vpn;
  assign io_refill_req_info_s2xlate = req_s2xlate;
  assign io_refill_req_info_source = source;
  assign io_refill_level = level;
  assign io_perf_0_value = {5'h0, io_perf_0_value_REG_1};
  assign io_perf_1_value = {5'h0, io_perf_1_value_REG_1};
  assign io_perf_2_value = {5'h0, io_perf_2_value_REG_1};
  assign io_perf_3_value = {5'h0, io_perf_3_value_REG_1};
  assign io_perf_4_value = {5'h0, io_perf_4_value_REG_1};
  assign io_perf_5_value = {5'h0, io_perf_5_value_REG_1};
  assign io_perf_6_value = {5'h0, io_perf_6_value_REG_1};
endmodule

