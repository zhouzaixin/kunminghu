// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module CSR(
  input         clock,
  input         reset,
  input         io_flush_valid,
  input         io_flush_bits_robIdx_flag,
  input  [7:0]  io_flush_bits_robIdx_value,
  input         io_flush_bits_ftqIdx_flag,
  input  [5:0]  io_flush_bits_ftqIdx_value,
  input  [3:0]  io_flush_bits_ftqOffset,
  input         io_flush_bits_level,
  input         io_flush_bits_cfiUpdate_backendIGPF,
  input         io_flush_bits_cfiUpdate_backendIPF,
  input         io_flush_bits_cfiUpdate_backendIAF,
  input  [63:0] io_flush_bits_fullTarget,
  output        io_in_ready,
  input         io_in_valid,
  input  [8:0]  io_in_bits_ctrl_fuOpType,
  input         io_in_bits_ctrl_robIdx_flag,
  input  [7:0]  io_in_bits_ctrl_robIdx_value,
  input  [7:0]  io_in_bits_ctrl_pdest,
  input         io_in_bits_ctrl_rfWen,
  input         io_in_bits_ctrl_ftqIdx_flag,
  input  [5:0]  io_in_bits_ctrl_ftqIdx_value,
  input  [3:0]  io_in_bits_ctrl_ftqOffset,
  input  [63:0] io_in_bits_data_src_0,
  input  [63:0] io_in_bits_data_imm,
  input         io_out_ready,
  output        io_out_valid,
  output        io_out_bits_ctrl_robIdx_flag,
  output [7:0]  io_out_bits_ctrl_robIdx_value,
  output [7:0]  io_out_bits_ctrl_pdest,
  output        io_out_bits_ctrl_rfWen,
  output        io_out_bits_ctrl_exceptionVec_2,
  output        io_out_bits_ctrl_exceptionVec_3,
  output        io_out_bits_ctrl_exceptionVec_8,
  output        io_out_bits_ctrl_exceptionVec_9,
  output        io_out_bits_ctrl_exceptionVec_10,
  output        io_out_bits_ctrl_exceptionVec_11,
  output        io_out_bits_ctrl_exceptionVec_22,
  output        io_out_bits_ctrl_flushPipe,
  output [63:0] io_out_bits_res_data,
  output        io_out_bits_res_redirect_valid,
  output        io_out_bits_res_redirect_bits_isRVC,
  output        io_out_bits_res_redirect_bits_robIdx_flag,
  output [7:0]  io_out_bits_res_redirect_bits_robIdx_value,
  output        io_out_bits_res_redirect_bits_ftqIdx_flag,
  output [5:0]  io_out_bits_res_redirect_bits_ftqIdx_value,
  output [3:0]  io_out_bits_res_redirect_bits_ftqOffset,
  output        io_out_bits_res_redirect_bits_level,
  output        io_out_bits_res_redirect_bits_interrupt,
  output [49:0] io_out_bits_res_redirect_bits_cfiUpdate_pc,
  output        io_out_bits_res_redirect_bits_cfiUpdate_pd_valid,
  output        io_out_bits_res_redirect_bits_cfiUpdate_pd_isRVC,
  output [1:0]  io_out_bits_res_redirect_bits_cfiUpdate_pd_brType,
  output        io_out_bits_res_redirect_bits_cfiUpdate_pd_isCall,
  output        io_out_bits_res_redirect_bits_cfiUpdate_pd_isRet,
  output [3:0]  io_out_bits_res_redirect_bits_cfiUpdate_ssp,
  output [2:0]  io_out_bits_res_redirect_bits_cfiUpdate_sctr,
  output        io_out_bits_res_redirect_bits_cfiUpdate_TOSW_flag,
  output [4:0]  io_out_bits_res_redirect_bits_cfiUpdate_TOSW_value,
  output        io_out_bits_res_redirect_bits_cfiUpdate_TOSR_flag,
  output [4:0]  io_out_bits_res_redirect_bits_cfiUpdate_TOSR_value,
  output        io_out_bits_res_redirect_bits_cfiUpdate_NOS_flag,
  output [4:0]  io_out_bits_res_redirect_bits_cfiUpdate_NOS_value,
  output [49:0] io_out_bits_res_redirect_bits_cfiUpdate_topAddr,
  output [10:0] io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_17_folded_hist,
  output [10:0] io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_16_folded_hist,
  output [6:0]  io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_15_folded_hist,
  output [7:0]  io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_14_folded_hist,
  output [8:0]  io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_13_folded_hist,
  output [3:0]  io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_12_folded_hist,
  output [7:0]  io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_11_folded_hist,
  output [8:0]  io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_10_folded_hist,
  output [6:0]  io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_9_folded_hist,
  output [7:0]  io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_8_folded_hist,
  output [6:0]  io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_7_folded_hist,
  output [8:0]  io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_6_folded_hist,
  output [6:0]  io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_5_folded_hist,
  output [7:0]  io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_4_folded_hist,
  output [7:0]  io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_3_folded_hist,
  output [7:0]  io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_2_folded_hist,
  output [10:0] io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_1_folded_hist,
  output [7:0]  io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_0_folded_hist,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_5_bits_0,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_5_bits_1,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_5_bits_2,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_5_bits_3,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_4_bits_0,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_4_bits_1,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_4_bits_2,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_4_bits_3,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_3_bits_0,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_3_bits_1,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_3_bits_2,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_3_bits_3,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_2_bits_0,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_2_bits_1,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_2_bits_2,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_2_bits_3,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_1_bits_0,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_1_bits_1,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_1_bits_2,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_1_bits_3,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_0_bits_0,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_0_bits_1,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_0_bits_2,
  output        io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_0_bits_3,
  output [2:0]  io_out_bits_res_redirect_bits_cfiUpdate_lastBrNumOH,
  output [3:0]  io_out_bits_res_redirect_bits_cfiUpdate_ghr,
  output        io_out_bits_res_redirect_bits_cfiUpdate_histPtr_flag,
  output [7:0]  io_out_bits_res_redirect_bits_cfiUpdate_histPtr_value,
  output [9:0]  io_out_bits_res_redirect_bits_cfiUpdate_specCnt_0,
  output [9:0]  io_out_bits_res_redirect_bits_cfiUpdate_specCnt_1,
  output        io_out_bits_res_redirect_bits_cfiUpdate_br_hit,
  output        io_out_bits_res_redirect_bits_cfiUpdate_jr_hit,
  output        io_out_bits_res_redirect_bits_cfiUpdate_sc_hit,
  output        io_out_bits_res_redirect_bits_cfiUpdate_predTaken,
  output [49:0] io_out_bits_res_redirect_bits_cfiUpdate_target,
  output        io_out_bits_res_redirect_bits_cfiUpdate_taken,
  output        io_out_bits_res_redirect_bits_cfiUpdate_isMisPred,
  output [1:0]  io_out_bits_res_redirect_bits_cfiUpdate_shift,
  output        io_out_bits_res_redirect_bits_cfiUpdate_addIntoHist,
  output        io_out_bits_res_redirect_bits_cfiUpdate_backendIGPF,
  output        io_out_bits_res_redirect_bits_cfiUpdate_backendIPF,
  output        io_out_bits_res_redirect_bits_cfiUpdate_backendIAF,
  output [63:0] io_out_bits_res_redirect_bits_fullTarget,
  output        io_out_bits_res_redirect_bits_stFtqIdx_flag,
  output [5:0]  io_out_bits_res_redirect_bits_stFtqIdx_value,
  output [3:0]  io_out_bits_res_redirect_bits_stFtqOffset,
  output [63:0] io_out_bits_res_redirect_bits_debug_runahead_checkpoint_id,
  output        io_out_bits_res_redirect_bits_debugIsCtrl,
  output        io_out_bits_res_redirect_bits_debugIsMemVio,
  input  [7:0]  io_csrin_hartId,
  input         io_csrin_msiInfo_valid,
  input  [16:0] io_csrin_msiInfo_bits_info,
  input         io_csrin_criticalErrorState,
  input         io_csrin_clintTime_valid,
  input  [63:0] io_csrin_clintTime_bits,
  input         io_csrin_l2FlushDone,
  input         io_csrin_trapInstInfo_valid,
  input  [31:0] io_csrin_trapInstInfo_bits_instr,
  input         io_csrin_trapInstInfo_bits_ftqPtr_flag,
  input  [5:0]  io_csrin_trapInstInfo_bits_ftqPtr_value,
  input  [3:0]  io_csrin_trapInstInfo_bits_ftqOffset,
  input  [5:0]  io_csrio_perf_perfEventsFrontend_0_value,
  input  [5:0]  io_csrio_perf_perfEventsFrontend_1_value,
  input  [5:0]  io_csrio_perf_perfEventsFrontend_2_value,
  input  [5:0]  io_csrio_perf_perfEventsFrontend_3_value,
  input  [5:0]  io_csrio_perf_perfEventsFrontend_4_value,
  input  [5:0]  io_csrio_perf_perfEventsFrontend_5_value,
  input  [5:0]  io_csrio_perf_perfEventsFrontend_6_value,
  input  [5:0]  io_csrio_perf_perfEventsFrontend_7_value,
  input  [5:0]  io_csrio_perf_perfEventsBackend_0_value,
  input  [5:0]  io_csrio_perf_perfEventsBackend_1_value,
  input  [5:0]  io_csrio_perf_perfEventsBackend_2_value,
  input  [5:0]  io_csrio_perf_perfEventsBackend_3_value,
  input  [5:0]  io_csrio_perf_perfEventsBackend_4_value,
  input  [5:0]  io_csrio_perf_perfEventsBackend_5_value,
  input  [5:0]  io_csrio_perf_perfEventsBackend_6_value,
  input  [5:0]  io_csrio_perf_perfEventsBackend_7_value,
  input  [5:0]  io_csrio_perf_perfEventsLsu_0_value,
  input  [5:0]  io_csrio_perf_perfEventsLsu_1_value,
  input  [5:0]  io_csrio_perf_perfEventsLsu_2_value,
  input  [5:0]  io_csrio_perf_perfEventsLsu_3_value,
  input  [5:0]  io_csrio_perf_perfEventsLsu_4_value,
  input  [5:0]  io_csrio_perf_perfEventsLsu_5_value,
  input  [5:0]  io_csrio_perf_perfEventsLsu_6_value,
  input  [5:0]  io_csrio_perf_perfEventsLsu_7_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_0_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_1_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_2_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_3_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_4_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_5_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_6_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_7_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_8_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_9_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_10_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_11_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_12_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_13_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_14_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_15_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_16_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_17_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_18_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_19_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_20_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_21_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_22_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_23_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_24_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_25_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_26_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_27_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_28_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_29_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_30_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_31_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_32_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_33_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_34_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_35_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_36_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_37_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_38_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_39_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_40_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_41_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_42_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_43_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_44_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_45_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_46_value,
  input  [5:0]  io_csrio_perf_perfEventsHc_47_value,
  input  [6:0]  io_csrio_perf_retiredInstr,
  output        io_csrio_criticalErrorState,
  input         io_csrio_fpu_fflags_valid,
  input  [4:0]  io_csrio_fpu_fflags_bits,
  input         io_csrio_fpu_dirty_fs,
  output [2:0]  io_csrio_fpu_frm,
  output [63:0] io_csrio_vpu_vstart,
  output [1:0]  io_csrio_vpu_vxrm,
  input         io_csrio_vpu_set_vstart_valid,
  input  [63:0] io_csrio_vpu_set_vstart_bits,
  input         io_csrio_vpu_set_vtype_valid,
  input  [63:0] io_csrio_vpu_set_vtype_bits,
  input         io_csrio_vpu_set_vxsat_valid,
  input         io_csrio_vpu_set_vxsat_bits,
  input         io_csrio_vpu_dirty_vs,
  input         io_csrio_exception_valid,
  input  [49:0] io_csrio_exception_bits_pc,
  input         io_csrio_exception_bits_exceptionVec_0,
  input         io_csrio_exception_bits_exceptionVec_1,
  input         io_csrio_exception_bits_exceptionVec_2,
  input         io_csrio_exception_bits_exceptionVec_3,
  input         io_csrio_exception_bits_exceptionVec_4,
  input         io_csrio_exception_bits_exceptionVec_5,
  input         io_csrio_exception_bits_exceptionVec_6,
  input         io_csrio_exception_bits_exceptionVec_7,
  input         io_csrio_exception_bits_exceptionVec_8,
  input         io_csrio_exception_bits_exceptionVec_9,
  input         io_csrio_exception_bits_exceptionVec_10,
  input         io_csrio_exception_bits_exceptionVec_11,
  input         io_csrio_exception_bits_exceptionVec_12,
  input         io_csrio_exception_bits_exceptionVec_13,
  input         io_csrio_exception_bits_exceptionVec_14,
  input         io_csrio_exception_bits_exceptionVec_15,
  input         io_csrio_exception_bits_exceptionVec_16,
  input         io_csrio_exception_bits_exceptionVec_17,
  input         io_csrio_exception_bits_exceptionVec_18,
  input         io_csrio_exception_bits_exceptionVec_19,
  input         io_csrio_exception_bits_exceptionVec_20,
  input         io_csrio_exception_bits_exceptionVec_21,
  input         io_csrio_exception_bits_exceptionVec_22,
  input         io_csrio_exception_bits_exceptionVec_23,
  input         io_csrio_exception_bits_isPcBkpt,
  input         io_csrio_exception_bits_isFetchMalAddr,
  input  [63:0] io_csrio_exception_bits_gpaddr,
  input         io_csrio_exception_bits_singleStep,
  input         io_csrio_exception_bits_crossPageIPFFix,
  input         io_csrio_exception_bits_isInterrupt,
  input         io_csrio_exception_bits_isHls,
  input  [3:0]  io_csrio_exception_bits_trigger,
  input         io_csrio_exception_bits_isForVSnonLeafPTE,
  input         io_csrio_robDeqPtr_flag,
  input  [7:0]  io_csrio_robDeqPtr_value,
  output        io_csrio_isXRet,
  output [63:0] io_csrio_trapTarget_pc,
  output        io_csrio_trapTarget_raiseIPF,
  output        io_csrio_trapTarget_raiseIAF,
  output        io_csrio_trapTarget_raiseIGPF,
  output        io_csrio_interrupt,
  output        io_csrio_wfi_event,
  output [63:0] io_csrio_traceCSR_cause,
  output [49:0] io_csrio_traceCSR_tval,
  output [2:0]  io_csrio_traceCSR_lastPriv,
  output [2:0]  io_csrio_traceCSR_currentPriv,
  input  [63:0] io_csrio_memExceptionVAddr,
  input  [63:0] io_csrio_memExceptionGPAddr,
  input         io_csrio_memExceptionIsForVSnonLeafPTE,
  input         io_csrio_externalInterrupt_mtip,
  input         io_csrio_externalInterrupt_msip,
  input         io_csrio_externalInterrupt_meip,
  input         io_csrio_externalInterrupt_seip,
  input         io_csrio_externalInterrupt_debug,
  input         io_csrio_externalInterrupt_nmi_nmi_31,
  input         io_csrio_externalInterrupt_nmi_nmi_43,
  output [3:0]  io_csrio_tlb_satp_mode,
  output [15:0] io_csrio_tlb_satp_asid,
  output [43:0] io_csrio_tlb_satp_ppn,
  output        io_csrio_tlb_satp_changed,
  output [3:0]  io_csrio_tlb_vsatp_mode,
  output [15:0] io_csrio_tlb_vsatp_asid,
  output [43:0] io_csrio_tlb_vsatp_ppn,
  output        io_csrio_tlb_vsatp_changed,
  output [3:0]  io_csrio_tlb_hgatp_mode,
  output [15:0] io_csrio_tlb_hgatp_vmid,
  output [43:0] io_csrio_tlb_hgatp_ppn,
  output        io_csrio_tlb_hgatp_changed,
  output        io_csrio_tlb_priv_mxr,
  output        io_csrio_tlb_priv_sum,
  output        io_csrio_tlb_priv_vmxr,
  output        io_csrio_tlb_priv_vsum,
  output        io_csrio_tlb_priv_virt,
  output        io_csrio_tlb_priv_spvp,
  output [1:0]  io_csrio_tlb_priv_imode,
  output [1:0]  io_csrio_tlb_priv_dmode,
  output        io_csrio_tlb_mPBMTE,
  output        io_csrio_tlb_hPBMTE,
  output [1:0]  io_csrio_tlb_pmm_mseccfg,
  output [1:0]  io_csrio_tlb_pmm_menvcfg,
  output [1:0]  io_csrio_tlb_pmm_henvcfg,
  output [1:0]  io_csrio_tlb_pmm_hstatus,
  output [1:0]  io_csrio_tlb_pmm_senvcfg,
  output        io_csrio_customCtrl_pf_ctrl_l1I_pf_enable,
  output        io_csrio_customCtrl_pf_ctrl_l2_pf_enable,
  output        io_csrio_customCtrl_pf_ctrl_l1D_pf_enable,
  output        io_csrio_customCtrl_pf_ctrl_l1D_pf_train_on_hit,
  output        io_csrio_customCtrl_pf_ctrl_l1D_pf_enable_agt,
  output        io_csrio_customCtrl_pf_ctrl_l1D_pf_enable_pht,
  output [3:0]  io_csrio_customCtrl_pf_ctrl_l1D_pf_active_threshold,
  output [5:0]  io_csrio_customCtrl_pf_ctrl_l1D_pf_active_stride,
  output        io_csrio_customCtrl_pf_ctrl_l2_pf_store_only,
  output        io_csrio_customCtrl_pf_ctrl_l2_pf_recv_enable,
  output        io_csrio_customCtrl_pf_ctrl_l2_pf_pbop_enable,
  output        io_csrio_customCtrl_pf_ctrl_l2_pf_vbop_enable,
  output        io_csrio_customCtrl_pf_ctrl_l2_pf_tp_enable,
  output        io_csrio_customCtrl_bp_ctrl_ubtb_enable,
  output        io_csrio_customCtrl_bp_ctrl_btb_enable,
  output        io_csrio_customCtrl_bp_ctrl_tage_enable,
  output        io_csrio_customCtrl_bp_ctrl_sc_enable,
  output        io_csrio_customCtrl_bp_ctrl_ras_enable,
  output        io_csrio_customCtrl_ldld_vio_check_enable,
  output        io_csrio_customCtrl_cache_error_enable,
  output        io_csrio_customCtrl_uncache_write_outstanding_enable,
  output        io_csrio_customCtrl_hd_misalign_st_enable,
  output        io_csrio_customCtrl_hd_misalign_ld_enable,
  output        io_csrio_customCtrl_power_down_enable,
  output        io_csrio_customCtrl_flush_l2_enable,
  output        io_csrio_customCtrl_fusion_enable,
  output        io_csrio_customCtrl_wfi_enable,
  output        io_csrio_customCtrl_distribute_csr_w_valid,
  output [11:0] io_csrio_customCtrl_distribute_csr_w_bits_addr,
  output [63:0] io_csrio_customCtrl_distribute_csr_w_bits_data,
  output        io_csrio_customCtrl_singlestep,
  output        io_csrio_customCtrl_frontend_trigger_tUpdate_valid,
  output [1:0]  io_csrio_customCtrl_frontend_trigger_tUpdate_bits_addr,
  output [1:0]  io_csrio_customCtrl_frontend_trigger_tUpdate_bits_tdata_matchType,
  output        io_csrio_customCtrl_frontend_trigger_tUpdate_bits_tdata_select,
  output [3:0]  io_csrio_customCtrl_frontend_trigger_tUpdate_bits_tdata_action,
  output        io_csrio_customCtrl_frontend_trigger_tUpdate_bits_tdata_chain,
  output [63:0] io_csrio_customCtrl_frontend_trigger_tUpdate_bits_tdata_tdata2,
  output        io_csrio_customCtrl_frontend_trigger_tEnableVec_0,
  output        io_csrio_customCtrl_frontend_trigger_tEnableVec_1,
  output        io_csrio_customCtrl_frontend_trigger_tEnableVec_2,
  output        io_csrio_customCtrl_frontend_trigger_tEnableVec_3,
  output        io_csrio_customCtrl_frontend_trigger_debugMode,
  output        io_csrio_customCtrl_frontend_trigger_triggerCanRaiseBpExp,
  output        io_csrio_customCtrl_mem_trigger_tUpdate_valid,
  output [1:0]  io_csrio_customCtrl_mem_trigger_tUpdate_bits_addr,
  output [1:0]  io_csrio_customCtrl_mem_trigger_tUpdate_bits_tdata_matchType,
  output        io_csrio_customCtrl_mem_trigger_tUpdate_bits_tdata_select,
  output [3:0]  io_csrio_customCtrl_mem_trigger_tUpdate_bits_tdata_action,
  output        io_csrio_customCtrl_mem_trigger_tUpdate_bits_tdata_chain,
  output        io_csrio_customCtrl_mem_trigger_tUpdate_bits_tdata_store,
  output        io_csrio_customCtrl_mem_trigger_tUpdate_bits_tdata_load,
  output [63:0] io_csrio_customCtrl_mem_trigger_tUpdate_bits_tdata_tdata2,
  output        io_csrio_customCtrl_mem_trigger_tEnableVec_0,
  output        io_csrio_customCtrl_mem_trigger_tEnableVec_1,
  output        io_csrio_customCtrl_mem_trigger_tEnableVec_2,
  output        io_csrio_customCtrl_mem_trigger_tEnableVec_3,
  output        io_csrio_customCtrl_mem_trigger_debugMode,
  output        io_csrio_customCtrl_mem_trigger_triggerCanRaiseBpExp,
  output        io_csrio_customCtrl_fsIsOff,
  output        io_csrio_instrAddrTransType_bare,
  output        io_csrio_instrAddrTransType_sv39,
  output        io_csrio_instrAddrTransType_sv39x4,
  output        io_csrio_instrAddrTransType_sv48,
  output        io_csrio_instrAddrTransType_sv48x4,
  output        io_csrToDecode_illegalInst_sfenceVMA,
  output        io_csrToDecode_illegalInst_sfencePart,
  output        io_csrToDecode_illegalInst_hfenceGVMA,
  output        io_csrToDecode_illegalInst_hfenceVVMA,
  output        io_csrToDecode_illegalInst_hlsv,
  output        io_csrToDecode_illegalInst_fsIsOff,
  output        io_csrToDecode_illegalInst_vsIsOff,
  output        io_csrToDecode_illegalInst_wfi,
  output        io_csrToDecode_illegalInst_wrs_nto,
  output        io_csrToDecode_illegalInst_frm,
  output        io_csrToDecode_illegalInst_cboZ,
  output        io_csrToDecode_illegalInst_cboCF,
  output        io_csrToDecode_illegalInst_cboI,
  output        io_csrToDecode_virtualInst_sfenceVMA,
  output        io_csrToDecode_virtualInst_sfencePart,
  output        io_csrToDecode_virtualInst_hfence,
  output        io_csrToDecode_virtualInst_hlsv,
  output        io_csrToDecode_virtualInst_wfi,
  output        io_csrToDecode_virtualInst_wrs_nto,
  output        io_csrToDecode_virtualInst_cboZ,
  output        io_csrToDecode_virtualInst_cboCF,
  output        io_csrToDecode_virtualInst_cboI,
  output        io_csrToDecode_special_cboI2F,
  output        io_error_0
);

  wire        _imsic_o_csr_rdata_valid;
  wire [63:0] _imsic_o_csr_rdata_bits_rdata;
  wire        _imsic_o_csr_rdata_bits_illegal;
  wire        _imsic_o_meip;
  wire        _imsic_o_seip;
  wire [4:0]  _imsic_o_vseip;
  wire [31:0] _imsic_o_mtopei;
  wire [31:0] _imsic_o_stopei;
  wire [31:0] _imsic_o_vstopei;
  wire [63:0] _trapTvalMod_io_tval;
  wire        _trapInstMod_io_currentTrapInst_valid;
  wire [31:0] _trapInstMod_io_currentTrapInst_bits;
  wire        _csrMod_io_in_ready;
  wire        _csrMod_io_out_valid;
  wire        _csrMod_io_out_bits_EX_II;
  wire        _csrMod_io_out_bits_EX_VI;
  wire        _csrMod_io_out_bits_targetPcUpdate;
  wire [63:0] _csrMod_io_out_bits_targetPc_pc;
  wire        _csrMod_io_out_bits_targetPc_raiseIPF;
  wire        _csrMod_io_out_bits_targetPc_raiseIAF;
  wire        _csrMod_io_out_bits_targetPc_raiseIGPF;
  wire [63:0] _csrMod_io_out_bits_regOut;
  wire [1:0]  _csrMod_io_status_privState_PRVM;
  wire        _csrMod_io_status_privState_V;
  wire [6:0]  _csrMod_io_status_vecState_vstart;
  wire [13:0] _csrMod_io_tlb_hgatp_VMID;
  wire        _csrMod_io_toDecode_illegalInst_fsIsOff;
  wire        _csrMod_toAIA_addr_valid;
  wire [11:0] _csrMod_toAIA_addr_bits_addr;
  wire        _csrMod_toAIA_addr_bits_v;
  wire [1:0]  _csrMod_toAIA_addr_bits_prvm;
  wire [5:0]  _csrMod_toAIA_vgein;
  wire        _csrMod_toAIA_wdata_valid;
  wire [1:0]  _csrMod_toAIA_wdata_bits_op;
  wire [63:0] _csrMod_toAIA_wdata_bits_data;
  wire        _csrMod_toAIA_mClaim;
  wire        _csrMod_toAIA_sClaim;
  wire        _csrMod_toAIA_vsClaim;
  wire        _csrMod_io_error_0;
  wire [63:0] csri = {59'h0, io_in_bits_data_imm[16:12]};
  wire        isEcall = io_in_bits_ctrl_fuOpType[4] & io_in_bits_data_imm[11:0] == 12'h0;
  wire        isEbreak = io_in_bits_ctrl_fuOpType[4] & io_in_bits_data_imm[11:0] == 12'h1;
  wire        _io_csrio_isPerfCnt_T_2 = _csrMod_io_in_ready & io_in_valid;
  reg  [11:0] waddrReg;
  reg  [63:0] wdataReg;
  reg         robIdxReg_flag;
  reg  [7:0]  robIdxReg_value;
  wire        thisRobIdx_flag =
    io_in_valid ? io_in_bits_ctrl_robIdx_flag : robIdxReg_flag;
  wire [7:0]  thisRobIdx_value =
    io_in_valid ? io_in_bits_ctrl_robIdx_value : robIdxReg_value;
  reg         trapInstMod_io_fromDecode_trapInstInfo_next_valid_last_REG;
  reg  [31:0] trapInstMod_io_fromDecode_trapInstInfo_next_bits_r_instr;
  reg         trapInstMod_io_fromDecode_trapInstInfo_next_bits_r_ftqPtr_flag;
  reg  [5:0]  trapInstMod_io_fromDecode_trapInstInfo_next_bits_r_ftqPtr_value;
  reg  [3:0]  trapInstMod_io_fromDecode_trapInstInfo_next_bits_r_ftqOffset;
  reg  [8:0]  trapInstMod_io_faultCsrUop_bits_fuOpType_r;
  reg  [63:0] trapInstMod_io_faultCsrUop_bits_imm_r;
  reg         trapInstMod_io_faultCsrUop_bits_ftqInfo_ftqPtr_r_flag;
  reg  [5:0]  trapInstMod_io_faultCsrUop_bits_ftqInfo_ftqPtr_r_value;
  reg  [3:0]  trapInstMod_io_faultCsrUop_bits_ftqInfo_ftqOffset_r;
  reg         exceptionVec_3_r;
  wire        exceptionVec_11_v_PrvmIsM = &_csrMod_io_status_privState_PRVM;
  wire        exceptionVec_11_isModeM = exceptionVec_11_v_PrvmIsM;
  wire        _exceptionVec_11_T = isEcall & exceptionVec_11_isModeM;
  reg         exceptionVec_11_r;
  wire        PrvmIsS = _csrMod_io_status_privState_PRVM == 2'h1;
  wire        exceptionVec_9_isModeHS = ~_csrMod_io_status_privState_V & PrvmIsS;
  wire        _exceptionVec_9_T = isEcall & exceptionVec_9_isModeHS;
  reg         exceptionVec_9_r;
  wire        exceptionVec_10_isModeVS = _csrMod_io_status_privState_V & PrvmIsS;
  wire        _exceptionVec_10_T = isEcall & exceptionVec_10_isModeVS;
  reg         exceptionVec_10_r;
  wire        exceptionVec_8_PrvmIsU = _csrMod_io_status_privState_PRVM == 2'h0;
  wire        _exceptionVec_8_T = isEcall & exceptionVec_8_PrvmIsU;
  reg         exceptionVec_8_r;
  wire        isXRet =
    io_in_valid & io_in_bits_ctrl_fuOpType == 9'h10 & ~isEcall & ~isEbreak;
  reg         io_out_bits_res_redirect_valid_r;
  reg         io_out_bits_res_redirect_bits_ftqIdx_r_flag;
  reg  [5:0]  io_out_bits_res_redirect_bits_ftqIdx_r_value;
  reg  [3:0]  io_out_bits_res_redirect_bits_ftqOffset_r;
  reg         io_out_bits_ctrl_robIdx_r_flag;
  reg  [7:0]  io_out_bits_ctrl_robIdx_r_value;
  reg  [7:0]  io_out_bits_ctrl_pdest_r;
  reg         io_out_bits_ctrl_rfWen_r;
  reg         io_error_0_REG;
  reg         io_error_0_REG_1;
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      waddrReg <= 12'h0;
      wdataReg <= 64'h0;
      trapInstMod_io_fromDecode_trapInstInfo_next_valid_last_REG <= 1'h0;
      exceptionVec_3_r <= 1'h0;
      exceptionVec_11_r <= 1'h0;
      exceptionVec_9_r <= 1'h0;
      exceptionVec_10_r <= 1'h0;
      exceptionVec_8_r <= 1'h0;
      io_out_bits_res_redirect_valid_r <= 1'h0;
    end
    else begin
      if (_io_csrio_isPerfCnt_T_2) begin
        waddrReg <= io_in_bits_data_imm[11:0];
        wdataReg <=
          (io_in_bits_ctrl_fuOpType == 9'h9 ? io_in_bits_data_src_0 : 64'h0)
          | (io_in_bits_ctrl_fuOpType == 9'hA
               ? _csrMod_io_out_bits_regOut | io_in_bits_data_src_0
               : 64'h0)
          | (io_in_bits_ctrl_fuOpType == 9'hB
               ? _csrMod_io_out_bits_regOut & ~io_in_bits_data_src_0
               : 64'h0) | (io_in_bits_ctrl_fuOpType == 9'hD ? csri : 64'h0)
          | (io_in_bits_ctrl_fuOpType == 9'hE ? _csrMod_io_out_bits_regOut | csri : 64'h0)
          | (io_in_bits_ctrl_fuOpType == 9'hF
               ? _csrMod_io_out_bits_regOut
                 & {59'h7FFFFFFFFFFFFFF, ~(io_in_bits_data_imm[16:12])}
               : 64'h0);
        exceptionVec_3_r <= isEbreak;
        exceptionVec_11_r <= _exceptionVec_11_T;
        exceptionVec_9_r <= _exceptionVec_9_T;
        exceptionVec_10_r <= _exceptionVec_10_T;
        exceptionVec_8_r <= _exceptionVec_8_T;
        io_out_bits_res_redirect_valid_r <= isXRet;
      end
      trapInstMod_io_fromDecode_trapInstInfo_next_valid_last_REG <=
        io_csrin_trapInstInfo_valid;
    end
  end // always @(posedge, posedge)
  always @(posedge clock) begin
    if (_io_csrio_isPerfCnt_T_2) begin
      robIdxReg_flag <= io_in_bits_ctrl_robIdx_flag;
      robIdxReg_value <= io_in_bits_ctrl_robIdx_value;
      trapInstMod_io_faultCsrUop_bits_fuOpType_r <= io_in_bits_ctrl_fuOpType;
      trapInstMod_io_faultCsrUop_bits_imm_r <= io_in_bits_data_imm;
      trapInstMod_io_faultCsrUop_bits_ftqInfo_ftqPtr_r_flag <=
        io_in_bits_ctrl_ftqIdx_flag;
      trapInstMod_io_faultCsrUop_bits_ftqInfo_ftqPtr_r_value <=
        io_in_bits_ctrl_ftqIdx_value;
      trapInstMod_io_faultCsrUop_bits_ftqInfo_ftqOffset_r <= io_in_bits_ctrl_ftqOffset;
      io_out_bits_res_redirect_bits_ftqIdx_r_flag <= io_in_bits_ctrl_ftqIdx_flag;
      io_out_bits_res_redirect_bits_ftqIdx_r_value <= io_in_bits_ctrl_ftqIdx_value;
      io_out_bits_res_redirect_bits_ftqOffset_r <= io_in_bits_ctrl_ftqOffset;
      io_out_bits_ctrl_robIdx_r_flag <= io_in_bits_ctrl_robIdx_flag;
      io_out_bits_ctrl_robIdx_r_value <= io_in_bits_ctrl_robIdx_value;
      io_out_bits_ctrl_pdest_r <= io_in_bits_ctrl_pdest;
      io_out_bits_ctrl_rfWen_r <= io_in_bits_ctrl_rfWen;
    end
    if (io_csrin_trapInstInfo_valid) begin
      trapInstMod_io_fromDecode_trapInstInfo_next_bits_r_instr <=
        io_csrin_trapInstInfo_bits_instr;
      trapInstMod_io_fromDecode_trapInstInfo_next_bits_r_ftqPtr_flag <=
        io_csrin_trapInstInfo_bits_ftqPtr_flag;
      trapInstMod_io_fromDecode_trapInstInfo_next_bits_r_ftqPtr_value <=
        io_csrin_trapInstInfo_bits_ftqPtr_value;
      trapInstMod_io_fromDecode_trapInstInfo_next_bits_r_ftqOffset <=
        io_csrin_trapInstInfo_bits_ftqOffset;
    end
    io_error_0_REG <= _csrMod_io_error_0;
    io_error_0_REG_1 <= io_error_0_REG;
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:26];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [4:0] i = 5'h0; i < 5'h1B; i += 5'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        waddrReg = _RANDOM[5'h0][11:0];
        wdataReg = {_RANDOM[5'h0][31:12], _RANDOM[5'h1], _RANDOM[5'h2][11:0]};
        robIdxReg_flag = _RANDOM[5'h2][12];
        robIdxReg_value = _RANDOM[5'h2][20:13];
        trapInstMod_io_fromDecode_trapInstInfo_next_valid_last_REG = _RANDOM[5'h2][21];
        trapInstMod_io_fromDecode_trapInstInfo_next_bits_r_instr =
          {_RANDOM[5'h2][31:22], _RANDOM[5'h3][21:0]};
        trapInstMod_io_fromDecode_trapInstInfo_next_bits_r_ftqPtr_flag =
          _RANDOM[5'h3][22];
        trapInstMod_io_fromDecode_trapInstInfo_next_bits_r_ftqPtr_value =
          _RANDOM[5'h3][28:23];
        trapInstMod_io_fromDecode_trapInstInfo_next_bits_r_ftqOffset =
          {_RANDOM[5'h3][31:29], _RANDOM[5'h4][0]};
        trapInstMod_io_faultCsrUop_bits_fuOpType_r = _RANDOM[5'h4][9:1];
        trapInstMod_io_faultCsrUop_bits_imm_r =
          {_RANDOM[5'h4][31:10], _RANDOM[5'h5], _RANDOM[5'h6][9:0]};
        trapInstMod_io_faultCsrUop_bits_ftqInfo_ftqPtr_r_flag = _RANDOM[5'h6][10];
        trapInstMod_io_faultCsrUop_bits_ftqInfo_ftqPtr_r_value = _RANDOM[5'h6][16:11];
        trapInstMod_io_faultCsrUop_bits_ftqInfo_ftqOffset_r = _RANDOM[5'h6][20:17];
        exceptionVec_3_r = _RANDOM[5'h6][21];
        exceptionVec_11_r = _RANDOM[5'h6][22];
        exceptionVec_9_r = _RANDOM[5'h6][23];
        exceptionVec_10_r = _RANDOM[5'h6][24];
        exceptionVec_8_r = _RANDOM[5'h6][25];
        io_out_bits_res_redirect_valid_r = _RANDOM[5'h6][26];
        io_out_bits_res_redirect_bits_ftqIdx_r_flag = _RANDOM[5'h6][27];
        io_out_bits_res_redirect_bits_ftqIdx_r_value =
          {_RANDOM[5'h6][31:28], _RANDOM[5'h7][1:0]};
        io_out_bits_res_redirect_bits_ftqOffset_r = _RANDOM[5'h7][5:2];
        io_out_bits_ctrl_robIdx_r_flag = _RANDOM[5'h7][6];
        io_out_bits_ctrl_robIdx_r_value = _RANDOM[5'h7][14:7];
        io_out_bits_ctrl_pdest_r = _RANDOM[5'h7][22:15];
        io_out_bits_ctrl_rfWen_r = _RANDOM[5'h7][23];
        io_error_0_REG = _RANDOM[5'h19][31];
        io_error_0_REG_1 = _RANDOM[5'h1A][0];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        waddrReg = 12'h0;
        wdataReg = 64'h0;
        trapInstMod_io_fromDecode_trapInstInfo_next_valid_last_REG = 1'h0;
        exceptionVec_3_r = 1'h0;
        exceptionVec_11_r = 1'h0;
        exceptionVec_9_r = 1'h0;
        exceptionVec_10_r = 1'h0;
        exceptionVec_8_r = 1'h0;
        io_out_bits_res_redirect_valid_r = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  NewCSR csrMod (
    .clock                                                  (clock),
    .reset                                                  (reset),
    .platformIRP_MEIP
      (io_csrio_externalInterrupt_meip),
    .platformIRP_MTIP
      (io_csrio_externalInterrupt_mtip),
    .platformIRP_MSIP
      (io_csrio_externalInterrupt_msip),
    .platformIRP_SEIP
      (io_csrio_externalInterrupt_seip),
    .platformIRP_debugIP
      (io_csrio_externalInterrupt_debug),
    .nonMaskableIRP_NMI_43
      (io_csrio_externalInterrupt_nmi_nmi_43),
    .nonMaskableIRP_NMI_31
      (io_csrio_externalInterrupt_nmi_nmi_31),
    .io_fromTop_hartId                                      (io_csrin_hartId[5:0]),
    .io_fromTop_clintTime_valid                             (io_csrin_clintTime_valid),
    .io_fromTop_clintTime_bits                              (io_csrin_clintTime_bits),
    .io_fromTop_l2FlushDone                                 (io_csrin_l2FlushDone),
    .io_fromTop_criticalErrorState                          (io_csrin_criticalErrorState),
    .io_in_ready                                            (_csrMod_io_in_ready),
    .io_in_valid                                            (io_in_valid),
    .io_in_bits_wen
      (io_in_valid
       & (io_in_bits_ctrl_fuOpType[3] & io_in_bits_ctrl_fuOpType[1:0] == 2'h1
          | io_in_bits_ctrl_fuOpType[3] & io_in_bits_ctrl_fuOpType[1]
          & (|(io_in_bits_data_imm[16:12])))),
    .io_in_bits_ren
      (io_in_valid
       & (io_in_bits_ctrl_fuOpType[3] & io_in_bits_ctrl_fuOpType[1:0] == 2'h1
          & (|(io_in_bits_data_imm[21:17])) | io_in_bits_ctrl_fuOpType[3]
          & io_in_bits_ctrl_fuOpType[1])),
    .io_in_bits_op
      (io_in_bits_ctrl_fuOpType[1:0]),
    .io_in_bits_addr                                        (io_in_bits_data_imm[11:0]),
    .io_in_bits_src
      (io_in_bits_ctrl_fuOpType[2] ? csri : io_in_bits_data_src_0),
    .io_in_bits_wdata                                       (wdataReg),
    .io_in_bits_mnret
      (io_in_bits_ctrl_fuOpType[4] & io_in_bits_data_imm[11:0] == 12'h702),
    .io_in_bits_mret
      (io_in_bits_ctrl_fuOpType[4] & io_in_bits_data_imm[11:0] == 12'h302),
    .io_in_bits_sret
      (io_in_bits_ctrl_fuOpType[4] & io_in_bits_data_imm[11:0] == 12'h102),
    .io_in_bits_dret
      (io_in_bits_ctrl_fuOpType[4] & io_in_bits_data_imm[11:0] == 12'h7B2),
    .io_in_bits_redirectFlush
      (io_flush_valid
       & (io_flush_bits_level
          & {thisRobIdx_flag,
             thisRobIdx_value} == {io_flush_bits_robIdx_flag, io_flush_bits_robIdx_value}
          | thisRobIdx_flag ^ io_flush_bits_robIdx_flag
          ^ thisRobIdx_value > io_flush_bits_robIdx_value)),
    .io_trapInst_valid
      (_trapInstMod_io_currentTrapInst_valid),
    .io_trapInst_bits
      (_trapInstMod_io_currentTrapInst_bits),
    .io_fromMem_excpVA                                      (io_csrio_memExceptionVAddr),
    .io_fromMem_excpGPA                                     (io_csrio_memExceptionGPAddr),
    .io_fromMem_excpIsForVSnonLeafPTE
      (io_csrio_memExceptionIsForVSnonLeafPTE),
    .io_fromRob_trap_valid                                  (io_csrio_exception_valid),
    .io_fromRob_trap_bits_pc                                (io_csrio_exception_bits_pc),
    .io_fromRob_trap_bits_pcGPA
      (io_csrio_exception_bits_gpaddr[55:0]),
    .io_fromRob_trap_bits_trapVec
      ({40'h0,
        io_csrio_exception_bits_exceptionVec_23,
        io_csrio_exception_bits_exceptionVec_22,
        io_csrio_exception_bits_exceptionVec_21,
        io_csrio_exception_bits_exceptionVec_20,
        io_csrio_exception_bits_exceptionVec_19,
        io_csrio_exception_bits_exceptionVec_18,
        io_csrio_exception_bits_exceptionVec_17,
        io_csrio_exception_bits_exceptionVec_16,
        io_csrio_exception_bits_exceptionVec_15,
        io_csrio_exception_bits_exceptionVec_14,
        io_csrio_exception_bits_exceptionVec_13,
        io_csrio_exception_bits_exceptionVec_12,
        io_csrio_exception_bits_exceptionVec_11,
        io_csrio_exception_bits_exceptionVec_10,
        io_csrio_exception_bits_exceptionVec_9,
        io_csrio_exception_bits_exceptionVec_8,
        io_csrio_exception_bits_exceptionVec_7,
        io_csrio_exception_bits_exceptionVec_6,
        io_csrio_exception_bits_exceptionVec_5,
        io_csrio_exception_bits_exceptionVec_4,
        io_csrio_exception_bits_exceptionVec_3,
        io_csrio_exception_bits_exceptionVec_2,
        io_csrio_exception_bits_exceptionVec_1,
        io_csrio_exception_bits_exceptionVec_0}),
    .io_fromRob_trap_bits_isFetchBkpt
      (io_csrio_exception_bits_isPcBkpt),
    .io_fromRob_trap_bits_singleStep
      (io_csrio_exception_bits_singleStep),
    .io_fromRob_trap_bits_trigger
      (io_csrio_exception_bits_trigger),
    .io_fromRob_trap_bits_crossPageIPFFix
      (io_csrio_exception_bits_crossPageIPFFix),
    .io_fromRob_trap_bits_isInterrupt
      (io_csrio_exception_bits_isInterrupt),
    .io_fromRob_trap_bits_isHls
      (io_csrio_exception_bits_isHls),
    .io_fromRob_trap_bits_isFetchMalAddr
      (io_csrio_exception_bits_isFetchMalAddr),
    .io_fromRob_trap_bits_isForVSnonLeafPTE
      (io_csrio_exception_bits_isForVSnonLeafPTE),
    .io_fromRob_commit_instNum_bits                         (io_csrio_perf_retiredInstr),
    .io_fromRob_commit_fflags_valid                         (io_csrio_fpu_fflags_valid),
    .io_fromRob_commit_fflags_bits                          (io_csrio_fpu_fflags_bits),
    .io_fromRob_commit_fsDirty                              (io_csrio_fpu_dirty_fs),
    .io_fromRob_commit_vxsat_valid
      (io_csrio_vpu_set_vxsat_valid),
    .io_fromRob_commit_vxsat_bits                           (io_csrio_vpu_set_vxsat_bits),
    .io_fromRob_commit_vsDirty                              (io_csrio_vpu_dirty_vs),
    .io_fromRob_commit_vtype_valid
      (io_csrio_vpu_set_vtype_valid),
    .io_fromRob_commit_vtype_bits_VILL
      (io_csrio_vpu_set_vtype_bits[63]),
    .io_fromRob_commit_vtype_bits_VMA
      (io_csrio_vpu_set_vtype_bits[7]),
    .io_fromRob_commit_vtype_bits_VTA
      (io_csrio_vpu_set_vtype_bits[6]),
    .io_fromRob_commit_vtype_bits_VSEW
      (io_csrio_vpu_set_vtype_bits[5:3]),
    .io_fromRob_commit_vtype_bits_VLMUL
      (io_csrio_vpu_set_vtype_bits[2:0]),
    .io_fromRob_commit_vstart_valid
      (io_csrio_vpu_set_vstart_valid),
    .io_fromRob_commit_vstart_bits
      (io_csrio_vpu_set_vstart_bits[6:0]),
    .io_perf_perfEventsFrontend_0_value
      (io_csrio_perf_perfEventsFrontend_0_value),
    .io_perf_perfEventsFrontend_1_value
      (io_csrio_perf_perfEventsFrontend_1_value),
    .io_perf_perfEventsFrontend_2_value
      (io_csrio_perf_perfEventsFrontend_2_value),
    .io_perf_perfEventsFrontend_3_value
      (io_csrio_perf_perfEventsFrontend_3_value),
    .io_perf_perfEventsFrontend_4_value
      (io_csrio_perf_perfEventsFrontend_4_value),
    .io_perf_perfEventsFrontend_5_value
      (io_csrio_perf_perfEventsFrontend_5_value),
    .io_perf_perfEventsFrontend_6_value
      (io_csrio_perf_perfEventsFrontend_6_value),
    .io_perf_perfEventsFrontend_7_value
      (io_csrio_perf_perfEventsFrontend_7_value),
    .io_perf_perfEventsBackend_0_value
      (io_csrio_perf_perfEventsBackend_0_value),
    .io_perf_perfEventsBackend_1_value
      (io_csrio_perf_perfEventsBackend_1_value),
    .io_perf_perfEventsBackend_2_value
      (io_csrio_perf_perfEventsBackend_2_value),
    .io_perf_perfEventsBackend_3_value
      (io_csrio_perf_perfEventsBackend_3_value),
    .io_perf_perfEventsBackend_4_value
      (io_csrio_perf_perfEventsBackend_4_value),
    .io_perf_perfEventsBackend_5_value
      (io_csrio_perf_perfEventsBackend_5_value),
    .io_perf_perfEventsBackend_6_value
      (io_csrio_perf_perfEventsBackend_6_value),
    .io_perf_perfEventsBackend_7_value
      (io_csrio_perf_perfEventsBackend_7_value),
    .io_perf_perfEventsLsu_0_value
      (io_csrio_perf_perfEventsLsu_0_value),
    .io_perf_perfEventsLsu_1_value
      (io_csrio_perf_perfEventsLsu_1_value),
    .io_perf_perfEventsLsu_2_value
      (io_csrio_perf_perfEventsLsu_2_value),
    .io_perf_perfEventsLsu_3_value
      (io_csrio_perf_perfEventsLsu_3_value),
    .io_perf_perfEventsLsu_4_value
      (io_csrio_perf_perfEventsLsu_4_value),
    .io_perf_perfEventsLsu_5_value
      (io_csrio_perf_perfEventsLsu_5_value),
    .io_perf_perfEventsLsu_6_value
      (io_csrio_perf_perfEventsLsu_6_value),
    .io_perf_perfEventsLsu_7_value
      (io_csrio_perf_perfEventsLsu_7_value),
    .io_perf_perfEventsHc_0_value
      (io_csrio_perf_perfEventsHc_0_value),
    .io_perf_perfEventsHc_1_value
      (io_csrio_perf_perfEventsHc_1_value),
    .io_perf_perfEventsHc_2_value
      (io_csrio_perf_perfEventsHc_2_value),
    .io_perf_perfEventsHc_3_value
      (io_csrio_perf_perfEventsHc_3_value),
    .io_perf_perfEventsHc_4_value
      (io_csrio_perf_perfEventsHc_4_value),
    .io_perf_perfEventsHc_5_value
      (io_csrio_perf_perfEventsHc_5_value),
    .io_perf_perfEventsHc_6_value
      (io_csrio_perf_perfEventsHc_6_value),
    .io_perf_perfEventsHc_7_value
      (io_csrio_perf_perfEventsHc_7_value),
    .io_perf_perfEventsHc_8_value
      (io_csrio_perf_perfEventsHc_8_value),
    .io_perf_perfEventsHc_9_value
      (io_csrio_perf_perfEventsHc_9_value),
    .io_perf_perfEventsHc_10_value
      (io_csrio_perf_perfEventsHc_10_value),
    .io_perf_perfEventsHc_11_value
      (io_csrio_perf_perfEventsHc_11_value),
    .io_perf_perfEventsHc_12_value
      (io_csrio_perf_perfEventsHc_12_value),
    .io_perf_perfEventsHc_13_value
      (io_csrio_perf_perfEventsHc_13_value),
    .io_perf_perfEventsHc_14_value
      (io_csrio_perf_perfEventsHc_14_value),
    .io_perf_perfEventsHc_15_value
      (io_csrio_perf_perfEventsHc_15_value),
    .io_perf_perfEventsHc_16_value
      (io_csrio_perf_perfEventsHc_16_value),
    .io_perf_perfEventsHc_17_value
      (io_csrio_perf_perfEventsHc_17_value),
    .io_perf_perfEventsHc_18_value
      (io_csrio_perf_perfEventsHc_18_value),
    .io_perf_perfEventsHc_19_value
      (io_csrio_perf_perfEventsHc_19_value),
    .io_perf_perfEventsHc_20_value
      (io_csrio_perf_perfEventsHc_20_value),
    .io_perf_perfEventsHc_21_value
      (io_csrio_perf_perfEventsHc_21_value),
    .io_perf_perfEventsHc_22_value
      (io_csrio_perf_perfEventsHc_22_value),
    .io_perf_perfEventsHc_23_value
      (io_csrio_perf_perfEventsHc_23_value),
    .io_perf_perfEventsHc_24_value
      (io_csrio_perf_perfEventsHc_24_value),
    .io_perf_perfEventsHc_25_value
      (io_csrio_perf_perfEventsHc_25_value),
    .io_perf_perfEventsHc_26_value
      (io_csrio_perf_perfEventsHc_26_value),
    .io_perf_perfEventsHc_27_value
      (io_csrio_perf_perfEventsHc_27_value),
    .io_perf_perfEventsHc_28_value
      (io_csrio_perf_perfEventsHc_28_value),
    .io_perf_perfEventsHc_29_value
      (io_csrio_perf_perfEventsHc_29_value),
    .io_perf_perfEventsHc_30_value
      (io_csrio_perf_perfEventsHc_30_value),
    .io_perf_perfEventsHc_31_value
      (io_csrio_perf_perfEventsHc_31_value),
    .io_perf_perfEventsHc_32_value
      (io_csrio_perf_perfEventsHc_32_value),
    .io_perf_perfEventsHc_33_value
      (io_csrio_perf_perfEventsHc_33_value),
    .io_perf_perfEventsHc_34_value
      (io_csrio_perf_perfEventsHc_34_value),
    .io_perf_perfEventsHc_35_value
      (io_csrio_perf_perfEventsHc_35_value),
    .io_perf_perfEventsHc_36_value
      (io_csrio_perf_perfEventsHc_36_value),
    .io_perf_perfEventsHc_37_value
      (io_csrio_perf_perfEventsHc_37_value),
    .io_perf_perfEventsHc_38_value
      (io_csrio_perf_perfEventsHc_38_value),
    .io_perf_perfEventsHc_39_value
      (io_csrio_perf_perfEventsHc_39_value),
    .io_perf_perfEventsHc_40_value
      (io_csrio_perf_perfEventsHc_40_value),
    .io_perf_perfEventsHc_41_value
      (io_csrio_perf_perfEventsHc_41_value),
    .io_perf_perfEventsHc_42_value
      (io_csrio_perf_perfEventsHc_42_value),
    .io_perf_perfEventsHc_43_value
      (io_csrio_perf_perfEventsHc_43_value),
    .io_perf_perfEventsHc_44_value
      (io_csrio_perf_perfEventsHc_44_value),
    .io_perf_perfEventsHc_45_value
      (io_csrio_perf_perfEventsHc_45_value),
    .io_perf_perfEventsHc_46_value
      (io_csrio_perf_perfEventsHc_46_value),
    .io_perf_perfEventsHc_47_value
      (io_csrio_perf_perfEventsHc_47_value),
    .io_out_ready                                           (io_out_ready),
    .io_out_valid                                           (_csrMod_io_out_valid),
    .io_out_bits_EX_II                                      (_csrMod_io_out_bits_EX_II),
    .io_out_bits_EX_VI                                      (_csrMod_io_out_bits_EX_VI),
    .io_out_bits_flushPipe                                  (io_out_bits_ctrl_flushPipe),
    .io_out_bits_rData                                      (io_out_bits_res_data),
    .io_out_bits_targetPcUpdate
      (_csrMod_io_out_bits_targetPcUpdate),
    .io_out_bits_targetPc_pc
      (_csrMod_io_out_bits_targetPc_pc),
    .io_out_bits_targetPc_raiseIPF
      (_csrMod_io_out_bits_targetPc_raiseIPF),
    .io_out_bits_targetPc_raiseIAF
      (_csrMod_io_out_bits_targetPc_raiseIAF),
    .io_out_bits_targetPc_raiseIGPF
      (_csrMod_io_out_bits_targetPc_raiseIGPF),
    .io_out_bits_regOut                                     (_csrMod_io_out_bits_regOut),
    .io_status_privState_PRVM
      (_csrMod_io_status_privState_PRVM),
    .io_status_privState_V
      (_csrMod_io_status_privState_V),
    .io_status_interrupt                                    (io_csrio_interrupt),
    .io_status_wfiEvent                                     (io_csrio_wfi_event),
    .io_status_fpState_frm                                  (io_csrio_fpu_frm),
    .io_status_vecState_vstart
      (_csrMod_io_status_vecState_vstart),
    .io_status_vecState_vxrm                                (io_csrio_vpu_vxrm),
    .io_status_singleStepFlag
      (io_csrio_customCtrl_singlestep),
    .io_status_frontendTrigger_tUpdate_valid
      (io_csrio_customCtrl_frontend_trigger_tUpdate_valid),
    .io_status_frontendTrigger_tUpdate_bits_addr
      (io_csrio_customCtrl_frontend_trigger_tUpdate_bits_addr),
    .io_status_frontendTrigger_tUpdate_bits_tdata_matchType
      (io_csrio_customCtrl_frontend_trigger_tUpdate_bits_tdata_matchType),
    .io_status_frontendTrigger_tUpdate_bits_tdata_select
      (io_csrio_customCtrl_frontend_trigger_tUpdate_bits_tdata_select),
    .io_status_frontendTrigger_tUpdate_bits_tdata_action
      (io_csrio_customCtrl_frontend_trigger_tUpdate_bits_tdata_action),
    .io_status_frontendTrigger_tUpdate_bits_tdata_chain
      (io_csrio_customCtrl_frontend_trigger_tUpdate_bits_tdata_chain),
    .io_status_frontendTrigger_tUpdate_bits_tdata_tdata2
      (io_csrio_customCtrl_frontend_trigger_tUpdate_bits_tdata_tdata2),
    .io_status_frontendTrigger_tEnableVec_0
      (io_csrio_customCtrl_frontend_trigger_tEnableVec_0),
    .io_status_frontendTrigger_tEnableVec_1
      (io_csrio_customCtrl_frontend_trigger_tEnableVec_1),
    .io_status_frontendTrigger_tEnableVec_2
      (io_csrio_customCtrl_frontend_trigger_tEnableVec_2),
    .io_status_frontendTrigger_tEnableVec_3
      (io_csrio_customCtrl_frontend_trigger_tEnableVec_3),
    .io_status_frontendTrigger_debugMode
      (io_csrio_customCtrl_frontend_trigger_debugMode),
    .io_status_frontendTrigger_triggerCanRaiseBpExp
      (io_csrio_customCtrl_frontend_trigger_triggerCanRaiseBpExp),
    .io_status_memTrigger_tUpdate_valid
      (io_csrio_customCtrl_mem_trigger_tUpdate_valid),
    .io_status_memTrigger_tUpdate_bits_addr
      (io_csrio_customCtrl_mem_trigger_tUpdate_bits_addr),
    .io_status_memTrigger_tUpdate_bits_tdata_matchType
      (io_csrio_customCtrl_mem_trigger_tUpdate_bits_tdata_matchType),
    .io_status_memTrigger_tUpdate_bits_tdata_select
      (io_csrio_customCtrl_mem_trigger_tUpdate_bits_tdata_select),
    .io_status_memTrigger_tUpdate_bits_tdata_action
      (io_csrio_customCtrl_mem_trigger_tUpdate_bits_tdata_action),
    .io_status_memTrigger_tUpdate_bits_tdata_chain
      (io_csrio_customCtrl_mem_trigger_tUpdate_bits_tdata_chain),
    .io_status_memTrigger_tUpdate_bits_tdata_store
      (io_csrio_customCtrl_mem_trigger_tUpdate_bits_tdata_store),
    .io_status_memTrigger_tUpdate_bits_tdata_load
      (io_csrio_customCtrl_mem_trigger_tUpdate_bits_tdata_load),
    .io_status_memTrigger_tUpdate_bits_tdata_tdata2
      (io_csrio_customCtrl_mem_trigger_tUpdate_bits_tdata_tdata2),
    .io_status_memTrigger_tEnableVec_0
      (io_csrio_customCtrl_mem_trigger_tEnableVec_0),
    .io_status_memTrigger_tEnableVec_1
      (io_csrio_customCtrl_mem_trigger_tEnableVec_1),
    .io_status_memTrigger_tEnableVec_2
      (io_csrio_customCtrl_mem_trigger_tEnableVec_2),
    .io_status_memTrigger_tEnableVec_3
      (io_csrio_customCtrl_mem_trigger_tEnableVec_3),
    .io_status_memTrigger_debugMode
      (io_csrio_customCtrl_mem_trigger_debugMode),
    .io_status_memTrigger_triggerCanRaiseBpExp
      (io_csrio_customCtrl_mem_trigger_triggerCanRaiseBpExp),
    .io_status_instrAddrTransType_bare
      (io_csrio_instrAddrTransType_bare),
    .io_status_instrAddrTransType_sv39
      (io_csrio_instrAddrTransType_sv39),
    .io_status_instrAddrTransType_sv39x4
      (io_csrio_instrAddrTransType_sv39x4),
    .io_status_instrAddrTransType_sv48
      (io_csrio_instrAddrTransType_sv48),
    .io_status_instrAddrTransType_sv48x4
      (io_csrio_instrAddrTransType_sv48x4),
    .io_status_traceCSR_cause                               (io_csrio_traceCSR_cause),
    .io_status_traceCSR_tval                                (io_csrio_traceCSR_tval),
    .io_status_traceCSR_lastPriv                            (io_csrio_traceCSR_lastPriv),
    .io_status_traceCSR_currentPriv
      (io_csrio_traceCSR_currentPriv),
    .io_status_custom_pf_ctrl_l1I_pf_enable
      (io_csrio_customCtrl_pf_ctrl_l1I_pf_enable),
    .io_status_custom_pf_ctrl_l2_pf_enable
      (io_csrio_customCtrl_pf_ctrl_l2_pf_enable),
    .io_status_custom_pf_ctrl_l1D_pf_enable
      (io_csrio_customCtrl_pf_ctrl_l1D_pf_enable),
    .io_status_custom_pf_ctrl_l1D_pf_train_on_hit
      (io_csrio_customCtrl_pf_ctrl_l1D_pf_train_on_hit),
    .io_status_custom_pf_ctrl_l1D_pf_enable_agt
      (io_csrio_customCtrl_pf_ctrl_l1D_pf_enable_agt),
    .io_status_custom_pf_ctrl_l1D_pf_enable_pht
      (io_csrio_customCtrl_pf_ctrl_l1D_pf_enable_pht),
    .io_status_custom_pf_ctrl_l1D_pf_active_threshold
      (io_csrio_customCtrl_pf_ctrl_l1D_pf_active_threshold),
    .io_status_custom_pf_ctrl_l1D_pf_active_stride
      (io_csrio_customCtrl_pf_ctrl_l1D_pf_active_stride),
    .io_status_custom_pf_ctrl_l2_pf_store_only
      (io_csrio_customCtrl_pf_ctrl_l2_pf_store_only),
    .io_status_custom_pf_ctrl_l2_pf_recv_enable
      (io_csrio_customCtrl_pf_ctrl_l2_pf_recv_enable),
    .io_status_custom_pf_ctrl_l2_pf_pbop_enable
      (io_csrio_customCtrl_pf_ctrl_l2_pf_pbop_enable),
    .io_status_custom_pf_ctrl_l2_pf_vbop_enable
      (io_csrio_customCtrl_pf_ctrl_l2_pf_vbop_enable),
    .io_status_custom_pf_ctrl_l2_pf_tp_enable
      (io_csrio_customCtrl_pf_ctrl_l2_pf_tp_enable),
    .io_status_custom_bp_ctrl_ubtb_enable
      (io_csrio_customCtrl_bp_ctrl_ubtb_enable),
    .io_status_custom_bp_ctrl_btb_enable
      (io_csrio_customCtrl_bp_ctrl_btb_enable),
    .io_status_custom_bp_ctrl_tage_enable
      (io_csrio_customCtrl_bp_ctrl_tage_enable),
    .io_status_custom_bp_ctrl_sc_enable
      (io_csrio_customCtrl_bp_ctrl_sc_enable),
    .io_status_custom_bp_ctrl_ras_enable
      (io_csrio_customCtrl_bp_ctrl_ras_enable),
    .io_status_custom_ldld_vio_check_enable
      (io_csrio_customCtrl_ldld_vio_check_enable),
    .io_status_custom_cache_error_enable
      (io_csrio_customCtrl_cache_error_enable),
    .io_status_custom_uncache_write_outstanding_enable
      (io_csrio_customCtrl_uncache_write_outstanding_enable),
    .io_status_custom_hd_misalign_st_enable
      (io_csrio_customCtrl_hd_misalign_st_enable),
    .io_status_custom_hd_misalign_ld_enable
      (io_csrio_customCtrl_hd_misalign_ld_enable),
    .io_status_custom_power_down_enable
      (io_csrio_customCtrl_power_down_enable),
    .io_status_custom_flush_l2_enable
      (io_csrio_customCtrl_flush_l2_enable),
    .io_status_custom_fusion_enable
      (io_csrio_customCtrl_fusion_enable),
    .io_status_custom_wfi_enable
      (io_csrio_customCtrl_wfi_enable),
    .io_status_criticalErrorState                           (io_csrio_criticalErrorState),
    .io_tlb_satpASIDChanged                                 (io_csrio_tlb_satp_changed),
    .io_tlb_vsatpASIDChanged                                (io_csrio_tlb_vsatp_changed),
    .io_tlb_hgatpVMIDChanged                                (io_csrio_tlb_hgatp_changed),
    .io_tlb_satp_MODE                                       (io_csrio_tlb_satp_mode),
    .io_tlb_satp_ASID                                       (io_csrio_tlb_satp_asid),
    .io_tlb_satp_PPN                                        (io_csrio_tlb_satp_ppn),
    .io_tlb_vsatp_MODE                                      (io_csrio_tlb_vsatp_mode),
    .io_tlb_vsatp_ASID                                      (io_csrio_tlb_vsatp_asid),
    .io_tlb_vsatp_PPN                                       (io_csrio_tlb_vsatp_ppn),
    .io_tlb_hgatp_MODE                                      (io_csrio_tlb_hgatp_mode),
    .io_tlb_hgatp_VMID                                      (_csrMod_io_tlb_hgatp_VMID),
    .io_tlb_hgatp_PPN                                       (io_csrio_tlb_hgatp_ppn),
    .io_tlb_mxr                                             (io_csrio_tlb_priv_mxr),
    .io_tlb_sum                                             (io_csrio_tlb_priv_sum),
    .io_tlb_vmxr                                            (io_csrio_tlb_priv_vmxr),
    .io_tlb_vsum                                            (io_csrio_tlb_priv_vsum),
    .io_tlb_spvp                                            (io_csrio_tlb_priv_spvp),
    .io_tlb_imode                                           (io_csrio_tlb_priv_imode),
    .io_tlb_dmode                                           (io_csrio_tlb_priv_dmode),
    .io_tlb_dvirt                                           (io_csrio_tlb_priv_virt),
    .io_tlb_mPBMTE                                          (io_csrio_tlb_mPBMTE),
    .io_tlb_hPBMTE                                          (io_csrio_tlb_hPBMTE),
    .io_tlb_pmm_mseccfg                                     (io_csrio_tlb_pmm_mseccfg),
    .io_tlb_pmm_menvcfg                                     (io_csrio_tlb_pmm_menvcfg),
    .io_tlb_pmm_henvcfg                                     (io_csrio_tlb_pmm_henvcfg),
    .io_tlb_pmm_hstatus                                     (io_csrio_tlb_pmm_hstatus),
    .io_tlb_pmm_senvcfg                                     (io_csrio_tlb_pmm_senvcfg),
    .io_toDecode_illegalInst_sfenceVMA
      (io_csrToDecode_illegalInst_sfenceVMA),
    .io_toDecode_illegalInst_sfencePart
      (io_csrToDecode_illegalInst_sfencePart),
    .io_toDecode_illegalInst_hfenceGVMA
      (io_csrToDecode_illegalInst_hfenceGVMA),
    .io_toDecode_illegalInst_hfenceVVMA
      (io_csrToDecode_illegalInst_hfenceVVMA),
    .io_toDecode_illegalInst_hlsv
      (io_csrToDecode_illegalInst_hlsv),
    .io_toDecode_illegalInst_fsIsOff
      (_csrMod_io_toDecode_illegalInst_fsIsOff),
    .io_toDecode_illegalInst_vsIsOff
      (io_csrToDecode_illegalInst_vsIsOff),
    .io_toDecode_illegalInst_wfi
      (io_csrToDecode_illegalInst_wfi),
    .io_toDecode_illegalInst_wrs_nto
      (io_csrToDecode_illegalInst_wrs_nto),
    .io_toDecode_illegalInst_frm
      (io_csrToDecode_illegalInst_frm),
    .io_toDecode_illegalInst_cboZ
      (io_csrToDecode_illegalInst_cboZ),
    .io_toDecode_illegalInst_cboCF
      (io_csrToDecode_illegalInst_cboCF),
    .io_toDecode_illegalInst_cboI
      (io_csrToDecode_illegalInst_cboI),
    .io_toDecode_virtualInst_sfenceVMA
      (io_csrToDecode_virtualInst_sfenceVMA),
    .io_toDecode_virtualInst_sfencePart
      (io_csrToDecode_virtualInst_sfencePart),
    .io_toDecode_virtualInst_hfence
      (io_csrToDecode_virtualInst_hfence),
    .io_toDecode_virtualInst_hlsv
      (io_csrToDecode_virtualInst_hlsv),
    .io_toDecode_virtualInst_wfi
      (io_csrToDecode_virtualInst_wfi),
    .io_toDecode_virtualInst_wrs_nto
      (io_csrToDecode_virtualInst_wrs_nto),
    .io_toDecode_virtualInst_cboZ
      (io_csrToDecode_virtualInst_cboZ),
    .io_toDecode_virtualInst_cboCF
      (io_csrToDecode_virtualInst_cboCF),
    .io_toDecode_virtualInst_cboI
      (io_csrToDecode_virtualInst_cboI),
    .io_toDecode_special_cboI2F
      (io_csrToDecode_special_cboI2F),
    .io_fetchMalTval                                        (_trapTvalMod_io_tval),
    .io_distributedWenLegal
      (io_csrio_customCtrl_distribute_csr_w_valid),
    .toAIA_addr_valid                                       (_csrMod_toAIA_addr_valid),
    .toAIA_addr_bits_addr
      (_csrMod_toAIA_addr_bits_addr),
    .toAIA_addr_bits_v                                      (_csrMod_toAIA_addr_bits_v),
    .toAIA_addr_bits_prvm
      (_csrMod_toAIA_addr_bits_prvm),
    .toAIA_vgein                                            (_csrMod_toAIA_vgein),
    .toAIA_wdata_valid                                      (_csrMod_toAIA_wdata_valid),
    .toAIA_wdata_bits_op                                    (_csrMod_toAIA_wdata_bits_op),
    .toAIA_wdata_bits_data
      (_csrMod_toAIA_wdata_bits_data),
    .toAIA_mClaim                                           (_csrMod_toAIA_mClaim),
    .toAIA_sClaim                                           (_csrMod_toAIA_sClaim),
    .toAIA_vsClaim                                          (_csrMod_toAIA_vsClaim),
    .fromAIA_rdata_valid                                    (_imsic_o_csr_rdata_valid),
    .fromAIA_rdata_bits_data
      (_imsic_o_csr_rdata_bits_rdata),
    .fromAIA_rdata_bits_illegal
      (_imsic_o_csr_rdata_bits_illegal),
    .fromAIA_meip                                           (_imsic_o_meip),
    .fromAIA_seip                                           (_imsic_o_seip),
    .fromAIA_vseip                                          (_imsic_o_vseip),
    .fromAIA_mtopei_IID                                     (_imsic_o_mtopei[26:16]),
    .fromAIA_mtopei_IPRIO                                   (_imsic_o_mtopei[10:0]),
    .fromAIA_stopei_IID                                     (_imsic_o_stopei[26:16]),
    .fromAIA_stopei_IPRIO                                   (_imsic_o_stopei[10:0]),
    .fromAIA_vstopei_IID                                    (_imsic_o_vstopei[26:16]),
    .fromAIA_vstopei_IPRIO                                  (_imsic_o_vstopei[10:0]),
    .io_error_0                                             (_csrMod_io_error_0)
  );
  TrapInstMod trapInstMod (
    .clock                                        (clock),
    .reset                                        (reset),
    .io_fromDecode_trapInstInfo_valid
      (trapInstMod_io_fromDecode_trapInstInfo_next_valid_last_REG),
    .io_fromDecode_trapInstInfo_bits_instr
      (trapInstMod_io_fromDecode_trapInstInfo_next_bits_r_instr),
    .io_fromDecode_trapInstInfo_bits_ftqPtr_flag
      (trapInstMod_io_fromDecode_trapInstInfo_next_bits_r_ftqPtr_flag),
    .io_fromDecode_trapInstInfo_bits_ftqPtr_value
      (trapInstMod_io_fromDecode_trapInstInfo_next_bits_r_ftqPtr_value),
    .io_fromDecode_trapInstInfo_bits_ftqOffset
      (trapInstMod_io_fromDecode_trapInstInfo_next_bits_r_ftqOffset),
    .io_fromRob_flush_valid                       (io_flush_valid),
    .io_fromRob_flush_bits_ftqPtr_flag            (io_flush_bits_ftqIdx_flag),
    .io_fromRob_flush_bits_ftqPtr_value           (io_flush_bits_ftqIdx_value),
    .io_fromRob_flush_bits_ftqOffset              (io_flush_bits_ftqOffset),
    .io_faultCsrUop_valid
      (_csrMod_io_out_valid & (_csrMod_io_out_bits_EX_II | _csrMod_io_out_bits_EX_VI)),
    .io_faultCsrUop_bits_fuOpType
      (_io_csrio_isPerfCnt_T_2
         ? io_in_bits_ctrl_fuOpType
         : trapInstMod_io_faultCsrUop_bits_fuOpType_r),
    .io_faultCsrUop_bits_imm
      (_io_csrio_isPerfCnt_T_2
         ? io_in_bits_data_imm[21:0]
         : trapInstMod_io_faultCsrUop_bits_imm_r[21:0]),
    .io_faultCsrUop_bits_ftqInfo_ftqPtr_flag
      (_io_csrio_isPerfCnt_T_2
         ? io_in_bits_ctrl_ftqIdx_flag
         : trapInstMod_io_faultCsrUop_bits_ftqInfo_ftqPtr_r_flag),
    .io_faultCsrUop_bits_ftqInfo_ftqPtr_value
      (_io_csrio_isPerfCnt_T_2
         ? io_in_bits_ctrl_ftqIdx_value
         : trapInstMod_io_faultCsrUop_bits_ftqInfo_ftqPtr_r_value),
    .io_faultCsrUop_bits_ftqInfo_ftqOffset
      (_io_csrio_isPerfCnt_T_2
         ? io_in_bits_ctrl_ftqOffset
         : trapInstMod_io_faultCsrUop_bits_ftqInfo_ftqOffset_r),
    .io_readClear
      (io_csrio_exception_valid & ~io_csrio_exception_bits_isInterrupt
       & (io_csrio_exception_bits_exceptionVec_2
          | io_csrio_exception_bits_exceptionVec_22)),
    .io_currentTrapInst_valid                     (_trapInstMod_io_currentTrapInst_valid),
    .io_currentTrapInst_bits                      (_trapInstMod_io_currentTrapInst_bits)
  );
  TrapTvalMod trapTvalMod (
    .clock                                             (clock),
    .reset                                             (reset),
    .io_fromCtrlBlock_flush_valid                      (io_flush_valid),
    .io_fromCtrlBlock_flush_bits_robIdx_flag           (io_flush_bits_robIdx_flag),
    .io_fromCtrlBlock_flush_bits_robIdx_value          (io_flush_bits_robIdx_value),
    .io_fromCtrlBlock_flush_bits_cfiUpdate_backendIGPF
      (io_flush_bits_cfiUpdate_backendIGPF),
    .io_fromCtrlBlock_flush_bits_cfiUpdate_backendIPF
      (io_flush_bits_cfiUpdate_backendIPF),
    .io_fromCtrlBlock_flush_bits_cfiUpdate_backendIAF
      (io_flush_bits_cfiUpdate_backendIAF),
    .io_fromCtrlBlock_flush_bits_fullTarget            (io_flush_bits_fullTarget),
    .io_fromCtrlBlock_robDeqPtr_flag                   (io_csrio_robDeqPtr_flag),
    .io_fromCtrlBlock_robDeqPtr_value                  (io_csrio_robDeqPtr_value),
    .io_targetPc_valid
      (_csrMod_io_out_bits_targetPcUpdate),
    .io_targetPc_bits_pc                               (_csrMod_io_out_bits_targetPc_pc),
    .io_targetPc_bits_raiseIPF
      (_csrMod_io_out_bits_targetPc_raiseIPF),
    .io_targetPc_bits_raiseIAF
      (_csrMod_io_out_bits_targetPc_raiseIAF),
    .io_targetPc_bits_raiseIGPF
      (_csrMod_io_out_bits_targetPc_raiseIGPF),
    .io_clear
      (io_csrio_exception_valid & io_csrio_exception_bits_isFetchMalAddr),
    .io_tval                                           (_trapTvalMod_io_tval)
  );
  IMSIC imsic (
    .clock                    (clock),
    .reset                    (reset),
    .i_msiInfo_valid          (io_csrin_msiInfo_valid),
    .i_msiInfo_bits_info      (io_csrin_msiInfo_bits_info[11:0]),
    .i_hartId                 (io_csrin_hartId[0]),
    .i_csr_addr_valid         (_csrMod_toAIA_addr_valid),
    .i_csr_addr_bits_addr     (_csrMod_toAIA_addr_bits_addr),
    .i_csr_addr_bits_prvm     (_csrMod_toAIA_addr_bits_prvm),
    .i_csr_addr_bits_v        (_csrMod_toAIA_addr_bits_v),
    .i_csr_vgein              (_csrMod_toAIA_vgein),
    .i_csr_mClaim             (_csrMod_toAIA_mClaim),
    .i_csr_sClaim             (_csrMod_toAIA_sClaim),
    .i_csr_vsClaim            (_csrMod_toAIA_vsClaim),
    .i_csr_wdata_valid        (_csrMod_toAIA_wdata_valid),
    .i_csr_wdata_bits_op      (_csrMod_toAIA_wdata_bits_op),
    .i_csr_wdata_bits_data    (_csrMod_toAIA_wdata_bits_data),
    .o_csr_rdata_valid        (_imsic_o_csr_rdata_valid),
    .o_csr_rdata_bits_rdata   (_imsic_o_csr_rdata_bits_rdata),
    .o_csr_rdata_bits_illegal (_imsic_o_csr_rdata_bits_illegal),
    .o_meip                   (_imsic_o_meip),
    .o_seip                   (_imsic_o_seip),
    .o_vseip                  (_imsic_o_vseip),
    .o_mtopei                 (_imsic_o_mtopei),
    .o_stopei                 (_imsic_o_stopei),
    .o_vstopei                (_imsic_o_vstopei)
  );
  assign io_in_ready = _csrMod_io_in_ready;
  assign io_out_valid = _csrMod_io_out_valid;
  assign io_out_bits_ctrl_robIdx_flag = io_out_bits_ctrl_robIdx_r_flag;
  assign io_out_bits_ctrl_robIdx_value = io_out_bits_ctrl_robIdx_r_value;
  assign io_out_bits_ctrl_pdest = io_out_bits_ctrl_pdest_r;
  assign io_out_bits_ctrl_rfWen = io_out_bits_ctrl_rfWen_r;
  assign io_out_bits_ctrl_exceptionVec_2 = _csrMod_io_out_bits_EX_II;
  assign io_out_bits_ctrl_exceptionVec_3 =
    _io_csrio_isPerfCnt_T_2 ? isEbreak : exceptionVec_3_r;
  assign io_out_bits_ctrl_exceptionVec_8 =
    _io_csrio_isPerfCnt_T_2 ? _exceptionVec_8_T : exceptionVec_8_r;
  assign io_out_bits_ctrl_exceptionVec_9 =
    _io_csrio_isPerfCnt_T_2 ? _exceptionVec_9_T : exceptionVec_9_r;
  assign io_out_bits_ctrl_exceptionVec_10 =
    _io_csrio_isPerfCnt_T_2 ? _exceptionVec_10_T : exceptionVec_10_r;
  assign io_out_bits_ctrl_exceptionVec_11 =
    _io_csrio_isPerfCnt_T_2 ? _exceptionVec_11_T : exceptionVec_11_r;
  assign io_out_bits_ctrl_exceptionVec_22 = _csrMod_io_out_bits_EX_VI;
  assign io_out_bits_res_redirect_valid =
    _csrMod_io_out_valid & io_out_bits_res_redirect_valid_r;
  assign io_out_bits_res_redirect_bits_isRVC = 1'h0;
  assign io_out_bits_res_redirect_bits_robIdx_flag = robIdxReg_flag;
  assign io_out_bits_res_redirect_bits_robIdx_value = robIdxReg_value;
  assign io_out_bits_res_redirect_bits_ftqIdx_flag =
    io_out_bits_res_redirect_bits_ftqIdx_r_flag;
  assign io_out_bits_res_redirect_bits_ftqIdx_value =
    io_out_bits_res_redirect_bits_ftqIdx_r_value;
  assign io_out_bits_res_redirect_bits_ftqOffset =
    io_out_bits_res_redirect_bits_ftqOffset_r;
  assign io_out_bits_res_redirect_bits_level = 1'h0;
  assign io_out_bits_res_redirect_bits_interrupt = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_pc = 50'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_pd_valid = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_pd_isRVC = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_pd_brType = 2'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_pd_isCall = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_pd_isRet = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_ssp = 4'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_sctr = 3'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_TOSW_flag = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_TOSW_value = 5'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_TOSR_flag = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_TOSR_value = 5'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_NOS_flag = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_NOS_value = 5'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_topAddr = 50'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_17_folded_hist = 11'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_16_folded_hist = 11'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_15_folded_hist = 7'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_14_folded_hist = 8'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_13_folded_hist = 9'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_12_folded_hist = 4'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_11_folded_hist = 8'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_10_folded_hist = 9'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_9_folded_hist = 7'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_8_folded_hist = 8'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_7_folded_hist = 7'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_6_folded_hist = 9'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_5_folded_hist = 7'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_4_folded_hist = 8'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_3_folded_hist = 8'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_2_folded_hist = 8'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_1_folded_hist = 11'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_folded_hist_hist_0_folded_hist = 8'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_5_bits_0 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_5_bits_1 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_5_bits_2 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_5_bits_3 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_4_bits_0 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_4_bits_1 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_4_bits_2 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_4_bits_3 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_3_bits_0 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_3_bits_1 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_3_bits_2 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_3_bits_3 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_2_bits_0 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_2_bits_1 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_2_bits_2 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_2_bits_3 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_1_bits_0 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_1_bits_1 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_1_bits_2 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_1_bits_3 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_0_bits_0 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_0_bits_1 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_0_bits_2 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_afhob_afhob_0_bits_3 = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_lastBrNumOH = 3'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_ghr = 4'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_histPtr_flag = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_histPtr_value = 8'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_specCnt_0 = 10'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_specCnt_1 = 10'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_br_hit = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_jr_hit = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_sc_hit = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_predTaken = 1'h1;
  assign io_out_bits_res_redirect_bits_cfiUpdate_target =
    _csrMod_io_out_bits_targetPc_pc[49:0];
  assign io_out_bits_res_redirect_bits_cfiUpdate_taken = 1'h1;
  assign io_out_bits_res_redirect_bits_cfiUpdate_isMisPred = 1'h1;
  assign io_out_bits_res_redirect_bits_cfiUpdate_shift = 2'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_addIntoHist = 1'h0;
  assign io_out_bits_res_redirect_bits_cfiUpdate_backendIGPF =
    _csrMod_io_out_bits_targetPc_raiseIGPF;
  assign io_out_bits_res_redirect_bits_cfiUpdate_backendIPF =
    _csrMod_io_out_bits_targetPc_raiseIPF;
  assign io_out_bits_res_redirect_bits_cfiUpdate_backendIAF =
    _csrMod_io_out_bits_targetPc_raiseIAF;
  assign io_out_bits_res_redirect_bits_fullTarget = 64'h0;
  assign io_out_bits_res_redirect_bits_stFtqIdx_flag = 1'h0;
  assign io_out_bits_res_redirect_bits_stFtqIdx_value = 6'h0;
  assign io_out_bits_res_redirect_bits_stFtqOffset = 4'h0;
  assign io_out_bits_res_redirect_bits_debug_runahead_checkpoint_id = 64'h0;
  assign io_out_bits_res_redirect_bits_debugIsCtrl = 1'h0;
  assign io_out_bits_res_redirect_bits_debugIsMemVio = 1'h0;
  assign io_csrio_vpu_vstart = {57'h0, _csrMod_io_status_vecState_vstart};
  assign io_csrio_isXRet = isXRet;
  assign io_csrio_trapTarget_pc = _csrMod_io_out_bits_targetPc_pc;
  assign io_csrio_trapTarget_raiseIPF = _csrMod_io_out_bits_targetPc_raiseIPF;
  assign io_csrio_trapTarget_raiseIAF = _csrMod_io_out_bits_targetPc_raiseIAF;
  assign io_csrio_trapTarget_raiseIGPF = _csrMod_io_out_bits_targetPc_raiseIGPF;
  assign io_csrio_tlb_hgatp_vmid = {2'h0, _csrMod_io_tlb_hgatp_VMID};
  assign io_csrio_customCtrl_distribute_csr_w_bits_addr = waddrReg;
  assign io_csrio_customCtrl_distribute_csr_w_bits_data = wdataReg;
  assign io_csrio_customCtrl_fsIsOff = _csrMod_io_toDecode_illegalInst_fsIsOff;
  assign io_csrToDecode_illegalInst_fsIsOff = _csrMod_io_toDecode_illegalInst_fsIsOff;
  assign io_error_0 = io_error_0_REG_1;
endmodule

