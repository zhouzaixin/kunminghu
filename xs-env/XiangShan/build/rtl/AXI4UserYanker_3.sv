// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module AXI4UserYanker_3(
  input          clock,
  input          reset,
  output         auto_in_aw_ready,
  input          auto_in_aw_valid,
  input          auto_in_aw_bits_id,
  input  [47:0]  auto_in_aw_bits_addr,
  input  [7:0]   auto_in_aw_bits_len,
  input  [2:0]   auto_in_aw_bits_size,
  input  [12:0]  auto_in_aw_bits_echo_extra_id,
  input          auto_in_aw_bits_echo_real_last,
  output         auto_in_w_ready,
  input          auto_in_w_valid,
  input  [255:0] auto_in_w_bits_data,
  input  [31:0]  auto_in_w_bits_strb,
  input          auto_in_w_bits_last,
  input          auto_in_b_ready,
  output         auto_in_b_valid,
  output         auto_in_b_bits_id,
  output [1:0]   auto_in_b_bits_resp,
  output [12:0]  auto_in_b_bits_echo_extra_id,
  output         auto_in_b_bits_echo_real_last,
  output         auto_in_ar_ready,
  input          auto_in_ar_valid,
  input          auto_in_ar_bits_id,
  input  [47:0]  auto_in_ar_bits_addr,
  input  [7:0]   auto_in_ar_bits_len,
  input  [2:0]   auto_in_ar_bits_size,
  input  [12:0]  auto_in_ar_bits_echo_extra_id,
  input          auto_in_ar_bits_echo_real_last,
  input          auto_in_r_ready,
  output         auto_in_r_valid,
  output         auto_in_r_bits_id,
  output [255:0] auto_in_r_bits_data,
  output [1:0]   auto_in_r_bits_resp,
  output [12:0]  auto_in_r_bits_echo_extra_id,
  output         auto_in_r_bits_echo_real_last,
  output         auto_in_r_bits_last,
  input          auto_out_aw_ready,
  output         auto_out_aw_valid,
  output         auto_out_aw_bits_id,
  output [47:0]  auto_out_aw_bits_addr,
  output [7:0]   auto_out_aw_bits_len,
  output [2:0]   auto_out_aw_bits_size,
  input          auto_out_w_ready,
  output         auto_out_w_valid,
  output [255:0] auto_out_w_bits_data,
  output [31:0]  auto_out_w_bits_strb,
  output         auto_out_w_bits_last,
  output         auto_out_b_ready,
  input          auto_out_b_valid,
  input          auto_out_b_bits_id,
  input  [1:0]   auto_out_b_bits_resp,
  input          auto_out_ar_ready,
  output         auto_out_ar_valid,
  output         auto_out_ar_bits_id,
  output [47:0]  auto_out_ar_bits_addr,
  output [7:0]   auto_out_ar_bits_len,
  output [2:0]   auto_out_ar_bits_size,
  output         auto_out_r_ready,
  input          auto_out_r_valid,
  input          auto_out_r_bits_id,
  input  [255:0] auto_out_r_bits_data,
  input  [1:0]   auto_out_r_bits_resp,
  input          auto_out_r_bits_last
);

  wire        _Queue1_BundleMap_3_io_enq_ready;
  wire [12:0] _Queue1_BundleMap_3_io_deq_bits_extra_id;
  wire        _Queue1_BundleMap_3_io_deq_bits_real_last;
  wire        _Queue1_BundleMap_2_io_enq_ready;
  wire [12:0] _Queue1_BundleMap_2_io_deq_bits_extra_id;
  wire        _Queue1_BundleMap_2_io_deq_bits_real_last;
  wire        _Queue1_BundleMap_1_io_enq_ready;
  wire [12:0] _Queue1_BundleMap_1_io_deq_bits_extra_id;
  wire        _Queue1_BundleMap_1_io_deq_bits_real_last;
  wire        _Queue1_BundleMap_io_enq_ready;
  wire [12:0] _Queue1_BundleMap_io_deq_bits_extra_id;
  wire        _Queue1_BundleMap_io_deq_bits_real_last;
  wire        _GEN =
    auto_in_ar_bits_id
      ? _Queue1_BundleMap_1_io_enq_ready
      : _Queue1_BundleMap_io_enq_ready;
  wire        _GEN_0 = auto_out_r_valid & auto_in_r_ready;
  wire        _GEN_1 = auto_in_ar_valid & auto_out_ar_ready;
  wire        _GEN_2 =
    auto_in_aw_bits_id
      ? _Queue1_BundleMap_3_io_enq_ready
      : _Queue1_BundleMap_2_io_enq_ready;
  wire        _GEN_3 = auto_out_b_valid & auto_in_b_ready;
  wire        _GEN_4 = auto_in_aw_valid & auto_out_aw_ready;
  Queue1_BundleMap_90 Queue1_BundleMap (
    .clock                 (clock),
    .reset                 (reset),
    .io_enq_ready          (_Queue1_BundleMap_io_enq_ready),
    .io_enq_valid          (_GEN_1 & ~auto_in_ar_bits_id),
    .io_enq_bits_extra_id  (auto_in_ar_bits_echo_extra_id),
    .io_enq_bits_real_last (auto_in_ar_bits_echo_real_last),
    .io_deq_ready          (_GEN_0 & ~auto_out_r_bits_id & auto_out_r_bits_last),
    .io_deq_bits_extra_id  (_Queue1_BundleMap_io_deq_bits_extra_id),
    .io_deq_bits_real_last (_Queue1_BundleMap_io_deq_bits_real_last)
  );
  Queue1_BundleMap_90 Queue1_BundleMap_1 (
    .clock                 (clock),
    .reset                 (reset),
    .io_enq_ready          (_Queue1_BundleMap_1_io_enq_ready),
    .io_enq_valid          (_GEN_1 & auto_in_ar_bits_id),
    .io_enq_bits_extra_id  (auto_in_ar_bits_echo_extra_id),
    .io_enq_bits_real_last (auto_in_ar_bits_echo_real_last),
    .io_deq_ready          (_GEN_0 & auto_out_r_bits_id & auto_out_r_bits_last),
    .io_deq_bits_extra_id  (_Queue1_BundleMap_1_io_deq_bits_extra_id),
    .io_deq_bits_real_last (_Queue1_BundleMap_1_io_deq_bits_real_last)
  );
  Queue1_BundleMap_90 Queue1_BundleMap_2 (
    .clock                 (clock),
    .reset                 (reset),
    .io_enq_ready          (_Queue1_BundleMap_2_io_enq_ready),
    .io_enq_valid          (_GEN_4 & ~auto_in_aw_bits_id),
    .io_enq_bits_extra_id  (auto_in_aw_bits_echo_extra_id),
    .io_enq_bits_real_last (auto_in_aw_bits_echo_real_last),
    .io_deq_ready          (_GEN_3 & ~auto_out_b_bits_id),
    .io_deq_bits_extra_id  (_Queue1_BundleMap_2_io_deq_bits_extra_id),
    .io_deq_bits_real_last (_Queue1_BundleMap_2_io_deq_bits_real_last)
  );
  Queue1_BundleMap_90 Queue1_BundleMap_3 (
    .clock                 (clock),
    .reset                 (reset),
    .io_enq_ready          (_Queue1_BundleMap_3_io_enq_ready),
    .io_enq_valid          (_GEN_4 & auto_in_aw_bits_id),
    .io_enq_bits_extra_id  (auto_in_aw_bits_echo_extra_id),
    .io_enq_bits_real_last (auto_in_aw_bits_echo_real_last),
    .io_deq_ready          (_GEN_3 & auto_out_b_bits_id),
    .io_deq_bits_extra_id  (_Queue1_BundleMap_3_io_deq_bits_extra_id),
    .io_deq_bits_real_last (_Queue1_BundleMap_3_io_deq_bits_real_last)
  );
  assign auto_in_aw_ready = auto_out_aw_ready & _GEN_2;
  assign auto_in_w_ready = auto_out_w_ready;
  assign auto_in_b_valid = auto_out_b_valid;
  assign auto_in_b_bits_id = auto_out_b_bits_id;
  assign auto_in_b_bits_resp = auto_out_b_bits_resp;
  assign auto_in_b_bits_echo_extra_id =
    auto_out_b_bits_id
      ? _Queue1_BundleMap_3_io_deq_bits_extra_id
      : _Queue1_BundleMap_2_io_deq_bits_extra_id;
  assign auto_in_b_bits_echo_real_last =
    auto_out_b_bits_id
      ? _Queue1_BundleMap_3_io_deq_bits_real_last
      : _Queue1_BundleMap_2_io_deq_bits_real_last;
  assign auto_in_ar_ready = auto_out_ar_ready & _GEN;
  assign auto_in_r_valid = auto_out_r_valid;
  assign auto_in_r_bits_id = auto_out_r_bits_id;
  assign auto_in_r_bits_data = auto_out_r_bits_data;
  assign auto_in_r_bits_resp = auto_out_r_bits_resp;
  assign auto_in_r_bits_echo_extra_id =
    auto_out_r_bits_id
      ? _Queue1_BundleMap_1_io_deq_bits_extra_id
      : _Queue1_BundleMap_io_deq_bits_extra_id;
  assign auto_in_r_bits_echo_real_last =
    auto_out_r_bits_id
      ? _Queue1_BundleMap_1_io_deq_bits_real_last
      : _Queue1_BundleMap_io_deq_bits_real_last;
  assign auto_in_r_bits_last = auto_out_r_bits_last;
  assign auto_out_aw_valid = auto_in_aw_valid & _GEN_2;
  assign auto_out_aw_bits_id = auto_in_aw_bits_id;
  assign auto_out_aw_bits_addr = auto_in_aw_bits_addr;
  assign auto_out_aw_bits_len = auto_in_aw_bits_len;
  assign auto_out_aw_bits_size = auto_in_aw_bits_size;
  assign auto_out_w_valid = auto_in_w_valid;
  assign auto_out_w_bits_data = auto_in_w_bits_data;
  assign auto_out_w_bits_strb = auto_in_w_bits_strb;
  assign auto_out_w_bits_last = auto_in_w_bits_last;
  assign auto_out_b_ready = auto_in_b_ready;
  assign auto_out_ar_valid = auto_in_ar_valid & _GEN;
  assign auto_out_ar_bits_id = auto_in_ar_bits_id;
  assign auto_out_ar_bits_addr = auto_in_ar_bits_addr;
  assign auto_out_ar_bits_len = auto_in_ar_bits_len;
  assign auto_out_ar_bits_size = auto_in_ar_bits_size;
  assign auto_out_r_ready = auto_in_r_ready;
endmodule

