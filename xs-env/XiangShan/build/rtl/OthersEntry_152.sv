// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module OthersEntry_152(
  input         clock,
  input         reset,
  input         io_commonIn_flush_valid,
  input         io_commonIn_flush_bits_robIdx_flag,
  input  [7:0]  io_commonIn_flush_bits_robIdx_value,
  input         io_commonIn_flush_bits_level,
  input         io_commonIn_enq_valid,
  input         io_commonIn_enq_bits_status_robIdx_flag,
  input  [7:0]  io_commonIn_enq_bits_status_robIdx_value,
  input         io_commonIn_enq_bits_status_fuType_19,
  input         io_commonIn_enq_bits_status_fuType_24,
  input         io_commonIn_enq_bits_status_fuType_25,
  input  [6:0]  io_commonIn_enq_bits_status_srcStatus_0_psrc,
  input  [3:0]  io_commonIn_enq_bits_status_srcStatus_0_srcType,
  input         io_commonIn_enq_bits_status_srcStatus_0_srcState,
  input  [3:0]  io_commonIn_enq_bits_status_srcStatus_0_dataSources_value,
  input  [6:0]  io_commonIn_enq_bits_status_srcStatus_1_psrc,
  input  [3:0]  io_commonIn_enq_bits_status_srcStatus_1_srcType,
  input         io_commonIn_enq_bits_status_srcStatus_1_srcState,
  input  [3:0]  io_commonIn_enq_bits_status_srcStatus_1_dataSources_value,
  input  [6:0]  io_commonIn_enq_bits_status_srcStatus_2_psrc,
  input  [3:0]  io_commonIn_enq_bits_status_srcStatus_2_srcType,
  input         io_commonIn_enq_bits_status_srcStatus_2_srcState,
  input  [3:0]  io_commonIn_enq_bits_status_srcStatus_2_dataSources_value,
  input  [6:0]  io_commonIn_enq_bits_status_srcStatus_3_psrc,
  input  [3:0]  io_commonIn_enq_bits_status_srcStatus_3_srcType,
  input         io_commonIn_enq_bits_status_srcStatus_3_srcState,
  input  [3:0]  io_commonIn_enq_bits_status_srcStatus_3_dataSources_value,
  input  [6:0]  io_commonIn_enq_bits_status_srcStatus_4_psrc,
  input  [3:0]  io_commonIn_enq_bits_status_srcStatus_4_srcType,
  input         io_commonIn_enq_bits_status_srcStatus_4_srcState,
  input  [3:0]  io_commonIn_enq_bits_status_srcStatus_4_dataSources_value,
  input         io_commonIn_enq_bits_status_issued,
  input  [1:0]  io_commonIn_enq_bits_status_issueTimer,
  input         io_commonIn_enq_bits_status_deqPortIdx,
  input  [8:0]  io_commonIn_enq_bits_payload_fuOpType,
  input         io_commonIn_enq_bits_payload_fpWen,
  input         io_commonIn_enq_bits_payload_vecWen,
  input         io_commonIn_enq_bits_payload_v0Wen,
  input         io_commonIn_enq_bits_payload_fpu_wflags,
  input         io_commonIn_enq_bits_payload_vpu_vma,
  input         io_commonIn_enq_bits_payload_vpu_vta,
  input  [1:0]  io_commonIn_enq_bits_payload_vpu_vsew,
  input  [2:0]  io_commonIn_enq_bits_payload_vpu_vlmul,
  input         io_commonIn_enq_bits_payload_vpu_vm,
  input  [7:0]  io_commonIn_enq_bits_payload_vpu_vstart,
  input         io_commonIn_enq_bits_payload_vpu_fpu_isFoldTo1_2,
  input         io_commonIn_enq_bits_payload_vpu_fpu_isFoldTo1_4,
  input         io_commonIn_enq_bits_payload_vpu_fpu_isFoldTo1_8,
  input         io_commonIn_enq_bits_payload_vpu_isExt,
  input         io_commonIn_enq_bits_payload_vpu_isNarrow,
  input         io_commonIn_enq_bits_payload_vpu_isDstMask,
  input         io_commonIn_enq_bits_payload_vpu_isOpMask,
  input         io_commonIn_enq_bits_payload_vpu_isDependOldVd,
  input         io_commonIn_enq_bits_payload_vpu_isWritePartVd,
  input  [6:0]  io_commonIn_enq_bits_payload_uopIdx,
  input         io_commonIn_enq_bits_payload_lastUop,
  input  [7:0]  io_commonIn_enq_bits_payload_pdest,
  input         io_commonIn_wakeUpFromWB_15_valid,
  input         io_commonIn_wakeUpFromWB_15_bits_vlWen,
  input  [7:0]  io_commonIn_wakeUpFromWB_15_bits_pdest,
  input         io_commonIn_wakeUpFromWB_14_valid,
  input         io_commonIn_wakeUpFromWB_14_bits_vlWen,
  input  [7:0]  io_commonIn_wakeUpFromWB_14_bits_pdest,
  input         io_commonIn_wakeUpFromWB_13_valid,
  input         io_commonIn_wakeUpFromWB_13_bits_vlWen,
  input  [7:0]  io_commonIn_wakeUpFromWB_13_bits_pdest,
  input         io_commonIn_wakeUpFromWB_12_valid,
  input         io_commonIn_wakeUpFromWB_12_bits_vlWen,
  input  [7:0]  io_commonIn_wakeUpFromWB_12_bits_pdest,
  input         io_commonIn_wakeUpFromWB_11_valid,
  input         io_commonIn_wakeUpFromWB_11_bits_v0Wen,
  input  [7:0]  io_commonIn_wakeUpFromWB_11_bits_pdest,
  input         io_commonIn_wakeUpFromWB_10_valid,
  input         io_commonIn_wakeUpFromWB_10_bits_v0Wen,
  input  [7:0]  io_commonIn_wakeUpFromWB_10_bits_pdest,
  input         io_commonIn_wakeUpFromWB_9_valid,
  input         io_commonIn_wakeUpFromWB_9_bits_v0Wen,
  input  [7:0]  io_commonIn_wakeUpFromWB_9_bits_pdest,
  input         io_commonIn_wakeUpFromWB_8_valid,
  input         io_commonIn_wakeUpFromWB_8_bits_v0Wen,
  input  [7:0]  io_commonIn_wakeUpFromWB_8_bits_pdest,
  input         io_commonIn_wakeUpFromWB_7_valid,
  input         io_commonIn_wakeUpFromWB_7_bits_v0Wen,
  input  [7:0]  io_commonIn_wakeUpFromWB_7_bits_pdest,
  input         io_commonIn_wakeUpFromWB_6_valid,
  input         io_commonIn_wakeUpFromWB_6_bits_v0Wen,
  input  [7:0]  io_commonIn_wakeUpFromWB_6_bits_pdest,
  input         io_commonIn_wakeUpFromWB_5_valid,
  input         io_commonIn_wakeUpFromWB_5_bits_vecWen,
  input  [7:0]  io_commonIn_wakeUpFromWB_5_bits_pdest,
  input         io_commonIn_wakeUpFromWB_4_valid,
  input         io_commonIn_wakeUpFromWB_4_bits_vecWen,
  input  [7:0]  io_commonIn_wakeUpFromWB_4_bits_pdest,
  input         io_commonIn_wakeUpFromWB_3_valid,
  input         io_commonIn_wakeUpFromWB_3_bits_vecWen,
  input  [7:0]  io_commonIn_wakeUpFromWB_3_bits_pdest,
  input         io_commonIn_wakeUpFromWB_2_valid,
  input         io_commonIn_wakeUpFromWB_2_bits_vecWen,
  input  [7:0]  io_commonIn_wakeUpFromWB_2_bits_pdest,
  input         io_commonIn_wakeUpFromWB_1_valid,
  input         io_commonIn_wakeUpFromWB_1_bits_vecWen,
  input  [7:0]  io_commonIn_wakeUpFromWB_1_bits_pdest,
  input         io_commonIn_wakeUpFromWB_0_valid,
  input         io_commonIn_wakeUpFromWB_0_bits_vecWen,
  input  [7:0]  io_commonIn_wakeUpFromWB_0_bits_pdest,
  input         io_commonIn_vlFromIntIsZero,
  input         io_commonIn_vlFromIntIsVlmax,
  input         io_commonIn_vlFromVfIsZero,
  input         io_commonIn_vlFromVfIsVlmax,
  input         io_commonIn_deqSel,
  input         io_commonIn_deqPortIdxWrite,
  input         io_commonIn_issueResp_valid,
  input  [1:0]  io_commonIn_issueResp_bits_resp,
  output        io_commonOut_valid,
  output        io_commonOut_issued,
  output        io_commonOut_canIssue,
  output [34:0] io_commonOut_fuType,
  output [3:0]  io_commonOut_dataSources_0_value,
  output [3:0]  io_commonOut_dataSources_1_value,
  output [3:0]  io_commonOut_dataSources_2_value,
  output [3:0]  io_commonOut_dataSources_3_value,
  output [3:0]  io_commonOut_dataSources_4_value,
  output        io_commonOut_entry_bits_status_robIdx_flag,
  output [7:0]  io_commonOut_entry_bits_status_robIdx_value,
  output        io_commonOut_entry_bits_status_fuType_19,
  output        io_commonOut_entry_bits_status_fuType_24,
  output        io_commonOut_entry_bits_status_fuType_25,
  output [6:0]  io_commonOut_entry_bits_status_srcStatus_0_psrc,
  output [6:0]  io_commonOut_entry_bits_status_srcStatus_1_psrc,
  output [6:0]  io_commonOut_entry_bits_status_srcStatus_2_psrc,
  output [6:0]  io_commonOut_entry_bits_status_srcStatus_3_psrc,
  output [6:0]  io_commonOut_entry_bits_status_srcStatus_4_psrc,
  output [8:0]  io_commonOut_entry_bits_payload_fuOpType,
  output        io_commonOut_entry_bits_payload_fpWen,
  output        io_commonOut_entry_bits_payload_vecWen,
  output        io_commonOut_entry_bits_payload_v0Wen,
  output        io_commonOut_entry_bits_payload_fpu_wflags,
  output        io_commonOut_entry_bits_payload_vpu_vma,
  output        io_commonOut_entry_bits_payload_vpu_vta,
  output [1:0]  io_commonOut_entry_bits_payload_vpu_vsew,
  output [2:0]  io_commonOut_entry_bits_payload_vpu_vlmul,
  output        io_commonOut_entry_bits_payload_vpu_vm,
  output [7:0]  io_commonOut_entry_bits_payload_vpu_vstart,
  output        io_commonOut_entry_bits_payload_vpu_fpu_isFoldTo1_2,
  output        io_commonOut_entry_bits_payload_vpu_fpu_isFoldTo1_4,
  output        io_commonOut_entry_bits_payload_vpu_fpu_isFoldTo1_8,
  output        io_commonOut_entry_bits_payload_vpu_isExt,
  output        io_commonOut_entry_bits_payload_vpu_isNarrow,
  output        io_commonOut_entry_bits_payload_vpu_isDstMask,
  output        io_commonOut_entry_bits_payload_vpu_isOpMask,
  output [6:0]  io_commonOut_entry_bits_payload_uopIdx,
  output        io_commonOut_entry_bits_payload_lastUop,
  output [7:0]  io_commonOut_entry_bits_payload_pdest,
  output        io_commonOut_deqPortIdxRead,
  output [1:0]  io_commonOut_issueTimerRead
);

  reg        validReg_last_REG;
  reg        entryReg_status_robIdx_flag;
  reg  [7:0] entryReg_status_robIdx_value;
  reg        entryReg_status_fuType_19;
  reg        entryReg_status_fuType_24;
  reg        entryReg_status_fuType_25;
  reg  [6:0] entryReg_status_srcStatus_0_psrc;
  reg  [3:0] entryReg_status_srcStatus_0_srcType;
  reg        entryReg_status_srcStatus_0_srcState;
  reg  [3:0] entryReg_status_srcStatus_0_dataSources_value;
  reg  [6:0] entryReg_status_srcStatus_1_psrc;
  reg  [3:0] entryReg_status_srcStatus_1_srcType;
  reg        entryReg_status_srcStatus_1_srcState;
  reg  [3:0] entryReg_status_srcStatus_1_dataSources_value;
  reg  [6:0] entryReg_status_srcStatus_2_psrc;
  reg  [3:0] entryReg_status_srcStatus_2_srcType;
  reg        entryReg_status_srcStatus_2_srcState;
  reg  [3:0] entryReg_status_srcStatus_2_dataSources_value;
  reg  [6:0] entryReg_status_srcStatus_3_psrc;
  reg  [3:0] entryReg_status_srcStatus_3_srcType;
  reg        entryReg_status_srcStatus_3_srcState;
  reg  [3:0] entryReg_status_srcStatus_3_dataSources_value;
  reg  [6:0] entryReg_status_srcStatus_4_psrc;
  reg  [3:0] entryReg_status_srcStatus_4_srcType;
  reg        entryReg_status_srcStatus_4_srcState;
  reg  [3:0] entryReg_status_srcStatus_4_dataSources_value;
  reg        entryReg_status_issued;
  reg  [1:0] entryReg_status_issueTimer;
  reg        entryReg_status_deqPortIdx;
  reg  [8:0] entryReg_payload_fuOpType;
  reg        entryReg_payload_fpWen;
  reg        entryReg_payload_vecWen;
  reg        entryReg_payload_v0Wen;
  reg        entryReg_payload_fpu_wflags;
  reg        entryReg_payload_vpu_vma;
  reg        entryReg_payload_vpu_vta;
  reg  [1:0] entryReg_payload_vpu_vsew;
  reg  [2:0] entryReg_payload_vpu_vlmul;
  reg        entryReg_payload_vpu_vm;
  reg  [7:0] entryReg_payload_vpu_vstart;
  reg        entryReg_payload_vpu_fpu_isFoldTo1_2;
  reg        entryReg_payload_vpu_fpu_isFoldTo1_4;
  reg        entryReg_payload_vpu_fpu_isFoldTo1_8;
  reg        entryReg_payload_vpu_isExt;
  reg        entryReg_payload_vpu_isNarrow;
  reg        entryReg_payload_vpu_isDstMask;
  reg        entryReg_payload_vpu_isOpMask;
  reg        entryReg_payload_vpu_isDependOldVd;
  reg        entryReg_payload_vpu_isWritePartVd;
  reg  [6:0] entryReg_payload_uopIdx;
  reg        entryReg_payload_lastUop;
  reg  [7:0] entryReg_payload_pdest;
  wire       common_flushed =
    io_commonIn_flush_valid
    & (io_commonIn_flush_bits_level
       & {entryReg_status_robIdx_flag,
          entryReg_status_robIdx_value} == {io_commonIn_flush_bits_robIdx_flag,
                                            io_commonIn_flush_bits_robIdx_value}
       | entryReg_status_robIdx_flag ^ io_commonIn_flush_bits_robIdx_flag
       ^ entryReg_status_robIdx_value > io_commonIn_flush_bits_robIdx_value);
  always @(posedge clock or posedge reset) begin
    if (reset)
      validReg_last_REG <= 1'h0;
    else
      validReg_last_REG <=
        io_commonIn_enq_valid
        | ~(common_flushed | io_commonIn_issueResp_valid
            & (&io_commonIn_issueResp_bits_resp)) & validReg_last_REG;
  end // always @(posedge, posedge)
  wire [7:0] _GEN = {1'h0, entryReg_status_srcStatus_0_psrc};
  wire [7:0] _GEN_0 = {1'h0, entryReg_status_srcStatus_1_psrc};
  wire [7:0] _GEN_1 = {1'h0, entryReg_status_srcStatus_2_psrc};
  wire [7:0] _GEN_2 = {1'h0, entryReg_status_srcStatus_3_psrc};
  wire [7:0] _GEN_3 = {1'h0, entryReg_status_srcStatus_4_psrc};
  wire       pdestMatch_64 = io_commonIn_wakeUpFromWB_12_bits_pdest == _GEN_3;
  wire       pdestMatch_69 = io_commonIn_wakeUpFromWB_13_bits_pdest == _GEN_3;
  wire       wakeUpFromVl_12 =
    pdestMatch_64 & entryReg_status_srcStatus_4_srcType[2]
    & io_commonIn_wakeUpFromWB_12_bits_vlWen & io_commonIn_wakeUpFromWB_12_valid;
  wire       wakeUpFromVl_13 =
    pdestMatch_69 & entryReg_status_srcStatus_4_srcType[2]
    & io_commonIn_wakeUpFromWB_13_bits_vlWen & io_commonIn_wakeUpFromWB_13_valid;
  wire       ignoreOldVd_2 =
    entryReg_status_srcStatus_2_srcType[2]
    & (~io_commonIn_vlFromIntIsZero & wakeUpFromVl_12 | ~io_commonIn_vlFromVfIsZero
       & wakeUpFromVl_13) & ~entryReg_payload_vpu_isDependOldVd
    & ((io_commonIn_vlFromIntIsVlmax & wakeUpFromVl_12 | io_commonIn_vlFromVfIsVlmax
        & wakeUpFromVl_13) & (entryReg_payload_vpu_vm | entryReg_payload_vpu_vma)
       & ~entryReg_payload_vpu_isWritePartVd
       | (entryReg_payload_vpu_vm | entryReg_payload_vpu_vma) & entryReg_payload_vpu_vta);
  always @(posedge clock) begin
    if (io_commonIn_enq_valid) begin
      entryReg_status_robIdx_flag <= io_commonIn_enq_bits_status_robIdx_flag;
      entryReg_status_robIdx_value <= io_commonIn_enq_bits_status_robIdx_value;
      entryReg_status_fuType_19 <= io_commonIn_enq_bits_status_fuType_19;
      entryReg_status_fuType_24 <= io_commonIn_enq_bits_status_fuType_24;
      entryReg_status_fuType_25 <= io_commonIn_enq_bits_status_fuType_25;
      entryReg_status_srcStatus_0_psrc <= io_commonIn_enq_bits_status_srcStatus_0_psrc;
      entryReg_status_srcStatus_0_srcType <=
        io_commonIn_enq_bits_status_srcStatus_0_srcType;
      entryReg_status_srcStatus_0_srcState <=
        io_commonIn_enq_bits_status_srcStatus_0_srcState;
      entryReg_status_srcStatus_0_dataSources_value <=
        io_commonIn_enq_bits_status_srcStatus_0_dataSources_value;
      entryReg_status_srcStatus_1_psrc <= io_commonIn_enq_bits_status_srcStatus_1_psrc;
      entryReg_status_srcStatus_1_srcType <=
        io_commonIn_enq_bits_status_srcStatus_1_srcType;
      entryReg_status_srcStatus_1_srcState <=
        io_commonIn_enq_bits_status_srcStatus_1_srcState;
      entryReg_status_srcStatus_1_dataSources_value <=
        io_commonIn_enq_bits_status_srcStatus_1_dataSources_value;
      entryReg_status_srcStatus_2_psrc <= io_commonIn_enq_bits_status_srcStatus_2_psrc;
      entryReg_status_srcStatus_2_srcType <=
        io_commonIn_enq_bits_status_srcStatus_2_srcType;
      entryReg_status_srcStatus_2_srcState <=
        io_commonIn_enq_bits_status_srcStatus_2_srcState;
      entryReg_status_srcStatus_2_dataSources_value <=
        io_commonIn_enq_bits_status_srcStatus_2_dataSources_value;
      entryReg_status_srcStatus_3_psrc <= io_commonIn_enq_bits_status_srcStatus_3_psrc;
      entryReg_status_srcStatus_3_srcType <=
        io_commonIn_enq_bits_status_srcStatus_3_srcType;
      entryReg_status_srcStatus_3_srcState <=
        io_commonIn_enq_bits_status_srcStatus_3_srcState;
      entryReg_status_srcStatus_3_dataSources_value <=
        io_commonIn_enq_bits_status_srcStatus_3_dataSources_value;
      entryReg_status_srcStatus_4_psrc <= io_commonIn_enq_bits_status_srcStatus_4_psrc;
      entryReg_status_srcStatus_4_srcType <=
        io_commonIn_enq_bits_status_srcStatus_4_srcType;
      entryReg_status_srcStatus_4_srcState <=
        io_commonIn_enq_bits_status_srcStatus_4_srcState;
      entryReg_status_srcStatus_4_dataSources_value <=
        io_commonIn_enq_bits_status_srcStatus_4_dataSources_value;
      entryReg_status_issued <= io_commonIn_enq_bits_status_issued;
      entryReg_status_issueTimer <= io_commonIn_enq_bits_status_issueTimer;
      entryReg_status_deqPortIdx <= io_commonIn_enq_bits_status_deqPortIdx;
      entryReg_payload_fuOpType <= io_commonIn_enq_bits_payload_fuOpType;
      entryReg_payload_fpWen <= io_commonIn_enq_bits_payload_fpWen;
      entryReg_payload_vecWen <= io_commonIn_enq_bits_payload_vecWen;
      entryReg_payload_v0Wen <= io_commonIn_enq_bits_payload_v0Wen;
      entryReg_payload_fpu_wflags <= io_commonIn_enq_bits_payload_fpu_wflags;
      entryReg_payload_vpu_vma <= io_commonIn_enq_bits_payload_vpu_vma;
      entryReg_payload_vpu_vta <= io_commonIn_enq_bits_payload_vpu_vta;
      entryReg_payload_vpu_vsew <= io_commonIn_enq_bits_payload_vpu_vsew;
      entryReg_payload_vpu_vlmul <= io_commonIn_enq_bits_payload_vpu_vlmul;
      entryReg_payload_vpu_vm <= io_commonIn_enq_bits_payload_vpu_vm;
      entryReg_payload_vpu_vstart <= io_commonIn_enq_bits_payload_vpu_vstart;
      entryReg_payload_vpu_fpu_isFoldTo1_2 <=
        io_commonIn_enq_bits_payload_vpu_fpu_isFoldTo1_2;
      entryReg_payload_vpu_fpu_isFoldTo1_4 <=
        io_commonIn_enq_bits_payload_vpu_fpu_isFoldTo1_4;
      entryReg_payload_vpu_fpu_isFoldTo1_8 <=
        io_commonIn_enq_bits_payload_vpu_fpu_isFoldTo1_8;
      entryReg_payload_vpu_isExt <= io_commonIn_enq_bits_payload_vpu_isExt;
      entryReg_payload_vpu_isNarrow <= io_commonIn_enq_bits_payload_vpu_isNarrow;
      entryReg_payload_vpu_isDstMask <= io_commonIn_enq_bits_payload_vpu_isDstMask;
      entryReg_payload_vpu_isOpMask <= io_commonIn_enq_bits_payload_vpu_isOpMask;
      entryReg_payload_vpu_isDependOldVd <=
        io_commonIn_enq_bits_payload_vpu_isDependOldVd;
      entryReg_payload_vpu_isWritePartVd <=
        io_commonIn_enq_bits_payload_vpu_isWritePartVd;
      entryReg_payload_uopIdx <= io_commonIn_enq_bits_payload_uopIdx;
      entryReg_payload_lastUop <= io_commonIn_enq_bits_payload_lastUop;
      entryReg_payload_pdest <= io_commonIn_enq_bits_payload_pdest;
    end
    else begin
      entryReg_status_srcStatus_0_srcState <=
        entryReg_status_srcStatus_0_srcState
        | (|{io_commonIn_wakeUpFromWB_5_bits_pdest == _GEN
               & entryReg_status_srcStatus_0_srcType[2]
               & io_commonIn_wakeUpFromWB_5_bits_vecWen
               & io_commonIn_wakeUpFromWB_5_valid,
             io_commonIn_wakeUpFromWB_4_bits_pdest == _GEN
               & entryReg_status_srcStatus_0_srcType[2]
               & io_commonIn_wakeUpFromWB_4_bits_vecWen
               & io_commonIn_wakeUpFromWB_4_valid,
             io_commonIn_wakeUpFromWB_3_bits_pdest == _GEN
               & entryReg_status_srcStatus_0_srcType[2]
               & io_commonIn_wakeUpFromWB_3_bits_vecWen
               & io_commonIn_wakeUpFromWB_3_valid,
             io_commonIn_wakeUpFromWB_2_bits_pdest == _GEN
               & entryReg_status_srcStatus_0_srcType[2]
               & io_commonIn_wakeUpFromWB_2_bits_vecWen
               & io_commonIn_wakeUpFromWB_2_valid,
             io_commonIn_wakeUpFromWB_1_bits_pdest == _GEN
               & entryReg_status_srcStatus_0_srcType[2]
               & io_commonIn_wakeUpFromWB_1_bits_vecWen
               & io_commonIn_wakeUpFromWB_1_valid,
             io_commonIn_wakeUpFromWB_0_bits_pdest == _GEN
               & entryReg_status_srcStatus_0_srcType[2]
               & io_commonIn_wakeUpFromWB_0_bits_vecWen
               & io_commonIn_wakeUpFromWB_0_valid});
      if (entryReg_status_srcStatus_0_dataSources_value == 4'h2)
        entryReg_status_srcStatus_0_dataSources_value <= 4'h8;
      entryReg_status_srcStatus_1_srcState <=
        entryReg_status_srcStatus_1_srcState
        | (|{io_commonIn_wakeUpFromWB_5_bits_pdest == _GEN_0
               & entryReg_status_srcStatus_1_srcType[2]
               & io_commonIn_wakeUpFromWB_5_bits_vecWen
               & io_commonIn_wakeUpFromWB_5_valid,
             io_commonIn_wakeUpFromWB_4_bits_pdest == _GEN_0
               & entryReg_status_srcStatus_1_srcType[2]
               & io_commonIn_wakeUpFromWB_4_bits_vecWen
               & io_commonIn_wakeUpFromWB_4_valid,
             io_commonIn_wakeUpFromWB_3_bits_pdest == _GEN_0
               & entryReg_status_srcStatus_1_srcType[2]
               & io_commonIn_wakeUpFromWB_3_bits_vecWen
               & io_commonIn_wakeUpFromWB_3_valid,
             io_commonIn_wakeUpFromWB_2_bits_pdest == _GEN_0
               & entryReg_status_srcStatus_1_srcType[2]
               & io_commonIn_wakeUpFromWB_2_bits_vecWen
               & io_commonIn_wakeUpFromWB_2_valid,
             io_commonIn_wakeUpFromWB_1_bits_pdest == _GEN_0
               & entryReg_status_srcStatus_1_srcType[2]
               & io_commonIn_wakeUpFromWB_1_bits_vecWen
               & io_commonIn_wakeUpFromWB_1_valid,
             io_commonIn_wakeUpFromWB_0_bits_pdest == _GEN_0
               & entryReg_status_srcStatus_1_srcType[2]
               & io_commonIn_wakeUpFromWB_0_bits_vecWen
               & io_commonIn_wakeUpFromWB_0_valid});
      if (entryReg_status_srcStatus_1_dataSources_value == 4'h2)
        entryReg_status_srcStatus_1_dataSources_value <= 4'h8;
      if (ignoreOldVd_2) begin
        entryReg_status_srcStatus_2_srcType <= 4'h0;
        entryReg_status_srcStatus_2_dataSources_value <= 4'h4;
      end
      else if (entryReg_status_srcStatus_2_dataSources_value == 4'h2)
        entryReg_status_srcStatus_2_dataSources_value <= 4'h8;
      entryReg_status_srcStatus_2_srcState <=
        entryReg_status_srcStatus_2_srcState
        | (|{io_commonIn_wakeUpFromWB_5_bits_pdest == _GEN_1
               & entryReg_status_srcStatus_2_srcType[2]
               & io_commonIn_wakeUpFromWB_5_bits_vecWen
               & io_commonIn_wakeUpFromWB_5_valid,
             io_commonIn_wakeUpFromWB_4_bits_pdest == _GEN_1
               & entryReg_status_srcStatus_2_srcType[2]
               & io_commonIn_wakeUpFromWB_4_bits_vecWen
               & io_commonIn_wakeUpFromWB_4_valid,
             io_commonIn_wakeUpFromWB_3_bits_pdest == _GEN_1
               & entryReg_status_srcStatus_2_srcType[2]
               & io_commonIn_wakeUpFromWB_3_bits_vecWen
               & io_commonIn_wakeUpFromWB_3_valid,
             io_commonIn_wakeUpFromWB_2_bits_pdest == _GEN_1
               & entryReg_status_srcStatus_2_srcType[2]
               & io_commonIn_wakeUpFromWB_2_bits_vecWen
               & io_commonIn_wakeUpFromWB_2_valid,
             io_commonIn_wakeUpFromWB_1_bits_pdest == _GEN_1
               & entryReg_status_srcStatus_2_srcType[2]
               & io_commonIn_wakeUpFromWB_1_bits_vecWen
               & io_commonIn_wakeUpFromWB_1_valid,
             io_commonIn_wakeUpFromWB_0_bits_pdest == _GEN_1
               & entryReg_status_srcStatus_2_srcType[2]
               & io_commonIn_wakeUpFromWB_0_bits_vecWen
               & io_commonIn_wakeUpFromWB_0_valid}) | ignoreOldVd_2;
      entryReg_status_srcStatus_3_srcState <=
        entryReg_status_srcStatus_3_srcState
        | (|{io_commonIn_wakeUpFromWB_11_bits_pdest == _GEN_2
               & entryReg_status_srcStatus_3_srcType[3]
               & io_commonIn_wakeUpFromWB_11_bits_v0Wen
               & io_commonIn_wakeUpFromWB_11_valid,
             io_commonIn_wakeUpFromWB_10_bits_pdest == _GEN_2
               & entryReg_status_srcStatus_3_srcType[3]
               & io_commonIn_wakeUpFromWB_10_bits_v0Wen
               & io_commonIn_wakeUpFromWB_10_valid,
             io_commonIn_wakeUpFromWB_9_bits_pdest == _GEN_2
               & entryReg_status_srcStatus_3_srcType[3]
               & io_commonIn_wakeUpFromWB_9_bits_v0Wen & io_commonIn_wakeUpFromWB_9_valid,
             io_commonIn_wakeUpFromWB_8_bits_pdest == _GEN_2
               & entryReg_status_srcStatus_3_srcType[3]
               & io_commonIn_wakeUpFromWB_8_bits_v0Wen & io_commonIn_wakeUpFromWB_8_valid,
             io_commonIn_wakeUpFromWB_7_bits_pdest == _GEN_2
               & entryReg_status_srcStatus_3_srcType[3]
               & io_commonIn_wakeUpFromWB_7_bits_v0Wen & io_commonIn_wakeUpFromWB_7_valid,
             io_commonIn_wakeUpFromWB_6_bits_pdest == _GEN_2
               & entryReg_status_srcStatus_3_srcType[3]
               & io_commonIn_wakeUpFromWB_6_bits_v0Wen
               & io_commonIn_wakeUpFromWB_6_valid});
      if (entryReg_status_srcStatus_3_dataSources_value == 4'h2)
        entryReg_status_srcStatus_3_dataSources_value <= 4'h8;
      entryReg_status_srcStatus_4_srcState <=
        entryReg_status_srcStatus_4_srcState
        | (|{io_commonIn_wakeUpFromWB_15_bits_pdest == _GEN_3
               & entryReg_status_srcStatus_4_srcType[2]
               & io_commonIn_wakeUpFromWB_15_bits_vlWen
               & io_commonIn_wakeUpFromWB_15_valid,
             io_commonIn_wakeUpFromWB_14_bits_pdest == _GEN_3
               & entryReg_status_srcStatus_4_srcType[2]
               & io_commonIn_wakeUpFromWB_14_bits_vlWen
               & io_commonIn_wakeUpFromWB_14_valid,
             pdestMatch_69 & entryReg_status_srcStatus_4_srcType[2]
               & io_commonIn_wakeUpFromWB_13_bits_vlWen
               & io_commonIn_wakeUpFromWB_13_valid,
             pdestMatch_64 & entryReg_status_srcStatus_4_srcType[2]
               & io_commonIn_wakeUpFromWB_12_bits_vlWen
               & io_commonIn_wakeUpFromWB_12_valid});
      if (entryReg_status_srcStatus_4_dataSources_value == 4'h2)
        entryReg_status_srcStatus_4_dataSources_value <= 4'h8;
      entryReg_status_issued <=
        io_commonIn_deqSel
        | ~(io_commonIn_issueResp_valid & io_commonIn_issueResp_bits_resp == 2'h0)
        & entryReg_status_issued;
      if (io_commonIn_deqSel) begin
        entryReg_status_issueTimer <= 2'h0;
        entryReg_status_deqPortIdx <= io_commonIn_deqPortIdxWrite;
      end
      else begin
        if (entryReg_status_issued) begin
          if (~(&entryReg_status_issueTimer))
            entryReg_status_issueTimer <= 2'(entryReg_status_issueTimer + 2'h1);
        end
        else
          entryReg_status_issueTimer <= 2'h3;
        entryReg_status_deqPortIdx <= entryReg_status_issued & entryReg_status_deqPortIdx;
      end
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:23];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [4:0] i = 5'h0; i < 5'h18; i += 5'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        validReg_last_REG = _RANDOM[5'h0][0];
        entryReg_status_robIdx_flag = _RANDOM[5'h0][1];
        entryReg_status_robIdx_value = _RANDOM[5'h0][9:2];
        entryReg_status_fuType_19 = _RANDOM[5'h0][29];
        entryReg_status_fuType_24 = _RANDOM[5'h1][2];
        entryReg_status_fuType_25 = _RANDOM[5'h1][3];
        entryReg_status_srcStatus_0_psrc = _RANDOM[5'h1][19:13];
        entryReg_status_srcStatus_0_srcType = _RANDOM[5'h1][23:20];
        entryReg_status_srcStatus_0_srcState = _RANDOM[5'h1][24];
        entryReg_status_srcStatus_0_dataSources_value = _RANDOM[5'h1][28:25];
        entryReg_status_srcStatus_1_psrc = _RANDOM[5'h2][9:3];
        entryReg_status_srcStatus_1_srcType = _RANDOM[5'h2][13:10];
        entryReg_status_srcStatus_1_srcState = _RANDOM[5'h2][14];
        entryReg_status_srcStatus_1_dataSources_value = _RANDOM[5'h2][18:15];
        entryReg_status_srcStatus_2_psrc = _RANDOM[5'h2][31:25];
        entryReg_status_srcStatus_2_srcType = _RANDOM[5'h3][3:0];
        entryReg_status_srcStatus_2_srcState = _RANDOM[5'h3][4];
        entryReg_status_srcStatus_2_dataSources_value = _RANDOM[5'h3][8:5];
        entryReg_status_srcStatus_3_psrc = _RANDOM[5'h3][21:15];
        entryReg_status_srcStatus_3_srcType = _RANDOM[5'h3][25:22];
        entryReg_status_srcStatus_3_srcState = _RANDOM[5'h3][26];
        entryReg_status_srcStatus_3_dataSources_value = _RANDOM[5'h3][30:27];
        entryReg_status_srcStatus_4_psrc = _RANDOM[5'h4][11:5];
        entryReg_status_srcStatus_4_srcType = _RANDOM[5'h4][15:12];
        entryReg_status_srcStatus_4_srcState = _RANDOM[5'h4][16];
        entryReg_status_srcStatus_4_dataSources_value = _RANDOM[5'h4][20:17];
        entryReg_status_issued = _RANDOM[5'h4][28];
        entryReg_status_issueTimer = _RANDOM[5'h4][31:30];
        entryReg_status_deqPortIdx = _RANDOM[5'h5][0];
        entryReg_payload_fuOpType = _RANDOM[5'hB][19:11];
        entryReg_payload_fpWen = _RANDOM[5'hB][21];
        entryReg_payload_vecWen = _RANDOM[5'hB][22];
        entryReg_payload_v0Wen = _RANDOM[5'hB][23];
        entryReg_payload_fpu_wflags = _RANDOM[5'hD][4];
        entryReg_payload_vpu_vma = _RANDOM[5'hD][13];
        entryReg_payload_vpu_vta = _RANDOM[5'hD][14];
        entryReg_payload_vpu_vsew = _RANDOM[5'hD][16:15];
        entryReg_payload_vpu_vlmul = _RANDOM[5'hD][19:17];
        entryReg_payload_vpu_vm = _RANDOM[5'hD][28];
        entryReg_payload_vpu_vstart = {_RANDOM[5'hD][31:29], _RANDOM[5'hE][4:0]};
        entryReg_payload_vpu_fpu_isFoldTo1_2 = _RANDOM[5'hE][12];
        entryReg_payload_vpu_fpu_isFoldTo1_4 = _RANDOM[5'hE][13];
        entryReg_payload_vpu_fpu_isFoldTo1_8 = _RANDOM[5'hE][14];
        entryReg_payload_vpu_isExt = _RANDOM[5'h13][7];
        entryReg_payload_vpu_isNarrow = _RANDOM[5'h13][8];
        entryReg_payload_vpu_isDstMask = _RANDOM[5'h13][9];
        entryReg_payload_vpu_isOpMask = _RANDOM[5'h13][10];
        entryReg_payload_vpu_isDependOldVd = _RANDOM[5'h13][12];
        entryReg_payload_vpu_isWritePartVd = _RANDOM[5'h13][13];
        entryReg_payload_uopIdx = _RANDOM[5'h13][25:19];
        entryReg_payload_lastUop = _RANDOM[5'h13][28];
        entryReg_payload_pdest = {_RANDOM[5'h16][31:25], _RANDOM[5'h17][0]};
      `endif // RANDOMIZE_REG_INIT
      if (reset)
        validReg_last_REG = 1'h0;
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_commonOut_valid = validReg_last_REG;
  assign io_commonOut_issued = entryReg_status_issued;
  assign io_commonOut_canIssue =
    validReg_last_REG
    & (&{entryReg_status_srcStatus_4_srcState,
         entryReg_status_srcStatus_3_srcState,
         entryReg_status_srcStatus_2_srcState,
         entryReg_status_srcStatus_1_srcState,
         entryReg_status_srcStatus_0_srcState}) & ~entryReg_status_issued
    & ~common_flushed;
  assign io_commonOut_fuType =
    {9'h0,
     entryReg_status_fuType_25,
     entryReg_status_fuType_24,
     4'h0,
     entryReg_status_fuType_19,
     19'h0};
  assign io_commonOut_dataSources_0_value = entryReg_status_srcStatus_0_dataSources_value;
  assign io_commonOut_dataSources_1_value = entryReg_status_srcStatus_1_dataSources_value;
  assign io_commonOut_dataSources_2_value = entryReg_status_srcStatus_2_dataSources_value;
  assign io_commonOut_dataSources_3_value = entryReg_status_srcStatus_3_dataSources_value;
  assign io_commonOut_dataSources_4_value = entryReg_status_srcStatus_4_dataSources_value;
  assign io_commonOut_entry_bits_status_robIdx_flag = entryReg_status_robIdx_flag;
  assign io_commonOut_entry_bits_status_robIdx_value = entryReg_status_robIdx_value;
  assign io_commonOut_entry_bits_status_fuType_19 = entryReg_status_fuType_19;
  assign io_commonOut_entry_bits_status_fuType_24 = entryReg_status_fuType_24;
  assign io_commonOut_entry_bits_status_fuType_25 = entryReg_status_fuType_25;
  assign io_commonOut_entry_bits_status_srcStatus_0_psrc =
    entryReg_status_srcStatus_0_psrc;
  assign io_commonOut_entry_bits_status_srcStatus_1_psrc =
    entryReg_status_srcStatus_1_psrc;
  assign io_commonOut_entry_bits_status_srcStatus_2_psrc =
    entryReg_status_srcStatus_2_psrc;
  assign io_commonOut_entry_bits_status_srcStatus_3_psrc =
    entryReg_status_srcStatus_3_psrc;
  assign io_commonOut_entry_bits_status_srcStatus_4_psrc =
    entryReg_status_srcStatus_4_psrc;
  assign io_commonOut_entry_bits_payload_fuOpType = entryReg_payload_fuOpType;
  assign io_commonOut_entry_bits_payload_fpWen = entryReg_payload_fpWen;
  assign io_commonOut_entry_bits_payload_vecWen = entryReg_payload_vecWen;
  assign io_commonOut_entry_bits_payload_v0Wen = entryReg_payload_v0Wen;
  assign io_commonOut_entry_bits_payload_fpu_wflags = entryReg_payload_fpu_wflags;
  assign io_commonOut_entry_bits_payload_vpu_vma = entryReg_payload_vpu_vma;
  assign io_commonOut_entry_bits_payload_vpu_vta = entryReg_payload_vpu_vta;
  assign io_commonOut_entry_bits_payload_vpu_vsew = entryReg_payload_vpu_vsew;
  assign io_commonOut_entry_bits_payload_vpu_vlmul = entryReg_payload_vpu_vlmul;
  assign io_commonOut_entry_bits_payload_vpu_vm = entryReg_payload_vpu_vm;
  assign io_commonOut_entry_bits_payload_vpu_vstart = entryReg_payload_vpu_vstart;
  assign io_commonOut_entry_bits_payload_vpu_fpu_isFoldTo1_2 =
    entryReg_payload_vpu_fpu_isFoldTo1_2;
  assign io_commonOut_entry_bits_payload_vpu_fpu_isFoldTo1_4 =
    entryReg_payload_vpu_fpu_isFoldTo1_4;
  assign io_commonOut_entry_bits_payload_vpu_fpu_isFoldTo1_8 =
    entryReg_payload_vpu_fpu_isFoldTo1_8;
  assign io_commonOut_entry_bits_payload_vpu_isExt = entryReg_payload_vpu_isExt;
  assign io_commonOut_entry_bits_payload_vpu_isNarrow = entryReg_payload_vpu_isNarrow;
  assign io_commonOut_entry_bits_payload_vpu_isDstMask = entryReg_payload_vpu_isDstMask;
  assign io_commonOut_entry_bits_payload_vpu_isOpMask = entryReg_payload_vpu_isOpMask;
  assign io_commonOut_entry_bits_payload_uopIdx = entryReg_payload_uopIdx;
  assign io_commonOut_entry_bits_payload_lastUop = entryReg_payload_lastUop;
  assign io_commonOut_entry_bits_payload_pdest = entryReg_payload_pdest;
  assign io_commonOut_deqPortIdxRead = entryReg_status_deqPortIdx;
  assign io_commonOut_issueTimerRead = entryReg_status_issueTimer;
endmodule

