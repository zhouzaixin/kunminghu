// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module ICacheDataArray(
  input          clock,
  input          reset,
  input          io_write_valid,
  input  [7:0]   io_write_bits_virIdx,
  input  [511:0] io_write_bits_data,
  input  [3:0]   io_write_bits_waymask,
  input          io_write_bits_poison,
  input          io_read_0_valid,
  input  [7:0]   io_read_0_bits_vSetIdx_0,
  input  [7:0]   io_read_0_bits_vSetIdx_1,
  input          io_read_0_bits_waymask_0_0,
  input          io_read_0_bits_waymask_0_1,
  input          io_read_0_bits_waymask_0_2,
  input          io_read_0_bits_waymask_0_3,
  input          io_read_0_bits_waymask_1_0,
  input          io_read_0_bits_waymask_1_1,
  input          io_read_0_bits_waymask_1_2,
  input          io_read_0_bits_waymask_1_3,
  input  [5:0]   io_read_0_bits_blkOffset,
  input          io_read_1_valid,
  input  [7:0]   io_read_1_bits_vSetIdx_0,
  input  [7:0]   io_read_1_bits_vSetIdx_1,
  input          io_read_2_valid,
  input  [7:0]   io_read_2_bits_vSetIdx_0,
  input  [7:0]   io_read_2_bits_vSetIdx_1,
  output         io_read_3_ready,
  input          io_read_3_valid,
  input  [7:0]   io_read_3_bits_vSetIdx_0,
  input  [7:0]   io_read_3_bits_vSetIdx_1,
  output [63:0]  io_readResp_datas_0,
  output [63:0]  io_readResp_datas_1,
  output [63:0]  io_readResp_datas_2,
  output [63:0]  io_readResp_datas_3,
  output [63:0]  io_readResp_datas_4,
  output [63:0]  io_readResp_datas_5,
  output [63:0]  io_readResp_datas_6,
  output [63:0]  io_readResp_datas_7,
  output         io_readResp_codes_0,
  output         io_readResp_codes_1,
  output         io_readResp_codes_2,
  output         io_readResp_codes_3,
  output         io_readResp_codes_4,
  output         io_readResp_codes_5,
  output         io_readResp_codes_6,
  output         io_readResp_codes_7
);

  wire [64:0] _dataArrays_3_7_io_r_resp_data_0;
  wire [64:0] _dataArrays_3_6_io_r_resp_data_0;
  wire [64:0] _dataArrays_3_5_io_r_resp_data_0;
  wire [64:0] _dataArrays_3_4_io_r_resp_data_0;
  wire [64:0] _dataArrays_3_3_io_r_resp_data_0;
  wire [64:0] _dataArrays_3_2_io_r_resp_data_0;
  wire [64:0] _dataArrays_3_1_io_r_resp_data_0;
  wire [64:0] _dataArrays_3_0_io_r_resp_data_0;
  wire [64:0] _dataArrays_2_7_io_r_resp_data_0;
  wire [64:0] _dataArrays_2_6_io_r_resp_data_0;
  wire [64:0] _dataArrays_2_5_io_r_resp_data_0;
  wire [64:0] _dataArrays_2_4_io_r_resp_data_0;
  wire [64:0] _dataArrays_2_3_io_r_resp_data_0;
  wire [64:0] _dataArrays_2_2_io_r_resp_data_0;
  wire [64:0] _dataArrays_2_1_io_r_resp_data_0;
  wire [64:0] _dataArrays_2_0_io_r_resp_data_0;
  wire [64:0] _dataArrays_1_7_io_r_resp_data_0;
  wire [64:0] _dataArrays_1_6_io_r_resp_data_0;
  wire [64:0] _dataArrays_1_5_io_r_resp_data_0;
  wire [64:0] _dataArrays_1_4_io_r_resp_data_0;
  wire [64:0] _dataArrays_1_3_io_r_resp_data_0;
  wire [64:0] _dataArrays_1_2_io_r_resp_data_0;
  wire [64:0] _dataArrays_1_1_io_r_resp_data_0;
  wire [64:0] _dataArrays_1_0_io_r_resp_data_0;
  wire [64:0] _dataArrays_0_7_io_r_resp_data_0;
  wire [64:0] _dataArrays_0_6_io_r_resp_data_0;
  wire [64:0] _dataArrays_0_5_io_r_resp_data_0;
  wire [64:0] _dataArrays_0_4_io_r_resp_data_0;
  wire [64:0] _dataArrays_0_3_io_r_resp_data_0;
  wire [64:0] _dataArrays_0_2_io_r_resp_data_0;
  wire [64:0] _dataArrays_0_1_io_r_resp_data_0;
  wire [64:0] _dataArrays_0_0_io_r_resp_data_0;
  wire [64:0] writeEntries_0 =
    {io_write_bits_data[63:0], ^(io_write_bits_data[63:0]) ^ io_write_bits_poison};
  wire [64:0] writeEntries_1 =
    {io_write_bits_data[127:64], ^(io_write_bits_data[127:64]) ^ io_write_bits_poison};
  wire [64:0] writeEntries_2 =
    {io_write_bits_data[191:128], ^(io_write_bits_data[191:128]) ^ io_write_bits_poison};
  wire [64:0] writeEntries_3 =
    {io_write_bits_data[255:192], ^(io_write_bits_data[255:192]) ^ io_write_bits_poison};
  wire [64:0] writeEntries_4 =
    {io_write_bits_data[319:256], ^(io_write_bits_data[319:256]) ^ io_write_bits_poison};
  wire [64:0] writeEntries_5 =
    {io_write_bits_data[383:320], ^(io_write_bits_data[383:320]) ^ io_write_bits_poison};
  wire [64:0] writeEntries_6 =
    {io_write_bits_data[447:384], ^(io_write_bits_data[447:384]) ^ io_write_bits_poison};
  wire [64:0] writeEntries_7 =
    {io_write_bits_data[511:448], ^(io_write_bits_data[511:448]) ^ io_write_bits_poison};
  wire [3:0]  bankSel_bankIdxLow = {1'h0, io_read_0_bits_blkOffset[5:3]};
  wire [6:0]  _bankSel_bankIdxHigh_T_1 = 7'({1'h0, io_read_0_bits_blkOffset} + 7'h20);
  wire        bankSel_bankSel_0 = io_read_0_bits_blkOffset[5:3] == 3'h0;
  wire        bankSel_bankSel_1 =
    bankSel_bankIdxLow < 4'h2 & (|(_bankSel_bankIdxHigh_T_1[6:3]));
  wire        bankSel_bankSel_2 =
    bankSel_bankIdxLow < 4'h3 & (|(_bankSel_bankIdxHigh_T_1[6:4]));
  wire        bankSel_bankSel_3 =
    bankSel_bankIdxLow < 4'h4 & _bankSel_bankIdxHigh_T_1[6:3] > 4'h2;
  wire        bankSel_bankSel_4 =
    bankSel_bankIdxLow < 4'h5 & (|(_bankSel_bankIdxHigh_T_1[6:5]));
  wire        bankSel_bankSel_5 =
    bankSel_bankIdxLow < 4'h6 & _bankSel_bankIdxHigh_T_1[6:3] > 4'h4;
  wire        bankSel_bankSel_6 =
    bankSel_bankIdxLow < 4'h7 & _bankSel_bankIdxHigh_T_1[6:3] > 4'h5;
  wire        bankSel_bankSel_7 = _bankSel_bankIdxHigh_T_1[6:3] > 4'h6;
  wire        bankSel_bankSel_8 = bankSel_bankIdxLow < 4'h9 & _bankSel_bankIdxHigh_T_1[6];
  wire        bankSel_bankSel_9 =
    bankSel_bankIdxLow < 4'hA & _bankSel_bankIdxHigh_T_1[6:3] > 4'h8;
  wire        bankSel_bankSel_10 =
    bankSel_bankIdxLow < 4'hB & _bankSel_bankIdxHigh_T_1[6:3] > 4'h9;
  wire        bankSel_bankSel_11 = _bankSel_bankIdxHigh_T_1[6:3] > 4'hA;
  wire        bankSel_bankSel_12 =
    bankSel_bankIdxLow < 4'hD & _bankSel_bankIdxHigh_T_1[6:3] > 4'hB;
  wire        bankSel_bankSel_13 = _bankSel_bankIdxHigh_T_1[6:3] > 4'hC;
  wire        bankSel_bankSel_14 = _bankSel_bankIdxHigh_T_1[6:3] > 4'hD;
  wire        lineSel_2 = io_read_0_bits_blkOffset[5:3] > 3'h2;
  wire        lineSel_4 = io_read_0_bits_blkOffset[5:3] > 3'h4;
  wire        lineSel_5 = io_read_0_bits_blkOffset[5:3] > 3'h5;
  wire        masks_0_0 =
    (|(io_read_0_bits_blkOffset[5:3]))
      ? io_read_0_bits_waymask_1_0 & bankSel_bankSel_8
      : io_read_0_bits_waymask_0_0 & bankSel_bankSel_0;
  wire        masks_0_1 =
    (|(io_read_0_bits_blkOffset[5:4]))
      ? io_read_0_bits_waymask_1_0 & bankSel_bankSel_9
      : io_read_0_bits_waymask_0_0 & bankSel_bankSel_1;
  wire        masks_0_2 =
    lineSel_2
      ? io_read_0_bits_waymask_1_0 & bankSel_bankSel_10
      : io_read_0_bits_waymask_0_0 & bankSel_bankSel_2;
  wire        masks_0_3 =
    io_read_0_bits_blkOffset[5]
      ? io_read_0_bits_waymask_1_0 & bankSel_bankSel_11
      : io_read_0_bits_waymask_0_0 & bankSel_bankSel_3;
  wire        masks_0_4 =
    lineSel_4
      ? io_read_0_bits_waymask_1_0 & bankSel_bankSel_12
      : io_read_0_bits_waymask_0_0 & bankSel_bankSel_4;
  wire        masks_0_5 =
    lineSel_5
      ? io_read_0_bits_waymask_1_0 & bankSel_bankSel_13
      : io_read_0_bits_waymask_0_0 & bankSel_bankSel_5;
  wire        masks_0_6 =
    (&(io_read_0_bits_blkOffset[5:3]))
      ? io_read_0_bits_waymask_1_0 & bankSel_bankSel_14
      : io_read_0_bits_waymask_0_0 & bankSel_bankSel_6;
  wire        masks_0_7 = io_read_0_bits_waymask_0_0 & bankSel_bankSel_7;
  wire        masks_1_0 =
    (|(io_read_0_bits_blkOffset[5:3]))
      ? io_read_0_bits_waymask_1_1 & bankSel_bankSel_8
      : io_read_0_bits_waymask_0_1 & bankSel_bankSel_0;
  wire        masks_1_1 =
    (|(io_read_0_bits_blkOffset[5:4]))
      ? io_read_0_bits_waymask_1_1 & bankSel_bankSel_9
      : io_read_0_bits_waymask_0_1 & bankSel_bankSel_1;
  wire        masks_1_2 =
    lineSel_2
      ? io_read_0_bits_waymask_1_1 & bankSel_bankSel_10
      : io_read_0_bits_waymask_0_1 & bankSel_bankSel_2;
  wire        masks_1_3 =
    io_read_0_bits_blkOffset[5]
      ? io_read_0_bits_waymask_1_1 & bankSel_bankSel_11
      : io_read_0_bits_waymask_0_1 & bankSel_bankSel_3;
  wire        masks_1_4 =
    lineSel_4
      ? io_read_0_bits_waymask_1_1 & bankSel_bankSel_12
      : io_read_0_bits_waymask_0_1 & bankSel_bankSel_4;
  wire        masks_1_5 =
    lineSel_5
      ? io_read_0_bits_waymask_1_1 & bankSel_bankSel_13
      : io_read_0_bits_waymask_0_1 & bankSel_bankSel_5;
  wire        masks_1_6 =
    (&(io_read_0_bits_blkOffset[5:3]))
      ? io_read_0_bits_waymask_1_1 & bankSel_bankSel_14
      : io_read_0_bits_waymask_0_1 & bankSel_bankSel_6;
  wire        masks_1_7 = io_read_0_bits_waymask_0_1 & bankSel_bankSel_7;
  wire        masks_2_0 =
    (|(io_read_0_bits_blkOffset[5:3]))
      ? io_read_0_bits_waymask_1_2 & bankSel_bankSel_8
      : io_read_0_bits_waymask_0_2 & bankSel_bankSel_0;
  wire        masks_2_1 =
    (|(io_read_0_bits_blkOffset[5:4]))
      ? io_read_0_bits_waymask_1_2 & bankSel_bankSel_9
      : io_read_0_bits_waymask_0_2 & bankSel_bankSel_1;
  wire        masks_2_2 =
    lineSel_2
      ? io_read_0_bits_waymask_1_2 & bankSel_bankSel_10
      : io_read_0_bits_waymask_0_2 & bankSel_bankSel_2;
  wire        masks_2_3 =
    io_read_0_bits_blkOffset[5]
      ? io_read_0_bits_waymask_1_2 & bankSel_bankSel_11
      : io_read_0_bits_waymask_0_2 & bankSel_bankSel_3;
  wire        masks_2_4 =
    lineSel_4
      ? io_read_0_bits_waymask_1_2 & bankSel_bankSel_12
      : io_read_0_bits_waymask_0_2 & bankSel_bankSel_4;
  wire        masks_2_5 =
    lineSel_5
      ? io_read_0_bits_waymask_1_2 & bankSel_bankSel_13
      : io_read_0_bits_waymask_0_2 & bankSel_bankSel_5;
  wire        masks_2_6 =
    (&(io_read_0_bits_blkOffset[5:3]))
      ? io_read_0_bits_waymask_1_2 & bankSel_bankSel_14
      : io_read_0_bits_waymask_0_2 & bankSel_bankSel_6;
  wire        masks_2_7 = io_read_0_bits_waymask_0_2 & bankSel_bankSel_7;
  wire        masks_3_0 =
    (|(io_read_0_bits_blkOffset[5:3]))
      ? io_read_0_bits_waymask_1_3 & bankSel_bankSel_8
      : io_read_0_bits_waymask_0_3 & bankSel_bankSel_0;
  wire        masks_3_1 =
    (|(io_read_0_bits_blkOffset[5:4]))
      ? io_read_0_bits_waymask_1_3 & bankSel_bankSel_9
      : io_read_0_bits_waymask_0_3 & bankSel_bankSel_1;
  wire        masks_3_2 =
    lineSel_2
      ? io_read_0_bits_waymask_1_3 & bankSel_bankSel_10
      : io_read_0_bits_waymask_0_3 & bankSel_bankSel_2;
  wire        masks_3_3 =
    io_read_0_bits_blkOffset[5]
      ? io_read_0_bits_waymask_1_3 & bankSel_bankSel_11
      : io_read_0_bits_waymask_0_3 & bankSel_bankSel_3;
  wire        masks_3_4 =
    lineSel_4
      ? io_read_0_bits_waymask_1_3 & bankSel_bankSel_12
      : io_read_0_bits_waymask_0_3 & bankSel_bankSel_4;
  wire        masks_3_5 =
    lineSel_5
      ? io_read_0_bits_waymask_1_3 & bankSel_bankSel_13
      : io_read_0_bits_waymask_0_3 & bankSel_bankSel_5;
  wire        masks_3_6 =
    (&(io_read_0_bits_blkOffset[5:3]))
      ? io_read_0_bits_waymask_1_3 & bankSel_bankSel_14
      : io_read_0_bits_waymask_0_3 & bankSel_bankSel_6;
  wire        masks_3_7 = io_read_0_bits_waymask_0_3 & bankSel_bankSel_7;
  wire [7:0]  _GEN =
    (|(io_read_0_bits_blkOffset[5:3]))
      ? io_read_0_bits_vSetIdx_1
      : io_read_0_bits_vSetIdx_0;
  wire [7:0]  _GEN_0 =
    (|(io_read_0_bits_blkOffset[5:4]))
      ? io_read_1_bits_vSetIdx_1
      : io_read_1_bits_vSetIdx_0;
  wire [7:0]  _GEN_1 = lineSel_2 ? io_read_2_bits_vSetIdx_1 : io_read_2_bits_vSetIdx_0;
  wire [7:0]  _GEN_2 =
    io_read_0_bits_blkOffset[5] ? io_read_3_bits_vSetIdx_1 : io_read_3_bits_vSetIdx_0;
  wire [7:0]  _GEN_3 = lineSel_4 ? io_read_0_bits_vSetIdx_1 : io_read_0_bits_vSetIdx_0;
  wire [7:0]  _GEN_4 = lineSel_5 ? io_read_1_bits_vSetIdx_1 : io_read_1_bits_vSetIdx_0;
  wire [7:0]  _GEN_5 =
    (&(io_read_0_bits_blkOffset[5:3]))
      ? io_read_2_bits_vSetIdx_1
      : io_read_2_bits_vSetIdx_0;
  reg         masksReg_0_0;
  reg         masksReg_0_1;
  reg         masksReg_0_2;
  reg         masksReg_0_3;
  reg         masksReg_0_4;
  reg         masksReg_0_5;
  reg         masksReg_0_6;
  reg         masksReg_0_7;
  reg         masksReg_1_0;
  reg         masksReg_1_1;
  reg         masksReg_1_2;
  reg         masksReg_1_3;
  reg         masksReg_1_4;
  reg         masksReg_1_5;
  reg         masksReg_1_6;
  reg         masksReg_1_7;
  reg         masksReg_2_0;
  reg         masksReg_2_1;
  reg         masksReg_2_2;
  reg         masksReg_2_3;
  reg         masksReg_2_4;
  reg         masksReg_2_5;
  reg         masksReg_2_6;
  reg         masksReg_2_7;
  reg         masksReg_3_0;
  reg         masksReg_3_1;
  reg         masksReg_3_2;
  reg         masksReg_3_3;
  reg         masksReg_3_4;
  reg         masksReg_3_5;
  reg         masksReg_3_6;
  reg         masksReg_3_7;
  wire [64:0] readDataWithCode_0 =
    (masksReg_0_0 ? _dataArrays_0_0_io_r_resp_data_0 : 65'h0)
    | (masksReg_1_0 ? _dataArrays_1_0_io_r_resp_data_0 : 65'h0)
    | (masksReg_2_0 ? _dataArrays_2_0_io_r_resp_data_0 : 65'h0)
    | (masksReg_3_0 ? _dataArrays_3_0_io_r_resp_data_0 : 65'h0);
  wire [64:0] readDataWithCode_1 =
    (masksReg_0_1 ? _dataArrays_0_1_io_r_resp_data_0 : 65'h0)
    | (masksReg_1_1 ? _dataArrays_1_1_io_r_resp_data_0 : 65'h0)
    | (masksReg_2_1 ? _dataArrays_2_1_io_r_resp_data_0 : 65'h0)
    | (masksReg_3_1 ? _dataArrays_3_1_io_r_resp_data_0 : 65'h0);
  wire [64:0] readDataWithCode_2 =
    (masksReg_0_2 ? _dataArrays_0_2_io_r_resp_data_0 : 65'h0)
    | (masksReg_1_2 ? _dataArrays_1_2_io_r_resp_data_0 : 65'h0)
    | (masksReg_2_2 ? _dataArrays_2_2_io_r_resp_data_0 : 65'h0)
    | (masksReg_3_2 ? _dataArrays_3_2_io_r_resp_data_0 : 65'h0);
  wire [64:0] readDataWithCode_3 =
    (masksReg_0_3 ? _dataArrays_0_3_io_r_resp_data_0 : 65'h0)
    | (masksReg_1_3 ? _dataArrays_1_3_io_r_resp_data_0 : 65'h0)
    | (masksReg_2_3 ? _dataArrays_2_3_io_r_resp_data_0 : 65'h0)
    | (masksReg_3_3 ? _dataArrays_3_3_io_r_resp_data_0 : 65'h0);
  wire [64:0] readDataWithCode_4 =
    (masksReg_0_4 ? _dataArrays_0_4_io_r_resp_data_0 : 65'h0)
    | (masksReg_1_4 ? _dataArrays_1_4_io_r_resp_data_0 : 65'h0)
    | (masksReg_2_4 ? _dataArrays_2_4_io_r_resp_data_0 : 65'h0)
    | (masksReg_3_4 ? _dataArrays_3_4_io_r_resp_data_0 : 65'h0);
  wire [64:0] readDataWithCode_5 =
    (masksReg_0_5 ? _dataArrays_0_5_io_r_resp_data_0 : 65'h0)
    | (masksReg_1_5 ? _dataArrays_1_5_io_r_resp_data_0 : 65'h0)
    | (masksReg_2_5 ? _dataArrays_2_5_io_r_resp_data_0 : 65'h0)
    | (masksReg_3_5 ? _dataArrays_3_5_io_r_resp_data_0 : 65'h0);
  wire [64:0] readDataWithCode_6 =
    (masksReg_0_6 ? _dataArrays_0_6_io_r_resp_data_0 : 65'h0)
    | (masksReg_1_6 ? _dataArrays_1_6_io_r_resp_data_0 : 65'h0)
    | (masksReg_2_6 ? _dataArrays_2_6_io_r_resp_data_0 : 65'h0)
    | (masksReg_3_6 ? _dataArrays_3_6_io_r_resp_data_0 : 65'h0);
  wire [64:0] readDataWithCode_7 =
    (masksReg_0_7 ? _dataArrays_0_7_io_r_resp_data_0 : 65'h0)
    | (masksReg_1_7 ? _dataArrays_1_7_io_r_resp_data_0 : 65'h0)
    | (masksReg_2_7 ? _dataArrays_2_7_io_r_resp_data_0 : 65'h0)
    | (masksReg_3_7 ? _dataArrays_3_7_io_r_resp_data_0 : 65'h0);
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      masksReg_0_0 <= 1'h0;
      masksReg_0_1 <= 1'h0;
      masksReg_0_2 <= 1'h0;
      masksReg_0_3 <= 1'h0;
      masksReg_0_4 <= 1'h0;
      masksReg_0_5 <= 1'h0;
      masksReg_0_6 <= 1'h0;
      masksReg_0_7 <= 1'h0;
      masksReg_1_0 <= 1'h0;
      masksReg_1_1 <= 1'h0;
      masksReg_1_2 <= 1'h0;
      masksReg_1_3 <= 1'h0;
      masksReg_1_4 <= 1'h0;
      masksReg_1_5 <= 1'h0;
      masksReg_1_6 <= 1'h0;
      masksReg_1_7 <= 1'h0;
      masksReg_2_0 <= 1'h0;
      masksReg_2_1 <= 1'h0;
      masksReg_2_2 <= 1'h0;
      masksReg_2_3 <= 1'h0;
      masksReg_2_4 <= 1'h0;
      masksReg_2_5 <= 1'h0;
      masksReg_2_6 <= 1'h0;
      masksReg_2_7 <= 1'h0;
      masksReg_3_0 <= 1'h0;
      masksReg_3_1 <= 1'h0;
      masksReg_3_2 <= 1'h0;
      masksReg_3_3 <= 1'h0;
      masksReg_3_4 <= 1'h0;
      masksReg_3_5 <= 1'h0;
      masksReg_3_6 <= 1'h0;
      masksReg_3_7 <= 1'h0;
    end
    else if (io_read_0_valid) begin
      masksReg_0_0 <= masks_0_0;
      masksReg_0_1 <= masks_0_1;
      masksReg_0_2 <= masks_0_2;
      masksReg_0_3 <= masks_0_3;
      masksReg_0_4 <= masks_0_4;
      masksReg_0_5 <= masks_0_5;
      masksReg_0_6 <= masks_0_6;
      masksReg_0_7 <= masks_0_7;
      masksReg_1_0 <= masks_1_0;
      masksReg_1_1 <= masks_1_1;
      masksReg_1_2 <= masks_1_2;
      masksReg_1_3 <= masks_1_3;
      masksReg_1_4 <= masks_1_4;
      masksReg_1_5 <= masks_1_5;
      masksReg_1_6 <= masks_1_6;
      masksReg_1_7 <= masks_1_7;
      masksReg_2_0 <= masks_2_0;
      masksReg_2_1 <= masks_2_1;
      masksReg_2_2 <= masks_2_2;
      masksReg_2_3 <= masks_2_3;
      masksReg_2_4 <= masks_2_4;
      masksReg_2_5 <= masks_2_5;
      masksReg_2_6 <= masks_2_6;
      masksReg_2_7 <= masks_2_7;
      masksReg_3_0 <= masks_3_0;
      masksReg_3_1 <= masks_3_1;
      masksReg_3_2 <= masks_3_2;
      masksReg_3_3 <= masks_3_3;
      masksReg_3_4 <= masks_3_4;
      masksReg_3_5 <= masks_3_5;
      masksReg_3_6 <= masks_3_6;
      masksReg_3_7 <= masks_3_7;
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;
        masksReg_0_0 = _RANDOM[/*Zero width*/ 1'b0][0];
        masksReg_0_1 = _RANDOM[/*Zero width*/ 1'b0][1];
        masksReg_0_2 = _RANDOM[/*Zero width*/ 1'b0][2];
        masksReg_0_3 = _RANDOM[/*Zero width*/ 1'b0][3];
        masksReg_0_4 = _RANDOM[/*Zero width*/ 1'b0][4];
        masksReg_0_5 = _RANDOM[/*Zero width*/ 1'b0][5];
        masksReg_0_6 = _RANDOM[/*Zero width*/ 1'b0][6];
        masksReg_0_7 = _RANDOM[/*Zero width*/ 1'b0][7];
        masksReg_1_0 = _RANDOM[/*Zero width*/ 1'b0][8];
        masksReg_1_1 = _RANDOM[/*Zero width*/ 1'b0][9];
        masksReg_1_2 = _RANDOM[/*Zero width*/ 1'b0][10];
        masksReg_1_3 = _RANDOM[/*Zero width*/ 1'b0][11];
        masksReg_1_4 = _RANDOM[/*Zero width*/ 1'b0][12];
        masksReg_1_5 = _RANDOM[/*Zero width*/ 1'b0][13];
        masksReg_1_6 = _RANDOM[/*Zero width*/ 1'b0][14];
        masksReg_1_7 = _RANDOM[/*Zero width*/ 1'b0][15];
        masksReg_2_0 = _RANDOM[/*Zero width*/ 1'b0][16];
        masksReg_2_1 = _RANDOM[/*Zero width*/ 1'b0][17];
        masksReg_2_2 = _RANDOM[/*Zero width*/ 1'b0][18];
        masksReg_2_3 = _RANDOM[/*Zero width*/ 1'b0][19];
        masksReg_2_4 = _RANDOM[/*Zero width*/ 1'b0][20];
        masksReg_2_5 = _RANDOM[/*Zero width*/ 1'b0][21];
        masksReg_2_6 = _RANDOM[/*Zero width*/ 1'b0][22];
        masksReg_2_7 = _RANDOM[/*Zero width*/ 1'b0][23];
        masksReg_3_0 = _RANDOM[/*Zero width*/ 1'b0][24];
        masksReg_3_1 = _RANDOM[/*Zero width*/ 1'b0][25];
        masksReg_3_2 = _RANDOM[/*Zero width*/ 1'b0][26];
        masksReg_3_3 = _RANDOM[/*Zero width*/ 1'b0][27];
        masksReg_3_4 = _RANDOM[/*Zero width*/ 1'b0][28];
        masksReg_3_5 = _RANDOM[/*Zero width*/ 1'b0][29];
        masksReg_3_6 = _RANDOM[/*Zero width*/ 1'b0][30];
        masksReg_3_7 = _RANDOM[/*Zero width*/ 1'b0][31];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        masksReg_0_0 = 1'h0;
        masksReg_0_1 = 1'h0;
        masksReg_0_2 = 1'h0;
        masksReg_0_3 = 1'h0;
        masksReg_0_4 = 1'h0;
        masksReg_0_5 = 1'h0;
        masksReg_0_6 = 1'h0;
        masksReg_0_7 = 1'h0;
        masksReg_1_0 = 1'h0;
        masksReg_1_1 = 1'h0;
        masksReg_1_2 = 1'h0;
        masksReg_1_3 = 1'h0;
        masksReg_1_4 = 1'h0;
        masksReg_1_5 = 1'h0;
        masksReg_1_6 = 1'h0;
        masksReg_1_7 = 1'h0;
        masksReg_2_0 = 1'h0;
        masksReg_2_1 = 1'h0;
        masksReg_2_2 = 1'h0;
        masksReg_2_3 = 1'h0;
        masksReg_2_4 = 1'h0;
        masksReg_2_5 = 1'h0;
        masksReg_2_6 = 1'h0;
        masksReg_2_7 = 1'h0;
        masksReg_3_0 = 1'h0;
        masksReg_3_1 = 1'h0;
        masksReg_3_2 = 1'h0;
        masksReg_3_3 = 1'h0;
        masksReg_3_4 = 1'h0;
        masksReg_3_5 = 1'h0;
        masksReg_3_6 = 1'h0;
        masksReg_3_7 = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  SRAMTemplateWithFixedWidth dataArrays_0_0 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_0_valid & masks_0_0),
    .io_r_req_bits_setIdx (_GEN),
    .io_r_resp_data_0     (_dataArrays_0_0_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[0]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_0)
  );
  SRAMTemplateWithFixedWidth dataArrays_0_1 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_1_valid & masks_0_1),
    .io_r_req_bits_setIdx (_GEN_0),
    .io_r_resp_data_0     (_dataArrays_0_1_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[0]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_1)
  );
  SRAMTemplateWithFixedWidth dataArrays_0_2 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_2_valid & masks_0_2),
    .io_r_req_bits_setIdx (_GEN_1),
    .io_r_resp_data_0     (_dataArrays_0_2_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[0]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_2)
  );
  SRAMTemplateWithFixedWidth dataArrays_0_3 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_3_valid & masks_0_3),
    .io_r_req_bits_setIdx (_GEN_2),
    .io_r_resp_data_0     (_dataArrays_0_3_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[0]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_3)
  );
  SRAMTemplateWithFixedWidth dataArrays_0_4 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_0_valid & masks_0_4),
    .io_r_req_bits_setIdx (_GEN_3),
    .io_r_resp_data_0     (_dataArrays_0_4_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[0]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_4)
  );
  SRAMTemplateWithFixedWidth dataArrays_0_5 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_1_valid & masks_0_5),
    .io_r_req_bits_setIdx (_GEN_4),
    .io_r_resp_data_0     (_dataArrays_0_5_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[0]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_5)
  );
  SRAMTemplateWithFixedWidth dataArrays_0_6 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_2_valid & masks_0_6),
    .io_r_req_bits_setIdx (_GEN_5),
    .io_r_resp_data_0     (_dataArrays_0_6_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[0]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_6)
  );
  SRAMTemplateWithFixedWidth dataArrays_0_7 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_3_valid & masks_0_7),
    .io_r_req_bits_setIdx (io_read_3_bits_vSetIdx_0),
    .io_r_resp_data_0     (_dataArrays_0_7_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[0]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_7)
  );
  SRAMTemplateWithFixedWidth dataArrays_1_0 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_0_valid & masks_1_0),
    .io_r_req_bits_setIdx (_GEN),
    .io_r_resp_data_0     (_dataArrays_1_0_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[1]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_0)
  );
  SRAMTemplateWithFixedWidth dataArrays_1_1 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_1_valid & masks_1_1),
    .io_r_req_bits_setIdx (_GEN_0),
    .io_r_resp_data_0     (_dataArrays_1_1_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[1]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_1)
  );
  SRAMTemplateWithFixedWidth dataArrays_1_2 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_2_valid & masks_1_2),
    .io_r_req_bits_setIdx (_GEN_1),
    .io_r_resp_data_0     (_dataArrays_1_2_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[1]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_2)
  );
  SRAMTemplateWithFixedWidth dataArrays_1_3 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_3_valid & masks_1_3),
    .io_r_req_bits_setIdx (_GEN_2),
    .io_r_resp_data_0     (_dataArrays_1_3_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[1]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_3)
  );
  SRAMTemplateWithFixedWidth dataArrays_1_4 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_0_valid & masks_1_4),
    .io_r_req_bits_setIdx (_GEN_3),
    .io_r_resp_data_0     (_dataArrays_1_4_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[1]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_4)
  );
  SRAMTemplateWithFixedWidth dataArrays_1_5 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_1_valid & masks_1_5),
    .io_r_req_bits_setIdx (_GEN_4),
    .io_r_resp_data_0     (_dataArrays_1_5_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[1]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_5)
  );
  SRAMTemplateWithFixedWidth dataArrays_1_6 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_2_valid & masks_1_6),
    .io_r_req_bits_setIdx (_GEN_5),
    .io_r_resp_data_0     (_dataArrays_1_6_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[1]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_6)
  );
  SRAMTemplateWithFixedWidth dataArrays_1_7 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_3_valid & masks_1_7),
    .io_r_req_bits_setIdx (io_read_3_bits_vSetIdx_0),
    .io_r_resp_data_0     (_dataArrays_1_7_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[1]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_7)
  );
  SRAMTemplateWithFixedWidth dataArrays_2_0 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_0_valid & masks_2_0),
    .io_r_req_bits_setIdx (_GEN),
    .io_r_resp_data_0     (_dataArrays_2_0_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[2]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_0)
  );
  SRAMTemplateWithFixedWidth dataArrays_2_1 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_1_valid & masks_2_1),
    .io_r_req_bits_setIdx (_GEN_0),
    .io_r_resp_data_0     (_dataArrays_2_1_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[2]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_1)
  );
  SRAMTemplateWithFixedWidth dataArrays_2_2 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_2_valid & masks_2_2),
    .io_r_req_bits_setIdx (_GEN_1),
    .io_r_resp_data_0     (_dataArrays_2_2_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[2]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_2)
  );
  SRAMTemplateWithFixedWidth dataArrays_2_3 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_3_valid & masks_2_3),
    .io_r_req_bits_setIdx (_GEN_2),
    .io_r_resp_data_0     (_dataArrays_2_3_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[2]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_3)
  );
  SRAMTemplateWithFixedWidth dataArrays_2_4 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_0_valid & masks_2_4),
    .io_r_req_bits_setIdx (_GEN_3),
    .io_r_resp_data_0     (_dataArrays_2_4_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[2]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_4)
  );
  SRAMTemplateWithFixedWidth dataArrays_2_5 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_1_valid & masks_2_5),
    .io_r_req_bits_setIdx (_GEN_4),
    .io_r_resp_data_0     (_dataArrays_2_5_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[2]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_5)
  );
  SRAMTemplateWithFixedWidth dataArrays_2_6 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_2_valid & masks_2_6),
    .io_r_req_bits_setIdx (_GEN_5),
    .io_r_resp_data_0     (_dataArrays_2_6_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[2]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_6)
  );
  SRAMTemplateWithFixedWidth dataArrays_2_7 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_3_valid & masks_2_7),
    .io_r_req_bits_setIdx (io_read_3_bits_vSetIdx_0),
    .io_r_resp_data_0     (_dataArrays_2_7_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[2]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_7)
  );
  SRAMTemplateWithFixedWidth dataArrays_3_0 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_0_valid & masks_3_0),
    .io_r_req_bits_setIdx (_GEN),
    .io_r_resp_data_0     (_dataArrays_3_0_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[3]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_0)
  );
  SRAMTemplateWithFixedWidth dataArrays_3_1 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_1_valid & masks_3_1),
    .io_r_req_bits_setIdx (_GEN_0),
    .io_r_resp_data_0     (_dataArrays_3_1_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[3]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_1)
  );
  SRAMTemplateWithFixedWidth dataArrays_3_2 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_2_valid & masks_3_2),
    .io_r_req_bits_setIdx (_GEN_1),
    .io_r_resp_data_0     (_dataArrays_3_2_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[3]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_2)
  );
  SRAMTemplateWithFixedWidth dataArrays_3_3 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_3_valid & masks_3_3),
    .io_r_req_bits_setIdx (_GEN_2),
    .io_r_resp_data_0     (_dataArrays_3_3_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[3]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_3)
  );
  SRAMTemplateWithFixedWidth dataArrays_3_4 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_0_valid & masks_3_4),
    .io_r_req_bits_setIdx (_GEN_3),
    .io_r_resp_data_0     (_dataArrays_3_4_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[3]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_4)
  );
  SRAMTemplateWithFixedWidth dataArrays_3_5 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_1_valid & masks_3_5),
    .io_r_req_bits_setIdx (_GEN_4),
    .io_r_resp_data_0     (_dataArrays_3_5_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[3]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_5)
  );
  SRAMTemplateWithFixedWidth dataArrays_3_6 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_2_valid & masks_3_6),
    .io_r_req_bits_setIdx (_GEN_5),
    .io_r_resp_data_0     (_dataArrays_3_6_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[3]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_6)
  );
  SRAMTemplateWithFixedWidth dataArrays_3_7 (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (io_read_3_valid & masks_3_7),
    .io_r_req_bits_setIdx (io_read_3_bits_vSetIdx_0),
    .io_r_resp_data_0     (_dataArrays_3_7_io_r_resp_data_0),
    .io_w_req_valid       (io_write_valid & io_write_bits_waymask[3]),
    .io_w_req_bits_setIdx (io_write_bits_virIdx),
    .io_w_req_bits_data_0 (writeEntries_7)
  );
  assign io_read_3_ready = ~io_write_valid;
  assign io_readResp_datas_0 = readDataWithCode_0[64:1];
  assign io_readResp_datas_1 = readDataWithCode_1[64:1];
  assign io_readResp_datas_2 = readDataWithCode_2[64:1];
  assign io_readResp_datas_3 = readDataWithCode_3[64:1];
  assign io_readResp_datas_4 = readDataWithCode_4[64:1];
  assign io_readResp_datas_5 = readDataWithCode_5[64:1];
  assign io_readResp_datas_6 = readDataWithCode_6[64:1];
  assign io_readResp_datas_7 = readDataWithCode_7[64:1];
  assign io_readResp_codes_0 = readDataWithCode_0[0];
  assign io_readResp_codes_1 = readDataWithCode_1[0];
  assign io_readResp_codes_2 = readDataWithCode_2[0];
  assign io_readResp_codes_3 = readDataWithCode_3[0];
  assign io_readResp_codes_4 = readDataWithCode_4[0];
  assign io_readResp_codes_5 = readDataWithCode_5[0];
  assign io_readResp_codes_6 = readDataWithCode_6[0];
  assign io_readResp_codes_7 = readDataWithCode_7[0];
endmodule

