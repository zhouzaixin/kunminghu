// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module FuBusyTableRead_52(
  input  [3:0]  io_in_fuBusyTable,
  input  [34:0] io_in_fuTypeRegVec_0,
  input  [34:0] io_in_fuTypeRegVec_1,
  input  [34:0] io_in_fuTypeRegVec_2,
  input  [34:0] io_in_fuTypeRegVec_3,
  input  [34:0] io_in_fuTypeRegVec_4,
  input  [34:0] io_in_fuTypeRegVec_5,
  input  [34:0] io_in_fuTypeRegVec_6,
  input  [34:0] io_in_fuTypeRegVec_7,
  input  [34:0] io_in_fuTypeRegVec_8,
  input  [34:0] io_in_fuTypeRegVec_9,
  input  [34:0] io_in_fuTypeRegVec_10,
  input  [34:0] io_in_fuTypeRegVec_11,
  input  [34:0] io_in_fuTypeRegVec_12,
  input  [34:0] io_in_fuTypeRegVec_13,
  input  [34:0] io_in_fuTypeRegVec_14,
  input  [34:0] io_in_fuTypeRegVec_15,
  input  [34:0] io_in_fuTypeRegVec_16,
  input  [34:0] io_in_fuTypeRegVec_17,
  output [17:0] io_out_fuBusyTableMask
);

  assign io_out_fuBusyTableMask =
    (io_in_fuBusyTable[1]
       ? {io_in_fuTypeRegVec_17[11],
          io_in_fuTypeRegVec_16[11],
          io_in_fuTypeRegVec_15[11],
          io_in_fuTypeRegVec_14[11],
          io_in_fuTypeRegVec_13[11],
          io_in_fuTypeRegVec_12[11],
          io_in_fuTypeRegVec_11[11],
          io_in_fuTypeRegVec_10[11],
          io_in_fuTypeRegVec_9[11],
          io_in_fuTypeRegVec_8[11],
          io_in_fuTypeRegVec_7[11],
          io_in_fuTypeRegVec_6[11],
          io_in_fuTypeRegVec_5[11],
          io_in_fuTypeRegVec_4[11],
          io_in_fuTypeRegVec_3[11],
          io_in_fuTypeRegVec_2[11],
          io_in_fuTypeRegVec_1[11],
          io_in_fuTypeRegVec_0[11]}
       : 18'h0)
    | (io_in_fuBusyTable[3]
         ? {io_in_fuTypeRegVec_17[12],
            io_in_fuTypeRegVec_16[12],
            io_in_fuTypeRegVec_15[12],
            io_in_fuTypeRegVec_14[12],
            io_in_fuTypeRegVec_13[12],
            io_in_fuTypeRegVec_12[12],
            io_in_fuTypeRegVec_11[12],
            io_in_fuTypeRegVec_10[12],
            io_in_fuTypeRegVec_9[12],
            io_in_fuTypeRegVec_8[12],
            io_in_fuTypeRegVec_7[12],
            io_in_fuTypeRegVec_6[12],
            io_in_fuTypeRegVec_5[12],
            io_in_fuTypeRegVec_4[12],
            io_in_fuTypeRegVec_3[12],
            io_in_fuTypeRegVec_2[12],
            io_in_fuTypeRegVec_1[12],
            io_in_fuTypeRegVec_0[12]}
         : 18'h0);
endmodule

