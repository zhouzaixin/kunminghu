// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module TLWidthWidget_2(
  input          clock,
  input          reset,
  output         auto_in_a_ready,
  input          auto_in_a_valid,
  input  [3:0]   auto_in_a_bits_opcode,
  input  [2:0]   auto_in_a_bits_size,
  input  [47:0]  auto_in_a_bits_address,
  input  [7:0]   auto_in_a_bits_data,
  input          auto_in_d_ready,
  output         auto_in_d_valid,
  output [3:0]   auto_in_d_bits_opcode,
  output [1:0]   auto_in_d_bits_param,
  output [2:0]   auto_in_d_bits_size,
  output         auto_in_d_bits_source,
  output [3:0]   auto_in_d_bits_sink,
  output         auto_in_d_bits_denied,
  output [7:0]   auto_in_d_bits_data,
  output         auto_in_d_bits_corrupt,
  input          auto_out_a_ready,
  output         auto_out_a_valid,
  output [3:0]   auto_out_a_bits_opcode,
  output [2:0]   auto_out_a_bits_size,
  output [47:0]  auto_out_a_bits_address,
  output [31:0]  auto_out_a_bits_mask,
  output [255:0] auto_out_a_bits_data,
  output         auto_out_d_ready,
  input          auto_out_d_valid,
  input  [3:0]   auto_out_d_bits_opcode,
  input  [1:0]   auto_out_d_bits_param,
  input  [2:0]   auto_out_d_bits_size,
  input          auto_out_d_bits_source,
  input  [3:0]   auto_out_d_bits_sink,
  input          auto_out_d_bits_denied,
  input  [255:0] auto_out_d_bits_data,
  input          auto_out_d_bits_corrupt
);

  wire             nodeIn_a_ready;
  wire             _repeated_repeater_io_deq_valid;
  wire [3:0]       _repeated_repeater_io_deq_bits_opcode;
  wire [2:0]       _repeated_repeater_io_deq_bits_size;
  wire [255:0]     _repeated_repeater_io_deq_bits_data;
  wire [11:0]      _limit_T = 12'h1F << auto_in_a_bits_size;
  reg  [4:0]       count;
  wire             last = count == ~(_limit_T[4:0]) | auto_in_a_bits_opcode[2];
  wire             _repeat_sel_sel_T = nodeIn_a_ready & auto_in_a_valid;
  assign nodeIn_a_ready = auto_out_a_ready | ~last;
  reg              nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_0 =
    (count & ~(_limit_T[4:0])) == 5'h0 | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_1 =
    ({count[4:1], ~(count[0])} & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_2 =
    ({count[4:2], count[1:0] ^ 2'h2} & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_3 =
    ({count[4:2], ~(count[1:0])} & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_4 =
    ({count[4:3], count[2:0] ^ 3'h4} & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_5 =
    ({count[4:3], count[2:0] ^ 3'h5} & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_6 =
    ({count[4:3], count[2:0] ^ 3'h6} & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_7 =
    ({count[4:3], ~(count[2:0])} & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_8 =
    ({count[4], count[3:0] ^ 4'h8} & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_9 =
    ({count[4], count[3:0] ^ 4'h9} & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_10 =
    ({count[4], count[3:0] ^ 4'hA} & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_11 =
    ({count[4], count[3:0] ^ 4'hB} & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_12 =
    ({count[4], count[3:0] ^ 4'hC} & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_13 =
    ({count[4], count[3:0] ^ 4'hD} & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_14 =
    ({count[4], count[3:0] ^ 4'hE} & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_15 =
    ({count[4], ~(count[3:0])} & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_16 =
    ((count ^ 5'h10) & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_17 =
    ((count ^ 5'h11) & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_18 =
    ((count ^ 5'h12) & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_19 =
    ((count ^ 5'h13) & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_20 =
    ((count ^ 5'h14) & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_21 =
    ((count ^ 5'h15) & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_22 =
    ((count ^ 5'h16) & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_23 =
    ((count ^ 5'h17) & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_24 =
    ((count ^ 5'h18) & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_25 =
    ((count ^ 5'h19) & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_26 =
    ((count ^ 5'h1A) & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_27 =
    ((count ^ 5'h1B) & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_28 =
    ((count ^ 5'h1C) & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_29 =
    ((count ^ 5'h1D) & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  wire             nodeOut_a_bits_data_masked_enable_30 =
    ((count ^ 5'h1E) & ~(_limit_T[4:0])) == 5'h0
    | ~nodeOut_a_bits_data_rdata_written_once;
  reg  [7:0]       nodeOut_a_bits_data_rdata_0;
  reg  [7:0]       nodeOut_a_bits_data_rdata_1;
  reg  [7:0]       nodeOut_a_bits_data_rdata_2;
  reg  [7:0]       nodeOut_a_bits_data_rdata_3;
  reg  [7:0]       nodeOut_a_bits_data_rdata_4;
  reg  [7:0]       nodeOut_a_bits_data_rdata_5;
  reg  [7:0]       nodeOut_a_bits_data_rdata_6;
  reg  [7:0]       nodeOut_a_bits_data_rdata_7;
  reg  [7:0]       nodeOut_a_bits_data_rdata_8;
  reg  [7:0]       nodeOut_a_bits_data_rdata_9;
  reg  [7:0]       nodeOut_a_bits_data_rdata_10;
  reg  [7:0]       nodeOut_a_bits_data_rdata_11;
  reg  [7:0]       nodeOut_a_bits_data_rdata_12;
  reg  [7:0]       nodeOut_a_bits_data_rdata_13;
  reg  [7:0]       nodeOut_a_bits_data_rdata_14;
  reg  [7:0]       nodeOut_a_bits_data_rdata_15;
  reg  [7:0]       nodeOut_a_bits_data_rdata_16;
  reg  [7:0]       nodeOut_a_bits_data_rdata_17;
  reg  [7:0]       nodeOut_a_bits_data_rdata_18;
  reg  [7:0]       nodeOut_a_bits_data_rdata_19;
  reg  [7:0]       nodeOut_a_bits_data_rdata_20;
  reg  [7:0]       nodeOut_a_bits_data_rdata_21;
  reg  [7:0]       nodeOut_a_bits_data_rdata_22;
  reg  [7:0]       nodeOut_a_bits_data_rdata_23;
  reg  [7:0]       nodeOut_a_bits_data_rdata_24;
  reg  [7:0]       nodeOut_a_bits_data_rdata_25;
  reg  [7:0]       nodeOut_a_bits_data_rdata_26;
  reg  [7:0]       nodeOut_a_bits_data_rdata_27;
  reg  [7:0]       nodeOut_a_bits_data_rdata_28;
  reg  [7:0]       nodeOut_a_bits_data_rdata_29;
  reg  [7:0]       nodeOut_a_bits_data_rdata_30;
  wire             _nodeOut_a_bits_data_T_2 = _repeat_sel_sel_T & ~last;
  wire             nodeOut_a_bits_mask_sub_sub_sub_sub_sub_0_1 =
    auto_in_a_bits_size > 3'h4;
  wire             nodeOut_a_bits_mask_sub_sub_sub_sub_size = auto_in_a_bits_size == 3'h4;
  wire             nodeOut_a_bits_mask_sub_sub_sub_sub_0_1 =
    nodeOut_a_bits_mask_sub_sub_sub_sub_sub_0_1 | nodeOut_a_bits_mask_sub_sub_sub_sub_size
    & ~(auto_in_a_bits_address[4]);
  wire             nodeOut_a_bits_mask_sub_sub_sub_sub_1_1 =
    nodeOut_a_bits_mask_sub_sub_sub_sub_sub_0_1 | nodeOut_a_bits_mask_sub_sub_sub_sub_size
    & auto_in_a_bits_address[4];
  wire             nodeOut_a_bits_mask_sub_sub_sub_size = auto_in_a_bits_size == 3'h3;
  wire             nodeOut_a_bits_mask_sub_sub_sub_0_2 =
    ~(auto_in_a_bits_address[4]) & ~(auto_in_a_bits_address[3]);
  wire             nodeOut_a_bits_mask_sub_sub_sub_0_1 =
    nodeOut_a_bits_mask_sub_sub_sub_sub_0_1 | nodeOut_a_bits_mask_sub_sub_sub_size
    & nodeOut_a_bits_mask_sub_sub_sub_0_2;
  wire             nodeOut_a_bits_mask_sub_sub_sub_1_2 =
    ~(auto_in_a_bits_address[4]) & auto_in_a_bits_address[3];
  wire             nodeOut_a_bits_mask_sub_sub_sub_1_1 =
    nodeOut_a_bits_mask_sub_sub_sub_sub_0_1 | nodeOut_a_bits_mask_sub_sub_sub_size
    & nodeOut_a_bits_mask_sub_sub_sub_1_2;
  wire             nodeOut_a_bits_mask_sub_sub_sub_2_2 =
    auto_in_a_bits_address[4] & ~(auto_in_a_bits_address[3]);
  wire             nodeOut_a_bits_mask_sub_sub_sub_2_1 =
    nodeOut_a_bits_mask_sub_sub_sub_sub_1_1 | nodeOut_a_bits_mask_sub_sub_sub_size
    & nodeOut_a_bits_mask_sub_sub_sub_2_2;
  wire             nodeOut_a_bits_mask_sub_sub_sub_3_2 =
    auto_in_a_bits_address[4] & auto_in_a_bits_address[3];
  wire             nodeOut_a_bits_mask_sub_sub_sub_3_1 =
    nodeOut_a_bits_mask_sub_sub_sub_sub_1_1 | nodeOut_a_bits_mask_sub_sub_sub_size
    & nodeOut_a_bits_mask_sub_sub_sub_3_2;
  wire             nodeOut_a_bits_mask_sub_sub_size = auto_in_a_bits_size == 3'h2;
  wire             nodeOut_a_bits_mask_sub_sub_0_2 =
    nodeOut_a_bits_mask_sub_sub_sub_0_2 & ~(auto_in_a_bits_address[2]);
  wire             nodeOut_a_bits_mask_sub_sub_0_1 =
    nodeOut_a_bits_mask_sub_sub_sub_0_1 | nodeOut_a_bits_mask_sub_sub_size
    & nodeOut_a_bits_mask_sub_sub_0_2;
  wire             nodeOut_a_bits_mask_sub_sub_1_2 =
    nodeOut_a_bits_mask_sub_sub_sub_0_2 & auto_in_a_bits_address[2];
  wire             nodeOut_a_bits_mask_sub_sub_1_1 =
    nodeOut_a_bits_mask_sub_sub_sub_0_1 | nodeOut_a_bits_mask_sub_sub_size
    & nodeOut_a_bits_mask_sub_sub_1_2;
  wire             nodeOut_a_bits_mask_sub_sub_2_2 =
    nodeOut_a_bits_mask_sub_sub_sub_1_2 & ~(auto_in_a_bits_address[2]);
  wire             nodeOut_a_bits_mask_sub_sub_2_1 =
    nodeOut_a_bits_mask_sub_sub_sub_1_1 | nodeOut_a_bits_mask_sub_sub_size
    & nodeOut_a_bits_mask_sub_sub_2_2;
  wire             nodeOut_a_bits_mask_sub_sub_3_2 =
    nodeOut_a_bits_mask_sub_sub_sub_1_2 & auto_in_a_bits_address[2];
  wire             nodeOut_a_bits_mask_sub_sub_3_1 =
    nodeOut_a_bits_mask_sub_sub_sub_1_1 | nodeOut_a_bits_mask_sub_sub_size
    & nodeOut_a_bits_mask_sub_sub_3_2;
  wire             nodeOut_a_bits_mask_sub_sub_4_2 =
    nodeOut_a_bits_mask_sub_sub_sub_2_2 & ~(auto_in_a_bits_address[2]);
  wire             nodeOut_a_bits_mask_sub_sub_4_1 =
    nodeOut_a_bits_mask_sub_sub_sub_2_1 | nodeOut_a_bits_mask_sub_sub_size
    & nodeOut_a_bits_mask_sub_sub_4_2;
  wire             nodeOut_a_bits_mask_sub_sub_5_2 =
    nodeOut_a_bits_mask_sub_sub_sub_2_2 & auto_in_a_bits_address[2];
  wire             nodeOut_a_bits_mask_sub_sub_5_1 =
    nodeOut_a_bits_mask_sub_sub_sub_2_1 | nodeOut_a_bits_mask_sub_sub_size
    & nodeOut_a_bits_mask_sub_sub_5_2;
  wire             nodeOut_a_bits_mask_sub_sub_6_2 =
    nodeOut_a_bits_mask_sub_sub_sub_3_2 & ~(auto_in_a_bits_address[2]);
  wire             nodeOut_a_bits_mask_sub_sub_6_1 =
    nodeOut_a_bits_mask_sub_sub_sub_3_1 | nodeOut_a_bits_mask_sub_sub_size
    & nodeOut_a_bits_mask_sub_sub_6_2;
  wire             nodeOut_a_bits_mask_sub_sub_7_2 =
    nodeOut_a_bits_mask_sub_sub_sub_3_2 & auto_in_a_bits_address[2];
  wire             nodeOut_a_bits_mask_sub_sub_7_1 =
    nodeOut_a_bits_mask_sub_sub_sub_3_1 | nodeOut_a_bits_mask_sub_sub_size
    & nodeOut_a_bits_mask_sub_sub_7_2;
  wire             nodeOut_a_bits_mask_sub_size = auto_in_a_bits_size == 3'h1;
  wire             nodeOut_a_bits_mask_sub_0_2 =
    nodeOut_a_bits_mask_sub_sub_0_2 & ~(auto_in_a_bits_address[1]);
  wire             nodeOut_a_bits_mask_sub_0_1 =
    nodeOut_a_bits_mask_sub_sub_0_1 | nodeOut_a_bits_mask_sub_size
    & nodeOut_a_bits_mask_sub_0_2;
  wire             nodeOut_a_bits_mask_sub_1_2 =
    nodeOut_a_bits_mask_sub_sub_0_2 & auto_in_a_bits_address[1];
  wire             nodeOut_a_bits_mask_sub_1_1 =
    nodeOut_a_bits_mask_sub_sub_0_1 | nodeOut_a_bits_mask_sub_size
    & nodeOut_a_bits_mask_sub_1_2;
  wire             nodeOut_a_bits_mask_sub_2_2 =
    nodeOut_a_bits_mask_sub_sub_1_2 & ~(auto_in_a_bits_address[1]);
  wire             nodeOut_a_bits_mask_sub_2_1 =
    nodeOut_a_bits_mask_sub_sub_1_1 | nodeOut_a_bits_mask_sub_size
    & nodeOut_a_bits_mask_sub_2_2;
  wire             nodeOut_a_bits_mask_sub_3_2 =
    nodeOut_a_bits_mask_sub_sub_1_2 & auto_in_a_bits_address[1];
  wire             nodeOut_a_bits_mask_sub_3_1 =
    nodeOut_a_bits_mask_sub_sub_1_1 | nodeOut_a_bits_mask_sub_size
    & nodeOut_a_bits_mask_sub_3_2;
  wire             nodeOut_a_bits_mask_sub_4_2 =
    nodeOut_a_bits_mask_sub_sub_2_2 & ~(auto_in_a_bits_address[1]);
  wire             nodeOut_a_bits_mask_sub_4_1 =
    nodeOut_a_bits_mask_sub_sub_2_1 | nodeOut_a_bits_mask_sub_size
    & nodeOut_a_bits_mask_sub_4_2;
  wire             nodeOut_a_bits_mask_sub_5_2 =
    nodeOut_a_bits_mask_sub_sub_2_2 & auto_in_a_bits_address[1];
  wire             nodeOut_a_bits_mask_sub_5_1 =
    nodeOut_a_bits_mask_sub_sub_2_1 | nodeOut_a_bits_mask_sub_size
    & nodeOut_a_bits_mask_sub_5_2;
  wire             nodeOut_a_bits_mask_sub_6_2 =
    nodeOut_a_bits_mask_sub_sub_3_2 & ~(auto_in_a_bits_address[1]);
  wire             nodeOut_a_bits_mask_sub_6_1 =
    nodeOut_a_bits_mask_sub_sub_3_1 | nodeOut_a_bits_mask_sub_size
    & nodeOut_a_bits_mask_sub_6_2;
  wire             nodeOut_a_bits_mask_sub_7_2 =
    nodeOut_a_bits_mask_sub_sub_3_2 & auto_in_a_bits_address[1];
  wire             nodeOut_a_bits_mask_sub_7_1 =
    nodeOut_a_bits_mask_sub_sub_3_1 | nodeOut_a_bits_mask_sub_size
    & nodeOut_a_bits_mask_sub_7_2;
  wire             nodeOut_a_bits_mask_sub_8_2 =
    nodeOut_a_bits_mask_sub_sub_4_2 & ~(auto_in_a_bits_address[1]);
  wire             nodeOut_a_bits_mask_sub_8_1 =
    nodeOut_a_bits_mask_sub_sub_4_1 | nodeOut_a_bits_mask_sub_size
    & nodeOut_a_bits_mask_sub_8_2;
  wire             nodeOut_a_bits_mask_sub_9_2 =
    nodeOut_a_bits_mask_sub_sub_4_2 & auto_in_a_bits_address[1];
  wire             nodeOut_a_bits_mask_sub_9_1 =
    nodeOut_a_bits_mask_sub_sub_4_1 | nodeOut_a_bits_mask_sub_size
    & nodeOut_a_bits_mask_sub_9_2;
  wire             nodeOut_a_bits_mask_sub_10_2 =
    nodeOut_a_bits_mask_sub_sub_5_2 & ~(auto_in_a_bits_address[1]);
  wire             nodeOut_a_bits_mask_sub_10_1 =
    nodeOut_a_bits_mask_sub_sub_5_1 | nodeOut_a_bits_mask_sub_size
    & nodeOut_a_bits_mask_sub_10_2;
  wire             nodeOut_a_bits_mask_sub_11_2 =
    nodeOut_a_bits_mask_sub_sub_5_2 & auto_in_a_bits_address[1];
  wire             nodeOut_a_bits_mask_sub_11_1 =
    nodeOut_a_bits_mask_sub_sub_5_1 | nodeOut_a_bits_mask_sub_size
    & nodeOut_a_bits_mask_sub_11_2;
  wire             nodeOut_a_bits_mask_sub_12_2 =
    nodeOut_a_bits_mask_sub_sub_6_2 & ~(auto_in_a_bits_address[1]);
  wire             nodeOut_a_bits_mask_sub_12_1 =
    nodeOut_a_bits_mask_sub_sub_6_1 | nodeOut_a_bits_mask_sub_size
    & nodeOut_a_bits_mask_sub_12_2;
  wire             nodeOut_a_bits_mask_sub_13_2 =
    nodeOut_a_bits_mask_sub_sub_6_2 & auto_in_a_bits_address[1];
  wire             nodeOut_a_bits_mask_sub_13_1 =
    nodeOut_a_bits_mask_sub_sub_6_1 | nodeOut_a_bits_mask_sub_size
    & nodeOut_a_bits_mask_sub_13_2;
  wire             nodeOut_a_bits_mask_sub_14_2 =
    nodeOut_a_bits_mask_sub_sub_7_2 & ~(auto_in_a_bits_address[1]);
  wire             nodeOut_a_bits_mask_sub_14_1 =
    nodeOut_a_bits_mask_sub_sub_7_1 | nodeOut_a_bits_mask_sub_size
    & nodeOut_a_bits_mask_sub_14_2;
  wire             nodeOut_a_bits_mask_sub_15_2 =
    nodeOut_a_bits_mask_sub_sub_7_2 & auto_in_a_bits_address[1];
  wire             nodeOut_a_bits_mask_sub_15_1 =
    nodeOut_a_bits_mask_sub_sub_7_1 | nodeOut_a_bits_mask_sub_size
    & nodeOut_a_bits_mask_sub_15_2;
  wire [11:0]      _repeat_limit_T = 12'h1F << _repeated_repeater_io_deq_bits_size;
  reg  [4:0]       repeat_count;
  wire             repeat_first = repeat_count == 5'h0;
  wire             repeat_last =
    repeat_count == ~(_repeat_limit_T[4:0]) | ~(_repeated_repeater_io_deq_bits_opcode[0]);
  reg  [4:0]       repeat_sel_sel_sources_0;
  reg  [4:0]       repeat_sel_hold_r;
  wire [31:0][7:0] _GEN =
    {{_repeated_repeater_io_deq_bits_data[255:248]},
     {_repeated_repeater_io_deq_bits_data[247:240]},
     {_repeated_repeater_io_deq_bits_data[239:232]},
     {_repeated_repeater_io_deq_bits_data[231:224]},
     {_repeated_repeater_io_deq_bits_data[223:216]},
     {_repeated_repeater_io_deq_bits_data[215:208]},
     {_repeated_repeater_io_deq_bits_data[207:200]},
     {_repeated_repeater_io_deq_bits_data[199:192]},
     {_repeated_repeater_io_deq_bits_data[191:184]},
     {_repeated_repeater_io_deq_bits_data[183:176]},
     {_repeated_repeater_io_deq_bits_data[175:168]},
     {_repeated_repeater_io_deq_bits_data[167:160]},
     {_repeated_repeater_io_deq_bits_data[159:152]},
     {_repeated_repeater_io_deq_bits_data[151:144]},
     {_repeated_repeater_io_deq_bits_data[143:136]},
     {_repeated_repeater_io_deq_bits_data[135:128]},
     {_repeated_repeater_io_deq_bits_data[127:120]},
     {_repeated_repeater_io_deq_bits_data[119:112]},
     {_repeated_repeater_io_deq_bits_data[111:104]},
     {_repeated_repeater_io_deq_bits_data[103:96]},
     {_repeated_repeater_io_deq_bits_data[95:88]},
     {_repeated_repeater_io_deq_bits_data[87:80]},
     {_repeated_repeater_io_deq_bits_data[79:72]},
     {_repeated_repeater_io_deq_bits_data[71:64]},
     {_repeated_repeater_io_deq_bits_data[63:56]},
     {_repeated_repeater_io_deq_bits_data[55:48]},
     {_repeated_repeater_io_deq_bits_data[47:40]},
     {_repeated_repeater_io_deq_bits_data[39:32]},
     {_repeated_repeater_io_deq_bits_data[31:24]},
     {_repeated_repeater_io_deq_bits_data[23:16]},
     {_repeated_repeater_io_deq_bits_data[15:8]},
     {auto_out_d_bits_data[7:0]}};
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      count <= 5'h0;
      nodeOut_a_bits_data_rdata_written_once <= 1'h0;
      repeat_count <= 5'h0;
    end
    else begin
      if (_repeat_sel_sel_T) begin
        if (last)
          count <= 5'h0;
        else
          count <= 5'(count + 5'h1);
      end
      nodeOut_a_bits_data_rdata_written_once <=
        _nodeOut_a_bits_data_T_2 | nodeOut_a_bits_data_rdata_written_once;
      if (auto_in_d_ready & _repeated_repeater_io_deq_valid) begin
        if (repeat_last)
          repeat_count <= 5'h0;
        else
          repeat_count <= 5'(repeat_count + 5'h1);
      end
    end
  end // always @(posedge, posedge)
  always @(posedge clock) begin
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_0)
      nodeOut_a_bits_data_rdata_0 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_1)
      nodeOut_a_bits_data_rdata_1 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_2)
      nodeOut_a_bits_data_rdata_2 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_3)
      nodeOut_a_bits_data_rdata_3 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_4)
      nodeOut_a_bits_data_rdata_4 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_5)
      nodeOut_a_bits_data_rdata_5 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_6)
      nodeOut_a_bits_data_rdata_6 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_7)
      nodeOut_a_bits_data_rdata_7 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_8)
      nodeOut_a_bits_data_rdata_8 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_9)
      nodeOut_a_bits_data_rdata_9 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_10)
      nodeOut_a_bits_data_rdata_10 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_11)
      nodeOut_a_bits_data_rdata_11 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_12)
      nodeOut_a_bits_data_rdata_12 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_13)
      nodeOut_a_bits_data_rdata_13 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_14)
      nodeOut_a_bits_data_rdata_14 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_15)
      nodeOut_a_bits_data_rdata_15 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_16)
      nodeOut_a_bits_data_rdata_16 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_17)
      nodeOut_a_bits_data_rdata_17 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_18)
      nodeOut_a_bits_data_rdata_18 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_19)
      nodeOut_a_bits_data_rdata_19 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_20)
      nodeOut_a_bits_data_rdata_20 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_21)
      nodeOut_a_bits_data_rdata_21 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_22)
      nodeOut_a_bits_data_rdata_22 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_23)
      nodeOut_a_bits_data_rdata_23 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_24)
      nodeOut_a_bits_data_rdata_24 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_25)
      nodeOut_a_bits_data_rdata_25 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_26)
      nodeOut_a_bits_data_rdata_26 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_27)
      nodeOut_a_bits_data_rdata_27 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_28)
      nodeOut_a_bits_data_rdata_28 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_29)
      nodeOut_a_bits_data_rdata_29 <= auto_in_a_bits_data;
    if (_nodeOut_a_bits_data_T_2 & nodeOut_a_bits_data_masked_enable_30)
      nodeOut_a_bits_data_rdata_30 <= auto_in_a_bits_data;
    if (_repeat_sel_sel_T)
      repeat_sel_sel_sources_0 <= auto_in_a_bits_address[4:0];
    if (repeat_first)
      repeat_sel_hold_r <= repeat_sel_sel_sources_0;
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:9];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [3:0] i = 4'h0; i < 4'hA; i += 4'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        count = _RANDOM[4'h0][4:0];
        nodeOut_a_bits_data_rdata_written_once = _RANDOM[4'h0][6];
        nodeOut_a_bits_data_rdata_0 = _RANDOM[4'h0][14:7];
        nodeOut_a_bits_data_rdata_1 = _RANDOM[4'h0][22:15];
        nodeOut_a_bits_data_rdata_2 = _RANDOM[4'h0][30:23];
        nodeOut_a_bits_data_rdata_3 = {_RANDOM[4'h0][31], _RANDOM[4'h1][6:0]};
        nodeOut_a_bits_data_rdata_4 = _RANDOM[4'h1][14:7];
        nodeOut_a_bits_data_rdata_5 = _RANDOM[4'h1][22:15];
        nodeOut_a_bits_data_rdata_6 = _RANDOM[4'h1][30:23];
        nodeOut_a_bits_data_rdata_7 = {_RANDOM[4'h1][31], _RANDOM[4'h2][6:0]};
        nodeOut_a_bits_data_rdata_8 = _RANDOM[4'h2][14:7];
        nodeOut_a_bits_data_rdata_9 = _RANDOM[4'h2][22:15];
        nodeOut_a_bits_data_rdata_10 = _RANDOM[4'h2][30:23];
        nodeOut_a_bits_data_rdata_11 = {_RANDOM[4'h2][31], _RANDOM[4'h3][6:0]};
        nodeOut_a_bits_data_rdata_12 = _RANDOM[4'h3][14:7];
        nodeOut_a_bits_data_rdata_13 = _RANDOM[4'h3][22:15];
        nodeOut_a_bits_data_rdata_14 = _RANDOM[4'h3][30:23];
        nodeOut_a_bits_data_rdata_15 = {_RANDOM[4'h3][31], _RANDOM[4'h4][6:0]};
        nodeOut_a_bits_data_rdata_16 = _RANDOM[4'h4][14:7];
        nodeOut_a_bits_data_rdata_17 = _RANDOM[4'h4][22:15];
        nodeOut_a_bits_data_rdata_18 = _RANDOM[4'h4][30:23];
        nodeOut_a_bits_data_rdata_19 = {_RANDOM[4'h4][31], _RANDOM[4'h5][6:0]};
        nodeOut_a_bits_data_rdata_20 = _RANDOM[4'h5][14:7];
        nodeOut_a_bits_data_rdata_21 = _RANDOM[4'h5][22:15];
        nodeOut_a_bits_data_rdata_22 = _RANDOM[4'h5][30:23];
        nodeOut_a_bits_data_rdata_23 = {_RANDOM[4'h5][31], _RANDOM[4'h6][6:0]};
        nodeOut_a_bits_data_rdata_24 = _RANDOM[4'h6][14:7];
        nodeOut_a_bits_data_rdata_25 = _RANDOM[4'h6][22:15];
        nodeOut_a_bits_data_rdata_26 = _RANDOM[4'h6][30:23];
        nodeOut_a_bits_data_rdata_27 = {_RANDOM[4'h6][31], _RANDOM[4'h7][6:0]};
        nodeOut_a_bits_data_rdata_28 = _RANDOM[4'h7][14:7];
        nodeOut_a_bits_data_rdata_29 = _RANDOM[4'h7][22:15];
        nodeOut_a_bits_data_rdata_30 = _RANDOM[4'h7][30:23];
        repeat_count = {_RANDOM[4'h8][31], _RANDOM[4'h9][3:0]};
        repeat_sel_sel_sources_0 = _RANDOM[4'h9][8:4];
        repeat_sel_hold_r = _RANDOM[4'h9][13:9];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        count = 5'h0;
        nodeOut_a_bits_data_rdata_written_once = 1'h0;
        repeat_count = 5'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Repeater_1 repeated_repeater (
    .clock               (clock),
    .reset               (reset),
    .io_repeat           (~repeat_last),
    .io_enq_ready        (auto_out_d_ready),
    .io_enq_valid        (auto_out_d_valid),
    .io_enq_bits_opcode  (auto_out_d_bits_opcode),
    .io_enq_bits_param   (auto_out_d_bits_param),
    .io_enq_bits_size    (auto_out_d_bits_size),
    .io_enq_bits_source  (auto_out_d_bits_source),
    .io_enq_bits_sink    (auto_out_d_bits_sink),
    .io_enq_bits_denied  (auto_out_d_bits_denied),
    .io_enq_bits_data    (auto_out_d_bits_data),
    .io_enq_bits_corrupt (auto_out_d_bits_corrupt),
    .io_deq_ready        (auto_in_d_ready),
    .io_deq_valid        (_repeated_repeater_io_deq_valid),
    .io_deq_bits_opcode  (_repeated_repeater_io_deq_bits_opcode),
    .io_deq_bits_param   (auto_in_d_bits_param),
    .io_deq_bits_size    (_repeated_repeater_io_deq_bits_size),
    .io_deq_bits_source  (auto_in_d_bits_source),
    .io_deq_bits_sink    (auto_in_d_bits_sink),
    .io_deq_bits_denied  (auto_in_d_bits_denied),
    .io_deq_bits_data    (_repeated_repeater_io_deq_bits_data),
    .io_deq_bits_corrupt (auto_in_d_bits_corrupt)
  );
  assign auto_in_a_ready = nodeIn_a_ready;
  assign auto_in_d_valid = _repeated_repeater_io_deq_valid;
  assign auto_in_d_bits_opcode = _repeated_repeater_io_deq_bits_opcode;
  assign auto_in_d_bits_size = _repeated_repeater_io_deq_bits_size;
  assign auto_in_d_bits_data =
    _GEN[(repeat_first ? repeat_sel_sel_sources_0 : repeat_sel_hold_r)
    & _repeat_limit_T[4:0] | repeat_count];
  assign auto_out_a_valid = auto_in_a_valid & last;
  assign auto_out_a_bits_opcode = auto_in_a_bits_opcode;
  assign auto_out_a_bits_size = auto_in_a_bits_size;
  assign auto_out_a_bits_address = auto_in_a_bits_address;
  assign auto_out_a_bits_mask =
    {nodeOut_a_bits_mask_sub_15_1 | nodeOut_a_bits_mask_sub_15_2
       & auto_in_a_bits_address[0],
     nodeOut_a_bits_mask_sub_15_1 | nodeOut_a_bits_mask_sub_15_2
       & ~(auto_in_a_bits_address[0]),
     nodeOut_a_bits_mask_sub_14_1 | nodeOut_a_bits_mask_sub_14_2
       & auto_in_a_bits_address[0],
     nodeOut_a_bits_mask_sub_14_1 | nodeOut_a_bits_mask_sub_14_2
       & ~(auto_in_a_bits_address[0]),
     nodeOut_a_bits_mask_sub_13_1 | nodeOut_a_bits_mask_sub_13_2
       & auto_in_a_bits_address[0],
     nodeOut_a_bits_mask_sub_13_1 | nodeOut_a_bits_mask_sub_13_2
       & ~(auto_in_a_bits_address[0]),
     nodeOut_a_bits_mask_sub_12_1 | nodeOut_a_bits_mask_sub_12_2
       & auto_in_a_bits_address[0],
     nodeOut_a_bits_mask_sub_12_1 | nodeOut_a_bits_mask_sub_12_2
       & ~(auto_in_a_bits_address[0]),
     nodeOut_a_bits_mask_sub_11_1 | nodeOut_a_bits_mask_sub_11_2
       & auto_in_a_bits_address[0],
     nodeOut_a_bits_mask_sub_11_1 | nodeOut_a_bits_mask_sub_11_2
       & ~(auto_in_a_bits_address[0]),
     nodeOut_a_bits_mask_sub_10_1 | nodeOut_a_bits_mask_sub_10_2
       & auto_in_a_bits_address[0],
     nodeOut_a_bits_mask_sub_10_1 | nodeOut_a_bits_mask_sub_10_2
       & ~(auto_in_a_bits_address[0]),
     nodeOut_a_bits_mask_sub_9_1 | nodeOut_a_bits_mask_sub_9_2
       & auto_in_a_bits_address[0],
     nodeOut_a_bits_mask_sub_9_1 | nodeOut_a_bits_mask_sub_9_2
       & ~(auto_in_a_bits_address[0]),
     nodeOut_a_bits_mask_sub_8_1 | nodeOut_a_bits_mask_sub_8_2
       & auto_in_a_bits_address[0],
     nodeOut_a_bits_mask_sub_8_1 | nodeOut_a_bits_mask_sub_8_2
       & ~(auto_in_a_bits_address[0]),
     nodeOut_a_bits_mask_sub_7_1 | nodeOut_a_bits_mask_sub_7_2
       & auto_in_a_bits_address[0],
     nodeOut_a_bits_mask_sub_7_1 | nodeOut_a_bits_mask_sub_7_2
       & ~(auto_in_a_bits_address[0]),
     nodeOut_a_bits_mask_sub_6_1 | nodeOut_a_bits_mask_sub_6_2
       & auto_in_a_bits_address[0],
     nodeOut_a_bits_mask_sub_6_1 | nodeOut_a_bits_mask_sub_6_2
       & ~(auto_in_a_bits_address[0]),
     nodeOut_a_bits_mask_sub_5_1 | nodeOut_a_bits_mask_sub_5_2
       & auto_in_a_bits_address[0],
     nodeOut_a_bits_mask_sub_5_1 | nodeOut_a_bits_mask_sub_5_2
       & ~(auto_in_a_bits_address[0]),
     nodeOut_a_bits_mask_sub_4_1 | nodeOut_a_bits_mask_sub_4_2
       & auto_in_a_bits_address[0],
     nodeOut_a_bits_mask_sub_4_1 | nodeOut_a_bits_mask_sub_4_2
       & ~(auto_in_a_bits_address[0]),
     nodeOut_a_bits_mask_sub_3_1 | nodeOut_a_bits_mask_sub_3_2
       & auto_in_a_bits_address[0],
     nodeOut_a_bits_mask_sub_3_1 | nodeOut_a_bits_mask_sub_3_2
       & ~(auto_in_a_bits_address[0]),
     nodeOut_a_bits_mask_sub_2_1 | nodeOut_a_bits_mask_sub_2_2
       & auto_in_a_bits_address[0],
     nodeOut_a_bits_mask_sub_2_1 | nodeOut_a_bits_mask_sub_2_2
       & ~(auto_in_a_bits_address[0]),
     nodeOut_a_bits_mask_sub_1_1 | nodeOut_a_bits_mask_sub_1_2
       & auto_in_a_bits_address[0],
     nodeOut_a_bits_mask_sub_1_1 | nodeOut_a_bits_mask_sub_1_2
       & ~(auto_in_a_bits_address[0]),
     nodeOut_a_bits_mask_sub_0_1 | nodeOut_a_bits_mask_sub_0_2
       & auto_in_a_bits_address[0],
     nodeOut_a_bits_mask_sub_0_1 | nodeOut_a_bits_mask_sub_0_2
       & ~(auto_in_a_bits_address[0])};
  assign auto_out_a_bits_data =
    {auto_in_a_bits_data,
     nodeOut_a_bits_data_masked_enable_30
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_30,
     nodeOut_a_bits_data_masked_enable_29
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_29,
     nodeOut_a_bits_data_masked_enable_28
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_28,
     nodeOut_a_bits_data_masked_enable_27
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_27,
     nodeOut_a_bits_data_masked_enable_26
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_26,
     nodeOut_a_bits_data_masked_enable_25
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_25,
     nodeOut_a_bits_data_masked_enable_24
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_24,
     nodeOut_a_bits_data_masked_enable_23
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_23,
     nodeOut_a_bits_data_masked_enable_22
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_22,
     nodeOut_a_bits_data_masked_enable_21
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_21,
     nodeOut_a_bits_data_masked_enable_20
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_20,
     nodeOut_a_bits_data_masked_enable_19
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_19,
     nodeOut_a_bits_data_masked_enable_18
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_18,
     nodeOut_a_bits_data_masked_enable_17
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_17,
     nodeOut_a_bits_data_masked_enable_16
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_16,
     nodeOut_a_bits_data_masked_enable_15
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_15,
     nodeOut_a_bits_data_masked_enable_14
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_14,
     nodeOut_a_bits_data_masked_enable_13
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_13,
     nodeOut_a_bits_data_masked_enable_12
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_12,
     nodeOut_a_bits_data_masked_enable_11
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_11,
     nodeOut_a_bits_data_masked_enable_10
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_10,
     nodeOut_a_bits_data_masked_enable_9
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_9,
     nodeOut_a_bits_data_masked_enable_8
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_8,
     nodeOut_a_bits_data_masked_enable_7
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_7,
     nodeOut_a_bits_data_masked_enable_6
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_6,
     nodeOut_a_bits_data_masked_enable_5
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_5,
     nodeOut_a_bits_data_masked_enable_4
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_4,
     nodeOut_a_bits_data_masked_enable_3
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_3,
     nodeOut_a_bits_data_masked_enable_2
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_2,
     nodeOut_a_bits_data_masked_enable_1
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_1,
     nodeOut_a_bits_data_masked_enable_0
       ? auto_in_a_bits_data
       : nodeOut_a_bits_data_rdata_0};
endmodule

