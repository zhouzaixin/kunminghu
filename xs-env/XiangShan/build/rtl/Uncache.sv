// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module Uncache(
  input         clock,
  input         reset,
  input         auto_client_out_a_ready,
  output        auto_client_out_a_valid,
  output [3:0]  auto_client_out_a_bits_opcode,
  output [2:0]  auto_client_out_a_bits_size,
  output [1:0]  auto_client_out_a_bits_source,
  output [47:0] auto_client_out_a_bits_address,
  output [7:0]  auto_client_out_a_bits_mask,
  output [63:0] auto_client_out_a_bits_data,
  input         auto_client_out_d_valid,
  input  [1:0]  auto_client_out_d_bits_source,
  input         auto_client_out_d_bits_denied,
  input  [63:0] auto_client_out_d_bits_data,
  input         auto_client_out_d_bits_corrupt,
  input         io_enableOutstanding,
  output        io_flush_empty,
  output        io_lsq_req_ready,
  input         io_lsq_req_valid,
  input  [4:0]  io_lsq_req_bits_cmd,
  input  [47:0] io_lsq_req_bits_addr,
  input  [49:0] io_lsq_req_bits_vaddr,
  input  [63:0] io_lsq_req_bits_data,
  input  [7:0]  io_lsq_req_bits_mask,
  input  [6:0]  io_lsq_req_bits_id,
  input         io_lsq_req_bits_atomic,
  input         io_lsq_req_bits_nc,
  input         io_lsq_req_bits_memBackTypeMM,
  output        io_lsq_idResp_valid,
  output [6:0]  io_lsq_idResp_bits_mid,
  output [1:0]  io_lsq_idResp_bits_sid,
  output        io_lsq_idResp_bits_is2lq,
  output        io_lsq_idResp_bits_nc,
  input         io_lsq_resp_ready,
  output        io_lsq_resp_valid,
  output [63:0] io_lsq_resp_bits_data,
  output [1:0]  io_lsq_resp_bits_id,
  output        io_lsq_resp_bits_nc,
  output        io_lsq_resp_bits_is2lq,
  output        io_lsq_resp_bits_nderr,
  input  [49:0] io_forward_0_vaddr,
  input  [47:0] io_forward_0_paddr,
  input         io_forward_0_valid,
  output        io_forward_0_forwardMask_0,
  output        io_forward_0_forwardMask_1,
  output        io_forward_0_forwardMask_2,
  output        io_forward_0_forwardMask_3,
  output        io_forward_0_forwardMask_4,
  output        io_forward_0_forwardMask_5,
  output        io_forward_0_forwardMask_6,
  output        io_forward_0_forwardMask_7,
  output        io_forward_0_forwardMask_8,
  output        io_forward_0_forwardMask_9,
  output        io_forward_0_forwardMask_10,
  output        io_forward_0_forwardMask_11,
  output        io_forward_0_forwardMask_12,
  output        io_forward_0_forwardMask_13,
  output        io_forward_0_forwardMask_14,
  output        io_forward_0_forwardMask_15,
  output [7:0]  io_forward_0_forwardData_0,
  output [7:0]  io_forward_0_forwardData_1,
  output [7:0]  io_forward_0_forwardData_2,
  output [7:0]  io_forward_0_forwardData_3,
  output [7:0]  io_forward_0_forwardData_4,
  output [7:0]  io_forward_0_forwardData_5,
  output [7:0]  io_forward_0_forwardData_6,
  output [7:0]  io_forward_0_forwardData_7,
  output [7:0]  io_forward_0_forwardData_8,
  output [7:0]  io_forward_0_forwardData_9,
  output [7:0]  io_forward_0_forwardData_10,
  output [7:0]  io_forward_0_forwardData_11,
  output [7:0]  io_forward_0_forwardData_12,
  output [7:0]  io_forward_0_forwardData_13,
  output [7:0]  io_forward_0_forwardData_14,
  output [7:0]  io_forward_0_forwardData_15,
  output        io_forward_0_matchInvalid,
  input  [49:0] io_forward_1_vaddr,
  input  [47:0] io_forward_1_paddr,
  input         io_forward_1_valid,
  output        io_forward_1_forwardMask_0,
  output        io_forward_1_forwardMask_1,
  output        io_forward_1_forwardMask_2,
  output        io_forward_1_forwardMask_3,
  output        io_forward_1_forwardMask_4,
  output        io_forward_1_forwardMask_5,
  output        io_forward_1_forwardMask_6,
  output        io_forward_1_forwardMask_7,
  output        io_forward_1_forwardMask_8,
  output        io_forward_1_forwardMask_9,
  output        io_forward_1_forwardMask_10,
  output        io_forward_1_forwardMask_11,
  output        io_forward_1_forwardMask_12,
  output        io_forward_1_forwardMask_13,
  output        io_forward_1_forwardMask_14,
  output        io_forward_1_forwardMask_15,
  output [7:0]  io_forward_1_forwardData_0,
  output [7:0]  io_forward_1_forwardData_1,
  output [7:0]  io_forward_1_forwardData_2,
  output [7:0]  io_forward_1_forwardData_3,
  output [7:0]  io_forward_1_forwardData_4,
  output [7:0]  io_forward_1_forwardData_5,
  output [7:0]  io_forward_1_forwardData_6,
  output [7:0]  io_forward_1_forwardData_7,
  output [7:0]  io_forward_1_forwardData_8,
  output [7:0]  io_forward_1_forwardData_9,
  output [7:0]  io_forward_1_forwardData_10,
  output [7:0]  io_forward_1_forwardData_11,
  output [7:0]  io_forward_1_forwardData_12,
  output [7:0]  io_forward_1_forwardData_13,
  output [7:0]  io_forward_1_forwardData_14,
  output [7:0]  io_forward_1_forwardData_15,
  output        io_forward_1_matchInvalid,
  input  [49:0] io_forward_2_vaddr,
  input  [47:0] io_forward_2_paddr,
  input         io_forward_2_valid,
  output        io_forward_2_forwardMask_0,
  output        io_forward_2_forwardMask_1,
  output        io_forward_2_forwardMask_2,
  output        io_forward_2_forwardMask_3,
  output        io_forward_2_forwardMask_4,
  output        io_forward_2_forwardMask_5,
  output        io_forward_2_forwardMask_6,
  output        io_forward_2_forwardMask_7,
  output        io_forward_2_forwardMask_8,
  output        io_forward_2_forwardMask_9,
  output        io_forward_2_forwardMask_10,
  output        io_forward_2_forwardMask_11,
  output        io_forward_2_forwardMask_12,
  output        io_forward_2_forwardMask_13,
  output        io_forward_2_forwardMask_14,
  output        io_forward_2_forwardMask_15,
  output [7:0]  io_forward_2_forwardData_0,
  output [7:0]  io_forward_2_forwardData_1,
  output [7:0]  io_forward_2_forwardData_2,
  output [7:0]  io_forward_2_forwardData_3,
  output [7:0]  io_forward_2_forwardData_4,
  output [7:0]  io_forward_2_forwardData_5,
  output [7:0]  io_forward_2_forwardData_6,
  output [7:0]  io_forward_2_forwardData_7,
  output [7:0]  io_forward_2_forwardData_8,
  output [7:0]  io_forward_2_forwardData_9,
  output [7:0]  io_forward_2_forwardData_10,
  output [7:0]  io_forward_2_forwardData_11,
  output [7:0]  io_forward_2_forwardData_12,
  output [7:0]  io_forward_2_forwardData_13,
  output [7:0]  io_forward_2_forwardData_14,
  output [7:0]  io_forward_2_forwardData_15,
  output        io_forward_2_matchInvalid
);

  wire             q0_canSent;
  wire [1:0]       q0_canSentIdx;
  wire             e0_reject;
  reg  [4:0]       entries_0_cmd;
  reg  [47:0]      entries_0_addr;
  reg  [49:0]      entries_0_vaddr;
  reg  [63:0]      entries_0_data;
  reg  [7:0]       entries_0_mask;
  reg              entries_0_nc;
  reg              entries_0_atomic;
  reg              entries_0_memBackTypeMM;
  reg              entries_0_resp_nderr;
  reg  [4:0]       entries_1_cmd;
  reg  [47:0]      entries_1_addr;
  reg  [49:0]      entries_1_vaddr;
  reg  [63:0]      entries_1_data;
  reg  [7:0]       entries_1_mask;
  reg              entries_1_nc;
  reg              entries_1_atomic;
  reg              entries_1_memBackTypeMM;
  reg              entries_1_resp_nderr;
  reg  [4:0]       entries_2_cmd;
  reg  [47:0]      entries_2_addr;
  reg  [49:0]      entries_2_vaddr;
  reg  [63:0]      entries_2_data;
  reg  [7:0]       entries_2_mask;
  reg              entries_2_nc;
  reg              entries_2_atomic;
  reg              entries_2_memBackTypeMM;
  reg              entries_2_resp_nderr;
  reg  [4:0]       entries_3_cmd;
  reg  [47:0]      entries_3_addr;
  reg  [49:0]      entries_3_vaddr;
  reg  [63:0]      entries_3_data;
  reg  [7:0]       entries_3_mask;
  reg              entries_3_nc;
  reg              entries_3_atomic;
  reg              entries_3_memBackTypeMM;
  reg              entries_3_resp_nderr;
  reg              states_0_valid;
  reg              states_0_inflight;
  reg              states_0_waitSame;
  reg              states_0_waitReturn;
  reg              states_1_valid;
  reg              states_1_inflight;
  reg              states_1_waitSame;
  reg              states_1_waitReturn;
  reg              states_2_valid;
  reg              states_2_inflight;
  reg              states_2_waitSame;
  reg              states_2_waitReturn;
  reg              states_3_valid;
  reg              states_3_inflight;
  reg              states_3_waitSame;
  reg              states_3_waitReturn;
  reg  [1:0]       uState;
  reg              do_uarch_drain;
  wire             e0_fire = ~e0_reject & io_lsq_req_valid;
  wire [7:0]       _canMerge1_T_13 = io_lsq_req_bits_mask | entries_0_mask;
  wire             canMerge1 =
    io_lsq_req_bits_vaddr[49:3] == entries_0_vaddr[49:3]
    & io_lsq_req_bits_cmd == entries_0_cmd & io_lsq_req_bits_nc & entries_0_nc
    & io_lsq_req_bits_memBackTypeMM == entries_0_memBackTypeMM & ~io_lsq_req_bits_atomic
    & ~entries_0_atomic
    & (4'({1'h0,
           3'({1'h0, 2'({1'h0, _canMerge1_T_13[0]} + {1'h0, _canMerge1_T_13[1]})}
              + {1'h0, 2'({1'h0, _canMerge1_T_13[2]} + {1'h0, _canMerge1_T_13[3]})})}
          + {1'h0,
             3'({1'h0, 2'({1'h0, _canMerge1_T_13[4]} + {1'h0, _canMerge1_T_13[5]})}
                + {1'h0,
                   2'({1'h0, _canMerge1_T_13[6]} + {1'h0, _canMerge1_T_13[7]})})}) == 4'h1
       | _canMerge1_T_13 == 8'h3 | _canMerge1_T_13 == 8'hC | _canMerge1_T_13 == 8'h30
       | _canMerge1_T_13 == 8'hC0 | _canMerge1_T_13 == 8'hF | _canMerge1_T_13 == 8'hF0
       | (&_canMerge1_T_13));
  wire             canMerge2 =
    ~(states_0_valid & states_0_inflight) & ~(q0_canSent & ~(|q0_canSentIdx));
  wire             _e0_allocWaitSameVec_0_T =
    io_lsq_req_valid & states_0_valid
    & io_lsq_req_bits_addr[47:3] == entries_0_addr[47:3];
  wire             e0_mergeVec_0 = _e0_allocWaitSameVec_0_T & canMerge1 & canMerge2;
  wire [7:0]       _canMerge1_T_27 = io_lsq_req_bits_mask | entries_1_mask;
  wire             canMerge1_1 =
    io_lsq_req_bits_vaddr[49:3] == entries_1_vaddr[49:3]
    & io_lsq_req_bits_cmd == entries_1_cmd & io_lsq_req_bits_nc & entries_1_nc
    & io_lsq_req_bits_memBackTypeMM == entries_1_memBackTypeMM & ~io_lsq_req_bits_atomic
    & ~entries_1_atomic
    & (4'({1'h0,
           3'({1'h0, 2'({1'h0, _canMerge1_T_27[0]} + {1'h0, _canMerge1_T_27[1]})}
              + {1'h0, 2'({1'h0, _canMerge1_T_27[2]} + {1'h0, _canMerge1_T_27[3]})})}
          + {1'h0,
             3'({1'h0, 2'({1'h0, _canMerge1_T_27[4]} + {1'h0, _canMerge1_T_27[5]})}
                + {1'h0,
                   2'({1'h0, _canMerge1_T_27[6]} + {1'h0, _canMerge1_T_27[7]})})}) == 4'h1
       | _canMerge1_T_27 == 8'h3 | _canMerge1_T_27 == 8'hC | _canMerge1_T_27 == 8'h30
       | _canMerge1_T_27 == 8'hC0 | _canMerge1_T_27 == 8'hF | _canMerge1_T_27 == 8'hF0
       | (&_canMerge1_T_27));
  wire             canMerge2_1 =
    ~(states_1_valid & states_1_inflight) & ~(q0_canSent & q0_canSentIdx == 2'h1);
  wire             _e0_allocWaitSameVec_1_T =
    io_lsq_req_valid & states_1_valid
    & io_lsq_req_bits_addr[47:3] == entries_1_addr[47:3];
  wire             e0_mergeVec_1 = _e0_allocWaitSameVec_1_T & canMerge1_1 & canMerge2_1;
  wire [7:0]       _canMerge1_T_41 = io_lsq_req_bits_mask | entries_2_mask;
  wire             canMerge1_2 =
    io_lsq_req_bits_vaddr[49:3] == entries_2_vaddr[49:3]
    & io_lsq_req_bits_cmd == entries_2_cmd & io_lsq_req_bits_nc & entries_2_nc
    & io_lsq_req_bits_memBackTypeMM == entries_2_memBackTypeMM & ~io_lsq_req_bits_atomic
    & ~entries_2_atomic
    & (4'({1'h0,
           3'({1'h0, 2'({1'h0, _canMerge1_T_41[0]} + {1'h0, _canMerge1_T_41[1]})}
              + {1'h0, 2'({1'h0, _canMerge1_T_41[2]} + {1'h0, _canMerge1_T_41[3]})})}
          + {1'h0,
             3'({1'h0, 2'({1'h0, _canMerge1_T_41[4]} + {1'h0, _canMerge1_T_41[5]})}
                + {1'h0,
                   2'({1'h0, _canMerge1_T_41[6]} + {1'h0, _canMerge1_T_41[7]})})}) == 4'h1
       | _canMerge1_T_41 == 8'h3 | _canMerge1_T_41 == 8'hC | _canMerge1_T_41 == 8'h30
       | _canMerge1_T_41 == 8'hC0 | _canMerge1_T_41 == 8'hF | _canMerge1_T_41 == 8'hF0
       | (&_canMerge1_T_41));
  wire             canMerge2_2 =
    ~(states_2_valid & states_2_inflight) & ~(q0_canSent & q0_canSentIdx == 2'h2);
  wire             _e0_allocWaitSameVec_2_T =
    io_lsq_req_valid & states_2_valid
    & io_lsq_req_bits_addr[47:3] == entries_2_addr[47:3];
  wire             e0_mergeVec_2 = _e0_allocWaitSameVec_2_T & canMerge1_2 & canMerge2_2;
  wire [7:0]       _canMerge1_T_55 = io_lsq_req_bits_mask | entries_3_mask;
  wire             canMerge1_3 =
    io_lsq_req_bits_vaddr[49:3] == entries_3_vaddr[49:3]
    & io_lsq_req_bits_cmd == entries_3_cmd & io_lsq_req_bits_nc & entries_3_nc
    & io_lsq_req_bits_memBackTypeMM == entries_3_memBackTypeMM & ~io_lsq_req_bits_atomic
    & ~entries_3_atomic
    & (4'({1'h0,
           3'({1'h0, 2'({1'h0, _canMerge1_T_55[0]} + {1'h0, _canMerge1_T_55[1]})}
              + {1'h0, 2'({1'h0, _canMerge1_T_55[2]} + {1'h0, _canMerge1_T_55[3]})})}
          + {1'h0,
             3'({1'h0, 2'({1'h0, _canMerge1_T_55[4]} + {1'h0, _canMerge1_T_55[5]})}
                + {1'h0,
                   2'({1'h0, _canMerge1_T_55[6]} + {1'h0, _canMerge1_T_55[7]})})}) == 4'h1
       | _canMerge1_T_55 == 8'h3 | _canMerge1_T_55 == 8'hC | _canMerge1_T_55 == 8'h30
       | _canMerge1_T_55 == 8'hC0 | _canMerge1_T_55 == 8'hF | _canMerge1_T_55 == 8'hF0
       | (&_canMerge1_T_55));
  wire             canMerge2_3 =
    ~(states_3_valid & states_3_inflight) & ~(q0_canSent & (&q0_canSentIdx));
  wire             _e0_allocWaitSameVec_3_T =
    io_lsq_req_valid & states_3_valid
    & io_lsq_req_bits_addr[47:3] == entries_3_addr[47:3];
  assign e0_reject =
    do_uarch_drain
    | {~states_3_valid, ~states_2_valid, ~states_1_valid, ~states_0_valid} == 4'h0
    | _e0_allocWaitSameVec_0_T & ~canMerge1 | _e0_allocWaitSameVec_1_T & ~canMerge1_1
    | _e0_allocWaitSameVec_2_T & ~canMerge1_2 | _e0_allocWaitSameVec_3_T & ~canMerge1_3;
  wire             e0_canMerge =
    e0_mergeVec_0 | e0_mergeVec_1 | e0_mergeVec_2 | _e0_allocWaitSameVec_3_T & canMerge1_3
    & canMerge2_3;
  wire [1:0]       e0_allocIdx =
    states_0_valid ? (states_1_valid ? {1'h1, states_2_valid} : 2'h1) : 2'h0;
  wire             _GEN = e0_canMerge & e0_fire;
  wire [3:0][47:0] _GEN_0 =
    {{entries_3_addr}, {entries_2_addr}, {entries_1_addr}, {entries_0_addr}};
  wire [3:0][63:0] _GEN_1 =
    {{entries_3_data}, {entries_2_data}, {entries_1_data}, {entries_0_data}};
  wire [3:0][7:0]  _GEN_2 =
    {{entries_3_mask}, {entries_2_mask}, {entries_1_mask}, {entries_0_mask}};
  wire             _GEN_3 =
    (~states_0_valid | ~states_1_valid | ~states_2_valid | ~states_3_valid) & e0_fire;
  wire             _GEN_4 = e0_allocIdx == 2'h0;
  wire             _GEN_5 = _GEN_3 & _GEN_4;
  wire             _GEN_6 = e0_allocIdx == 2'h1;
  wire             _GEN_7 = _GEN_3 & _GEN_6;
  wire             _GEN_8 = e0_allocIdx == 2'h2;
  wire             _GEN_9 = _GEN_3 & _GEN_8;
  wire             _GEN_10 = _GEN_3 & (&e0_allocIdx);
  reg              io_lsq_idResp_valid_REG;
  reg  [6:0]       io_lsq_idResp_bits_mid_r;
  reg  [1:0]       io_lsq_idResp_bits_sid_r;
  reg              io_lsq_idResp_bits_is2lq_r;
  reg              io_lsq_idResp_bits_nc_r;
  wire             q0_canSentVec_0 =
    (io_enableOutstanding | ~(|uState)) & states_0_valid & ~states_0_inflight
    & ~states_0_waitSame & ~states_0_waitReturn;
  wire             q0_canSentVec_1 =
    (io_enableOutstanding | ~(|uState)) & states_1_valid & ~states_1_inflight
    & ~states_1_waitSame & ~states_1_waitReturn;
  wire             q0_canSentVec_2 =
    (io_enableOutstanding | ~(|uState)) & states_2_valid & ~states_2_inflight
    & ~states_2_waitSame & ~states_2_waitReturn;
  assign q0_canSentIdx =
    q0_canSentVec_0 ? 2'h0 : q0_canSentVec_1 ? 2'h1 : {1'h1, ~q0_canSentVec_2};
  assign q0_canSent =
    q0_canSentVec_0 | q0_canSentVec_1 | q0_canSentVec_2
    | (io_enableOutstanding | ~(|uState)) & states_3_valid & ~states_3_inflight
    & ~states_3_waitSame & ~states_3_waitReturn;
  wire [3:0][4:0]  _GEN_11 =
    {{entries_3_cmd}, {entries_2_cmd}, {entries_1_cmd}, {entries_0_cmd}};
  wire [3:0]       size =
    4'({1'h0,
        3'({1'h0, 2'({1'h0, _GEN_2[q0_canSentIdx][0]} + {1'h0, _GEN_2[q0_canSentIdx][1]})}
           + {1'h0,
              2'({1'h0, _GEN_2[q0_canSentIdx][2]} + {1'h0, _GEN_2[q0_canSentIdx][3]})})}
       + {1'h0,
          3'({1'h0,
              2'({1'h0, _GEN_2[q0_canSentIdx][4]} + {1'h0, _GEN_2[q0_canSentIdx][5]})}
             + {1'h0,
                2'({1'h0, _GEN_2[q0_canSentIdx][6]}
                   + {1'h0, _GEN_2[q0_canSentIdx][7]})})});
  wire [1:0]       lgSize =
    size == 4'h1 ? 2'h0 : size == 4'h2 ? 2'h1 : {1'h1, size != 4'h4};
  wire             q0_load_a_mask_sub_sub_size = lgSize == 2'h2;
  wire             q0_load_a_mask_sub_sub_0_1 =
    (&lgSize) | q0_load_a_mask_sub_sub_size & ~(_GEN_0[q0_canSentIdx][2]);
  wire             q0_load_a_mask_sub_sub_1_1 =
    (&lgSize) | q0_load_a_mask_sub_sub_size & _GEN_0[q0_canSentIdx][2];
  wire             q0_load_a_mask_sub_size = lgSize == 2'h1;
  wire             q0_load_a_mask_sub_0_2 =
    ~(_GEN_0[q0_canSentIdx][2]) & ~(_GEN_0[q0_canSentIdx][1]);
  wire             q0_load_a_mask_sub_0_1 =
    q0_load_a_mask_sub_sub_0_1 | q0_load_a_mask_sub_size & q0_load_a_mask_sub_0_2;
  wire             q0_load_a_mask_sub_1_2 =
    ~(_GEN_0[q0_canSentIdx][2]) & _GEN_0[q0_canSentIdx][1];
  wire             q0_load_a_mask_sub_1_1 =
    q0_load_a_mask_sub_sub_0_1 | q0_load_a_mask_sub_size & q0_load_a_mask_sub_1_2;
  wire             q0_load_a_mask_sub_2_2 =
    _GEN_0[q0_canSentIdx][2] & ~(_GEN_0[q0_canSentIdx][1]);
  wire             q0_load_a_mask_sub_2_1 =
    q0_load_a_mask_sub_sub_1_1 | q0_load_a_mask_sub_size & q0_load_a_mask_sub_2_2;
  wire             q0_load_a_mask_sub_3_2 =
    _GEN_0[q0_canSentIdx][2] & _GEN_0[q0_canSentIdx][1];
  wire             q0_load_a_mask_sub_3_1 =
    q0_load_a_mask_sub_sub_1_1 | q0_load_a_mask_sub_size & q0_load_a_mask_sub_3_2;
  wire             q0_isStore = _GEN_11[q0_canSentIdx] == 5'h1;
  wire             _GEN_12 = auto_client_out_d_bits_source == 2'h0;
  wire             _GEN_13 = auto_client_out_d_bits_source == 2'h1;
  wire             _GEN_14 = auto_client_out_d_bits_source == 2'h2;
  wire             _GEN_15 = auto_client_out_d_valid & _GEN_12;
  wire             _GEN_16 = auto_client_out_d_valid & _GEN_13;
  wire             _GEN_17 = auto_client_out_d_valid & _GEN_14;
  wire             _GEN_18 = auto_client_out_d_valid & (&auto_client_out_d_bits_source);
  wire             r0_canSentVec_0 = states_0_valid & states_0_waitReturn;
  wire             r0_canSentVec_1 = states_1_valid & states_1_waitReturn;
  wire             r0_canSentVec_2 = states_2_valid & states_2_waitReturn;
  wire [1:0]       r0_canSentIdx =
    r0_canSentVec_0 ? 2'h0 : r0_canSentVec_1 ? 2'h1 : {1'h1, ~r0_canSentVec_2};
  wire             r0_canSent =
    r0_canSentVec_0 | r0_canSentVec_1 | r0_canSentVec_2 | states_3_valid
    & states_3_waitReturn;
  wire [3:0]       _GEN_19 =
    {{entries_3_nc}, {entries_2_nc}, {entries_1_nc}, {entries_0_nc}};
  wire [3:0]       _GEN_20 =
    {{entries_3_resp_nderr},
     {entries_2_resp_nderr},
     {entries_1_resp_nderr},
     {entries_0_resp_nderr}};
  wire             empty =
    {states_3_valid, states_2_valid, states_1_valid, states_0_valid} == 4'h0;
  reg  [7:0]       f1_fwdMaskCandidates_r;
  reg  [7:0]       f1_fwdMaskCandidates_r_1;
  reg  [7:0]       f1_fwdMaskCandidates_r_2;
  reg  [7:0]       f1_fwdMaskCandidates_r_3;
  reg  [63:0]      f1_fwdDataCandidates_r;
  reg  [63:0]      f1_fwdDataCandidates_r_1;
  reg  [63:0]      f1_fwdDataCandidates_r_2;
  reg  [63:0]      f1_fwdDataCandidates_r_3;
  reg              f1_fwdValid;
  reg              f1_flyTagMatches_0;
  reg              f1_flyTagMatches_1;
  reg              f1_flyTagMatches_2;
  reg              f1_flyTagMatches_3;
  reg              f1_idleTagMatches_0;
  reg              f1_idleTagMatches_1;
  reg              f1_idleTagMatches_2;
  reg              f1_idleTagMatches_3;
  reg  [47:0]      f1_fwdPAddr;
  wire [63:0]      f1_flyData =
    (f1_flyTagMatches_0 ? f1_fwdDataCandidates_r : 64'h0)
    | (f1_flyTagMatches_1 ? f1_fwdDataCandidates_r_1 : 64'h0)
    | (f1_flyTagMatches_2 ? f1_fwdDataCandidates_r_2 : 64'h0)
    | (f1_flyTagMatches_3 ? f1_fwdDataCandidates_r_3 : 64'h0);
  wire [7:0]       f1_idleMask =
    (f1_idleTagMatches_0 ? f1_fwdMaskCandidates_r : 8'h0)
    | (f1_idleTagMatches_1 ? f1_fwdMaskCandidates_r_1 : 8'h0)
    | (f1_idleTagMatches_2 ? f1_fwdMaskCandidates_r_2 : 8'h0)
    | (f1_idleTagMatches_3 ? f1_fwdMaskCandidates_r_3 : 8'h0);
  wire [63:0]      f1_idleData =
    (f1_idleTagMatches_0 ? f1_fwdDataCandidates_r : 64'h0)
    | (f1_idleTagMatches_1 ? f1_fwdDataCandidates_r_1 : 64'h0)
    | (f1_idleTagMatches_2 ? f1_fwdDataCandidates_r_2 : 64'h0)
    | (f1_idleTagMatches_3 ? f1_fwdDataCandidates_r_3 : 64'h0);
  wire [7:0]       _resData_T_35 = f1_idleMask[0] ? f1_idleData[7:0] : f1_flyData[7:0];
  wire [7:0]       _resData_T_39 = f1_idleMask[1] ? f1_idleData[15:8] : f1_flyData[15:8];
  wire [7:0]       _resData_T_43 =
    f1_idleMask[2] ? f1_idleData[23:16] : f1_flyData[23:16];
  wire [7:0]       _resData_T_47 =
    f1_idleMask[3] ? f1_idleData[31:24] : f1_flyData[31:24];
  wire [7:0]       _resData_T_51 =
    f1_idleMask[4] ? f1_idleData[39:32] : f1_flyData[39:32];
  wire [7:0]       _resData_T_55 =
    f1_idleMask[5] ? f1_idleData[47:40] : f1_flyData[47:40];
  wire [7:0]       _resData_T_59 =
    f1_idleMask[6] ? f1_idleData[55:48] : f1_flyData[55:48];
  wire [7:0]       _resData_T_63 =
    f1_idleMask[7] ? f1_idleData[63:56] : f1_flyData[63:56];
  wire [7:0]       f1_fwdMaskTmp =
    f1_idleMask | (f1_flyTagMatches_0 ? f1_fwdMaskCandidates_r : 8'h0)
    | (f1_flyTagMatches_1 ? f1_fwdMaskCandidates_r_1 : 8'h0)
    | (f1_flyTagMatches_2 ? f1_fwdMaskCandidates_r_2 : 8'h0)
    | (f1_flyTagMatches_3 ? f1_fwdMaskCandidates_r_3 : 8'h0);
  wire [15:0]      _f1_fwdMask_T_2 =
    f1_fwdPAddr[3] ? {f1_fwdMaskTmp, 8'h0} : {8'h0, f1_fwdMaskTmp};
  wire [127:0]     _f1_fwdData_T_2 =
    f1_fwdPAddr[3]
      ? {_resData_T_63,
         _resData_T_59,
         _resData_T_55,
         _resData_T_51,
         _resData_T_47,
         _resData_T_43,
         _resData_T_39,
         _resData_T_35,
         64'h0}
      : {64'h0,
         _resData_T_63,
         _resData_T_59,
         _resData_T_55,
         _resData_T_51,
         _resData_T_47,
         _resData_T_43,
         _resData_T_39,
         _resData_T_35};
  reg  [47:0]      f1_ptagMatches_r;
  reg  [47:0]      f1_ptagMatches_r_1;
  reg  [47:0]      f1_ptagMatches_r_2;
  reg  [47:0]      f1_ptagMatches_r_3;
  reg              f1_tagMismatchVec_0_r;
  reg              f1_tagMismatchVec_0_r_1;
  reg              f1_tagMismatchVec_0_r_2;
  reg              f1_tagMismatchVec_0_r_3;
  reg              f1_tagMismatchVec_0_r_4;
  reg              f1_tagMismatchVec_0_r_5;
  reg              f1_tagMismatchVec_0_r_6;
  reg              f1_tagMismatchVec_0_r_7;
  wire [3:0]       _f1_tagMismatchVec_0_T_12 =
    {f1_tagMismatchVec_0_r_6 != (f1_ptagMatches_r_3[47:3] == f1_fwdPAddr[47:3])
       & f1_tagMismatchVec_0_r_7 & f1_fwdValid,
     f1_tagMismatchVec_0_r_4 != (f1_ptagMatches_r_2[47:3] == f1_fwdPAddr[47:3])
       & f1_tagMismatchVec_0_r_5 & f1_fwdValid,
     f1_tagMismatchVec_0_r_2 != (f1_ptagMatches_r_1[47:3] == f1_fwdPAddr[47:3])
       & f1_tagMismatchVec_0_r_3 & f1_fwdValid,
     f1_tagMismatchVec_0_r != (f1_ptagMatches_r[47:3] == f1_fwdPAddr[47:3])
       & f1_tagMismatchVec_0_r_1 & f1_fwdValid};
  reg              f1_fwdValid_1;
  reg              f1_flyTagMatches_1_0;
  reg              f1_flyTagMatches_1_1;
  reg              f1_flyTagMatches_1_2;
  reg              f1_flyTagMatches_1_3;
  reg              f1_idleTagMatches_1_0;
  reg              f1_idleTagMatches_1_1;
  reg              f1_idleTagMatches_1_2;
  reg              f1_idleTagMatches_1_3;
  reg  [47:0]      f1_fwdPAddr_1;
  wire [63:0]      f1_flyData_1 =
    (f1_flyTagMatches_1_0 ? f1_fwdDataCandidates_r : 64'h0)
    | (f1_flyTagMatches_1_1 ? f1_fwdDataCandidates_r_1 : 64'h0)
    | (f1_flyTagMatches_1_2 ? f1_fwdDataCandidates_r_2 : 64'h0)
    | (f1_flyTagMatches_1_3 ? f1_fwdDataCandidates_r_3 : 64'h0);
  wire [7:0]       f1_idleMask_1 =
    (f1_idleTagMatches_1_0 ? f1_fwdMaskCandidates_r : 8'h0)
    | (f1_idleTagMatches_1_1 ? f1_fwdMaskCandidates_r_1 : 8'h0)
    | (f1_idleTagMatches_1_2 ? f1_fwdMaskCandidates_r_2 : 8'h0)
    | (f1_idleTagMatches_1_3 ? f1_fwdMaskCandidates_r_3 : 8'h0);
  wire [63:0]      f1_idleData_1 =
    (f1_idleTagMatches_1_0 ? f1_fwdDataCandidates_r : 64'h0)
    | (f1_idleTagMatches_1_1 ? f1_fwdDataCandidates_r_1 : 64'h0)
    | (f1_idleTagMatches_1_2 ? f1_fwdDataCandidates_r_2 : 64'h0)
    | (f1_idleTagMatches_1_3 ? f1_fwdDataCandidates_r_3 : 64'h0);
  wire [7:0]       _resData_T_67 =
    f1_idleMask_1[0] ? f1_idleData_1[7:0] : f1_flyData_1[7:0];
  wire [7:0]       _resData_T_71 =
    f1_idleMask_1[1] ? f1_idleData_1[15:8] : f1_flyData_1[15:8];
  wire [7:0]       _resData_T_75 =
    f1_idleMask_1[2] ? f1_idleData_1[23:16] : f1_flyData_1[23:16];
  wire [7:0]       _resData_T_79 =
    f1_idleMask_1[3] ? f1_idleData_1[31:24] : f1_flyData_1[31:24];
  wire [7:0]       _resData_T_83 =
    f1_idleMask_1[4] ? f1_idleData_1[39:32] : f1_flyData_1[39:32];
  wire [7:0]       _resData_T_87 =
    f1_idleMask_1[5] ? f1_idleData_1[47:40] : f1_flyData_1[47:40];
  wire [7:0]       _resData_T_91 =
    f1_idleMask_1[6] ? f1_idleData_1[55:48] : f1_flyData_1[55:48];
  wire [7:0]       _resData_T_95 =
    f1_idleMask_1[7] ? f1_idleData_1[63:56] : f1_flyData_1[63:56];
  wire [7:0]       f1_fwdMaskTmp_1 =
    f1_idleMask_1 | (f1_flyTagMatches_1_0 ? f1_fwdMaskCandidates_r : 8'h0)
    | (f1_flyTagMatches_1_1 ? f1_fwdMaskCandidates_r_1 : 8'h0)
    | (f1_flyTagMatches_1_2 ? f1_fwdMaskCandidates_r_2 : 8'h0)
    | (f1_flyTagMatches_1_3 ? f1_fwdMaskCandidates_r_3 : 8'h0);
  wire [15:0]      _f1_fwdMask_T_21 =
    f1_fwdPAddr_1[3] ? {f1_fwdMaskTmp_1, 8'h0} : {8'h0, f1_fwdMaskTmp_1};
  wire [127:0]     _f1_fwdData_T_21 =
    f1_fwdPAddr_1[3]
      ? {_resData_T_95,
         _resData_T_91,
         _resData_T_87,
         _resData_T_83,
         _resData_T_79,
         _resData_T_75,
         _resData_T_71,
         _resData_T_67,
         64'h0}
      : {64'h0,
         _resData_T_95,
         _resData_T_91,
         _resData_T_87,
         _resData_T_83,
         _resData_T_79,
         _resData_T_75,
         _resData_T_71,
         _resData_T_67};
  reg  [47:0]      f1_ptagMatches_r_4;
  reg  [47:0]      f1_ptagMatches_r_5;
  reg  [47:0]      f1_ptagMatches_r_6;
  reg  [47:0]      f1_ptagMatches_r_7;
  reg              f1_tagMismatchVec_1_r;
  reg              f1_tagMismatchVec_1_r_1;
  reg              f1_tagMismatchVec_1_r_2;
  reg              f1_tagMismatchVec_1_r_3;
  reg              f1_tagMismatchVec_1_r_4;
  reg              f1_tagMismatchVec_1_r_5;
  reg              f1_tagMismatchVec_1_r_6;
  reg              f1_tagMismatchVec_1_r_7;
  wire [3:0]       _f1_tagMismatchVec_1_T_12 =
    {f1_tagMismatchVec_1_r_6 != (f1_ptagMatches_r_7[47:3] == f1_fwdPAddr_1[47:3])
       & f1_tagMismatchVec_1_r_7 & f1_fwdValid_1,
     f1_tagMismatchVec_1_r_4 != (f1_ptagMatches_r_6[47:3] == f1_fwdPAddr_1[47:3])
       & f1_tagMismatchVec_1_r_5 & f1_fwdValid_1,
     f1_tagMismatchVec_1_r_2 != (f1_ptagMatches_r_5[47:3] == f1_fwdPAddr_1[47:3])
       & f1_tagMismatchVec_1_r_3 & f1_fwdValid_1,
     f1_tagMismatchVec_1_r != (f1_ptagMatches_r_4[47:3] == f1_fwdPAddr_1[47:3])
       & f1_tagMismatchVec_1_r_1 & f1_fwdValid_1};
  reg              f1_fwdValid_2;
  reg              f1_flyTagMatches_2_0;
  reg              f1_flyTagMatches_2_1;
  reg              f1_flyTagMatches_2_2;
  reg              f1_flyTagMatches_2_3;
  reg              f1_idleTagMatches_2_0;
  reg              f1_idleTagMatches_2_1;
  reg              f1_idleTagMatches_2_2;
  reg              f1_idleTagMatches_2_3;
  reg  [47:0]      f1_fwdPAddr_2;
  wire [63:0]      f1_flyData_2 =
    (f1_flyTagMatches_2_0 ? f1_fwdDataCandidates_r : 64'h0)
    | (f1_flyTagMatches_2_1 ? f1_fwdDataCandidates_r_1 : 64'h0)
    | (f1_flyTagMatches_2_2 ? f1_fwdDataCandidates_r_2 : 64'h0)
    | (f1_flyTagMatches_2_3 ? f1_fwdDataCandidates_r_3 : 64'h0);
  wire [7:0]       f1_idleMask_2 =
    (f1_idleTagMatches_2_0 ? f1_fwdMaskCandidates_r : 8'h0)
    | (f1_idleTagMatches_2_1 ? f1_fwdMaskCandidates_r_1 : 8'h0)
    | (f1_idleTagMatches_2_2 ? f1_fwdMaskCandidates_r_2 : 8'h0)
    | (f1_idleTagMatches_2_3 ? f1_fwdMaskCandidates_r_3 : 8'h0);
  wire [63:0]      f1_idleData_2 =
    (f1_idleTagMatches_2_0 ? f1_fwdDataCandidates_r : 64'h0)
    | (f1_idleTagMatches_2_1 ? f1_fwdDataCandidates_r_1 : 64'h0)
    | (f1_idleTagMatches_2_2 ? f1_fwdDataCandidates_r_2 : 64'h0)
    | (f1_idleTagMatches_2_3 ? f1_fwdDataCandidates_r_3 : 64'h0);
  wire [7:0]       _resData_T_99 =
    f1_idleMask_2[0] ? f1_idleData_2[7:0] : f1_flyData_2[7:0];
  wire [7:0]       _resData_T_103 =
    f1_idleMask_2[1] ? f1_idleData_2[15:8] : f1_flyData_2[15:8];
  wire [7:0]       _resData_T_107 =
    f1_idleMask_2[2] ? f1_idleData_2[23:16] : f1_flyData_2[23:16];
  wire [7:0]       _resData_T_111 =
    f1_idleMask_2[3] ? f1_idleData_2[31:24] : f1_flyData_2[31:24];
  wire [7:0]       _resData_T_115 =
    f1_idleMask_2[4] ? f1_idleData_2[39:32] : f1_flyData_2[39:32];
  wire [7:0]       _resData_T_119 =
    f1_idleMask_2[5] ? f1_idleData_2[47:40] : f1_flyData_2[47:40];
  wire [7:0]       _resData_T_123 =
    f1_idleMask_2[6] ? f1_idleData_2[55:48] : f1_flyData_2[55:48];
  wire [7:0]       _resData_T_127 =
    f1_idleMask_2[7] ? f1_idleData_2[63:56] : f1_flyData_2[63:56];
  wire [7:0]       f1_fwdMaskTmp_2 =
    f1_idleMask_2 | (f1_flyTagMatches_2_0 ? f1_fwdMaskCandidates_r : 8'h0)
    | (f1_flyTagMatches_2_1 ? f1_fwdMaskCandidates_r_1 : 8'h0)
    | (f1_flyTagMatches_2_2 ? f1_fwdMaskCandidates_r_2 : 8'h0)
    | (f1_flyTagMatches_2_3 ? f1_fwdMaskCandidates_r_3 : 8'h0);
  wire [15:0]      _f1_fwdMask_T_40 =
    f1_fwdPAddr_2[3] ? {f1_fwdMaskTmp_2, 8'h0} : {8'h0, f1_fwdMaskTmp_2};
  wire [127:0]     _f1_fwdData_T_40 =
    f1_fwdPAddr_2[3]
      ? {_resData_T_127,
         _resData_T_123,
         _resData_T_119,
         _resData_T_115,
         _resData_T_111,
         _resData_T_107,
         _resData_T_103,
         _resData_T_99,
         64'h0}
      : {64'h0,
         _resData_T_127,
         _resData_T_123,
         _resData_T_119,
         _resData_T_115,
         _resData_T_111,
         _resData_T_107,
         _resData_T_103,
         _resData_T_99};
  reg  [47:0]      f1_ptagMatches_r_8;
  reg  [47:0]      f1_ptagMatches_r_9;
  reg  [47:0]      f1_ptagMatches_r_10;
  reg  [47:0]      f1_ptagMatches_r_11;
  reg              f1_tagMismatchVec_2_r;
  reg              f1_tagMismatchVec_2_r_1;
  reg              f1_tagMismatchVec_2_r_2;
  reg              f1_tagMismatchVec_2_r_3;
  reg              f1_tagMismatchVec_2_r_4;
  reg              f1_tagMismatchVec_2_r_5;
  reg              f1_tagMismatchVec_2_r_6;
  reg              f1_tagMismatchVec_2_r_7;
  wire [3:0]       _f1_tagMismatchVec_2_T_12 =
    {f1_tagMismatchVec_2_r_6 != (f1_ptagMatches_r_11[47:3] == f1_fwdPAddr_2[47:3])
       & f1_tagMismatchVec_2_r_7 & f1_fwdValid_2,
     f1_tagMismatchVec_2_r_4 != (f1_ptagMatches_r_10[47:3] == f1_fwdPAddr_2[47:3])
       & f1_tagMismatchVec_2_r_5 & f1_fwdValid_2,
     f1_tagMismatchVec_2_r_2 != (f1_ptagMatches_r_9[47:3] == f1_fwdPAddr_2[47:3])
       & f1_tagMismatchVec_2_r_3 & f1_fwdValid_2,
     f1_tagMismatchVec_2_r != (f1_ptagMatches_r_8[47:3] == f1_fwdPAddr_2[47:3])
       & f1_tagMismatchVec_2_r_1 & f1_fwdValid_2};
  wire [3:0][49:0] _GEN_21 =
    {{entries_3_vaddr}, {entries_2_vaddr}, {entries_1_vaddr}, {entries_0_vaddr}};
  wire             f0_vtagMatches_0 = entries_0_vaddr[49:3] == io_forward_0_vaddr[49:3];
  wire             f0_vtagMatches_1 = entries_1_vaddr[49:3] == io_forward_0_vaddr[49:3];
  wire             f0_vtagMatches_2 = entries_2_vaddr[49:3] == io_forward_0_vaddr[49:3];
  wire             f0_vtagMatches_3 = entries_3_vaddr[49:3] == io_forward_0_vaddr[49:3];
  wire             f0_vtagMatches_1_0 = entries_0_vaddr[49:3] == io_forward_1_vaddr[49:3];
  wire             f0_vtagMatches_1_1 = entries_1_vaddr[49:3] == io_forward_1_vaddr[49:3];
  wire             f0_vtagMatches_1_2 = entries_2_vaddr[49:3] == io_forward_1_vaddr[49:3];
  wire             f0_vtagMatches_1_3 = entries_3_vaddr[49:3] == io_forward_1_vaddr[49:3];
  wire             f0_vtagMatches_2_0 = entries_0_vaddr[49:3] == io_forward_2_vaddr[49:3];
  wire             f0_vtagMatches_2_1 = entries_1_vaddr[49:3] == io_forward_2_vaddr[49:3];
  wire             f0_vtagMatches_2_2 = entries_2_vaddr[49:3] == io_forward_2_vaddr[49:3];
  wire             f0_vtagMatches_2_3 = entries_3_vaddr[49:3] == io_forward_2_vaddr[49:3];
  wire [1:0]       e0_mergeIdx =
    e0_mergeVec_0 ? 2'h0 : e0_mergeVec_1 ? 2'h1 : {1'h1, ~e0_mergeVec_2};
  wire [63:0]      resData =
    {io_lsq_req_bits_mask[7] ? io_lsq_req_bits_data[63:56] : _GEN_1[e0_mergeIdx][63:56],
     io_lsq_req_bits_mask[6] ? io_lsq_req_bits_data[55:48] : _GEN_1[e0_mergeIdx][55:48],
     io_lsq_req_bits_mask[5] ? io_lsq_req_bits_data[47:40] : _GEN_1[e0_mergeIdx][47:40],
     io_lsq_req_bits_mask[4] ? io_lsq_req_bits_data[39:32] : _GEN_1[e0_mergeIdx][39:32],
     io_lsq_req_bits_mask[3] ? io_lsq_req_bits_data[31:24] : _GEN_1[e0_mergeIdx][31:24],
     io_lsq_req_bits_mask[2] ? io_lsq_req_bits_data[23:16] : _GEN_1[e0_mergeIdx][23:16],
     io_lsq_req_bits_mask[1] ? io_lsq_req_bits_data[15:8] : _GEN_1[e0_mergeIdx][15:8],
     io_lsq_req_bits_mask[0] ? io_lsq_req_bits_data[7:0] : _GEN_1[e0_mergeIdx][7:0]};
  wire             _GEN_22 = e0_mergeIdx == 2'h0;
  wire             _GEN_23 = e0_mergeIdx == 2'h1;
  wire             _GEN_24 = e0_mergeIdx == 2'h2;
  wire             _GEN_25 = _GEN | ~_GEN_5;
  wire             _GEN_26 = _GEN | ~_GEN_7;
  wire             _GEN_27 = _GEN | ~_GEN_9;
  wire             _GEN_28 = _GEN | ~_GEN_10;
  wire             _GEN_29 = _GEN_11[auto_client_out_d_bits_source] == 5'h0;
  wire             _entries_resp_nderr_T =
    auto_client_out_d_bits_denied | auto_client_out_d_bits_corrupt;
  wire             f0_validMask_0 = entries_0_cmd == 5'h1 & states_0_valid;
  wire             f0_validMask_1 = entries_1_cmd == 5'h1 & states_1_valid;
  wire             f0_validMask_2 = entries_2_cmd == 5'h1 & states_2_valid;
  wire             f0_validMask_3 = entries_3_cmd == 5'h1 & states_3_valid;
  wire [7:0]       resMask = io_lsq_req_bits_mask | _GEN_2[e0_mergeIdx];
  wire [2:0]       resOffset =
    resMask[0]
      ? 3'h0
      : resMask[1]
          ? 3'h1
          : resMask[2]
              ? 3'h2
              : resMask[3]
                  ? 3'h3
                  : resMask[4] ? 3'h4 : resMask[5] ? 3'h5 : {2'h3, ~(resMask[6])};
  wire [47:0]      _entries_addr_T_2 = {_GEN_0[e0_mergeIdx][47:3], resOffset};
  wire [49:0]      _entries_vaddr_T_2 = {_GEN_21[e0_mergeIdx][49:3], resOffset};
  wire             _f0_idleTagMatches_T = f0_vtagMatches_0 & f0_validMask_0;
  wire             _f0_idleTagMatches_T_4 = f0_vtagMatches_1 & f0_validMask_1;
  wire             _f0_idleTagMatches_T_8 = f0_vtagMatches_2 & f0_validMask_2;
  wire             _f0_idleTagMatches_T_12 = f0_vtagMatches_3 & f0_validMask_3;
  wire             _f0_idleTagMatches_T_16 = f0_vtagMatches_1_0 & f0_validMask_0;
  wire             _f0_idleTagMatches_T_20 = f0_vtagMatches_1_1 & f0_validMask_1;
  wire             _f0_idleTagMatches_T_24 = f0_vtagMatches_1_2 & f0_validMask_2;
  wire             _f0_idleTagMatches_T_28 = f0_vtagMatches_1_3 & f0_validMask_3;
  wire             _f0_idleTagMatches_T_32 = f0_vtagMatches_2_0 & f0_validMask_0;
  wire             _f0_idleTagMatches_T_36 = f0_vtagMatches_2_1 & f0_validMask_1;
  wire             _f0_idleTagMatches_T_40 = f0_vtagMatches_2_2 & f0_validMask_2;
  wire             _f0_idleTagMatches_T_44 = f0_vtagMatches_2_3 & f0_validMask_3;
  always @(posedge clock) begin
    if (_GEN_25) begin
    end
    else
      entries_0_cmd <= io_lsq_req_bits_cmd;
    if (_GEN) begin
      if ((|resMask) & _GEN_22) begin
        entries_0_addr <= _entries_addr_T_2;
        entries_0_vaddr <= _entries_vaddr_T_2;
      end
      if (_GEN_22)
        entries_0_mask <= resMask;
      if ((|resMask) & _GEN_23) begin
        entries_1_addr <= _entries_addr_T_2;
        entries_1_vaddr <= _entries_vaddr_T_2;
      end
      if (_GEN_23)
        entries_1_mask <= resMask;
      if ((|resMask) & _GEN_24) begin
        entries_2_addr <= _entries_addr_T_2;
        entries_2_vaddr <= _entries_vaddr_T_2;
      end
      if (_GEN_24)
        entries_2_mask <= resMask;
      if ((|resMask) & (&e0_mergeIdx)) begin
        entries_3_addr <= _entries_addr_T_2;
        entries_3_vaddr <= _entries_vaddr_T_2;
      end
      if (&e0_mergeIdx)
        entries_3_mask <= resMask;
    end
    else begin
      if (_GEN_5) begin
        entries_0_addr <= io_lsq_req_bits_addr;
        entries_0_vaddr <= io_lsq_req_bits_vaddr;
        entries_0_mask <= io_lsq_req_bits_mask;
      end
      if (_GEN_7) begin
        entries_1_addr <= io_lsq_req_bits_addr;
        entries_1_vaddr <= io_lsq_req_bits_vaddr;
        entries_1_mask <= io_lsq_req_bits_mask;
      end
      if (_GEN_9) begin
        entries_2_addr <= io_lsq_req_bits_addr;
        entries_2_vaddr <= io_lsq_req_bits_vaddr;
        entries_2_mask <= io_lsq_req_bits_mask;
      end
      if (_GEN_10) begin
        entries_3_addr <= io_lsq_req_bits_addr;
        entries_3_vaddr <= io_lsq_req_bits_vaddr;
        entries_3_mask <= io_lsq_req_bits_mask;
      end
    end
    if (auto_client_out_d_valid & _GEN_29 & _GEN_12)
      entries_0_data <= auto_client_out_d_bits_data;
    else if (_GEN) begin
      if (_GEN_22)
        entries_0_data <= resData;
    end
    else if (_GEN_5)
      entries_0_data <= io_lsq_req_bits_data;
    if (_GEN_25) begin
    end
    else begin
      entries_0_nc <= io_lsq_req_bits_nc;
      entries_0_atomic <= io_lsq_req_bits_atomic;
      entries_0_memBackTypeMM <= io_lsq_req_bits_memBackTypeMM;
    end
    if (_GEN_15)
      entries_0_resp_nderr <= _entries_resp_nderr_T;
    else
      entries_0_resp_nderr <= _GEN_25 & entries_0_resp_nderr;
    if (_GEN_26) begin
    end
    else
      entries_1_cmd <= io_lsq_req_bits_cmd;
    if (auto_client_out_d_valid & _GEN_29 & _GEN_13)
      entries_1_data <= auto_client_out_d_bits_data;
    else if (_GEN) begin
      if (_GEN_23)
        entries_1_data <= resData;
    end
    else if (_GEN_7)
      entries_1_data <= io_lsq_req_bits_data;
    if (_GEN_26) begin
    end
    else begin
      entries_1_nc <= io_lsq_req_bits_nc;
      entries_1_atomic <= io_lsq_req_bits_atomic;
      entries_1_memBackTypeMM <= io_lsq_req_bits_memBackTypeMM;
    end
    if (_GEN_16)
      entries_1_resp_nderr <= _entries_resp_nderr_T;
    else
      entries_1_resp_nderr <= _GEN_26 & entries_1_resp_nderr;
    if (_GEN_27) begin
    end
    else
      entries_2_cmd <= io_lsq_req_bits_cmd;
    if (auto_client_out_d_valid & _GEN_29 & _GEN_14)
      entries_2_data <= auto_client_out_d_bits_data;
    else if (_GEN) begin
      if (_GEN_24)
        entries_2_data <= resData;
    end
    else if (_GEN_9)
      entries_2_data <= io_lsq_req_bits_data;
    if (_GEN_27) begin
    end
    else begin
      entries_2_nc <= io_lsq_req_bits_nc;
      entries_2_atomic <= io_lsq_req_bits_atomic;
      entries_2_memBackTypeMM <= io_lsq_req_bits_memBackTypeMM;
    end
    if (_GEN_17)
      entries_2_resp_nderr <= _entries_resp_nderr_T;
    else
      entries_2_resp_nderr <= _GEN_27 & entries_2_resp_nderr;
    if (_GEN_28) begin
    end
    else
      entries_3_cmd <= io_lsq_req_bits_cmd;
    if (auto_client_out_d_valid & _GEN_29 & (&auto_client_out_d_bits_source))
      entries_3_data <= auto_client_out_d_bits_data;
    else if (_GEN) begin
      if (&e0_mergeIdx)
        entries_3_data <= resData;
    end
    else if (_GEN_10)
      entries_3_data <= io_lsq_req_bits_data;
    if (_GEN_28) begin
    end
    else begin
      entries_3_nc <= io_lsq_req_bits_nc;
      entries_3_atomic <= io_lsq_req_bits_atomic;
      entries_3_memBackTypeMM <= io_lsq_req_bits_memBackTypeMM;
    end
    if (_GEN_18)
      entries_3_resp_nderr <= _entries_resp_nderr_T;
    else
      entries_3_resp_nderr <= _GEN_28 & entries_3_resp_nderr;
    do_uarch_drain <=
      (|{|_f1_tagMismatchVec_2_T_12,
         |_f1_tagMismatchVec_1_T_12,
         |_f1_tagMismatchVec_0_T_12}) & ~empty;
    io_lsq_idResp_valid_REG <= e0_fire;
    if (e0_fire) begin
      io_lsq_idResp_bits_mid_r <= io_lsq_req_bits_id;
      io_lsq_idResp_bits_sid_r <= e0_canMerge ? e0_mergeIdx : e0_allocIdx;
      io_lsq_idResp_bits_is2lq_r <= io_lsq_req_bits_cmd != 5'h1;
      io_lsq_idResp_bits_nc_r <= io_lsq_req_bits_nc;
    end
    if (f0_validMask_0) begin
      f1_fwdMaskCandidates_r <= entries_0_mask;
      f1_fwdDataCandidates_r <= entries_0_data;
    end
    if (f0_validMask_1) begin
      f1_fwdMaskCandidates_r_1 <= entries_1_mask;
      f1_fwdDataCandidates_r_1 <= entries_1_data;
    end
    if (f0_validMask_2) begin
      f1_fwdMaskCandidates_r_2 <= entries_2_mask;
      f1_fwdDataCandidates_r_2 <= entries_2_data;
    end
    if (f0_validMask_3) begin
      f1_fwdMaskCandidates_r_3 <= entries_3_mask;
      f1_fwdDataCandidates_r_3 <= entries_3_data;
    end
    f1_fwdValid <= io_forward_0_valid;
    if (io_forward_0_valid) begin
      f1_flyTagMatches_0 <= _f0_idleTagMatches_T & io_forward_0_valid & states_0_inflight;
      f1_flyTagMatches_1 <=
        _f0_idleTagMatches_T_4 & io_forward_0_valid & states_0_inflight;
      f1_flyTagMatches_2 <=
        _f0_idleTagMatches_T_8 & io_forward_0_valid & states_0_inflight;
      f1_flyTagMatches_3 <=
        _f0_idleTagMatches_T_12 & io_forward_0_valid & states_0_inflight;
      f1_idleTagMatches_0 <=
        _f0_idleTagMatches_T & io_forward_0_valid & ~states_0_inflight;
      f1_idleTagMatches_1 <=
        _f0_idleTagMatches_T_4 & io_forward_0_valid & ~states_0_inflight;
      f1_idleTagMatches_2 <=
        _f0_idleTagMatches_T_8 & io_forward_0_valid & ~states_0_inflight;
      f1_idleTagMatches_3 <=
        _f0_idleTagMatches_T_12 & io_forward_0_valid & ~states_0_inflight;
      f1_fwdPAddr <= io_forward_0_paddr;
      f1_ptagMatches_r <= entries_0_addr;
      f1_ptagMatches_r_1 <= entries_1_addr;
      f1_ptagMatches_r_2 <= entries_2_addr;
      f1_ptagMatches_r_3 <= entries_3_addr;
      f1_tagMismatchVec_0_r <= f0_vtagMatches_0;
      f1_tagMismatchVec_0_r_1 <= f0_validMask_0;
      f1_tagMismatchVec_0_r_2 <= f0_vtagMatches_1;
      f1_tagMismatchVec_0_r_3 <= f0_validMask_1;
      f1_tagMismatchVec_0_r_4 <= f0_vtagMatches_2;
      f1_tagMismatchVec_0_r_5 <= f0_validMask_2;
      f1_tagMismatchVec_0_r_6 <= f0_vtagMatches_3;
      f1_tagMismatchVec_0_r_7 <= f0_validMask_3;
    end
    f1_fwdValid_1 <= io_forward_1_valid;
    if (io_forward_1_valid) begin
      f1_flyTagMatches_1_0 <=
        _f0_idleTagMatches_T_16 & io_forward_1_valid & states_1_inflight;
      f1_flyTagMatches_1_1 <=
        _f0_idleTagMatches_T_20 & io_forward_1_valid & states_1_inflight;
      f1_flyTagMatches_1_2 <=
        _f0_idleTagMatches_T_24 & io_forward_1_valid & states_1_inflight;
      f1_flyTagMatches_1_3 <=
        _f0_idleTagMatches_T_28 & io_forward_1_valid & states_1_inflight;
      f1_idleTagMatches_1_0 <=
        _f0_idleTagMatches_T_16 & io_forward_1_valid & ~states_1_inflight;
      f1_idleTagMatches_1_1 <=
        _f0_idleTagMatches_T_20 & io_forward_1_valid & ~states_1_inflight;
      f1_idleTagMatches_1_2 <=
        _f0_idleTagMatches_T_24 & io_forward_1_valid & ~states_1_inflight;
      f1_idleTagMatches_1_3 <=
        _f0_idleTagMatches_T_28 & io_forward_1_valid & ~states_1_inflight;
      f1_fwdPAddr_1 <= io_forward_1_paddr;
      f1_ptagMatches_r_4 <= entries_0_addr;
      f1_ptagMatches_r_5 <= entries_1_addr;
      f1_ptagMatches_r_6 <= entries_2_addr;
      f1_ptagMatches_r_7 <= entries_3_addr;
      f1_tagMismatchVec_1_r <= f0_vtagMatches_1_0;
      f1_tagMismatchVec_1_r_1 <= f0_validMask_0;
      f1_tagMismatchVec_1_r_2 <= f0_vtagMatches_1_1;
      f1_tagMismatchVec_1_r_3 <= f0_validMask_1;
      f1_tagMismatchVec_1_r_4 <= f0_vtagMatches_1_2;
      f1_tagMismatchVec_1_r_5 <= f0_validMask_2;
      f1_tagMismatchVec_1_r_6 <= f0_vtagMatches_1_3;
      f1_tagMismatchVec_1_r_7 <= f0_validMask_3;
    end
    f1_fwdValid_2 <= io_forward_2_valid;
    if (io_forward_2_valid) begin
      f1_flyTagMatches_2_0 <=
        _f0_idleTagMatches_T_32 & io_forward_2_valid & states_2_inflight;
      f1_flyTagMatches_2_1 <=
        _f0_idleTagMatches_T_36 & io_forward_2_valid & states_2_inflight;
      f1_flyTagMatches_2_2 <=
        _f0_idleTagMatches_T_40 & io_forward_2_valid & states_2_inflight;
      f1_flyTagMatches_2_3 <=
        _f0_idleTagMatches_T_44 & io_forward_2_valid & states_2_inflight;
      f1_idleTagMatches_2_0 <=
        _f0_idleTagMatches_T_32 & io_forward_2_valid & ~states_2_inflight;
      f1_idleTagMatches_2_1 <=
        _f0_idleTagMatches_T_36 & io_forward_2_valid & ~states_2_inflight;
      f1_idleTagMatches_2_2 <=
        _f0_idleTagMatches_T_40 & io_forward_2_valid & ~states_2_inflight;
      f1_idleTagMatches_2_3 <=
        _f0_idleTagMatches_T_44 & io_forward_2_valid & ~states_2_inflight;
      f1_fwdPAddr_2 <= io_forward_2_paddr;
      f1_ptagMatches_r_8 <= entries_0_addr;
      f1_ptagMatches_r_9 <= entries_1_addr;
      f1_ptagMatches_r_10 <= entries_2_addr;
      f1_ptagMatches_r_11 <= entries_3_addr;
      f1_tagMismatchVec_2_r <= f0_vtagMatches_2_0;
      f1_tagMismatchVec_2_r_1 <= f0_validMask_0;
      f1_tagMismatchVec_2_r_2 <= f0_vtagMatches_2_1;
      f1_tagMismatchVec_2_r_3 <= f0_validMask_1;
      f1_tagMismatchVec_2_r_4 <= f0_vtagMatches_2_2;
      f1_tagMismatchVec_2_r_5 <= f0_validMask_2;
      f1_tagMismatchVec_2_r_6 <= f0_vtagMatches_2_3;
      f1_tagMismatchVec_2_r_7 <= f0_validMask_3;
    end
  end // always @(posedge)
  wire             _GEN_30 = io_lsq_resp_ready & r0_canSent;
  wire             e0_allocWaitSame =
    _e0_allocWaitSameVec_0_T & canMerge1 & ~canMerge2 | _e0_allocWaitSameVec_1_T
    & canMerge1_1 & ~canMerge2_1 | _e0_allocWaitSameVec_2_T & canMerge1_2 & ~canMerge2_2
    | _e0_allocWaitSameVec_3_T & canMerge1_3 & ~canMerge2_3;
  wire             _perfEvents_T_17 = auto_client_out_a_ready & q0_canSent;
  wire             _GEN_31 = _perfEvents_T_17 & ~(|q0_canSentIdx) | states_0_inflight;
  wire             _GEN_32 = _perfEvents_T_17 & q0_canSentIdx == 2'h1 | states_1_inflight;
  wire             _GEN_33 = _perfEvents_T_17 & q0_canSentIdx == 2'h2 | states_2_inflight;
  wire             _GEN_34 = _perfEvents_T_17 & (&q0_canSentIdx) | states_3_inflight;
  wire             _GEN_35 =
    _perfEvents_T_17 & states_0_valid & ~(states_0_valid & states_0_waitReturn)
    & _GEN_0[q0_canSentIdx][47:3] == entries_0_addr[47:3] | ~_GEN & _GEN_3
    & e0_allocWaitSame & _GEN_4 | states_0_waitSame;
  wire             _GEN_36 =
    _perfEvents_T_17 & states_1_valid & ~(states_1_valid & states_1_waitReturn)
    & _GEN_0[q0_canSentIdx][47:3] == entries_1_addr[47:3] | ~_GEN & _GEN_3
    & e0_allocWaitSame & _GEN_6 | states_1_waitSame;
  wire             _GEN_37 =
    _perfEvents_T_17 & states_2_valid & ~(states_2_valid & states_2_waitReturn)
    & _GEN_0[q0_canSentIdx][47:3] == entries_2_addr[47:3] | ~_GEN & _GEN_3
    & e0_allocWaitSame & _GEN_8 | states_2_waitSame;
  wire             _GEN_38 =
    _perfEvents_T_17 & states_3_valid & ~(states_3_valid & states_3_waitReturn)
    & _GEN_0[q0_canSentIdx][47:3] == entries_3_addr[47:3] | ~_GEN & _GEN_3
    & e0_allocWaitSame & (&e0_allocIdx) | states_3_waitSame;
  wire             _GEN_39 =
    auto_client_out_d_valid & states_0_valid & states_0_waitSame
    & _GEN_0[auto_client_out_d_bits_source][47:3] == entries_0_addr[47:3];
  wire             _GEN_40 =
    auto_client_out_d_valid & states_1_valid & states_1_waitSame
    & _GEN_0[auto_client_out_d_bits_source][47:3] == entries_1_addr[47:3];
  wire             _GEN_41 =
    auto_client_out_d_valid & states_2_valid & states_2_waitSame
    & _GEN_0[auto_client_out_d_bits_source][47:3] == entries_2_addr[47:3];
  wire             _GEN_42 =
    auto_client_out_d_valid & states_3_valid & states_3_waitSame
    & _GEN_0[auto_client_out_d_bits_source][47:3] == entries_3_addr[47:3];
  wire             _GEN_43 = r0_canSentIdx == 2'h0;
  wire             _GEN_44 = _GEN_30 & _GEN_43;
  wire             _GEN_45 = r0_canSentIdx == 2'h1;
  wire             _GEN_46 = _GEN_30 & _GEN_45;
  wire             _GEN_47 = r0_canSentIdx == 2'h2;
  wire             _GEN_48 = _GEN_30 & _GEN_47;
  wire             _GEN_49 = _GEN_30 & (&r0_canSentIdx);
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      states_0_valid <= 1'h0;
      states_0_inflight <= 1'h0;
      states_0_waitSame <= 1'h0;
      states_0_waitReturn <= 1'h0;
      states_1_valid <= 1'h0;
      states_1_inflight <= 1'h0;
      states_1_waitSame <= 1'h0;
      states_1_waitReturn <= 1'h0;
      states_2_valid <= 1'h0;
      states_2_inflight <= 1'h0;
      states_2_waitSame <= 1'h0;
      states_2_waitReturn <= 1'h0;
      states_3_valid <= 1'h0;
      states_3_inflight <= 1'h0;
      states_3_waitSame <= 1'h0;
      states_3_waitReturn <= 1'h0;
      uState <= 2'h0;
    end
    else begin
      states_0_valid <= ~_GEN_44 & (~_GEN & _GEN_5 | states_0_valid);
      if (_GEN_30) begin
        states_0_inflight <= ~(_GEN_43 | _GEN_15) & _GEN_31;
        states_0_waitSame <= ~(_GEN_43 | _GEN_39) & _GEN_35;
        states_1_inflight <= ~(_GEN_45 | _GEN_16) & _GEN_32;
        states_1_waitSame <= ~(_GEN_45 | _GEN_40) & _GEN_36;
        states_2_inflight <= ~(_GEN_47 | _GEN_17) & _GEN_33;
        states_2_waitSame <= ~(_GEN_47 | _GEN_41) & _GEN_37;
        states_3_inflight <= ~((&r0_canSentIdx) | _GEN_18) & _GEN_34;
        states_3_waitSame <= ~((&r0_canSentIdx) | _GEN_42) & _GEN_38;
      end
      else begin
        states_0_inflight <= ~_GEN_15 & _GEN_31;
        states_0_waitSame <= ~_GEN_39 & _GEN_35;
        states_1_inflight <= ~_GEN_16 & _GEN_32;
        states_1_waitSame <= ~_GEN_40 & _GEN_36;
        states_2_inflight <= ~_GEN_17 & _GEN_33;
        states_2_waitSame <= ~_GEN_41 & _GEN_37;
        states_3_inflight <= ~_GEN_18 & _GEN_34;
        states_3_waitSame <= ~_GEN_42 & _GEN_38;
      end
      states_0_waitReturn <= ~_GEN_44 & (_GEN_15 | states_0_waitReturn);
      states_1_valid <= ~_GEN_46 & (~_GEN & _GEN_7 | states_1_valid);
      states_1_waitReturn <= ~_GEN_46 & (_GEN_16 | states_1_waitReturn);
      states_2_valid <= ~_GEN_48 & (~_GEN & _GEN_9 | states_2_valid);
      states_2_waitReturn <= ~_GEN_48 & (_GEN_17 | states_2_waitReturn);
      states_3_valid <= ~_GEN_49 & (~_GEN & _GEN_10 | states_3_valid);
      states_3_waitReturn <= ~_GEN_49 & (_GEN_18 | states_3_waitReturn);
      if (|uState) begin
        if (uState == 2'h1) begin
          if (auto_client_out_d_valid)
            uState <= 2'h2;
        end
        else if (uState == 2'h2 & _GEN_30)
          uState <= 2'h0;
      end
      else if (auto_client_out_a_ready & q0_canSent)
        uState <= 2'h1;
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:62];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [5:0] i = 6'h0; i < 6'h3F; i += 6'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        entries_0_cmd = _RANDOM[6'h0][4:0];
        entries_0_addr = {_RANDOM[6'h0][31:5], _RANDOM[6'h1][20:0]};
        entries_0_vaddr = {_RANDOM[6'h1][31:21], _RANDOM[6'h2], _RANDOM[6'h3][6:0]};
        entries_0_data = {_RANDOM[6'h3][31:7], _RANDOM[6'h4], _RANDOM[6'h5][6:0]};
        entries_0_mask = _RANDOM[6'h5][14:7];
        entries_0_nc = _RANDOM[6'h5][15];
        entries_0_atomic = _RANDOM[6'h5][16];
        entries_0_memBackTypeMM = _RANDOM[6'h5][17];
        entries_0_resp_nderr = _RANDOM[6'h5][18];
        entries_1_cmd = _RANDOM[6'h5][23:19];
        entries_1_addr = {_RANDOM[6'h5][31:24], _RANDOM[6'h6], _RANDOM[6'h7][7:0]};
        entries_1_vaddr = {_RANDOM[6'h7][31:8], _RANDOM[6'h8][25:0]};
        entries_1_data = {_RANDOM[6'h8][31:26], _RANDOM[6'h9], _RANDOM[6'hA][25:0]};
        entries_1_mask = {_RANDOM[6'hA][31:26], _RANDOM[6'hB][1:0]};
        entries_1_nc = _RANDOM[6'hB][2];
        entries_1_atomic = _RANDOM[6'hB][3];
        entries_1_memBackTypeMM = _RANDOM[6'hB][4];
        entries_1_resp_nderr = _RANDOM[6'hB][5];
        entries_2_cmd = _RANDOM[6'hB][10:6];
        entries_2_addr = {_RANDOM[6'hB][31:11], _RANDOM[6'hC][26:0]};
        entries_2_vaddr = {_RANDOM[6'hC][31:27], _RANDOM[6'hD], _RANDOM[6'hE][12:0]};
        entries_2_data = {_RANDOM[6'hE][31:13], _RANDOM[6'hF], _RANDOM[6'h10][12:0]};
        entries_2_mask = _RANDOM[6'h10][20:13];
        entries_2_nc = _RANDOM[6'h10][21];
        entries_2_atomic = _RANDOM[6'h10][22];
        entries_2_memBackTypeMM = _RANDOM[6'h10][23];
        entries_2_resp_nderr = _RANDOM[6'h10][24];
        entries_3_cmd = _RANDOM[6'h10][29:25];
        entries_3_addr = {_RANDOM[6'h10][31:30], _RANDOM[6'h11], _RANDOM[6'h12][13:0]};
        entries_3_vaddr = {_RANDOM[6'h12][31:14], _RANDOM[6'h13]};
        entries_3_data = {_RANDOM[6'h14], _RANDOM[6'h15]};
        entries_3_mask = _RANDOM[6'h16][7:0];
        entries_3_nc = _RANDOM[6'h16][8];
        entries_3_atomic = _RANDOM[6'h16][9];
        entries_3_memBackTypeMM = _RANDOM[6'h16][10];
        entries_3_resp_nderr = _RANDOM[6'h16][11];
        states_0_valid = _RANDOM[6'h16][12];
        states_0_inflight = _RANDOM[6'h16][13];
        states_0_waitSame = _RANDOM[6'h16][14];
        states_0_waitReturn = _RANDOM[6'h16][15];
        states_1_valid = _RANDOM[6'h16][16];
        states_1_inflight = _RANDOM[6'h16][17];
        states_1_waitSame = _RANDOM[6'h16][18];
        states_1_waitReturn = _RANDOM[6'h16][19];
        states_2_valid = _RANDOM[6'h16][20];
        states_2_inflight = _RANDOM[6'h16][21];
        states_2_waitSame = _RANDOM[6'h16][22];
        states_2_waitReturn = _RANDOM[6'h16][23];
        states_3_valid = _RANDOM[6'h16][24];
        states_3_inflight = _RANDOM[6'h16][25];
        states_3_waitSame = _RANDOM[6'h16][26];
        states_3_waitReturn = _RANDOM[6'h16][27];
        uState = _RANDOM[6'h16][30:29];
        do_uarch_drain = _RANDOM[6'h16][31];
        io_lsq_idResp_valid_REG = _RANDOM[6'h17][0];
        io_lsq_idResp_bits_mid_r = _RANDOM[6'h17][7:1];
        io_lsq_idResp_bits_sid_r = _RANDOM[6'h17][9:8];
        io_lsq_idResp_bits_is2lq_r = _RANDOM[6'h17][10];
        io_lsq_idResp_bits_nc_r = _RANDOM[6'h17][11];
        f1_fwdMaskCandidates_r = _RANDOM[6'h17][22:15];
        f1_fwdMaskCandidates_r_1 = _RANDOM[6'h17][30:23];
        f1_fwdMaskCandidates_r_2 = {_RANDOM[6'h17][31], _RANDOM[6'h18][6:0]};
        f1_fwdMaskCandidates_r_3 = _RANDOM[6'h18][14:7];
        f1_fwdDataCandidates_r =
          {_RANDOM[6'h18][31:15], _RANDOM[6'h19], _RANDOM[6'h1A][14:0]};
        f1_fwdDataCandidates_r_1 =
          {_RANDOM[6'h1A][31:15], _RANDOM[6'h1B], _RANDOM[6'h1C][14:0]};
        f1_fwdDataCandidates_r_2 =
          {_RANDOM[6'h1C][31:15], _RANDOM[6'h1D], _RANDOM[6'h1E][14:0]};
        f1_fwdDataCandidates_r_3 =
          {_RANDOM[6'h1E][31:15], _RANDOM[6'h1F], _RANDOM[6'h20][14:0]};
        f1_fwdValid = _RANDOM[6'h20][15];
        f1_flyTagMatches_0 = _RANDOM[6'h20][16];
        f1_flyTagMatches_1 = _RANDOM[6'h20][17];
        f1_flyTagMatches_2 = _RANDOM[6'h20][18];
        f1_flyTagMatches_3 = _RANDOM[6'h20][19];
        f1_idleTagMatches_0 = _RANDOM[6'h20][20];
        f1_idleTagMatches_1 = _RANDOM[6'h20][21];
        f1_idleTagMatches_2 = _RANDOM[6'h20][22];
        f1_idleTagMatches_3 = _RANDOM[6'h20][23];
        f1_fwdPAddr = {_RANDOM[6'h20][31:24], _RANDOM[6'h21], _RANDOM[6'h22][7:0]};
        f1_ptagMatches_r = {_RANDOM[6'h22][31:8], _RANDOM[6'h23][23:0]};
        f1_ptagMatches_r_1 = {_RANDOM[6'h23][31:24], _RANDOM[6'h24], _RANDOM[6'h25][7:0]};
        f1_ptagMatches_r_2 = {_RANDOM[6'h25][31:8], _RANDOM[6'h26][23:0]};
        f1_ptagMatches_r_3 = {_RANDOM[6'h26][31:24], _RANDOM[6'h27], _RANDOM[6'h28][7:0]};
        f1_tagMismatchVec_0_r = _RANDOM[6'h28][8];
        f1_tagMismatchVec_0_r_1 = _RANDOM[6'h28][9];
        f1_tagMismatchVec_0_r_2 = _RANDOM[6'h28][10];
        f1_tagMismatchVec_0_r_3 = _RANDOM[6'h28][11];
        f1_tagMismatchVec_0_r_4 = _RANDOM[6'h28][12];
        f1_tagMismatchVec_0_r_5 = _RANDOM[6'h28][13];
        f1_tagMismatchVec_0_r_6 = _RANDOM[6'h28][14];
        f1_tagMismatchVec_0_r_7 = _RANDOM[6'h28][15];
        f1_fwdValid_1 = _RANDOM[6'h2B][22];
        f1_flyTagMatches_1_0 = _RANDOM[6'h2B][23];
        f1_flyTagMatches_1_1 = _RANDOM[6'h2B][24];
        f1_flyTagMatches_1_2 = _RANDOM[6'h2B][25];
        f1_flyTagMatches_1_3 = _RANDOM[6'h2B][26];
        f1_idleTagMatches_1_0 = _RANDOM[6'h2B][27];
        f1_idleTagMatches_1_1 = _RANDOM[6'h2B][28];
        f1_idleTagMatches_1_2 = _RANDOM[6'h2B][29];
        f1_idleTagMatches_1_3 = _RANDOM[6'h2B][30];
        f1_fwdPAddr_1 = {_RANDOM[6'h2B][31], _RANDOM[6'h2C], _RANDOM[6'h2D][14:0]};
        f1_ptagMatches_r_4 = {_RANDOM[6'h2D][31:15], _RANDOM[6'h2E][30:0]};
        f1_ptagMatches_r_5 = {_RANDOM[6'h2E][31], _RANDOM[6'h2F], _RANDOM[6'h30][14:0]};
        f1_ptagMatches_r_6 = {_RANDOM[6'h30][31:15], _RANDOM[6'h31][30:0]};
        f1_ptagMatches_r_7 = {_RANDOM[6'h31][31], _RANDOM[6'h32], _RANDOM[6'h33][14:0]};
        f1_tagMismatchVec_1_r = _RANDOM[6'h33][15];
        f1_tagMismatchVec_1_r_1 = _RANDOM[6'h33][16];
        f1_tagMismatchVec_1_r_2 = _RANDOM[6'h33][17];
        f1_tagMismatchVec_1_r_3 = _RANDOM[6'h33][18];
        f1_tagMismatchVec_1_r_4 = _RANDOM[6'h33][19];
        f1_tagMismatchVec_1_r_5 = _RANDOM[6'h33][20];
        f1_tagMismatchVec_1_r_6 = _RANDOM[6'h33][21];
        f1_tagMismatchVec_1_r_7 = _RANDOM[6'h33][22];
        f1_fwdValid_2 = _RANDOM[6'h36][29];
        f1_flyTagMatches_2_0 = _RANDOM[6'h36][30];
        f1_flyTagMatches_2_1 = _RANDOM[6'h36][31];
        f1_flyTagMatches_2_2 = _RANDOM[6'h37][0];
        f1_flyTagMatches_2_3 = _RANDOM[6'h37][1];
        f1_idleTagMatches_2_0 = _RANDOM[6'h37][2];
        f1_idleTagMatches_2_1 = _RANDOM[6'h37][3];
        f1_idleTagMatches_2_2 = _RANDOM[6'h37][4];
        f1_idleTagMatches_2_3 = _RANDOM[6'h37][5];
        f1_fwdPAddr_2 = {_RANDOM[6'h37][31:6], _RANDOM[6'h38][21:0]};
        f1_ptagMatches_r_8 = {_RANDOM[6'h38][31:22], _RANDOM[6'h39], _RANDOM[6'h3A][5:0]};
        f1_ptagMatches_r_9 = {_RANDOM[6'h3A][31:6], _RANDOM[6'h3B][21:0]};
        f1_ptagMatches_r_10 =
          {_RANDOM[6'h3B][31:22], _RANDOM[6'h3C], _RANDOM[6'h3D][5:0]};
        f1_ptagMatches_r_11 = {_RANDOM[6'h3D][31:6], _RANDOM[6'h3E][21:0]};
        f1_tagMismatchVec_2_r = _RANDOM[6'h3E][22];
        f1_tagMismatchVec_2_r_1 = _RANDOM[6'h3E][23];
        f1_tagMismatchVec_2_r_2 = _RANDOM[6'h3E][24];
        f1_tagMismatchVec_2_r_3 = _RANDOM[6'h3E][25];
        f1_tagMismatchVec_2_r_4 = _RANDOM[6'h3E][26];
        f1_tagMismatchVec_2_r_5 = _RANDOM[6'h3E][27];
        f1_tagMismatchVec_2_r_6 = _RANDOM[6'h3E][28];
        f1_tagMismatchVec_2_r_7 = _RANDOM[6'h3E][29];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        states_0_valid = 1'h0;
        states_0_inflight = 1'h0;
        states_0_waitSame = 1'h0;
        states_0_waitReturn = 1'h0;
        states_1_valid = 1'h0;
        states_1_inflight = 1'h0;
        states_1_waitSame = 1'h0;
        states_1_waitReturn = 1'h0;
        states_2_valid = 1'h0;
        states_2_inflight = 1'h0;
        states_2_waitSame = 1'h0;
        states_2_waitReturn = 1'h0;
        states_3_valid = 1'h0;
        states_3_inflight = 1'h0;
        states_3_waitSame = 1'h0;
        states_3_waitReturn = 1'h0;
        uState = 2'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign auto_client_out_a_valid = q0_canSent;
  assign auto_client_out_a_bits_opcode = q0_isStore ? 4'h1 : 4'h4;
  assign auto_client_out_a_bits_size = {1'h0, lgSize};
  assign auto_client_out_a_bits_source = q0_canSentIdx;
  assign auto_client_out_a_bits_address = _GEN_0[q0_canSentIdx];
  assign auto_client_out_a_bits_mask =
    q0_isStore
      ? _GEN_2[q0_canSentIdx]
      : {q0_load_a_mask_sub_3_1 | q0_load_a_mask_sub_3_2 & _GEN_0[q0_canSentIdx][0],
         q0_load_a_mask_sub_3_1 | q0_load_a_mask_sub_3_2 & ~(_GEN_0[q0_canSentIdx][0]),
         q0_load_a_mask_sub_2_1 | q0_load_a_mask_sub_2_2 & _GEN_0[q0_canSentIdx][0],
         q0_load_a_mask_sub_2_1 | q0_load_a_mask_sub_2_2 & ~(_GEN_0[q0_canSentIdx][0]),
         q0_load_a_mask_sub_1_1 | q0_load_a_mask_sub_1_2 & _GEN_0[q0_canSentIdx][0],
         q0_load_a_mask_sub_1_1 | q0_load_a_mask_sub_1_2 & ~(_GEN_0[q0_canSentIdx][0]),
         q0_load_a_mask_sub_0_1 | q0_load_a_mask_sub_0_2 & _GEN_0[q0_canSentIdx][0],
         q0_load_a_mask_sub_0_1 | q0_load_a_mask_sub_0_2 & ~(_GEN_0[q0_canSentIdx][0])};
  assign auto_client_out_a_bits_data = q0_isStore ? _GEN_1[q0_canSentIdx] : 64'h0;
  assign io_flush_empty = empty;
  assign io_lsq_req_ready = ~e0_reject;
  assign io_lsq_idResp_valid = io_lsq_idResp_valid_REG;
  assign io_lsq_idResp_bits_mid = io_lsq_idResp_bits_mid_r;
  assign io_lsq_idResp_bits_sid = io_lsq_idResp_bits_sid_r;
  assign io_lsq_idResp_bits_is2lq = io_lsq_idResp_bits_is2lq_r;
  assign io_lsq_idResp_bits_nc = io_lsq_idResp_bits_nc_r;
  assign io_lsq_resp_valid = r0_canSent;
  assign io_lsq_resp_bits_data = _GEN_1[r0_canSentIdx];
  assign io_lsq_resp_bits_id = r0_canSentIdx;
  assign io_lsq_resp_bits_nc = _GEN_19[r0_canSentIdx];
  assign io_lsq_resp_bits_is2lq = _GEN_11[r0_canSentIdx] == 5'h0;
  assign io_lsq_resp_bits_nderr = _GEN_20[r0_canSentIdx];
  assign io_forward_0_forwardMask_0 = _f1_fwdMask_T_2[0] & f1_fwdValid;
  assign io_forward_0_forwardMask_1 = _f1_fwdMask_T_2[1] & f1_fwdValid;
  assign io_forward_0_forwardMask_2 = _f1_fwdMask_T_2[2] & f1_fwdValid;
  assign io_forward_0_forwardMask_3 = _f1_fwdMask_T_2[3] & f1_fwdValid;
  assign io_forward_0_forwardMask_4 = _f1_fwdMask_T_2[4] & f1_fwdValid;
  assign io_forward_0_forwardMask_5 = _f1_fwdMask_T_2[5] & f1_fwdValid;
  assign io_forward_0_forwardMask_6 = _f1_fwdMask_T_2[6] & f1_fwdValid;
  assign io_forward_0_forwardMask_7 = _f1_fwdMask_T_2[7] & f1_fwdValid;
  assign io_forward_0_forwardMask_8 = _f1_fwdMask_T_2[8] & f1_fwdValid;
  assign io_forward_0_forwardMask_9 = _f1_fwdMask_T_2[9] & f1_fwdValid;
  assign io_forward_0_forwardMask_10 = _f1_fwdMask_T_2[10] & f1_fwdValid;
  assign io_forward_0_forwardMask_11 = _f1_fwdMask_T_2[11] & f1_fwdValid;
  assign io_forward_0_forwardMask_12 = _f1_fwdMask_T_2[12] & f1_fwdValid;
  assign io_forward_0_forwardMask_13 = _f1_fwdMask_T_2[13] & f1_fwdValid;
  assign io_forward_0_forwardMask_14 = _f1_fwdMask_T_2[14] & f1_fwdValid;
  assign io_forward_0_forwardMask_15 = _f1_fwdMask_T_2[15] & f1_fwdValid;
  assign io_forward_0_forwardData_0 = _f1_fwdData_T_2[7:0];
  assign io_forward_0_forwardData_1 = _f1_fwdData_T_2[15:8];
  assign io_forward_0_forwardData_2 = _f1_fwdData_T_2[23:16];
  assign io_forward_0_forwardData_3 = _f1_fwdData_T_2[31:24];
  assign io_forward_0_forwardData_4 = _f1_fwdData_T_2[39:32];
  assign io_forward_0_forwardData_5 = _f1_fwdData_T_2[47:40];
  assign io_forward_0_forwardData_6 = _f1_fwdData_T_2[55:48];
  assign io_forward_0_forwardData_7 = _f1_fwdData_T_2[63:56];
  assign io_forward_0_forwardData_8 = _f1_fwdData_T_2[71:64];
  assign io_forward_0_forwardData_9 = _f1_fwdData_T_2[79:72];
  assign io_forward_0_forwardData_10 = _f1_fwdData_T_2[87:80];
  assign io_forward_0_forwardData_11 = _f1_fwdData_T_2[95:88];
  assign io_forward_0_forwardData_12 = _f1_fwdData_T_2[103:96];
  assign io_forward_0_forwardData_13 = _f1_fwdData_T_2[111:104];
  assign io_forward_0_forwardData_14 = _f1_fwdData_T_2[119:112];
  assign io_forward_0_forwardData_15 = _f1_fwdData_T_2[127:120];
  assign io_forward_0_matchInvalid = |_f1_tagMismatchVec_0_T_12;
  assign io_forward_1_forwardMask_0 = _f1_fwdMask_T_21[0] & f1_fwdValid_1;
  assign io_forward_1_forwardMask_1 = _f1_fwdMask_T_21[1] & f1_fwdValid_1;
  assign io_forward_1_forwardMask_2 = _f1_fwdMask_T_21[2] & f1_fwdValid_1;
  assign io_forward_1_forwardMask_3 = _f1_fwdMask_T_21[3] & f1_fwdValid_1;
  assign io_forward_1_forwardMask_4 = _f1_fwdMask_T_21[4] & f1_fwdValid_1;
  assign io_forward_1_forwardMask_5 = _f1_fwdMask_T_21[5] & f1_fwdValid_1;
  assign io_forward_1_forwardMask_6 = _f1_fwdMask_T_21[6] & f1_fwdValid_1;
  assign io_forward_1_forwardMask_7 = _f1_fwdMask_T_21[7] & f1_fwdValid_1;
  assign io_forward_1_forwardMask_8 = _f1_fwdMask_T_21[8] & f1_fwdValid_1;
  assign io_forward_1_forwardMask_9 = _f1_fwdMask_T_21[9] & f1_fwdValid_1;
  assign io_forward_1_forwardMask_10 = _f1_fwdMask_T_21[10] & f1_fwdValid_1;
  assign io_forward_1_forwardMask_11 = _f1_fwdMask_T_21[11] & f1_fwdValid_1;
  assign io_forward_1_forwardMask_12 = _f1_fwdMask_T_21[12] & f1_fwdValid_1;
  assign io_forward_1_forwardMask_13 = _f1_fwdMask_T_21[13] & f1_fwdValid_1;
  assign io_forward_1_forwardMask_14 = _f1_fwdMask_T_21[14] & f1_fwdValid_1;
  assign io_forward_1_forwardMask_15 = _f1_fwdMask_T_21[15] & f1_fwdValid_1;
  assign io_forward_1_forwardData_0 = _f1_fwdData_T_21[7:0];
  assign io_forward_1_forwardData_1 = _f1_fwdData_T_21[15:8];
  assign io_forward_1_forwardData_2 = _f1_fwdData_T_21[23:16];
  assign io_forward_1_forwardData_3 = _f1_fwdData_T_21[31:24];
  assign io_forward_1_forwardData_4 = _f1_fwdData_T_21[39:32];
  assign io_forward_1_forwardData_5 = _f1_fwdData_T_21[47:40];
  assign io_forward_1_forwardData_6 = _f1_fwdData_T_21[55:48];
  assign io_forward_1_forwardData_7 = _f1_fwdData_T_21[63:56];
  assign io_forward_1_forwardData_8 = _f1_fwdData_T_21[71:64];
  assign io_forward_1_forwardData_9 = _f1_fwdData_T_21[79:72];
  assign io_forward_1_forwardData_10 = _f1_fwdData_T_21[87:80];
  assign io_forward_1_forwardData_11 = _f1_fwdData_T_21[95:88];
  assign io_forward_1_forwardData_12 = _f1_fwdData_T_21[103:96];
  assign io_forward_1_forwardData_13 = _f1_fwdData_T_21[111:104];
  assign io_forward_1_forwardData_14 = _f1_fwdData_T_21[119:112];
  assign io_forward_1_forwardData_15 = _f1_fwdData_T_21[127:120];
  assign io_forward_1_matchInvalid = |_f1_tagMismatchVec_1_T_12;
  assign io_forward_2_forwardMask_0 = _f1_fwdMask_T_40[0] & f1_fwdValid_2;
  assign io_forward_2_forwardMask_1 = _f1_fwdMask_T_40[1] & f1_fwdValid_2;
  assign io_forward_2_forwardMask_2 = _f1_fwdMask_T_40[2] & f1_fwdValid_2;
  assign io_forward_2_forwardMask_3 = _f1_fwdMask_T_40[3] & f1_fwdValid_2;
  assign io_forward_2_forwardMask_4 = _f1_fwdMask_T_40[4] & f1_fwdValid_2;
  assign io_forward_2_forwardMask_5 = _f1_fwdMask_T_40[5] & f1_fwdValid_2;
  assign io_forward_2_forwardMask_6 = _f1_fwdMask_T_40[6] & f1_fwdValid_2;
  assign io_forward_2_forwardMask_7 = _f1_fwdMask_T_40[7] & f1_fwdValid_2;
  assign io_forward_2_forwardMask_8 = _f1_fwdMask_T_40[8] & f1_fwdValid_2;
  assign io_forward_2_forwardMask_9 = _f1_fwdMask_T_40[9] & f1_fwdValid_2;
  assign io_forward_2_forwardMask_10 = _f1_fwdMask_T_40[10] & f1_fwdValid_2;
  assign io_forward_2_forwardMask_11 = _f1_fwdMask_T_40[11] & f1_fwdValid_2;
  assign io_forward_2_forwardMask_12 = _f1_fwdMask_T_40[12] & f1_fwdValid_2;
  assign io_forward_2_forwardMask_13 = _f1_fwdMask_T_40[13] & f1_fwdValid_2;
  assign io_forward_2_forwardMask_14 = _f1_fwdMask_T_40[14] & f1_fwdValid_2;
  assign io_forward_2_forwardMask_15 = _f1_fwdMask_T_40[15] & f1_fwdValid_2;
  assign io_forward_2_forwardData_0 = _f1_fwdData_T_40[7:0];
  assign io_forward_2_forwardData_1 = _f1_fwdData_T_40[15:8];
  assign io_forward_2_forwardData_2 = _f1_fwdData_T_40[23:16];
  assign io_forward_2_forwardData_3 = _f1_fwdData_T_40[31:24];
  assign io_forward_2_forwardData_4 = _f1_fwdData_T_40[39:32];
  assign io_forward_2_forwardData_5 = _f1_fwdData_T_40[47:40];
  assign io_forward_2_forwardData_6 = _f1_fwdData_T_40[55:48];
  assign io_forward_2_forwardData_7 = _f1_fwdData_T_40[63:56];
  assign io_forward_2_forwardData_8 = _f1_fwdData_T_40[71:64];
  assign io_forward_2_forwardData_9 = _f1_fwdData_T_40[79:72];
  assign io_forward_2_forwardData_10 = _f1_fwdData_T_40[87:80];
  assign io_forward_2_forwardData_11 = _f1_fwdData_T_40[95:88];
  assign io_forward_2_forwardData_12 = _f1_fwdData_T_40[103:96];
  assign io_forward_2_forwardData_13 = _f1_fwdData_T_40[111:104];
  assign io_forward_2_forwardData_14 = _f1_fwdData_T_40[119:112];
  assign io_forward_2_forwardData_15 = _f1_fwdData_T_40[127:120];
  assign io_forward_2_matchInvalid = |_f1_tagMismatchVec_2_T_12;
endmodule

