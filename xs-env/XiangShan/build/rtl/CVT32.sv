// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module CVT32(
  input         clock,
  input         reset,
  input         io_fire,
  input  [31:0] io_src,
  input  [7:0]  io_opType,
  input  [1:0]  io_sew,
  input  [2:0]  io_rm,
  output [31:0] io_result,
  output [4:0]  io_fflags
);

  wire         _subnor_rounder_io_inexact;
  wire         _subnor_rounder_io_r_up;
  wire         _nor_rounder_io_inexact;
  wire         _nor_rounder_io_r_up;
  wire [6:0]   _vfrec7Table_out;
  wire [6:0]   _vfrsqrt7Table_out;
  wire         _rounder_io_inexact;
  wire         _rounder_io_r_up;
  wire [3:0]   _subnor_shamt_clz_io_out;
  wire [11:0]  _shiftRightJam_1_io_out;
  wire         _shiftRightJam_1_io_sticky;
  wire [4:0]   _out_exp_fp32_clz_io_out;
  wire [3:0]   _out_exp_fp16_clz_io_out;
  wire [4:0]   _clz_fp32_clz_io_out;
  wire [3:0]   _clz_fp16_clz_io_out;
  wire [4:0]   _zero_minus_lzc_f32_clz_io_out;
  wire [3:0]   _zero_minus_lzc_f16_clz_io_out;
  wire [4:0]   _int2fp_clz_clz_1_io_out;
  wire [5:0]   _int2fp_clz_clz_io_out;
  wire [24:0]  _shiftRightJam_io_out;
  wire         _shiftRightJam_io_sticky;
  reg          fireReg_last_r;
  wire         is_sew_8 = io_sew == 2'h0;
  wire         is_sew_16 = io_sew == 2'h1;
  wire         is_sew_32 = io_sew == 2'h2;
  wire         is_single = io_opType[4:3] == 2'h0;
  wire         is_widen = io_opType[4:3] == 2'h1;
  wire         is_narrow = io_opType[4:3] == 2'h2;
  reg          is_widen_reg0;
  reg          is_narrow_reg0;
  wire         is_vfr = io_opType[5] & (is_sew_16 | is_sew_32);
  wire         _out_is_fp32_T = is_sew_32 & is_single;
  wire         _out_is_fp16_T = is_sew_16 & is_narrow;
  wire         _out_is_fp32_T_1 = is_sew_16 & is_widen;
  wire         _out_is_fp16_T_1 = is_sew_16 & is_single;
  wire         _in_is_fp16_T_3 = is_sew_8 & is_narrow;
  wire         is_fp2int =
    io_opType[7:6] == 2'h2
    & (_out_is_fp32_T | _out_is_fp16_T | _out_is_fp32_T_1 | _out_is_fp16_T_1
       | _in_is_fp16_T_3);
  wire         _out_is_fp16_T_3 = is_sew_8 & is_widen;
  wire         is_int2fp =
    io_opType[7:6] == 2'h1
    & (_out_is_fp32_T | _out_is_fp16_T | _out_is_fp32_T_1 | _out_is_fp16_T_1
       | _out_is_fp16_T_3);
  wire         is_fp2fp = io_opType[7:5] == 3'h6 & is_sew_16 & (is_narrow | is_widen);
  reg          is_fp2int_reg0;
  reg          is_int2fp_reg0;
  reg          is_fp2fp_reg0;
  wire         is_vfrsqrt7 = is_vfr & ~(io_opType[0]);
  wire         is_vfrec7 = is_vfr & io_opType[0];
  reg          is_vfrsqrt7_reg0;
  reg          is_vfrec7_reg0;
  reg          is_signed_int_reg0;
  reg  [31:0]  result0_reg1;
  reg  [4:0]   fflags0_reg1;
  reg  [2:0]   rm_reg0;
  reg          is_normal_reg0;
  reg          is_inf_reg0;
  reg          is_nan_reg0;
  reg          is_neginf_reg0;
  reg          is_neginf_negzero_reg0;
  reg          is_negzero_reg0;
  reg          is_poszero_reg0;
  reg          is_snan_reg0;
  reg          is_neg2_bplus1_b_reg0;
  reg          is_neg2_b_bminus1_reg0;
  reg          is_neg2_negbminus1_negzero_reg0;
  reg          is_pos2_poszero_negbminus1_reg0;
  reg          is_pos2_bminus1_b_reg0;
  reg          is_pos2_b_bplus1_reg0;
  reg  [9:0]   nor_in_reg0;
  reg          nor_roundBit_reg0;
  reg          nor_stickyBit_reg0;
  reg          nor_signBit_reg0;
  reg  [9:0]   subnor_in_reg0;
  reg          subnor_roundBit_reg0;
  reg          subnor_stickyBit_reg0;
  reg          subnor_signBit_reg0;
  reg          in_is_fp16_reg0;
  reg          in_is_fp32_reg0;
  reg          fp32toint32_reg0;
  reg          fp32toint16_reg0;
  reg          fp16toint32_reg0;
  reg          fp16toint16_reg0;
  reg          fp16toint8_reg0;
  reg          out_is_fp16_reg0;
  reg          out_is_fp32_reg0;
  reg          int32tofp32_reg0;
  reg          int16tofp32_reg0;
  reg          int32tofp16_reg0;
  reg          int16tofp16_reg0;
  reg          int8tofp16_reg0;
  wire         _out_is_fp16_T_6 = is_vfr & is_sew_16;
  wire         _in_is_fp16_T_7 =
    is_fp2int & (_out_is_fp32_T_1 | _out_is_fp16_T_1 | _in_is_fp16_T_3)
    | _out_is_fp16_T_6;
  wire         _out_is_fp32_T_4 = is_vfr & is_sew_32;
  wire         _in_is_fp32_T_5 =
    is_fp2int & (_out_is_fp32_T | _out_is_fp16_T) | _out_is_fp32_T_4;
  wire         _sel_lpath_T = is_fp2int & _in_is_fp32_T_5;
  wire         fp32toint32 = _sel_lpath_T & is_single;
  wire         fp32toint16 = _sel_lpath_T & is_narrow;
  wire         _sel_lpath_T_1 = is_fp2int & _in_is_fp16_T_7;
  wire         fp16toint32 = _sel_lpath_T_1 & is_widen;
  wire         fp16toint16 = _sel_lpath_T_1 & is_single;
  wire         fp16toint8 = _sel_lpath_T_1 & is_narrow;
  wire         _out_is_fp32_T_7 =
    is_int2fp & (_out_is_fp32_T | _out_is_fp32_T_1) | _out_is_fp32_T_4 | is_fp2fp
    & is_widen;
  wire         _out_is_fp16_T_9 =
    is_int2fp & (_out_is_fp16_T | _out_is_fp16_T_1 | _out_is_fp16_T_3) | _out_is_fp16_T_6
    | is_fp2fp & is_narrow;
  wire         _int16tofp32_T = is_int2fp & _out_is_fp32_T_7;
  wire         int32tofp32 = _int16tofp32_T & is_single;
  wire         int16tofp32 = _int16tofp32_T & is_widen;
  wire         _int8tofp16_T = is_int2fp & _out_is_fp16_T_9;
  wire         int32tofp16 = _int8tofp16_T & is_narrow;
  wire         int16tofp16 = _int8tofp16_T & is_single;
  wire         int8tofp16 = _int8tofp16_T & is_widen;
  wire         _in_sigNotZero_T = is_fp2fp & is_narrow;
  wire         _sigNotZero_T = is_fp2fp & is_widen;
  wire [31:0]  src =
    (_in_is_fp32_T_5 | is_vfr & is_sew_32 | _in_sigNotZero_T ? io_src : 32'h0)
    | (_in_is_fp16_T_7 | is_vfr & is_sew_16 | _sigNotZero_T
         ? {io_src[15], 3'h0, io_src[14:0], 13'h0}
         : 32'h0);
  wire         _sign_or_nan_T = fp32toint32 | fp32toint16;
  wire         _sign_or_nan_T_1 = fp16toint32 | fp16toint16;
  wire         exp_not_zero =
    _sign_or_nan_T & (|(src[30:23])) | (_sign_or_nan_T_1 | fp16toint8) & (|(src[27:23]));
  wire         _in_sext_T_3 = int32tofp32 | int32tofp16;
  wire         _in_sext_T_8 = int16tofp32 | int16tofp16;
  wire [32:0]  _in_sext_T_38 =
    (~(io_opType[0]) & _in_sext_T_3 ? {1'h0, io_src} : 33'h0)
    | (io_opType[0] & _in_sext_T_3 ? {io_src[31], io_src} : 33'h0)
    | (~(io_opType[0]) & _in_sext_T_8 ? {17'h0, io_src[15:0]} : 33'h0)
    | (io_opType[0] & _in_sext_T_8 ? {{17{io_src[15]}}, io_src[15:0]} : 33'h0)
    | (~(io_opType[0]) & int8tofp16 ? {25'h0, io_src[7:0]} : 33'h0)
    | (io_opType[0] & int8tofp16 ? {{25{io_src[7]}}, io_src[7:0]} : 33'h0);
  reg          in_orR_reg0;
  reg  [32:0]  in_reg0;
  wire [32:0]  _in_T_5 =
    (is_fp2int ? {src[31:24], src[23] | ~exp_not_zero, exp_not_zero, src[22:0]} : 33'h0)
    | (is_int2fp ? _in_sext_T_38 : 33'h0) | (is_vfr ? {1'h0, src} : 33'h0);
  reg          sign_reg0;
  wire         _sign_T_11 =
    (is_fp2int | is_int2fp) & _in_T_5[32] | is_vfr & _in_T_5[31] | _sigNotZero_T
    & src[31];
  wire [7:0]   exp =
    (is_fp2int ? _in_T_5[31:24] : 8'h0) | (is_vfr ? _in_T_5[30:23] : 8'h0);
  wire [23:0]  _sig_T_2 = is_fp2int ? _in_T_5[23:0] : 24'h0;
  wire [22:0]  _out_exp_fp32_T_13 = _sig_T_2[22:0] | (is_vfr ? _in_T_5[22:0] : 23'h0);
  wire [7:0]   _max_int_exp_T_10 =
    (fp32toint32 ? 8'h9E : 8'h0) | (fp32toint16 ? 8'h8E : 8'h0);
  wire [5:0]   _GEN = _max_int_exp_T_10[5:0] | (fp16toint32 ? 6'h2E : 6'h0);
  wire [7:0]   max_int_exp =
    {_max_int_exp_T_10[7:6],
     _GEN[5],
     _GEN[4:0] | (fp16toint16 ? 5'h1E : 5'h0) | (fp16toint8 ? 5'h16 : 5'h0)};
  reg  [31:0]  lpath_sig_shifted_reg0;
  reg          lpath_iv_reg0;
  wire         _lpath_of_T = fp32toint32 | fp16toint16;
  reg          lpath_of_reg0;
  reg  [24:0]  sig_cat0_reg;
  reg  [7:0]   rpath_shamt_reg0;
  wire [32:0]  in_abs =
    (is_int2fp & _sign_T_11 ? 33'(~_in_T_5 + 33'h1) : 33'h0)
    | (is_int2fp & ~_sign_T_11 ? _in_T_5 : 33'h0);
  reg  [32:0]  in_abs_reg0;
  reg          exp_of_reg0;
  wire         _exp_of_T_3 = exp > max_int_exp;
  wire         _exp_of_T_15 =
    _sel_lpath_T & _exp_of_T_3 | _sel_lpath_T_1 & (_exp_of_T_3 | (&(src[27:23])))
    | int32tofp16 & (|(in_abs[31:16]));
  reg  [5:0]   int2fp_clz_reg0;
  wire [94:0]  _GEN_0 = {63'h0, in_abs_reg0[31:0]};
  wire [94:0]  _GEN_1 = {89'h0, int2fp_clz_reg0};
  wire [94:0]  _in_shift_reg0_T_9 = _GEN_0 << _GEN_1;
  wire [94:0]  _in_shift_reg0_T_12 = _GEN_0 << _GEN_1;
  wire [30:0]  in_shift_reg0 =
    (out_is_fp32_reg0 | exp_of_reg0 ? _in_shift_reg0_T_9[30:0] : 31'h0)
    | (int32tofp16_reg0 & in_abs_reg0[31:16] == 16'h0 | int16tofp16_reg0 | int8tofp16_reg0
         ? {_in_shift_reg0_T_12[14:0], 16'h0}
         : 31'h0);
  wire         _of_reg0_T = is_int2fp_reg0 & out_is_fp32_reg0;
  wire [7:0]   _exp_raw_reg0_T_8 =
    _of_reg0_T ? 8'(8'h9E - {2'h0, int2fp_clz_reg0}) : 8'h0;
  wire         _sig_reg0_T = fp16toint16_reg0 | fp16toint32_reg0;
  wire         _cout_reg0_T_2 = int16tofp16_reg0 | int32tofp16_reg0;
  wire [23:0]  _round_in_reg0_T_10 =
    fp32toint32_reg0 ? _shiftRightJam_io_out[24:1] : 24'h0;
  wire [15:0]  _GEN_2 =
    _round_in_reg0_T_10[15:0] | (fp32toint16_reg0 ? _shiftRightJam_io_out[24:9] : 16'h0);
  wire [10:0]  _GEN_3 =
    _GEN_2[10:0] | (_sig_reg0_T ? _shiftRightJam_io_out[24:14] : 11'h0);
  wire [22:0]  _GEN_4 =
    {_round_in_reg0_T_10[22:16],
     {_GEN_2[15:11],
      _GEN_3[10:8],
      _GEN_3[7:0] | (fp16toint8_reg0 ? _shiftRightJam_io_out[24:17] : 8'h0)}
       | (int16tofp32_reg0 ? in_shift_reg0[30:15] : 16'h0)}
    | (int32tofp32_reg0 ? in_shift_reg0[30:8] : 23'h0);
  wire [9:0]   _cout_reg0_T_14 =
    {_GEN_4[9:8], _GEN_4[7:0] | (int8tofp16_reg0 ? in_shift_reg0[30:23] : 8'h0)}
    | (_cout_reg0_T_2 ? in_shift_reg0[30:21] : 10'h0);
  wire [23:0]  _round_in_reg0_T_24 =
    {_round_in_reg0_T_10[23], _GEN_4[22:10], _cout_reg0_T_14};
  wire         _out_reg0_T = is_fp2int_reg0 | is_int2fp_reg0;
  reg          sel_lpath_reg0;
  reg  [31:0]  max_min_int_reg0;
  wire         _zero_minus_lzc_f16_T = is_vfr & _in_is_fp16_T_7;
  wire         _zero_minus_lzc_f32_T = is_vfr & _in_is_fp32_T_5;
  wire         _is_normal_T_14 =
    _zero_minus_lzc_f16_T & (|(exp[4:0])) & exp[4:0] != 5'h1F | _zero_minus_lzc_f32_T
    & (|exp) & ~(&exp);
  wire         is_subnormal =
    _zero_minus_lzc_f16_T & exp[4:0] == 5'h0 | _zero_minus_lzc_f32_T & ~(|exp);
  wire         is_poszero_posinf =
    _zero_minus_lzc_f16_T & ~_sign_T_11
    & (_is_normal_T_14 | is_subnormal & (|(_out_exp_fp32_T_13[22:13])))
    | _zero_minus_lzc_f32_T & ~_sign_T_11
    & (_is_normal_T_14 | is_subnormal & (|_out_exp_fp32_T_13));
  wire [3:0]   zero_minus_lzc_f16 =
    _zero_minus_lzc_f16_T ? 4'(4'h0 - _zero_minus_lzc_f16_clz_io_out) : 4'h0;
  wire [4:0]   zero_minus_lzc_f32 =
    _zero_minus_lzc_f32_T ? 5'(5'h0 - _zero_minus_lzc_f32_clz_io_out) : 5'h0;
  reg  [4:0]   exp_normalized_5_reg0;
  reg  [7:0]   exp_normalized_8_reg0;
  wire         _out_sign_T = is_vfrsqrt7 & is_poszero_posinf;
  wire         _sig_normalized_24_T_2 = is_vfrec7 & _is_normal_T_14;
  wire [4:0]   _exp_normalized_5_T_17 =
    (_in_is_fp16_T_7 & (_out_sign_T & _is_normal_T_14 | _sig_normalized_24_T_2)
       ? exp[4:0]
       : 5'h0)
    | (_in_is_fp16_T_7 & (_out_sign_T & ~_is_normal_T_14 | is_vfrec7 & ~_is_normal_T_14)
         ? {zero_minus_lzc_f16[3], zero_minus_lzc_f16}
         : 5'h0);
  wire         _out_exp_fp32_T_2 = _in_is_fp32_T_5 & is_vfrsqrt7;
  wire [7:0]   _exp_normalized_8_T_18 =
    (_out_exp_fp32_T_2 & is_poszero_posinf & _is_normal_T_14 | _sig_normalized_24_T_2
       ? exp
       : 8'h0)
    | (_out_exp_fp32_T_2 & is_poszero_posinf & ~_is_normal_T_14 | is_vfrec7
       & ~_is_normal_T_14
         ? {{3{zero_minus_lzc_f32[4]}}, zero_minus_lzc_f32}
         : 8'h0);
  reg  [10:0]  sig_normalized_11_reg0;
  reg  [23:0]  sig_normalized_24_reg0;
  wire [10:0]  _sig_normalized_11_T_20 =
    (_in_is_fp16_T_7 & (_out_sign_T & _is_normal_T_14 | _sig_normalized_24_T_2)
       ? {1'h0, _out_exp_fp32_T_13[22:13]}
       : 11'h0)
    | (_in_is_fp16_T_7 & (_out_sign_T & ~_is_normal_T_14 | is_vfrec7 & ~_is_normal_T_14)
         ? {_out_exp_fp32_T_13[22:13], 1'h0}
         : 11'h0);
  wire [23:0]  _sig_normalized_24_T_18 =
    (_in_is_fp32_T_5 & (_out_sign_T & _is_normal_T_14 | _sig_normalized_24_T_2)
       ? {1'h0, _out_exp_fp32_T_13}
       : 24'h0)
    | (_in_is_fp32_T_5 & (_out_sign_T & ~_is_normal_T_14 | is_vfrec7 & ~_is_normal_T_14)
         ? {_out_exp_fp32_T_13, 1'h0}
         : 24'h0);
  reg  [3:0]   clz_fp16_reg0;
  reg  [7:0]   clz_fp32_reg0;
  wire         _out_exp_zero_negone_T = is_vfrec7 & _in_is_fp16_T_7;
  wire [4:0]   _out_exp_normalized_fp16_T_1 = 5'(5'h1D - _exp_normalized_5_T_17);
  wire [4:0]   out_exp_normalized_fp16 =
    _out_exp_zero_negone_T ? _out_exp_normalized_fp16_T_1 : 5'h0;
  wire         _out_exp_zero_negone_T_1 = is_vfrec7 & _in_is_fp32_T_5;
  wire [7:0]   _out_exp_normalized_fp32_T_1 = 8'(8'hFD - _exp_normalized_8_T_18);
  wire [7:0]   out_exp_normalized_fp32 =
    _out_exp_zero_negone_T_1 ? _out_exp_normalized_fp32_T_1 : 8'h0;
  reg          out_exp_zero_negone_reg0;
  wire         _out_exp_zero_negone_T_12 =
    _out_exp_zero_negone_T
    & (out_exp_normalized_fp16 == 5'h0 | (&out_exp_normalized_fp16))
    | _out_exp_zero_negone_T_1
    & (out_exp_normalized_fp32 == 8'h0 | (&out_exp_normalized_fp32));
  reg  [4:0]   out_exp_fp16_reg0;
  reg  [7:0]   out_exp_fp32_reg0;
  reg          out_sign_reg0;
  reg  [8:0]   down_exp_reg0;
  reg          may_be_subnor_reg0;
  reg  [4:0]   nor_of_exp_reg0;
  reg  [9:0]   nor_of_sig_reg0;
  reg          special_case_reg0;
  reg          fp2fp_iv_reg0;
  reg          in_isnan_neg_reg0;
  reg          in_sigNotZero_reg0;
  reg  [7:0]   nor_exp_reg0;
  reg  [9:0]   nor_sig_reg0;
  reg  [7:0]   subnor_exp_reg0;
  reg  [9:0]   subnor_sig_w_reg0;
  reg          isNaN_reg0;
  reg          expIsOnes_reg0;
  reg          expIsZero_reg0;
  reg          isSubnormal_reg0;
  reg          sigNotZero_reg0;
  wire [23:0]  _out_reg0_T_3 =
    _rounder_io_r_up
      ? 24'({_round_in_reg0_T_10[23], _GEN_4[22:10], _cout_reg0_T_14} + 24'h1)
      : _round_in_reg0_T_24;
  wire [23:0]  out_reg0 = _out_reg0_T ? _out_reg0_T_3 : 24'h0;
  wire         _int_reg0_T_1 = fp32toint32_reg0 | fp16toint32_reg0;
  wire         _int_reg0_T = fp32toint16_reg0 | fp16toint16_reg0;
  wire [14:0]  _rpath_neg_of_reg0_T_6 = {_GEN_4[14:10], _cout_reg0_T_14};
  wire         cout_reg0 =
    _rounder_io_r_up
    & (_int_reg0_T_1 & (&_round_in_reg0_T_24) | _int_reg0_T & (&_rpath_neg_of_reg0_T_6)
       | fp16toint8_reg0 & (&(_cout_reg0_T_14[6:0])) | int16tofp32_reg0
       & (&{_GEN_4[15:10], _cout_reg0_T_14}) | int32tofp32_reg0
       & (&{_GEN_4[22:10], _cout_reg0_T_14}) | int8tofp16_reg0 & (&(_cout_reg0_T_14[7:0]))
       | _cout_reg0_T_2 & (&_cout_reg0_T_14));
  wire [7:0]   exp_reg0 =
    is_int2fp_reg0 & in_orR_reg0
      ? 8'({_exp_raw_reg0_T_8[7:6],
            _exp_raw_reg0_T_8[5:0]
              | (is_int2fp_reg0 & out_is_fp16_reg0 ? 6'(6'h1E - int2fp_clz_reg0) : 6'h0)}
           + {7'h0, cout_reg0})
      : 8'h0;
  wire [31:0]  _sig_reg0_T_14 =
    (fp32toint32_reg0 ? {7'h0, cout_reg0, out_reg0} : 32'h0)
    | (fp32toint16_reg0 ? {8'h0, out_reg0} : 32'h0)
    | (_sig_reg0_T ? {20'h0, cout_reg0, out_reg0[10:0]} : 32'h0)
    | (fp16toint8_reg0 ? {21'h0, out_reg0[10:0]} : 32'h0);
  wire [23:0]  _GEN_5 =
    _sig_reg0_T_14[23:0] | (is_int2fp_reg0 & _out_reg0_T ? _out_reg0_T_3 : 24'h0);
  wire [31:0]  sig_reg0 = {_sig_reg0_T_14[31:24], _GEN_5};
  wire         _result1H_T_11 = in_is_fp16_reg0 & is_vfrsqrt7_reg0;
  wire         _result1H_T_36 = in_is_fp16_reg0 & is_vfrec7_reg0;
  wire         _result1H_T_45 = in_is_fp32_reg0 & is_vfrsqrt7_reg0;
  wire         _result1H_T_70 = in_is_fp32_reg0 & is_vfrec7_reg0;
  wire [25:0]  _GEN_6 = {15'h0, sig_normalized_11_reg0};
  wire [25:0]  _GEN_7 = {22'h0, is_normal_reg0 ? 4'h0 : clz_fp16_reg0};
  wire [25:0]  _sig_in7_T_6 = _GEN_6 << _GEN_7;
  wire [25:0]  _sig_in7_T_10 = _GEN_6 << _GEN_7;
  wire [278:0] _GEN_8 = {255'h0, sig_normalized_24_reg0};
  wire [278:0] _GEN_9 = {271'h0, is_normal_reg0 ? 8'h0 : clz_fp32_reg0};
  wire [278:0] _sig_in7_T_14 = _GEN_8 << _GEN_9;
  wire [278:0] _sig_in7_T_18 = _GEN_8 << _GEN_9;
  wire [6:0]   sig_in7 =
    (_result1H_T_11 ? {exp_normalized_5_reg0[0], _sig_in7_T_6[9:4]} : 7'h0)
    | (_result1H_T_36 ? _sig_in7_T_10[9:3] : 7'h0)
    | (_result1H_T_45 ? {exp_normalized_8_reg0[0], _sig_in7_T_14[22:17]} : 7'h0)
    | (_result1H_T_70 ? _sig_in7_T_18[22:16] : 7'h0);
  wire         _of_reg0_T_14 = exp_reg0 == 8'h1F;
  wire         of_reg0 =
    is_fp2int_reg0
    & (exp_of_reg0 | sel_lpath_reg0 & lpath_of_reg0 | ~sel_lpath_reg0
       & ((fp32toint16_reg0 | fp16toint8_reg0)
          & (is_fp2int_reg0 & in_reg0[32]
             & (fp32toint16_reg0 & in_reg0[31:24] == 8'h8E
                & ((|_rpath_neg_of_reg0_T_6) | _rounder_io_r_up) | fp16toint8_reg0
                & in_reg0[31:24] == 8'h16
                & ((|(_cout_reg0_T_14[6:0])) | _rounder_io_r_up)) | is_fp2int_reg0
             & ~(in_reg0[32])
             & (is_signed_int_reg0
                  ? fp32toint16_reg0
                    & (in_reg0[31:24] == 8'h8E | in_reg0[31:24] == 8'h8D & cout_reg0)
                    | fp16toint8_reg0
                    & (in_reg0[31:24] == 8'h16 | in_reg0[31:24] == 8'h15 & cout_reg0)
                  : fp32toint16_reg0 & in_reg0[31:24] == 8'h8E & cout_reg0
                    | fp16toint8_reg0 & in_reg0[31:24] == 8'h16 & cout_reg0))
          | (fp32toint32_reg0 | fp16toint16_reg0 | fp16toint32_reg0) & cout_reg0))
    | _of_reg0_T & (&exp_reg0) | is_int2fp_reg0 & int32tofp16_reg0
    & (exp_of_reg0 | _of_reg0_T_14) | is_int2fp_reg0 & ~out_is_fp32_reg0
    & ~int32tofp16_reg0 & _of_reg0_T_14;
  wire         iv_reg0 =
    is_fp2int_reg0
    & (of_reg0 | sel_lpath_reg0 & lpath_iv_reg0 | ~sel_lpath_reg0 & is_fp2int_reg0
       & ~is_signed_int_reg0 & in_reg0[32] & (|sig_reg0));
  wire         fp2fp_n_cout_reg0 = _nor_rounder_io_r_up & (&nor_in_reg0);
  wire         nor_of_reg0 =
    fp2fp_n_cout_reg0 ? $signed(down_exp_reg0) > 9'sh1D : $signed(down_exp_reg0) > 9'sh1E;
  wire         _fflags1H_T_25 = is_fp2fp_reg0 & is_narrow_reg0;
  wire         _fflags1H_T_8 = is_nan_reg0 | is_neginf_negzero_reg0;
  wire         _fflags1H_T_22 = is_vfrec7_reg0 & is_nan_reg0;
  wire         _fflags1H_T_5 = is_negzero_reg0 | is_poszero_reg0;
  wire         _result1H_T_54 = is_nan_reg0 | is_inf_reg0;
  wire         _fflags1H_T_26 = is_fp2fp_reg0 & is_widen_reg0;
  wire [23:0]  result1H =
    {_fflags1H_T_26,
     _fflags1H_T_25,
     _result1H_T_70 & is_pos2_poszero_negbminus1_reg0,
     _result1H_T_70 & is_neg2_negbminus1_negzero_reg0,
     _result1H_T_70 & _fflags1H_T_5,
     _result1H_T_70 & is_inf_reg0,
     in_is_fp32_reg0
       & (is_vfrsqrt7_reg0
          & ~(_fflags1H_T_8 | is_inf_reg0 | is_negzero_reg0 | is_poszero_reg0)
          | is_vfrec7_reg0
          & ~(_result1H_T_54 | is_negzero_reg0 | is_poszero_reg0
              | is_neg2_negbminus1_negzero_reg0 | is_pos2_poszero_negbminus1_reg0)),
     _result1H_T_45 & _fflags1H_T_5,
     _result1H_T_45 & is_inf_reg0,
     in_is_fp32_reg0 & (is_vfrsqrt7_reg0 & _fflags1H_T_8 | _fflags1H_T_22),
     _result1H_T_36 & is_pos2_poszero_negbminus1_reg0,
     _result1H_T_36 & is_neg2_negbminus1_negzero_reg0,
     _result1H_T_36 & _fflags1H_T_5,
     _result1H_T_36 & is_inf_reg0,
     in_is_fp16_reg0
       & (is_vfrsqrt7_reg0
          & ~(_fflags1H_T_8 | is_inf_reg0 | is_negzero_reg0 | is_poszero_reg0)
          | is_vfrec7_reg0
          & ~(_result1H_T_54 | is_negzero_reg0 | is_poszero_reg0
              | is_neg2_negbminus1_negzero_reg0 | is_pos2_poszero_negbminus1_reg0)),
     _result1H_T_11 & _fflags1H_T_5,
     _result1H_T_11 & is_inf_reg0,
     in_is_fp16_reg0 & (is_vfrsqrt7_reg0 & _fflags1H_T_8 | _fflags1H_T_22),
     int32tofp16_reg0 & ~of_reg0 | int16tofp16_reg0,
     int8tofp16_reg0,
     int32tofp16_reg0 & of_reg0,
     int16tofp32_reg0,
     int32tofp32_reg0,
     is_fp2int_reg0};
  wire [9:0]   fflags1H =
    {_fflags1H_T_26,
     _fflags1H_T_25,
     is_vfrec7_reg0 & (is_neg2_negbminus1_negzero_reg0 | is_pos2_poszero_negbminus1_reg0),
     _fflags1H_T_22,
     is_vfrsqrt7_reg0 & ~(_fflags1H_T_8 | is_inf_reg0 | is_negzero_reg0 | is_poszero_reg0)
       | is_vfrec7_reg0
       & (~(is_nan_reg0 | is_negzero_reg0 | is_poszero_reg0
            | is_neg2_negbminus1_negzero_reg0 | is_pos2_poszero_negbminus1_reg0)
          | is_inf_reg0),
     is_vfrsqrt7_reg0 & _fflags1H_T_5 | is_vfrec7_reg0 & _fflags1H_T_5,
     is_vfrsqrt7_reg0 & is_inf_reg0,
     is_vfrsqrt7_reg0 & _fflags1H_T_8,
     is_int2fp_reg0,
     is_fp2int_reg0};
  wire         _min_int_T = fp32toint32 | fp16toint32;
  wire         _min_int_T_1 = fp32toint16 | fp16toint16;
  wire [31:0]  _max_int_T_11 = _min_int_T ? {~(io_opType[0]), 31'h7FFFFFFF} : 32'h0;
  wire [15:0]  _GEN_10 =
    _max_int_T_11[15:0] | (_min_int_T_1 ? {~(io_opType[0]), 15'h7FFF} : 16'h0);
  wire [31:0]  _min_int_T_5 = _min_int_T ? {io_opType[0], 31'h0} : 32'h0;
  wire [15:0]  _GEN_11 =
    _min_int_T_5[15:0] | (_min_int_T_1 ? {io_opType[0], 15'h0} : 16'h0);
  wire         _is_inf_T_16 =
    _zero_minus_lzc_f16_T & (&(exp[4:0])) & _out_exp_fp32_T_13[22:13] == 10'h0
    | _zero_minus_lzc_f32_T & (&exp) & _out_exp_fp32_T_13 == 23'h0;
  wire         _is_nan_T_14 =
    _zero_minus_lzc_f16_T & (&(exp[4:0])) & (|(_out_exp_fp32_T_13[22:13]))
    | _zero_minus_lzc_f32_T & (&exp) & (|_out_exp_fp32_T_13);
  wire         _is_negzero_T_8 = _sign_T_11 & is_subnormal;
  wire         _is_pos2_b_bplus1_T_7 = exp == 8'hFE;
  wire         _is_pos2_bminus1_b_T_7 = exp == 8'hFD;
  wire         _out_exp_fp16_T_2 = _in_is_fp16_T_7 & is_vfrsqrt7;
  wire [5:0]   _out_exp_fp16_T_16 = 6'({2'h0, _out_exp_fp16_clz_io_out} - 6'h14);
  wire [5:0]   _out_exp_fp16_T_11 = 6'(6'h2C - {1'h0, exp[4:0]});
  wire [8:0]   _out_exp_fp32_T_14 = 9'({4'h0, _out_exp_fp32_clz_io_out} - 9'h84);
  wire [8:0]   _out_exp_fp32_T_10 = 9'(9'h17C - {1'h0, exp});
  wire [6:0]   _sig_out7_reg0_T_2 =
    (is_vfrsqrt7_reg0 ? _vfrsqrt7Table_out : 7'h0)
    | (is_vfrec7_reg0 ? _vfrec7Table_out : 7'h0);
  wire         _out_sig_23_reg0_T_10 = is_neg2_bplus1_b_reg0 | is_pos2_b_bplus1_reg0;
  wire         _out_sig_23_reg0_T_6 = is_neg2_b_bminus1_reg0 | is_pos2_bminus1_b_reg0;
  wire [9:0]   _out_sig_10_reg0_T_27 =
    (_result1H_T_36 & out_exp_zero_negone_reg0 & _out_sig_23_reg0_T_10
       ? {2'h1, _sig_out7_reg0_T_2, 1'h0}
       : 10'h0)
    | (_result1H_T_36 & out_exp_zero_negone_reg0 & _out_sig_23_reg0_T_6
         ? {1'h1, _sig_out7_reg0_T_2, 2'h0}
         : 10'h0);
  wire [22:0]  _out_sig_23_reg0_T_27 =
    (_result1H_T_70 & out_exp_zero_negone_reg0 & _out_sig_23_reg0_T_10
       ? {2'h1, _sig_out7_reg0_T_2, 14'h0}
       : 23'h0)
    | (_result1H_T_70 & out_exp_zero_negone_reg0 & _out_sig_23_reg0_T_6
         ? {1'h1, _sig_out7_reg0_T_2, 15'h0}
         : 23'h0);
  wire         _result0_T_52 = rm_reg0 == 3'h1;
  wire         _result0_T_51 = rm_reg0 == 3'h2;
  wire         _result0_T_45 = rm_reg0 == 3'h3;
  wire [31:0]  int_abs_reg0 =
    (is_fp2int_reg0 & sel_lpath_reg0 ? lpath_sig_shifted_reg0 : 32'h0)
    | (is_fp2int_reg0 & ~sel_lpath_reg0 ? sig_reg0 : 32'h0);
  wire [31:0]  _int_reg0_T_27 =
    {16'h0,
     _int_reg0_T
       ? (in_reg0[32] & is_signed_int_reg0
            ? 16'(16'h0 - int_abs_reg0[15:0])
            : int_abs_reg0[15:0])
       : 16'h0}
    | (_int_reg0_T_1
         ? (in_reg0[32] & is_signed_int_reg0 ? 32'(32'h0 - int_abs_reg0) : int_abs_reg0)
         : 32'h0);
  wire         _GEN_12 = may_be_subnor_reg0 | nor_of_reg0;
  wire [4:0]   _common_exp_T_9 =
    (~may_be_subnor_reg0 & nor_of_reg0 ? nor_of_exp_reg0 : 5'h0)
    | (_GEN_12
         ? 5'h0
         : fp2fp_n_cout_reg0 ? 5'(down_exp_reg0[4:0] + 5'h1) : down_exp_reg0[4:0]);
  wire         _GEN_13 = expIsOnes_reg0 | expIsZero_reg0;
  wire [31:0]  _result0_T_142 =
    (result1H[0]
       ? (iv_reg0
            ? max_min_int_reg0
            : {_int_reg0_T_27[31:8],
               _int_reg0_T_27[7:0]
                 | (fp16toint8_reg0
                      ? (in_reg0[32] & is_signed_int_reg0
                           ? 8'(8'h0 - int_abs_reg0[7:0])
                           : int_abs_reg0[7:0])
                      : 8'h0)})
       : 32'h0) | (result1H[1] ? {sign_reg0, exp_reg0, _GEN_5[22:0]} : 32'h0)
    | (result1H[2] ? {sign_reg0, exp_reg0, _GEN_5[15:0], 7'h0} : 32'h0);
  wire [31:0]  _result0_T_161 =
    (result1H[14] ? 32'h7FC00000 : 32'h0)
    | (result1H[15] & is_neginf_reg0 ? 32'h7FC00000 : 32'h0)
    | (result1H[16] ? {is_negzero_reg0, 31'h7F800000} : 32'h0)
    | (result1H[17]
         ? (_result1H_T_45
              ? {out_sign_reg0, out_exp_fp32_reg0, _sig_out7_reg0_T_2, 16'h0}
              : 32'h0)
           | (_result1H_T_70
                ? {sign_reg0,
                   out_exp_fp32_reg0,
                   {_out_sig_23_reg0_T_27[22],
                    _out_sig_23_reg0_T_27[21:0]
                      | (_result1H_T_70 & out_exp_zero_negone_reg0
                         & ~(_out_sig_23_reg0_T_10 | is_neg2_b_bminus1_reg0
                             | is_pos2_bminus1_b_reg0)
                           ? {1'h1, _sig_out7_reg0_T_2, 14'h0}
                           : 22'h0)}
                     | (_result1H_T_70 & ~out_exp_zero_negone_reg0
                          ? {_sig_out7_reg0_T_2, 16'h0}
                          : 23'h0)}
                : 32'h0)
         : 32'h0)
    | {_result0_T_142[31] | result1H[18] & is_neginf_reg0,
       _result0_T_142[30:16],
       _result0_T_142[15:0]
         | (result1H[3]
              ? {sign_reg0,
                 _result0_T_52 | _result0_T_51 & ~sign_reg0 | _result0_T_45 & sign_reg0
                   ? 15'h7BFF
                   : 15'h7C00}
              : 16'h0)
         | (result1H[4] ? {sign_reg0, exp_reg0[4:0], _GEN_5[7:0], 2'h0} : 16'h0)
         | (result1H[5] ? {sign_reg0, exp_reg0[4:0], _GEN_5[9:0]} : 16'h0)
         | (result1H[6] ? 16'h7E00 : 16'h0)
         | (result1H[7] & is_neginf_reg0 ? 16'h7E00 : 16'h0)
         | (result1H[8] ? {is_negzero_reg0, 15'h7C00} : 16'h0)
         | (result1H[9]
              ? (_result1H_T_11
                   ? {out_sign_reg0, out_exp_fp16_reg0, _sig_out7_reg0_T_2, 3'h0}
                   : 16'h0)
                | (_result1H_T_36
                     ? {sign_reg0,
                        out_exp_fp16_reg0,
                        {_out_sig_10_reg0_T_27[9],
                         _out_sig_10_reg0_T_27[8:0]
                           | (_result1H_T_36 & out_exp_zero_negone_reg0
                              & ~(_out_sig_23_reg0_T_10 | is_neg2_b_bminus1_reg0
                                  | is_pos2_bminus1_b_reg0)
                                ? {1'h1, _sig_out7_reg0_T_2, 1'h0}
                                : 9'h0)}
                          | (_result1H_T_36 & ~out_exp_zero_negone_reg0
                               ? {_sig_out7_reg0_T_2, 3'h0}
                               : 10'h0)}
                     : 16'h0)
              : 16'h0) | {result1H[10] & is_neginf_reg0, 15'h0}
         | (result1H[11] ? {is_negzero_reg0, 15'h7C00} : 16'h0)
         | (result1H[12] ? (_result0_T_45 | _result0_T_52 ? 16'hFBFF : 16'hFC00) : 16'h0)
         | (result1H[13] ? (_result0_T_51 | _result0_T_52 ? 16'h7BFF : 16'h7C00) : 16'h0)}
    | (result1H[19] ? {is_negzero_reg0, 31'h7F800000} : 32'h0)
    | (result1H[20]
         ? (_result0_T_45 | _result0_T_52 ? 32'hFF7FFFFF : 32'hFF800000)
         : 32'h0)
    | (result1H[21]
         ? (_result0_T_51 | _result0_T_52 ? 32'h7F7FFFFF : 32'h7F800000)
         : 32'h0);
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      fireReg_last_r <= 1'h0;
      is_fp2int_reg0 <= 1'h0;
      is_int2fp_reg0 <= 1'h0;
      is_fp2fp_reg0 <= 1'h0;
      is_vfrsqrt7_reg0 <= 1'h0;
      is_vfrec7_reg0 <= 1'h0;
      is_signed_int_reg0 <= 1'h0;
      result0_reg1 <= 32'h0;
      is_normal_reg0 <= 1'h0;
      is_inf_reg0 <= 1'h0;
      is_nan_reg0 <= 1'h0;
      is_neginf_reg0 <= 1'h0;
      is_neginf_negzero_reg0 <= 1'h0;
      is_negzero_reg0 <= 1'h0;
      is_poszero_reg0 <= 1'h0;
      is_snan_reg0 <= 1'h0;
      is_neg2_bplus1_b_reg0 <= 1'h0;
      is_neg2_b_bminus1_reg0 <= 1'h0;
      is_neg2_negbminus1_negzero_reg0 <= 1'h0;
      is_pos2_poszero_negbminus1_reg0 <= 1'h0;
      is_pos2_bminus1_b_reg0 <= 1'h0;
      is_pos2_b_bplus1_reg0 <= 1'h0;
      in_orR_reg0 <= 1'h0;
      in_reg0 <= 33'h0;
      sign_reg0 <= 1'h0;
      lpath_iv_reg0 <= 1'h0;
      exp_of_reg0 <= 1'h0;
      max_min_int_reg0 <= 32'h0;
      out_exp_fp16_reg0 <= 5'h0;
      out_exp_fp32_reg0 <= 8'h0;
    end
    else begin
      if (io_fire | fireReg_last_r)
        fireReg_last_r <= io_fire;
      if (io_fire) begin
        is_fp2int_reg0 <= is_fp2int;
        is_int2fp_reg0 <= is_int2fp;
        is_fp2fp_reg0 <= is_fp2fp;
        is_vfrsqrt7_reg0 <= is_vfrsqrt7;
        is_vfrec7_reg0 <= is_vfrec7;
        is_signed_int_reg0 <= io_opType[0];
        is_normal_reg0 <= _is_normal_T_14;
        is_inf_reg0 <= _is_inf_T_16;
        is_nan_reg0 <= _is_nan_T_14;
        is_neginf_reg0 <= is_vfr & _sign_T_11 & _is_inf_T_16;
        is_neginf_negzero_reg0 <=
          _zero_minus_lzc_f16_T & _sign_T_11
          & (_is_normal_T_14 | is_subnormal & (|(_out_exp_fp32_T_13[22:13])))
          | _zero_minus_lzc_f32_T & _sign_T_11
          & (_is_normal_T_14 | is_subnormal & (|_out_exp_fp32_T_13));
        is_negzero_reg0 <=
          _zero_minus_lzc_f16_T & _is_negzero_T_8 & _out_exp_fp32_T_13[22:13] == 10'h0
          | _zero_minus_lzc_f32_T & _is_negzero_T_8 & _out_exp_fp32_T_13 == 23'h0;
        is_poszero_reg0 <=
          _zero_minus_lzc_f16_T & ~_sign_T_11 & is_subnormal
          & _out_exp_fp32_T_13[22:13] == 10'h0 | _zero_minus_lzc_f32_T & ~_sign_T_11
          & is_subnormal & _out_exp_fp32_T_13 == 23'h0;
        is_snan_reg0 <=
          is_vfr & ~(_out_exp_fp32_T_13[22]) & _is_nan_T_14 | _sigNotZero_T
          & (&(src[27:23])) & (|(src[22:13])) & ~(src[22]);
        is_neg2_bplus1_b_reg0 <=
          _zero_minus_lzc_f16_T & _sign_T_11 & exp[4:0] == 5'h1E | _zero_minus_lzc_f32_T
          & _sign_T_11 & _is_pos2_b_bplus1_T_7;
        is_neg2_b_bminus1_reg0 <=
          _zero_minus_lzc_f16_T & _sign_T_11 & exp[4:0] == 5'h1D | _zero_minus_lzc_f32_T
          & _sign_T_11 & _is_pos2_bminus1_b_T_7;
        is_neg2_negbminus1_negzero_reg0 <=
          _zero_minus_lzc_f16_T & _sign_T_11 & _out_exp_fp32_T_13[22:21] == 2'h0
          & is_subnormal & (|(_out_exp_fp32_T_13[22:13])) | _zero_minus_lzc_f32_T
          & _sign_T_11 & _out_exp_fp32_T_13[22:21] == 2'h0 & is_subnormal
          & (|_out_exp_fp32_T_13);
        is_pos2_poszero_negbminus1_reg0 <=
          _zero_minus_lzc_f16_T & ~_sign_T_11 & _out_exp_fp32_T_13[22:21] == 2'h0
          & is_subnormal & (|(_out_exp_fp32_T_13[22:13])) | _zero_minus_lzc_f32_T
          & ~_sign_T_11 & _out_exp_fp32_T_13[22:21] == 2'h0 & is_subnormal
          & (|_out_exp_fp32_T_13);
        is_pos2_bminus1_b_reg0 <=
          _zero_minus_lzc_f16_T & ~_sign_T_11 & exp[4:0] == 5'h1D | _zero_minus_lzc_f32_T
          & ~_sign_T_11 & _is_pos2_bminus1_b_T_7;
        is_pos2_b_bplus1_reg0 <=
          _zero_minus_lzc_f16_T & ~_sign_T_11 & exp[4:0] == 5'h1E | _zero_minus_lzc_f32_T
          & ~_sign_T_11 & _is_pos2_b_bplus1_T_7;
        in_orR_reg0 <= |_in_sext_T_38;
        in_reg0 <= _in_T_5;
        sign_reg0 <= _sign_T_11;
        lpath_iv_reg0 <= (_lpath_of_T | fp16toint32) & ~(io_opType[0]) & _sign_T_11;
        exp_of_reg0 <= _exp_of_T_15;
        max_min_int_reg0 <=
          _sign_or_nan_T & (&(src[30:23])) & (|(src[22:0]))
          | (_sign_or_nan_T_1 | fp16toint8) & (&(src[27:23])) & (|(src[22:0]))
          | ~_sign_T_11
            ? {_max_int_T_11[31:16],
               _GEN_10[15:8],
               _GEN_10[7:0] | (fp16toint8 ? {~(io_opType[0]), 7'h7F} : 8'h0)}
            : {_min_int_T_5[31:16],
               _GEN_11[15:8],
               _GEN_11[7:0] | (fp16toint8 ? {io_opType[0], 7'h0} : 8'h0)};
        out_exp_fp16_reg0 <=
          (_out_exp_fp16_T_2 & _is_normal_T_14 ? _out_exp_fp16_T_11[5:1] : 5'h0)
          | (_out_exp_fp16_T_2 & ~_is_normal_T_14 ? _out_exp_fp16_T_16[5:1] : 5'h0)
          | (_in_is_fp16_T_7 & is_vfrec7 & ~_out_exp_zero_negone_T_12
             & _out_exp_zero_negone_T
               ? _out_exp_normalized_fp16_T_1
               : 5'h0);
        out_exp_fp32_reg0 <=
          (_out_exp_fp32_T_2 & _is_normal_T_14 ? _out_exp_fp32_T_10[8:1] : 8'h0)
          | (_out_exp_fp32_T_2 & ~_is_normal_T_14 ? _out_exp_fp32_T_14[8:1] : 8'h0)
          | (_in_is_fp32_T_5 & is_vfrec7 & ~_out_exp_zero_negone_T_12
             & _out_exp_zero_negone_T_1
               ? _out_exp_normalized_fp32_T_1
               : 8'h0);
      end
      if (fireReg_last_r)
        result0_reg1 <=
          {_result0_T_161[31:16],
           _result0_T_161[15:0]
             | (result1H[22]
                  ? {in_isnan_neg_reg0,
                     {5{special_case_reg0}}
                       | (special_case_reg0
                            ? 5'h0
                            : {_common_exp_T_9[4:1],
                               _common_exp_T_9[0] | may_be_subnor_reg0
                                 & _subnor_rounder_io_r_up & (&subnor_in_reg0)}),
                     (special_case_reg0 ? {in_sigNotZero_reg0, 9'h0} : 10'h0)
                       | (special_case_reg0
                            ? 10'h0
                            : (~may_be_subnor_reg0 & nor_of_reg0
                                 ? nor_of_sig_reg0
                                 : 10'h0)
                              | (_GEN_12
                                   ? 10'h0
                                   : _nor_rounder_io_r_up
                                       ? 10'(nor_in_reg0 + 10'h1)
                                       : nor_in_reg0)
                              | (may_be_subnor_reg0
                                   ? (_subnor_rounder_io_r_up
                                        ? 10'(subnor_in_reg0 + 10'h1)
                                        : subnor_in_reg0)
                                   : 10'h0))}
                  : 16'h0)}
          | (result1H[23]
               ? {~isNaN_reg0 & sign_reg0,
                  {8{expIsOnes_reg0}} | (isSubnormal_reg0 ? subnor_exp_reg0 : 8'h0)
                    | (_GEN_13 ? 8'h0 : nor_exp_reg0),
                  (expIsOnes_reg0 ? {sigNotZero_reg0, 22'h0} : 23'h0)
                    | (expIsZero_reg0 ? {subnor_sig_w_reg0, 13'h0} : 23'h0)
                    | (_GEN_13 ? 23'h0 : {nor_sig_reg0, 13'h0})}
               : 32'h0);
    end
  end // always @(posedge, posedge)
  wire         _rpath_shamt_T = fp16toint16 | fp16toint32;
  wire [54:0]  _GEN_14 = {31'h0, _sig_T_2[23], _out_exp_fp32_T_13};
  wire [54:0]  _GEN_15 =
    {50'h0,
     5'(exp[4:0] - ((fp32toint32 ? 5'h16 : 5'h0) | (_rpath_shamt_T ? 5'h19 : 5'h0)))};
  wire [54:0]  _lpath_sig_shifted_T_2 = _GEN_14 << _GEN_15;
  wire [31:0]  _lpath_sig_shifted_T_7 =
    fp32toint32 ? _lpath_sig_shifted_T_2[31:0] : 32'h0;
  wire [7:0]   _rpath_shamt_T_5 =
    (fp32toint32 ? 8'h96 : 8'h0) | (fp32toint16 ? 8'h8E : 8'h0);
  wire [5:0]   _int2fp_clz_T_10 =
    _out_is_fp32_T_7 | _exp_of_T_15 ? _int2fp_clz_clz_io_out : 6'h0;
  wire [8:0]   down_exp = 9'({1'h0, src[30:23]} - 9'h70);
  wire         rmin =
    _in_sigNotZero_T
    & (io_rm == 3'h1 | io_rm == 3'h2 & ~(src[31]) | io_rm == 3'h3 & src[31]);
  wire [54:0]  _lpath_sig_shifted_T_5 = _GEN_14 << _GEN_15;
  wire [24:0]  _subnor_sig_w_T_1 = {15'h0, src[22:13]} << _subnor_shamt_clz_io_out;
  wire         ix_reg0 =
    is_fp2int_reg0 & ~iv_reg0 & ~sel_lpath_reg0
    & (is_fp2int_reg0 & ~fp16toint8_reg0 & _rounder_io_inexact | is_fp2int_reg0
       & fp16toint8_reg0 & (_rounder_io_inexact | (|(_shiftRightJam_io_out[7:0]))))
    | is_int2fp_reg0 & (out_is_fp32_reg0 | int16tofp16_reg0 | int8tofp16_reg0)
    & _rounder_io_inexact | int32tofp16_reg0 & (exp_of_reg0 | _rounder_io_inexact);
  wire [4:0]   _fflags0_T_31 =
    (fflags1H[0] ? {iv_reg0, 3'h0, ix_reg0} : 5'h0)
    | (fflags1H[1] ? {2'h0, of_reg0, 1'h0, ix_reg0} : 5'h0)
    | {fflags1H[2] & (is_snan_reg0 | is_neginf_negzero_reg0) | fflags1H[3]
         & is_neginf_reg0,
       4'h0};
  wire [3:0]   _GEN_16 = _fflags0_T_31[3:0] | {fflags1H[4], 3'h0};
  always @(posedge clock) begin
    if (io_fire) begin
      is_widen_reg0 <= is_widen;
      is_narrow_reg0 <= is_narrow;
      rm_reg0 <= io_rm;
      nor_in_reg0 <= src[22:13];
      nor_roundBit_reg0 <= src[12];
      nor_stickyBit_reg0 <= |(src[11:0]);
      nor_signBit_reg0 <= src[31];
      subnor_in_reg0 <= _shiftRightJam_1_io_out[10:1];
      subnor_roundBit_reg0 <= _shiftRightJam_1_io_out[0];
      subnor_stickyBit_reg0 <= _shiftRightJam_1_io_sticky | (|(src[11:0]));
      subnor_signBit_reg0 <= src[31];
      in_is_fp16_reg0 <= _in_is_fp16_T_7;
      in_is_fp32_reg0 <= _in_is_fp32_T_5;
      fp32toint32_reg0 <= fp32toint32;
      fp32toint16_reg0 <= fp32toint16;
      fp16toint32_reg0 <= fp16toint32;
      fp16toint16_reg0 <= fp16toint16;
      fp16toint8_reg0 <= fp16toint8;
      out_is_fp16_reg0 <= _out_is_fp16_T_9;
      out_is_fp32_reg0 <= _out_is_fp32_T_7;
      int32tofp32_reg0 <= int32tofp32;
      int16tofp32_reg0 <= int16tofp32;
      int32tofp16_reg0 <= int32tofp16;
      int16tofp16_reg0 <= int16tofp16;
      int8tofp16_reg0 <= int8tofp16;
      lpath_sig_shifted_reg0 <=
        {_lpath_sig_shifted_T_7[31:19],
         _lpath_sig_shifted_T_7[18:0]
           | (_rpath_shamt_T ? _lpath_sig_shifted_T_5[31:13] : 19'h0)};
      lpath_of_reg0 <=
        (_lpath_of_T | fp16toint32) & io_opType[0] & exp == max_int_exp
        & (~_sign_T_11 | _sign_T_11 & (|(_in_T_5[22:0])));
      sig_cat0_reg <= {_sig_T_2[23], _out_exp_fp32_T_13, 1'h0};
      rpath_shamt_reg0 <=
        8'({_rpath_shamt_T_5[7:5],
            _rpath_shamt_T_5[4:0] | (_rpath_shamt_T ? 5'h19 : 5'h0)
              | (fp16toint8 ? 5'h16 : 5'h0)} - exp);
      in_abs_reg0 <= in_abs;
      int2fp_clz_reg0 <=
        {_int2fp_clz_T_10[5],
         _int2fp_clz_T_10[4:0]
           | (int32tofp16 & in_abs[31:16] == 16'h0 | int16tofp16 | int8tofp16
                ? _int2fp_clz_clz_1_io_out
                : 5'h0)};
      sel_lpath_reg0 <=
        exp >= {_sel_lpath_T,
                2'h0,
                (_sel_lpath_T ? 5'h16 : 5'h0) | (_sel_lpath_T_1 ? 5'h19 : 5'h0)};
      exp_normalized_5_reg0 <= _exp_normalized_5_T_17;
      exp_normalized_8_reg0 <= _exp_normalized_8_T_18;
      sig_normalized_11_reg0 <= _sig_normalized_11_T_20;
      sig_normalized_24_reg0 <= _sig_normalized_24_T_18;
      clz_fp16_reg0 <= _in_is_fp16_T_7 & is_vfr ? _clz_fp16_clz_io_out : 4'h0;
      clz_fp32_reg0 <= {3'h0, _in_is_fp32_T_5 & is_vfr ? _clz_fp32_clz_io_out : 5'h0};
      out_exp_zero_negone_reg0 <= _out_exp_zero_negone_T_12;
      out_sign_reg0 <= _out_sign_T & _sign_T_11;
      down_exp_reg0 <= down_exp;
      may_be_subnor_reg0 <= $signed(down_exp) < 9'sh1;
      nor_of_exp_reg0 <= {4'hF, ~(rmin | io_opType[0])};
      nor_of_sig_reg0 <= {10{rmin | io_opType[0]}};
      special_case_reg0 <= _in_sigNotZero_T & (&(src[30:23]));
      fp2fp_iv_reg0 <= _in_sigNotZero_T & (&(src[30:23])) & (|(src[22:0])) & ~(src[22]);
      in_isnan_neg_reg0 <=
        _in_sigNotZero_T & ~((&(src[30:23])) & (|(src[22:0]))) & src[31];
      in_sigNotZero_reg0 <= _in_sigNotZero_T & (|(src[22:0]));
      nor_exp_reg0 <= _sigNotZero_T ? 8'(src[30:23] + 8'h70) : 8'h0;
      nor_sig_reg0 <= _sigNotZero_T ? src[22:13] : 10'h0;
      subnor_exp_reg0 <= 8'(8'h70 - {4'h0, _subnor_shamt_clz_io_out});
      subnor_sig_w_reg0 <= {_subnor_sig_w_T_1[8:0], 1'h0};
      isNaN_reg0 <= _sigNotZero_T & (&(src[27:23])) & (|(src[22:13]));
      expIsOnes_reg0 <= _sigNotZero_T & (&(src[27:23]));
      expIsZero_reg0 <= _sigNotZero_T & src[27:23] == 5'h0;
      isSubnormal_reg0 <= _sigNotZero_T & src[27:23] == 5'h0 & (|(src[22:13]));
      sigNotZero_reg0 <= _sigNotZero_T & (|(src[22:13]));
    end
    if (fireReg_last_r)
      fflags0_reg1 <=
        {_fflags0_T_31[4] | fflags1H[6] & is_snan_reg0,
         _GEN_16[3],
         _GEN_16[2:0] | (fflags1H[7] ? 3'h5 : 3'h0)}
        | (fflags1H[8]
             ? {fp2fp_iv_reg0,
                1'h0,
                _fflags1H_T_25 & ~special_case_reg0 & nor_of_reg0,
                _fflags1H_T_25 & ~special_case_reg0 & may_be_subnor_reg0
                  & _subnor_rounder_io_inexact
                  & (fp2fp_n_cout_reg0
                       ? $signed(down_exp_reg0) < 9'sh0
                       : $signed(down_exp_reg0) < 9'sh1),
                _fflags1H_T_25 & ~special_case_reg0
                  & (~may_be_subnor_reg0 & (nor_of_reg0 | _nor_rounder_io_inexact)
                     | may_be_subnor_reg0 & _subnor_rounder_io_inexact)}
             : 5'h0) | (fflags1H[9] ? {is_snan_reg0, 4'h0} : 5'h0);
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:13];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [3:0] i = 4'h0; i < 4'hE; i += 4'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        fireReg_last_r = _RANDOM[4'h0][0];
        is_widen_reg0 = _RANDOM[4'h0][2];
        is_narrow_reg0 = _RANDOM[4'h0][3];
        is_fp2int_reg0 = _RANDOM[4'h0][5];
        is_int2fp_reg0 = _RANDOM[4'h0][6];
        is_fp2fp_reg0 = _RANDOM[4'h0][7];
        is_vfrsqrt7_reg0 = _RANDOM[4'h0][8];
        is_vfrec7_reg0 = _RANDOM[4'h0][9];
        is_signed_int_reg0 = _RANDOM[4'h0][10];
        result0_reg1 = {_RANDOM[4'h0][31:11], _RANDOM[4'h1][10:0]};
        fflags0_reg1 = _RANDOM[4'h1][15:11];
        rm_reg0 = _RANDOM[4'h1][18:16];
        is_normal_reg0 = _RANDOM[4'h1][19];
        is_inf_reg0 = _RANDOM[4'h1][20];
        is_nan_reg0 = _RANDOM[4'h1][21];
        is_neginf_reg0 = _RANDOM[4'h1][22];
        is_neginf_negzero_reg0 = _RANDOM[4'h1][23];
        is_negzero_reg0 = _RANDOM[4'h1][24];
        is_poszero_reg0 = _RANDOM[4'h1][25];
        is_snan_reg0 = _RANDOM[4'h1][26];
        is_neg2_bplus1_b_reg0 = _RANDOM[4'h1][27];
        is_neg2_b_bminus1_reg0 = _RANDOM[4'h1][28];
        is_neg2_negbminus1_negzero_reg0 = _RANDOM[4'h1][29];
        is_pos2_poszero_negbminus1_reg0 = _RANDOM[4'h1][30];
        is_pos2_bminus1_b_reg0 = _RANDOM[4'h1][31];
        is_pos2_b_bplus1_reg0 = _RANDOM[4'h2][0];
        nor_in_reg0 = _RANDOM[4'h2][10:1];
        nor_roundBit_reg0 = _RANDOM[4'h2][11];
        nor_stickyBit_reg0 = _RANDOM[4'h2][12];
        nor_signBit_reg0 = _RANDOM[4'h2][13];
        subnor_in_reg0 = _RANDOM[4'h2][23:14];
        subnor_roundBit_reg0 = _RANDOM[4'h2][24];
        subnor_stickyBit_reg0 = _RANDOM[4'h2][25];
        subnor_signBit_reg0 = _RANDOM[4'h2][26];
        in_is_fp16_reg0 = _RANDOM[4'h2][27];
        in_is_fp32_reg0 = _RANDOM[4'h2][28];
        fp32toint32_reg0 = _RANDOM[4'h2][29];
        fp32toint16_reg0 = _RANDOM[4'h2][30];
        fp16toint32_reg0 = _RANDOM[4'h2][31];
        fp16toint16_reg0 = _RANDOM[4'h3][0];
        fp16toint8_reg0 = _RANDOM[4'h3][1];
        out_is_fp16_reg0 = _RANDOM[4'h3][2];
        out_is_fp32_reg0 = _RANDOM[4'h3][3];
        int32tofp32_reg0 = _RANDOM[4'h3][4];
        int16tofp32_reg0 = _RANDOM[4'h3][5];
        int32tofp16_reg0 = _RANDOM[4'h3][6];
        int16tofp16_reg0 = _RANDOM[4'h3][7];
        int8tofp16_reg0 = _RANDOM[4'h3][8];
        in_orR_reg0 = _RANDOM[4'h3][9];
        in_reg0 = {_RANDOM[4'h3][31:10], _RANDOM[4'h4][10:0]};
        sign_reg0 = _RANDOM[4'h4][11];
        lpath_sig_shifted_reg0 = {_RANDOM[4'h4][31:12], _RANDOM[4'h5][11:0]};
        lpath_iv_reg0 = _RANDOM[4'h5][12];
        lpath_of_reg0 = _RANDOM[4'h5][13];
        sig_cat0_reg = {_RANDOM[4'h5][31:14], _RANDOM[4'h6][6:0]};
        rpath_shamt_reg0 = _RANDOM[4'h6][14:7];
        in_abs_reg0 = {_RANDOM[4'h6][31:15], _RANDOM[4'h7][15:0]};
        exp_of_reg0 = _RANDOM[4'h7][16];
        int2fp_clz_reg0 = _RANDOM[4'h7][22:17];
        sel_lpath_reg0 = _RANDOM[4'h7][23];
        max_min_int_reg0 = {_RANDOM[4'h7][31:24], _RANDOM[4'h8][23:0]};
        exp_normalized_5_reg0 = _RANDOM[4'h8][28:24];
        exp_normalized_8_reg0 = {_RANDOM[4'h8][31:29], _RANDOM[4'h9][4:0]};
        sig_normalized_11_reg0 = _RANDOM[4'h9][15:5];
        sig_normalized_24_reg0 = {_RANDOM[4'h9][31:16], _RANDOM[4'hA][7:0]};
        clz_fp16_reg0 = _RANDOM[4'hA][11:8];
        clz_fp32_reg0 = _RANDOM[4'hA][19:12];
        out_exp_zero_negone_reg0 = _RANDOM[4'hA][20];
        out_exp_fp16_reg0 = _RANDOM[4'hA][25:21];
        out_exp_fp32_reg0 = {_RANDOM[4'hA][31:26], _RANDOM[4'hB][1:0]};
        out_sign_reg0 = _RANDOM[4'hB][2];
        down_exp_reg0 = _RANDOM[4'hB][11:3];
        may_be_subnor_reg0 = _RANDOM[4'hB][12];
        nor_of_exp_reg0 = _RANDOM[4'hB][17:13];
        nor_of_sig_reg0 = _RANDOM[4'hB][27:18];
        special_case_reg0 = _RANDOM[4'hB][28];
        fp2fp_iv_reg0 = _RANDOM[4'hB][29];
        in_isnan_neg_reg0 = _RANDOM[4'hB][31];
        in_sigNotZero_reg0 = _RANDOM[4'hC][0];
        nor_exp_reg0 = _RANDOM[4'hC][8:1];
        nor_sig_reg0 = _RANDOM[4'hC][18:9];
        subnor_exp_reg0 = _RANDOM[4'hC][26:19];
        subnor_sig_w_reg0 = {_RANDOM[4'hC][31:27], _RANDOM[4'hD][4:0]};
        isNaN_reg0 = _RANDOM[4'hD][5];
        expIsOnes_reg0 = _RANDOM[4'hD][6];
        expIsZero_reg0 = _RANDOM[4'hD][7];
        isSubnormal_reg0 = _RANDOM[4'hD][9];
        sigNotZero_reg0 = _RANDOM[4'hD][10];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        fireReg_last_r = 1'h0;
        is_fp2int_reg0 = 1'h0;
        is_int2fp_reg0 = 1'h0;
        is_fp2fp_reg0 = 1'h0;
        is_vfrsqrt7_reg0 = 1'h0;
        is_vfrec7_reg0 = 1'h0;
        is_signed_int_reg0 = 1'h0;
        result0_reg1 = 32'h0;
        is_normal_reg0 = 1'h0;
        is_inf_reg0 = 1'h0;
        is_nan_reg0 = 1'h0;
        is_neginf_reg0 = 1'h0;
        is_neginf_negzero_reg0 = 1'h0;
        is_negzero_reg0 = 1'h0;
        is_poszero_reg0 = 1'h0;
        is_snan_reg0 = 1'h0;
        is_neg2_bplus1_b_reg0 = 1'h0;
        is_neg2_b_bminus1_reg0 = 1'h0;
        is_neg2_negbminus1_negzero_reg0 = 1'h0;
        is_pos2_poszero_negbminus1_reg0 = 1'h0;
        is_pos2_bminus1_b_reg0 = 1'h0;
        is_pos2_b_bplus1_reg0 = 1'h0;
        in_orR_reg0 = 1'h0;
        in_reg0 = 33'h0;
        sign_reg0 = 1'h0;
        lpath_iv_reg0 = 1'h0;
        exp_of_reg0 = 1'h0;
        max_min_int_reg0 = 32'h0;
        out_exp_fp16_reg0 = 5'h0;
        out_exp_fp32_reg0 = 8'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ShiftRightJam_2 shiftRightJam (
    .io_in     (sig_cat0_reg),
    .io_shamt  (rpath_shamt_reg0),
    .io_out    (_shiftRightJam_io_out),
    .io_sticky (_shiftRightJam_io_sticky)
  );
  CLZ_9 int2fp_clz_clz (
    .io_in  (in_abs[31:0]),
    .io_out (_int2fp_clz_clz_io_out)
  );
  CLZ_7 int2fp_clz_clz_1 (
    .io_in  (in_abs[15:0]),
    .io_out (_int2fp_clz_clz_1_io_out)
  );
  CLZ_28 zero_minus_lzc_f16_clz (
    .io_in  (_out_exp_fp32_T_13[22:13]),
    .io_out (_zero_minus_lzc_f16_clz_io_out)
  );
  CLZ_29 zero_minus_lzc_f32_clz (
    .io_in  (_out_exp_fp32_T_13),
    .io_out (_zero_minus_lzc_f32_clz_io_out)
  );
  CLZ_30 clz_fp16_clz (
    .io_in  (_sig_normalized_11_T_20),
    .io_out (_clz_fp16_clz_io_out)
  );
  CLZ_31 clz_fp32_clz (
    .io_in  (_sig_normalized_24_T_18),
    .io_out (_clz_fp32_clz_io_out)
  );
  CLZ_28 out_exp_fp16_clz (
    .io_in  (_out_exp_fp32_T_13[22:13]),
    .io_out (_out_exp_fp16_clz_io_out)
  );
  CLZ_29 out_exp_fp32_clz (
    .io_in  (_out_exp_fp32_T_13),
    .io_out (_out_exp_fp32_clz_io_out)
  );
  ShiftRightJam_3 shiftRightJam_1 (
    .io_in     ({|(src[30:23]), src[22:12]}),
    .io_shamt  (8'(8'h71 - src[30:23])),
    .io_out    (_shiftRightJam_1_io_out),
    .io_sticky (_shiftRightJam_1_io_sticky)
  );
  CLZ_28 subnor_shamt_clz (
    .io_in  (src[22:13]),
    .io_out (_subnor_shamt_clz_io_out)
  );
  RoundingUnit_8 rounder (
    .io_in       (_round_in_reg0_T_24),
    .io_roundIn
      (fp32toint32_reg0 & _shiftRightJam_io_out[0] | fp32toint16_reg0
       & _shiftRightJam_io_out[8] | _sig_reg0_T & _shiftRightJam_io_out[13]
       | fp16toint8_reg0 & _shiftRightJam_io_out[16] | int16tofp32_reg0
       & in_shift_reg0[14] | int32tofp32_reg0 & in_shift_reg0[7] | int8tofp16_reg0
       & in_shift_reg0[22] | _cout_reg0_T_2 & in_shift_reg0[20]),
    .io_stickyIn
      (fp32toint32_reg0 & _shiftRightJam_io_sticky | fp32toint16_reg0
       & (_shiftRightJam_io_sticky | (|(_shiftRightJam_io_out[7:0]))) | _sig_reg0_T
       & (_shiftRightJam_io_sticky | (|(_shiftRightJam_io_out[12:0]))) | fp16toint8_reg0
       & (_shiftRightJam_io_sticky | (|(_shiftRightJam_io_out[15:0]))) | int16tofp32_reg0
       & (|(in_shift_reg0[14:0])) | int32tofp32_reg0 & (|(in_shift_reg0[6:0]))
       | int8tofp16_reg0 & (|(in_shift_reg0[22:0])) | _cout_reg0_T_2
       & (|(in_shift_reg0[19:0]))),
    .io_signIn   (_out_reg0_T & sign_reg0),
    .io_rm       (rm_reg0),
    .io_inexact  (_rounder_io_inexact),
    .io_r_up     (_rounder_io_r_up)
  );
  Rsqrt7Table vfrsqrt7Table (
    .src (sig_in7),
    .out (_vfrsqrt7Table_out)
  );
  Rec7Table vfrec7Table (
    .src (sig_in7),
    .out (_vfrec7Table_out)
  );
  RoundingUnit_9 nor_rounder (
    .io_in       (nor_in_reg0),
    .io_roundIn  (nor_roundBit_reg0),
    .io_stickyIn (nor_stickyBit_reg0),
    .io_signIn   (nor_signBit_reg0),
    .io_rm       (rm_reg0),
    .io_inexact  (_nor_rounder_io_inexact),
    .io_r_up     (_nor_rounder_io_r_up)
  );
  RoundingUnit_9 subnor_rounder (
    .io_in       (subnor_in_reg0),
    .io_roundIn  (subnor_roundBit_reg0),
    .io_stickyIn (subnor_stickyBit_reg0),
    .io_signIn   (subnor_signBit_reg0),
    .io_rm       (rm_reg0),
    .io_inexact  (_subnor_rounder_io_inexact),
    .io_r_up     (_subnor_rounder_io_r_up)
  );
  assign io_result = result0_reg1;
  assign io_fflags = fflags0_reg1;
endmodule

