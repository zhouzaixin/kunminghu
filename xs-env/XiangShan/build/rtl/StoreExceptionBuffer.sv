// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module StoreExceptionBuffer(
  input         clock,
  input         reset,
  input         io_redirect_valid,
  input         io_redirect_bits_robIdx_flag,
  input  [7:0]  io_redirect_bits_robIdx_value,
  input         io_redirect_bits_level,
  input         io_storeAddrIn_0_valid,
  input         io_storeAddrIn_0_bits_uop_exceptionVec_3,
  input         io_storeAddrIn_0_bits_uop_exceptionVec_6,
  input         io_storeAddrIn_0_bits_uop_exceptionVec_7,
  input         io_storeAddrIn_0_bits_uop_exceptionVec_15,
  input         io_storeAddrIn_0_bits_uop_exceptionVec_23,
  input  [6:0]  io_storeAddrIn_0_bits_uop_uopIdx,
  input         io_storeAddrIn_0_bits_uop_robIdx_flag,
  input  [7:0]  io_storeAddrIn_0_bits_uop_robIdx_value,
  input  [63:0] io_storeAddrIn_0_bits_fullva,
  input         io_storeAddrIn_0_bits_vaNeedExt,
  input         io_storeAddrIn_0_bits_isHyper,
  input  [63:0] io_storeAddrIn_0_bits_gpaddr,
  input         io_storeAddrIn_0_bits_isForVSnonLeafPTE,
  input         io_storeAddrIn_1_valid,
  input         io_storeAddrIn_1_bits_uop_exceptionVec_3,
  input         io_storeAddrIn_1_bits_uop_exceptionVec_6,
  input         io_storeAddrIn_1_bits_uop_exceptionVec_7,
  input         io_storeAddrIn_1_bits_uop_exceptionVec_15,
  input         io_storeAddrIn_1_bits_uop_exceptionVec_23,
  input  [6:0]  io_storeAddrIn_1_bits_uop_uopIdx,
  input         io_storeAddrIn_1_bits_uop_robIdx_flag,
  input  [7:0]  io_storeAddrIn_1_bits_uop_robIdx_value,
  input  [63:0] io_storeAddrIn_1_bits_fullva,
  input         io_storeAddrIn_1_bits_vaNeedExt,
  input         io_storeAddrIn_1_bits_isHyper,
  input  [63:0] io_storeAddrIn_1_bits_gpaddr,
  input         io_storeAddrIn_1_bits_isForVSnonLeafPTE,
  input         io_storeAddrIn_2_valid,
  input         io_storeAddrIn_2_bits_uop_exceptionVec_3,
  input         io_storeAddrIn_2_bits_uop_exceptionVec_6,
  input         io_storeAddrIn_2_bits_uop_exceptionVec_7,
  input         io_storeAddrIn_2_bits_uop_exceptionVec_15,
  input         io_storeAddrIn_2_bits_uop_exceptionVec_23,
  input  [6:0]  io_storeAddrIn_2_bits_uop_uopIdx,
  input         io_storeAddrIn_2_bits_uop_robIdx_flag,
  input  [7:0]  io_storeAddrIn_2_bits_uop_robIdx_value,
  input  [63:0] io_storeAddrIn_2_bits_fullva,
  input         io_storeAddrIn_2_bits_vaNeedExt,
  input         io_storeAddrIn_2_bits_isHyper,
  input  [63:0] io_storeAddrIn_2_bits_gpaddr,
  input         io_storeAddrIn_2_bits_isForVSnonLeafPTE,
  input         io_storeAddrIn_3_valid,
  input         io_storeAddrIn_3_bits_uop_exceptionVec_3,
  input         io_storeAddrIn_3_bits_uop_exceptionVec_6,
  input         io_storeAddrIn_3_bits_uop_exceptionVec_7,
  input         io_storeAddrIn_3_bits_uop_exceptionVec_15,
  input         io_storeAddrIn_3_bits_uop_exceptionVec_23,
  input  [6:0]  io_storeAddrIn_3_bits_uop_uopIdx,
  input         io_storeAddrIn_3_bits_uop_robIdx_flag,
  input  [7:0]  io_storeAddrIn_3_bits_uop_robIdx_value,
  input  [63:0] io_storeAddrIn_3_bits_fullva,
  input         io_storeAddrIn_3_bits_vaNeedExt,
  input         io_storeAddrIn_3_bits_isHyper,
  input  [63:0] io_storeAddrIn_3_bits_gpaddr,
  input         io_storeAddrIn_3_bits_isForVSnonLeafPTE,
  input         io_storeAddrIn_4_valid,
  input         io_storeAddrIn_4_bits_uop_exceptionVec_3,
  input         io_storeAddrIn_4_bits_uop_exceptionVec_6,
  input         io_storeAddrIn_4_bits_uop_exceptionVec_7,
  input         io_storeAddrIn_4_bits_uop_exceptionVec_15,
  input         io_storeAddrIn_4_bits_uop_exceptionVec_23,
  input  [6:0]  io_storeAddrIn_4_bits_uop_uopIdx,
  input         io_storeAddrIn_4_bits_uop_robIdx_flag,
  input  [7:0]  io_storeAddrIn_4_bits_uop_robIdx_value,
  input  [63:0] io_storeAddrIn_4_bits_fullva,
  input         io_storeAddrIn_4_bits_vaNeedExt,
  input  [63:0] io_storeAddrIn_4_bits_gpaddr,
  input         io_storeAddrIn_4_bits_isForVSnonLeafPTE,
  input         io_storeAddrIn_5_valid,
  input         io_storeAddrIn_5_bits_uop_exceptionVec_3,
  input         io_storeAddrIn_5_bits_uop_exceptionVec_6,
  input         io_storeAddrIn_5_bits_uop_exceptionVec_7,
  input         io_storeAddrIn_5_bits_uop_exceptionVec_15,
  input         io_storeAddrIn_5_bits_uop_exceptionVec_23,
  input  [6:0]  io_storeAddrIn_5_bits_uop_uopIdx,
  input         io_storeAddrIn_5_bits_uop_robIdx_flag,
  input  [7:0]  io_storeAddrIn_5_bits_uop_robIdx_value,
  input  [63:0] io_storeAddrIn_5_bits_fullva,
  input         io_storeAddrIn_5_bits_vaNeedExt,
  input  [63:0] io_storeAddrIn_5_bits_gpaddr,
  input         io_storeAddrIn_5_bits_isForVSnonLeafPTE,
  input         io_storeAddrIn_6_valid,
  input         io_storeAddrIn_6_bits_uop_exceptionVec_7,
  input  [6:0]  io_storeAddrIn_6_bits_uop_uopIdx,
  input         io_storeAddrIn_6_bits_uop_robIdx_flag,
  input  [7:0]  io_storeAddrIn_6_bits_uop_robIdx_value,
  input  [63:0] io_storeAddrIn_6_bits_fullva,
  output [63:0] io_exceptionAddr_vaddr,
  output        io_exceptionAddr_vaNeedExt,
  output        io_exceptionAddr_isHyper,
  output [63:0] io_exceptionAddr_gpaddr,
  output        io_exceptionAddr_isForVSnonLeafPTE
);

  reg         req_valid;
  reg  [6:0]  req_uop_uopIdx;
  reg         req_uop_robIdx_flag;
  reg  [7:0]  req_uop_robIdx_value;
  reg  [63:0] req_fullva;
  reg         req_vaNeedExt;
  reg         req_isHyper;
  reg  [63:0] req_gpaddr;
  reg         req_isForVSnonLeafPTE;
  wire [8:0]  _flushItself_T_2 =
    {io_redirect_bits_robIdx_flag, io_redirect_bits_robIdx_value};
  reg  [6:0]  s2_req_0_uop_uopIdx;
  reg         s2_req_0_uop_robIdx_flag;
  reg  [7:0]  s2_req_0_uop_robIdx_value;
  reg  [63:0] s2_req_0_fullva;
  reg         s2_req_0_vaNeedExt;
  reg         s2_req_0_isHyper;
  reg  [63:0] s2_req_0_gpaddr;
  reg         s2_req_0_isForVSnonLeafPTE;
  reg  [6:0]  s2_req_1_uop_uopIdx;
  reg         s2_req_1_uop_robIdx_flag;
  reg  [7:0]  s2_req_1_uop_robIdx_value;
  reg  [63:0] s2_req_1_fullva;
  reg         s2_req_1_vaNeedExt;
  reg         s2_req_1_isHyper;
  reg  [63:0] s2_req_1_gpaddr;
  reg         s2_req_1_isForVSnonLeafPTE;
  reg  [6:0]  s2_req_2_uop_uopIdx;
  reg         s2_req_2_uop_robIdx_flag;
  reg  [7:0]  s2_req_2_uop_robIdx_value;
  reg  [63:0] s2_req_2_fullva;
  reg         s2_req_2_vaNeedExt;
  reg         s2_req_2_isHyper;
  reg  [63:0] s2_req_2_gpaddr;
  reg         s2_req_2_isForVSnonLeafPTE;
  reg  [6:0]  s2_req_3_uop_uopIdx;
  reg         s2_req_3_uop_robIdx_flag;
  reg  [7:0]  s2_req_3_uop_robIdx_value;
  reg  [63:0] s2_req_3_fullva;
  reg         s2_req_3_vaNeedExt;
  reg         s2_req_3_isHyper;
  reg  [63:0] s2_req_3_gpaddr;
  reg         s2_req_3_isForVSnonLeafPTE;
  reg  [6:0]  s2_req_4_uop_uopIdx;
  reg         s2_req_4_uop_robIdx_flag;
  reg  [7:0]  s2_req_4_uop_robIdx_value;
  reg  [63:0] s2_req_4_fullva;
  reg         s2_req_4_vaNeedExt;
  reg  [63:0] s2_req_4_gpaddr;
  reg         s2_req_4_isForVSnonLeafPTE;
  reg  [6:0]  s2_req_5_uop_uopIdx;
  reg         s2_req_5_uop_robIdx_flag;
  reg  [7:0]  s2_req_5_uop_robIdx_value;
  reg  [63:0] s2_req_5_fullva;
  reg         s2_req_5_vaNeedExt;
  reg  [63:0] s2_req_5_gpaddr;
  reg         s2_req_5_isForVSnonLeafPTE;
  reg  [6:0]  s2_req_6_uop_uopIdx;
  reg         s2_req_6_uop_robIdx_flag;
  reg  [7:0]  s2_req_6_uop_robIdx_value;
  reg  [63:0] s2_req_6_fullva;
  reg         s2_valid_REG;
  wire [8:0]  _reqSel_left_oldest_T_2 =
    {s2_req_0_uop_robIdx_flag, s2_req_0_uop_robIdx_value};
  wire        s2_valid_0 =
    s2_valid_REG
    & ~(io_redirect_valid
        & (io_redirect_bits_level & _reqSel_left_oldest_T_2 == _flushItself_T_2
           | s2_req_0_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ s2_req_0_uop_robIdx_value > io_redirect_bits_robIdx_value));
  reg         s2_valid_REG_1;
  wire [8:0]  _reqSel_left_right_oldest_T_2 =
    {s2_req_1_uop_robIdx_flag, s2_req_1_uop_robIdx_value};
  wire        s2_valid_1 =
    s2_valid_REG_1
    & ~(io_redirect_valid
        & (io_redirect_bits_level & _reqSel_left_right_oldest_T_2 == _flushItself_T_2
           | s2_req_1_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ s2_req_1_uop_robIdx_value > io_redirect_bits_robIdx_value));
  reg         s2_valid_REG_2;
  wire [8:0]  _reqSel_left_right_oldest_T_3 =
    {s2_req_2_uop_robIdx_flag, s2_req_2_uop_robIdx_value};
  wire        s2_valid_2 =
    s2_valid_REG_2
    & ~(io_redirect_valid
        & (io_redirect_bits_level & _reqSel_left_right_oldest_T_3 == _flushItself_T_2
           | s2_req_2_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ s2_req_2_uop_robIdx_value > io_redirect_bits_robIdx_value));
  reg         s2_valid_REG_3;
  wire [8:0]  _reqSel_right_left_oldest_T_2 =
    {s2_req_3_uop_robIdx_flag, s2_req_3_uop_robIdx_value};
  wire        s2_valid_3 =
    s2_valid_REG_3
    & ~(io_redirect_valid
        & (io_redirect_bits_level & _reqSel_right_left_oldest_T_2 == _flushItself_T_2
           | s2_req_3_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ s2_req_3_uop_robIdx_value > io_redirect_bits_robIdx_value));
  reg         s2_valid_REG_4;
  wire [8:0]  _reqSel_right_left_oldest_T_3 =
    {s2_req_4_uop_robIdx_flag, s2_req_4_uop_robIdx_value};
  wire        s2_valid_4 =
    s2_valid_REG_4
    & ~(io_redirect_valid
        & (io_redirect_bits_level & _reqSel_right_left_oldest_T_3 == _flushItself_T_2
           | s2_req_4_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ s2_req_4_uop_robIdx_value > io_redirect_bits_robIdx_value));
  reg         s2_valid_REG_5;
  wire [8:0]  _reqSel_right_right_oldest_T_2 =
    {s2_req_5_uop_robIdx_flag, s2_req_5_uop_robIdx_value};
  wire        s2_valid_5 =
    s2_valid_REG_5
    & ~(io_redirect_valid
        & (io_redirect_bits_level & _reqSel_right_right_oldest_T_2 == _flushItself_T_2
           | s2_req_5_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ s2_req_5_uop_robIdx_value > io_redirect_bits_robIdx_value));
  reg         s2_valid_REG_6;
  wire [8:0]  _reqSel_right_right_oldest_T_3 =
    {s2_req_6_uop_robIdx_flag, s2_req_6_uop_robIdx_value};
  wire        s2_valid_6 =
    s2_valid_REG_6
    & ~(io_redirect_valid
        & (io_redirect_bits_level & _reqSel_right_right_oldest_T_3 == _flushItself_T_2
           | s2_req_6_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ s2_req_6_uop_robIdx_value > io_redirect_bits_robIdx_value));
  wire [6:0]  _GEN =
    {s2_valid_6, s2_valid_5, s2_valid_4, s2_valid_3, s2_valid_2, s2_valid_1, s2_valid_0};
  always @(posedge clock or posedge reset) begin
    if (reset)
      req_valid <= 1'h0;
    else if (req_valid & io_redirect_valid
             & (io_redirect_bits_level
                & {req_uop_robIdx_flag, req_uop_robIdx_value} == _flushItself_T_2
                | req_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
                ^ req_uop_robIdx_value > io_redirect_bits_robIdx_value))
      req_valid <=
        |{s2_valid_6,
          s2_valid_5,
          s2_valid_4,
          s2_valid_3,
          s2_valid_2,
          s2_valid_1,
          s2_valid_0};
    else
      req_valid <= (|_GEN) | req_valid;
  end // always @(posedge, posedge)
  wire        s1_valid_0 =
    io_storeAddrIn_0_valid
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {io_storeAddrIn_0_bits_uop_robIdx_flag,
              io_storeAddrIn_0_bits_uop_robIdx_value} == _flushItself_T_2
           | io_storeAddrIn_0_bits_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_storeAddrIn_0_bits_uop_robIdx_value > io_redirect_bits_robIdx_value))
    & (|{io_storeAddrIn_0_bits_uop_exceptionVec_23,
         io_storeAddrIn_0_bits_uop_exceptionVec_15,
         io_storeAddrIn_0_bits_uop_exceptionVec_7,
         io_storeAddrIn_0_bits_uop_exceptionVec_6,
         io_storeAddrIn_0_bits_uop_exceptionVec_3});
  wire        s1_valid_1 =
    io_storeAddrIn_1_valid
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {io_storeAddrIn_1_bits_uop_robIdx_flag,
              io_storeAddrIn_1_bits_uop_robIdx_value} == _flushItself_T_2
           | io_storeAddrIn_1_bits_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_storeAddrIn_1_bits_uop_robIdx_value > io_redirect_bits_robIdx_value))
    & (|{io_storeAddrIn_1_bits_uop_exceptionVec_23,
         io_storeAddrIn_1_bits_uop_exceptionVec_15,
         io_storeAddrIn_1_bits_uop_exceptionVec_7,
         io_storeAddrIn_1_bits_uop_exceptionVec_6,
         io_storeAddrIn_1_bits_uop_exceptionVec_3});
  wire        s1_valid_2 =
    io_storeAddrIn_2_valid
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {io_storeAddrIn_2_bits_uop_robIdx_flag,
              io_storeAddrIn_2_bits_uop_robIdx_value} == _flushItself_T_2
           | io_storeAddrIn_2_bits_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_storeAddrIn_2_bits_uop_robIdx_value > io_redirect_bits_robIdx_value))
    & (|{io_storeAddrIn_2_bits_uop_exceptionVec_23,
         io_storeAddrIn_2_bits_uop_exceptionVec_15,
         io_storeAddrIn_2_bits_uop_exceptionVec_7,
         io_storeAddrIn_2_bits_uop_exceptionVec_6,
         io_storeAddrIn_2_bits_uop_exceptionVec_3});
  wire        s1_valid_3 =
    io_storeAddrIn_3_valid
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {io_storeAddrIn_3_bits_uop_robIdx_flag,
              io_storeAddrIn_3_bits_uop_robIdx_value} == _flushItself_T_2
           | io_storeAddrIn_3_bits_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_storeAddrIn_3_bits_uop_robIdx_value > io_redirect_bits_robIdx_value))
    & (|{io_storeAddrIn_3_bits_uop_exceptionVec_23,
         io_storeAddrIn_3_bits_uop_exceptionVec_15,
         io_storeAddrIn_3_bits_uop_exceptionVec_7,
         io_storeAddrIn_3_bits_uop_exceptionVec_6,
         io_storeAddrIn_3_bits_uop_exceptionVec_3});
  wire        s1_valid_4 =
    io_storeAddrIn_4_valid
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {io_storeAddrIn_4_bits_uop_robIdx_flag,
              io_storeAddrIn_4_bits_uop_robIdx_value} == _flushItself_T_2
           | io_storeAddrIn_4_bits_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_storeAddrIn_4_bits_uop_robIdx_value > io_redirect_bits_robIdx_value))
    & (|{io_storeAddrIn_4_bits_uop_exceptionVec_23,
         io_storeAddrIn_4_bits_uop_exceptionVec_15,
         io_storeAddrIn_4_bits_uop_exceptionVec_7,
         io_storeAddrIn_4_bits_uop_exceptionVec_6,
         io_storeAddrIn_4_bits_uop_exceptionVec_3});
  wire        s1_valid_5 =
    io_storeAddrIn_5_valid
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {io_storeAddrIn_5_bits_uop_robIdx_flag,
              io_storeAddrIn_5_bits_uop_robIdx_value} == _flushItself_T_2
           | io_storeAddrIn_5_bits_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_storeAddrIn_5_bits_uop_robIdx_value > io_redirect_bits_robIdx_value))
    & (|{io_storeAddrIn_5_bits_uop_exceptionVec_23,
         io_storeAddrIn_5_bits_uop_exceptionVec_15,
         io_storeAddrIn_5_bits_uop_exceptionVec_7,
         io_storeAddrIn_5_bits_uop_exceptionVec_6,
         io_storeAddrIn_5_bits_uop_exceptionVec_3});
  wire        s1_valid_6 =
    io_storeAddrIn_6_valid
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {io_storeAddrIn_6_bits_uop_robIdx_flag,
              io_storeAddrIn_6_bits_uop_robIdx_value} == _flushItself_T_2
           | io_storeAddrIn_6_bits_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_storeAddrIn_6_bits_uop_robIdx_value > io_redirect_bits_robIdx_value))
    & io_storeAddrIn_6_bits_uop_exceptionVec_7;
  wire        _reqSel_left_right_oldest_T = s2_valid_1 & s2_valid_2;
  wire        _reqSel_left_right_oldest_T_7 =
    s2_req_1_uop_robIdx_flag ^ s2_req_2_uop_robIdx_flag
    ^ s2_req_1_uop_robIdx_value > s2_req_2_uop_robIdx_value
    | _reqSel_left_right_oldest_T_2 == _reqSel_left_right_oldest_T_3
    & s2_req_1_uop_uopIdx > s2_req_2_uop_uopIdx;
  wire        _reqSel_left_right_oldest_T_10 = s2_valid_1 & ~s2_valid_2;
  wire        reqSel_left_res_1_valid =
    _reqSel_left_right_oldest_T
      ? (_reqSel_left_right_oldest_T_7 ? s2_valid_2 : s2_valid_1)
      : _reqSel_left_right_oldest_T_10 ? s2_valid_1 : s2_valid_2;
  wire [6:0]  reqSel_left_res_1_bits_uop_uopIdx =
    _reqSel_left_right_oldest_T
      ? (_reqSel_left_right_oldest_T_7 ? s2_req_2_uop_uopIdx : s2_req_1_uop_uopIdx)
      : _reqSel_left_right_oldest_T_10 ? s2_req_1_uop_uopIdx : s2_req_2_uop_uopIdx;
  wire        reqSel_left_res_1_bits_uop_robIdx_flag =
    _reqSel_left_right_oldest_T
      ? (_reqSel_left_right_oldest_T_7
           ? s2_req_2_uop_robIdx_flag
           : s2_req_1_uop_robIdx_flag)
      : _reqSel_left_right_oldest_T_10
          ? s2_req_1_uop_robIdx_flag
          : s2_req_2_uop_robIdx_flag;
  wire [7:0]  reqSel_left_res_1_bits_uop_robIdx_value =
    _reqSel_left_right_oldest_T
      ? (_reqSel_left_right_oldest_T_7
           ? s2_req_2_uop_robIdx_value
           : s2_req_1_uop_robIdx_value)
      : _reqSel_left_right_oldest_T_10
          ? s2_req_1_uop_robIdx_value
          : s2_req_2_uop_robIdx_value;
  wire        _reqSel_left_oldest_T = s2_valid_0 & reqSel_left_res_1_valid;
  wire        _reqSel_left_oldest_T_7 =
    s2_req_0_uop_robIdx_flag ^ reqSel_left_res_1_bits_uop_robIdx_flag
    ^ s2_req_0_uop_robIdx_value > reqSel_left_res_1_bits_uop_robIdx_value
    | _reqSel_left_oldest_T_2 == {reqSel_left_res_1_bits_uop_robIdx_flag,
                                  reqSel_left_res_1_bits_uop_robIdx_value}
    & s2_req_0_uop_uopIdx > reqSel_left_res_1_bits_uop_uopIdx;
  wire        _reqSel_left_oldest_T_10 = s2_valid_0 & ~reqSel_left_res_1_valid;
  wire        reqSel_res_0_valid =
    _reqSel_left_oldest_T
      ? (_reqSel_left_oldest_T_7 ? reqSel_left_res_1_valid : s2_valid_0)
      : _reqSel_left_oldest_T_10 ? s2_valid_0 : reqSel_left_res_1_valid;
  wire [6:0]  reqSel_res_0_bits_uop_uopIdx =
    _reqSel_left_oldest_T
      ? (_reqSel_left_oldest_T_7
           ? reqSel_left_res_1_bits_uop_uopIdx
           : s2_req_0_uop_uopIdx)
      : _reqSel_left_oldest_T_10
          ? s2_req_0_uop_uopIdx
          : reqSel_left_res_1_bits_uop_uopIdx;
  wire        reqSel_res_0_bits_uop_robIdx_flag =
    _reqSel_left_oldest_T
      ? (_reqSel_left_oldest_T_7
           ? reqSel_left_res_1_bits_uop_robIdx_flag
           : s2_req_0_uop_robIdx_flag)
      : _reqSel_left_oldest_T_10
          ? s2_req_0_uop_robIdx_flag
          : reqSel_left_res_1_bits_uop_robIdx_flag;
  wire [7:0]  reqSel_res_0_bits_uop_robIdx_value =
    _reqSel_left_oldest_T
      ? (_reqSel_left_oldest_T_7
           ? reqSel_left_res_1_bits_uop_robIdx_value
           : s2_req_0_uop_robIdx_value)
      : _reqSel_left_oldest_T_10
          ? s2_req_0_uop_robIdx_value
          : reqSel_left_res_1_bits_uop_robIdx_value;
  wire        _reqSel_right_left_oldest_T = s2_valid_3 & s2_valid_4;
  wire        _reqSel_right_left_oldest_T_7 =
    s2_req_3_uop_robIdx_flag ^ s2_req_4_uop_robIdx_flag
    ^ s2_req_3_uop_robIdx_value > s2_req_4_uop_robIdx_value
    | _reqSel_right_left_oldest_T_2 == _reqSel_right_left_oldest_T_3
    & s2_req_3_uop_uopIdx > s2_req_4_uop_uopIdx;
  wire        _reqSel_right_left_oldest_T_10 = s2_valid_3 & ~s2_valid_4;
  wire        reqSel_right_res_0_valid =
    _reqSel_right_left_oldest_T
      ? (_reqSel_right_left_oldest_T_7 ? s2_valid_4 : s2_valid_3)
      : _reqSel_right_left_oldest_T_10 ? s2_valid_3 : s2_valid_4;
  wire [6:0]  reqSel_right_res_0_bits_uop_uopIdx =
    _reqSel_right_left_oldest_T
      ? (_reqSel_right_left_oldest_T_7 ? s2_req_4_uop_uopIdx : s2_req_3_uop_uopIdx)
      : _reqSel_right_left_oldest_T_10 ? s2_req_3_uop_uopIdx : s2_req_4_uop_uopIdx;
  wire        reqSel_right_res_0_bits_uop_robIdx_flag =
    _reqSel_right_left_oldest_T
      ? (_reqSel_right_left_oldest_T_7
           ? s2_req_4_uop_robIdx_flag
           : s2_req_3_uop_robIdx_flag)
      : _reqSel_right_left_oldest_T_10
          ? s2_req_3_uop_robIdx_flag
          : s2_req_4_uop_robIdx_flag;
  wire [7:0]  reqSel_right_res_0_bits_uop_robIdx_value =
    _reqSel_right_left_oldest_T
      ? (_reqSel_right_left_oldest_T_7
           ? s2_req_4_uop_robIdx_value
           : s2_req_3_uop_robIdx_value)
      : _reqSel_right_left_oldest_T_10
          ? s2_req_3_uop_robIdx_value
          : s2_req_4_uop_robIdx_value;
  wire        _reqSel_right_right_oldest_T = s2_valid_5 & s2_valid_6;
  wire        _reqSel_right_right_oldest_T_7 =
    s2_req_5_uop_robIdx_flag ^ s2_req_6_uop_robIdx_flag
    ^ s2_req_5_uop_robIdx_value > s2_req_6_uop_robIdx_value
    | _reqSel_right_right_oldest_T_2 == _reqSel_right_right_oldest_T_3
    & s2_req_5_uop_uopIdx > s2_req_6_uop_uopIdx;
  wire        _reqSel_right_right_oldest_T_10 = s2_valid_5 & ~s2_valid_6;
  wire        reqSel_right_res_1_valid =
    _reqSel_right_right_oldest_T
      ? (_reqSel_right_right_oldest_T_7 ? s2_valid_6 : s2_valid_5)
      : _reqSel_right_right_oldest_T_10 ? s2_valid_5 : s2_valid_6;
  wire [6:0]  reqSel_right_res_1_bits_uop_uopIdx =
    _reqSel_right_right_oldest_T
      ? (_reqSel_right_right_oldest_T_7 ? s2_req_6_uop_uopIdx : s2_req_5_uop_uopIdx)
      : _reqSel_right_right_oldest_T_10 ? s2_req_5_uop_uopIdx : s2_req_6_uop_uopIdx;
  wire        reqSel_right_res_1_bits_uop_robIdx_flag =
    _reqSel_right_right_oldest_T
      ? (_reqSel_right_right_oldest_T_7
           ? s2_req_6_uop_robIdx_flag
           : s2_req_5_uop_robIdx_flag)
      : _reqSel_right_right_oldest_T_10
          ? s2_req_5_uop_robIdx_flag
          : s2_req_6_uop_robIdx_flag;
  wire [7:0]  reqSel_right_res_1_bits_uop_robIdx_value =
    _reqSel_right_right_oldest_T
      ? (_reqSel_right_right_oldest_T_7
           ? s2_req_6_uop_robIdx_value
           : s2_req_5_uop_robIdx_value)
      : _reqSel_right_right_oldest_T_10
          ? s2_req_5_uop_robIdx_value
          : s2_req_6_uop_robIdx_value;
  wire        _reqSel_right_oldest_T =
    reqSel_right_res_0_valid & reqSel_right_res_1_valid;
  wire        _reqSel_right_oldest_T_7 =
    reqSel_right_res_0_bits_uop_robIdx_flag ^ reqSel_right_res_1_bits_uop_robIdx_flag
    ^ reqSel_right_res_0_bits_uop_robIdx_value > reqSel_right_res_1_bits_uop_robIdx_value
    | {reqSel_right_res_0_bits_uop_robIdx_flag,
       reqSel_right_res_0_bits_uop_robIdx_value} == {reqSel_right_res_1_bits_uop_robIdx_flag,
                                                     reqSel_right_res_1_bits_uop_robIdx_value}
    & reqSel_right_res_0_bits_uop_uopIdx > reqSel_right_res_1_bits_uop_uopIdx;
  wire        _reqSel_right_oldest_T_10 =
    reqSel_right_res_0_valid & ~reqSel_right_res_1_valid;
  wire        reqSel_res_1_valid =
    _reqSel_right_oldest_T
      ? (_reqSel_right_oldest_T_7 ? reqSel_right_res_1_valid : reqSel_right_res_0_valid)
      : _reqSel_right_oldest_T_10 ? reqSel_right_res_0_valid : reqSel_right_res_1_valid;
  wire [6:0]  reqSel_res_1_bits_uop_uopIdx =
    _reqSel_right_oldest_T
      ? (_reqSel_right_oldest_T_7
           ? reqSel_right_res_1_bits_uop_uopIdx
           : reqSel_right_res_0_bits_uop_uopIdx)
      : _reqSel_right_oldest_T_10
          ? reqSel_right_res_0_bits_uop_uopIdx
          : reqSel_right_res_1_bits_uop_uopIdx;
  wire        reqSel_res_1_bits_uop_robIdx_flag =
    _reqSel_right_oldest_T
      ? (_reqSel_right_oldest_T_7
           ? reqSel_right_res_1_bits_uop_robIdx_flag
           : reqSel_right_res_0_bits_uop_robIdx_flag)
      : _reqSel_right_oldest_T_10
          ? reqSel_right_res_0_bits_uop_robIdx_flag
          : reqSel_right_res_1_bits_uop_robIdx_flag;
  wire [7:0]  reqSel_res_1_bits_uop_robIdx_value =
    _reqSel_right_oldest_T
      ? (_reqSel_right_oldest_T_7
           ? reqSel_right_res_1_bits_uop_robIdx_value
           : reqSel_right_res_0_bits_uop_robIdx_value)
      : _reqSel_right_oldest_T_10
          ? reqSel_right_res_0_bits_uop_robIdx_value
          : reqSel_right_res_1_bits_uop_robIdx_value;
  wire        _reqSel_oldest_T = reqSel_res_0_valid & reqSel_res_1_valid;
  wire        _reqSel_oldest_T_7 =
    reqSel_res_0_bits_uop_robIdx_flag ^ reqSel_res_1_bits_uop_robIdx_flag
    ^ reqSel_res_0_bits_uop_robIdx_value > reqSel_res_1_bits_uop_robIdx_value
    | {reqSel_res_0_bits_uop_robIdx_flag,
       reqSel_res_0_bits_uop_robIdx_value} == {reqSel_res_1_bits_uop_robIdx_flag,
                                               reqSel_res_1_bits_uop_robIdx_value}
    & reqSel_res_0_bits_uop_uopIdx > reqSel_res_1_bits_uop_uopIdx;
  wire        _reqSel_oldest_T_10 = reqSel_res_0_valid & ~reqSel_res_1_valid;
  wire [6:0]  reqSel_oldest_bits_uop_uopIdx =
    _reqSel_oldest_T
      ? (_reqSel_oldest_T_7 ? reqSel_res_1_bits_uop_uopIdx : reqSel_res_0_bits_uop_uopIdx)
      : _reqSel_oldest_T_10 ? reqSel_res_0_bits_uop_uopIdx : reqSel_res_1_bits_uop_uopIdx;
  wire        reqSel_oldest_bits_uop_robIdx_flag =
    _reqSel_oldest_T
      ? (_reqSel_oldest_T_7
           ? reqSel_res_1_bits_uop_robIdx_flag
           : reqSel_res_0_bits_uop_robIdx_flag)
      : _reqSel_oldest_T_10
          ? reqSel_res_0_bits_uop_robIdx_flag
          : reqSel_res_1_bits_uop_robIdx_flag;
  wire [7:0]  reqSel_oldest_bits_uop_robIdx_value =
    _reqSel_oldest_T
      ? (_reqSel_oldest_T_7
           ? reqSel_res_1_bits_uop_robIdx_value
           : reqSel_res_0_bits_uop_robIdx_value)
      : _reqSel_oldest_T_10
          ? reqSel_res_0_bits_uop_robIdx_value
          : reqSel_res_1_bits_uop_robIdx_value;
  wire        req_differentFlag =
    req_uop_robIdx_flag ^ reqSel_oldest_bits_uop_robIdx_flag;
  wire [63:0] reqSel_left_res_1_bits_fullva =
    _reqSel_left_right_oldest_T
      ? (_reqSel_left_right_oldest_T_7 ? s2_req_2_fullva : s2_req_1_fullva)
      : _reqSel_left_right_oldest_T_10 ? s2_req_1_fullva : s2_req_2_fullva;
  wire        reqSel_left_res_1_bits_vaNeedExt =
    _reqSel_left_right_oldest_T
      ? (_reqSel_left_right_oldest_T_7 ? s2_req_2_vaNeedExt : s2_req_1_vaNeedExt)
      : _reqSel_left_right_oldest_T_10 ? s2_req_1_vaNeedExt : s2_req_2_vaNeedExt;
  wire        reqSel_left_res_1_bits_isHyper =
    _reqSel_left_right_oldest_T
      ? (_reqSel_left_right_oldest_T_7 ? s2_req_2_isHyper : s2_req_1_isHyper)
      : _reqSel_left_right_oldest_T_10 ? s2_req_1_isHyper : s2_req_2_isHyper;
  wire [63:0] reqSel_left_res_1_bits_gpaddr =
    _reqSel_left_right_oldest_T
      ? (_reqSel_left_right_oldest_T_7 ? s2_req_2_gpaddr : s2_req_1_gpaddr)
      : _reqSel_left_right_oldest_T_10 ? s2_req_1_gpaddr : s2_req_2_gpaddr;
  wire        reqSel_left_res_1_bits_isForVSnonLeafPTE =
    _reqSel_left_right_oldest_T
      ? (_reqSel_left_right_oldest_T_7
           ? s2_req_2_isForVSnonLeafPTE
           : s2_req_1_isForVSnonLeafPTE)
      : _reqSel_left_right_oldest_T_10
          ? s2_req_1_isForVSnonLeafPTE
          : s2_req_2_isForVSnonLeafPTE;
  wire [63:0] reqSel_res_0_bits_fullva =
    _reqSel_left_oldest_T
      ? (_reqSel_left_oldest_T_7 ? reqSel_left_res_1_bits_fullva : s2_req_0_fullva)
      : _reqSel_left_oldest_T_10 ? s2_req_0_fullva : reqSel_left_res_1_bits_fullva;
  wire        reqSel_res_0_bits_vaNeedExt =
    _reqSel_left_oldest_T
      ? (_reqSel_left_oldest_T_7 ? reqSel_left_res_1_bits_vaNeedExt : s2_req_0_vaNeedExt)
      : _reqSel_left_oldest_T_10 ? s2_req_0_vaNeedExt : reqSel_left_res_1_bits_vaNeedExt;
  wire        reqSel_res_0_bits_isHyper =
    _reqSel_left_oldest_T
      ? (_reqSel_left_oldest_T_7 ? reqSel_left_res_1_bits_isHyper : s2_req_0_isHyper)
      : _reqSel_left_oldest_T_10 ? s2_req_0_isHyper : reqSel_left_res_1_bits_isHyper;
  wire [63:0] reqSel_res_0_bits_gpaddr =
    _reqSel_left_oldest_T
      ? (_reqSel_left_oldest_T_7 ? reqSel_left_res_1_bits_gpaddr : s2_req_0_gpaddr)
      : _reqSel_left_oldest_T_10 ? s2_req_0_gpaddr : reqSel_left_res_1_bits_gpaddr;
  wire        reqSel_res_0_bits_isForVSnonLeafPTE =
    _reqSel_left_oldest_T
      ? (_reqSel_left_oldest_T_7
           ? reqSel_left_res_1_bits_isForVSnonLeafPTE
           : s2_req_0_isForVSnonLeafPTE)
      : _reqSel_left_oldest_T_10
          ? s2_req_0_isForVSnonLeafPTE
          : reqSel_left_res_1_bits_isForVSnonLeafPTE;
  wire [63:0] reqSel_right_res_0_bits_fullva =
    _reqSel_right_left_oldest_T
      ? (_reqSel_right_left_oldest_T_7 ? s2_req_4_fullva : s2_req_3_fullva)
      : _reqSel_right_left_oldest_T_10 ? s2_req_3_fullva : s2_req_4_fullva;
  wire        reqSel_right_res_0_bits_vaNeedExt =
    _reqSel_right_left_oldest_T
      ? (_reqSel_right_left_oldest_T_7 ? s2_req_4_vaNeedExt : s2_req_3_vaNeedExt)
      : _reqSel_right_left_oldest_T_10 ? s2_req_3_vaNeedExt : s2_req_4_vaNeedExt;
  wire        reqSel_right_res_0_bits_isHyper =
    _reqSel_right_left_oldest_T
      ? ~_reqSel_right_left_oldest_T_7 & s2_req_3_isHyper
      : _reqSel_right_left_oldest_T_10 & s2_req_3_isHyper;
  wire [63:0] reqSel_right_res_0_bits_gpaddr =
    _reqSel_right_left_oldest_T
      ? (_reqSel_right_left_oldest_T_7 ? s2_req_4_gpaddr : s2_req_3_gpaddr)
      : _reqSel_right_left_oldest_T_10 ? s2_req_3_gpaddr : s2_req_4_gpaddr;
  wire        reqSel_right_res_0_bits_isForVSnonLeafPTE =
    _reqSel_right_left_oldest_T
      ? (_reqSel_right_left_oldest_T_7
           ? s2_req_4_isForVSnonLeafPTE
           : s2_req_3_isForVSnonLeafPTE)
      : _reqSel_right_left_oldest_T_10
          ? s2_req_3_isForVSnonLeafPTE
          : s2_req_4_isForVSnonLeafPTE;
  wire [63:0] reqSel_right_res_1_bits_fullva =
    _reqSel_right_right_oldest_T
      ? (_reqSel_right_right_oldest_T_7 ? s2_req_6_fullva : s2_req_5_fullva)
      : _reqSel_right_right_oldest_T_10 ? s2_req_5_fullva : s2_req_6_fullva;
  wire        reqSel_right_res_1_bits_vaNeedExt =
    _reqSel_right_right_oldest_T
      ? _reqSel_right_right_oldest_T_7 | s2_req_5_vaNeedExt
      : ~_reqSel_right_right_oldest_T_10 | s2_req_5_vaNeedExt;
  wire [63:0] reqSel_right_res_1_bits_gpaddr =
    _reqSel_right_right_oldest_T
      ? (_reqSel_right_right_oldest_T_7 ? 64'h0 : s2_req_5_gpaddr)
      : _reqSel_right_right_oldest_T_10 ? s2_req_5_gpaddr : 64'h0;
  wire        reqSel_right_res_1_bits_isForVSnonLeafPTE =
    _reqSel_right_right_oldest_T
      ? ~_reqSel_right_right_oldest_T_7 & s2_req_5_isForVSnonLeafPTE
      : _reqSel_right_right_oldest_T_10 & s2_req_5_isForVSnonLeafPTE;
  wire [63:0] reqSel_res_1_bits_fullva =
    _reqSel_right_oldest_T
      ? (_reqSel_right_oldest_T_7
           ? reqSel_right_res_1_bits_fullva
           : reqSel_right_res_0_bits_fullva)
      : _reqSel_right_oldest_T_10
          ? reqSel_right_res_0_bits_fullva
          : reqSel_right_res_1_bits_fullva;
  wire        reqSel_res_1_bits_vaNeedExt =
    _reqSel_right_oldest_T
      ? (_reqSel_right_oldest_T_7
           ? reqSel_right_res_1_bits_vaNeedExt
           : reqSel_right_res_0_bits_vaNeedExt)
      : _reqSel_right_oldest_T_10
          ? reqSel_right_res_0_bits_vaNeedExt
          : reqSel_right_res_1_bits_vaNeedExt;
  wire        reqSel_res_1_bits_isHyper =
    _reqSel_right_oldest_T
      ? ~_reqSel_right_oldest_T_7 & reqSel_right_res_0_bits_isHyper
      : _reqSel_right_oldest_T_10 & reqSel_right_res_0_bits_isHyper;
  wire [63:0] reqSel_res_1_bits_gpaddr =
    _reqSel_right_oldest_T
      ? (_reqSel_right_oldest_T_7
           ? reqSel_right_res_1_bits_gpaddr
           : reqSel_right_res_0_bits_gpaddr)
      : _reqSel_right_oldest_T_10
          ? reqSel_right_res_0_bits_gpaddr
          : reqSel_right_res_1_bits_gpaddr;
  wire        reqSel_res_1_bits_isForVSnonLeafPTE =
    _reqSel_right_oldest_T
      ? (_reqSel_right_oldest_T_7
           ? reqSel_right_res_1_bits_isForVSnonLeafPTE
           : reqSel_right_res_0_bits_isForVSnonLeafPTE)
      : _reqSel_right_oldest_T_10
          ? reqSel_right_res_0_bits_isForVSnonLeafPTE
          : reqSel_right_res_1_bits_isForVSnonLeafPTE;
  always @(posedge clock) begin
    if (req_valid
          ? (_reqSel_oldest_T
               ? (_reqSel_oldest_T_7 ? reqSel_res_1_valid : reqSel_res_0_valid)
               : _reqSel_oldest_T_10 ? reqSel_res_0_valid : reqSel_res_1_valid)
            & (req_differentFlag
               ^ req_uop_robIdx_value > reqSel_oldest_bits_uop_robIdx_value
               | (req_differentFlag
                  ^ req_uop_robIdx_value >= reqSel_oldest_bits_uop_robIdx_value)
               & req_uop_uopIdx > reqSel_oldest_bits_uop_uopIdx)
          : (|_GEN)) begin
      req_uop_uopIdx <= reqSel_oldest_bits_uop_uopIdx;
      req_uop_robIdx_flag <= reqSel_oldest_bits_uop_robIdx_flag;
      req_uop_robIdx_value <= reqSel_oldest_bits_uop_robIdx_value;
      req_fullva <=
        _reqSel_oldest_T
          ? (_reqSel_oldest_T_7 ? reqSel_res_1_bits_fullva : reqSel_res_0_bits_fullva)
          : _reqSel_oldest_T_10 ? reqSel_res_0_bits_fullva : reqSel_res_1_bits_fullva;
      req_vaNeedExt <=
        _reqSel_oldest_T
          ? (_reqSel_oldest_T_7
               ? reqSel_res_1_bits_vaNeedExt
               : reqSel_res_0_bits_vaNeedExt)
          : _reqSel_oldest_T_10
              ? reqSel_res_0_bits_vaNeedExt
              : reqSel_res_1_bits_vaNeedExt;
      req_isHyper <=
        _reqSel_oldest_T
          ? (_reqSel_oldest_T_7 ? reqSel_res_1_bits_isHyper : reqSel_res_0_bits_isHyper)
          : _reqSel_oldest_T_10 ? reqSel_res_0_bits_isHyper : reqSel_res_1_bits_isHyper;
      req_gpaddr <=
        _reqSel_oldest_T
          ? (_reqSel_oldest_T_7 ? reqSel_res_1_bits_gpaddr : reqSel_res_0_bits_gpaddr)
          : _reqSel_oldest_T_10 ? reqSel_res_0_bits_gpaddr : reqSel_res_1_bits_gpaddr;
      req_isForVSnonLeafPTE <=
        _reqSel_oldest_T
          ? (_reqSel_oldest_T_7
               ? reqSel_res_1_bits_isForVSnonLeafPTE
               : reqSel_res_0_bits_isForVSnonLeafPTE)
          : _reqSel_oldest_T_10
              ? reqSel_res_0_bits_isForVSnonLeafPTE
              : reqSel_res_1_bits_isForVSnonLeafPTE;
    end
    if (s1_valid_0) begin
      s2_req_0_uop_uopIdx <= io_storeAddrIn_0_bits_uop_uopIdx;
      s2_req_0_uop_robIdx_flag <= io_storeAddrIn_0_bits_uop_robIdx_flag;
      s2_req_0_uop_robIdx_value <= io_storeAddrIn_0_bits_uop_robIdx_value;
      s2_req_0_fullva <= io_storeAddrIn_0_bits_fullva;
      s2_req_0_vaNeedExt <= io_storeAddrIn_0_bits_vaNeedExt;
      s2_req_0_isHyper <= io_storeAddrIn_0_bits_isHyper;
      s2_req_0_gpaddr <= io_storeAddrIn_0_bits_gpaddr;
      s2_req_0_isForVSnonLeafPTE <= io_storeAddrIn_0_bits_isForVSnonLeafPTE;
    end
    if (s1_valid_1) begin
      s2_req_1_uop_uopIdx <= io_storeAddrIn_1_bits_uop_uopIdx;
      s2_req_1_uop_robIdx_flag <= io_storeAddrIn_1_bits_uop_robIdx_flag;
      s2_req_1_uop_robIdx_value <= io_storeAddrIn_1_bits_uop_robIdx_value;
      s2_req_1_fullva <= io_storeAddrIn_1_bits_fullva;
      s2_req_1_vaNeedExt <= io_storeAddrIn_1_bits_vaNeedExt;
      s2_req_1_isHyper <= io_storeAddrIn_1_bits_isHyper;
      s2_req_1_gpaddr <= io_storeAddrIn_1_bits_gpaddr;
      s2_req_1_isForVSnonLeafPTE <= io_storeAddrIn_1_bits_isForVSnonLeafPTE;
    end
    if (s1_valid_2) begin
      s2_req_2_uop_uopIdx <= io_storeAddrIn_2_bits_uop_uopIdx;
      s2_req_2_uop_robIdx_flag <= io_storeAddrIn_2_bits_uop_robIdx_flag;
      s2_req_2_uop_robIdx_value <= io_storeAddrIn_2_bits_uop_robIdx_value;
      s2_req_2_fullva <= io_storeAddrIn_2_bits_fullva;
      s2_req_2_vaNeedExt <= io_storeAddrIn_2_bits_vaNeedExt;
      s2_req_2_isHyper <= io_storeAddrIn_2_bits_isHyper;
      s2_req_2_gpaddr <= io_storeAddrIn_2_bits_gpaddr;
      s2_req_2_isForVSnonLeafPTE <= io_storeAddrIn_2_bits_isForVSnonLeafPTE;
    end
    if (s1_valid_3) begin
      s2_req_3_uop_uopIdx <= io_storeAddrIn_3_bits_uop_uopIdx;
      s2_req_3_uop_robIdx_flag <= io_storeAddrIn_3_bits_uop_robIdx_flag;
      s2_req_3_uop_robIdx_value <= io_storeAddrIn_3_bits_uop_robIdx_value;
      s2_req_3_fullva <= io_storeAddrIn_3_bits_fullva;
      s2_req_3_vaNeedExt <= io_storeAddrIn_3_bits_vaNeedExt;
      s2_req_3_isHyper <= io_storeAddrIn_3_bits_isHyper;
      s2_req_3_gpaddr <= io_storeAddrIn_3_bits_gpaddr;
      s2_req_3_isForVSnonLeafPTE <= io_storeAddrIn_3_bits_isForVSnonLeafPTE;
    end
    if (s1_valid_4) begin
      s2_req_4_uop_uopIdx <= io_storeAddrIn_4_bits_uop_uopIdx;
      s2_req_4_uop_robIdx_flag <= io_storeAddrIn_4_bits_uop_robIdx_flag;
      s2_req_4_uop_robIdx_value <= io_storeAddrIn_4_bits_uop_robIdx_value;
      s2_req_4_fullva <= io_storeAddrIn_4_bits_fullva;
      s2_req_4_vaNeedExt <= io_storeAddrIn_4_bits_vaNeedExt;
      s2_req_4_gpaddr <= io_storeAddrIn_4_bits_gpaddr;
      s2_req_4_isForVSnonLeafPTE <= io_storeAddrIn_4_bits_isForVSnonLeafPTE;
    end
    if (s1_valid_5) begin
      s2_req_5_uop_uopIdx <= io_storeAddrIn_5_bits_uop_uopIdx;
      s2_req_5_uop_robIdx_flag <= io_storeAddrIn_5_bits_uop_robIdx_flag;
      s2_req_5_uop_robIdx_value <= io_storeAddrIn_5_bits_uop_robIdx_value;
      s2_req_5_fullva <= io_storeAddrIn_5_bits_fullva;
      s2_req_5_vaNeedExt <= io_storeAddrIn_5_bits_vaNeedExt;
      s2_req_5_gpaddr <= io_storeAddrIn_5_bits_gpaddr;
      s2_req_5_isForVSnonLeafPTE <= io_storeAddrIn_5_bits_isForVSnonLeafPTE;
    end
    if (s1_valid_6) begin
      s2_req_6_uop_uopIdx <= io_storeAddrIn_6_bits_uop_uopIdx;
      s2_req_6_uop_robIdx_flag <= io_storeAddrIn_6_bits_uop_robIdx_flag;
      s2_req_6_uop_robIdx_value <= io_storeAddrIn_6_bits_uop_robIdx_value;
      s2_req_6_fullva <= io_storeAddrIn_6_bits_fullva;
    end
    s2_valid_REG <= s1_valid_0;
    s2_valid_REG_1 <= s1_valid_1;
    s2_valid_REG_2 <= s1_valid_2;
    s2_valid_REG_3 <= s1_valid_3;
    s2_valid_REG_4 <= s1_valid_4;
    s2_valid_REG_5 <= s1_valid_5;
    s2_valid_REG_6 <= s1_valid_6;
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:487];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [8:0] i = 9'h0; i < 9'h1E8; i += 9'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        req_valid = _RANDOM[9'h0][0];
        req_uop_uopIdx = _RANDOM[9'hE][25:19];
        req_uop_robIdx_flag = _RANDOM[9'h12][13];
        req_uop_robIdx_value = _RANDOM[9'h12][21:14];
        req_fullva = {_RANDOM[9'h28], _RANDOM[9'h29]};
        req_vaNeedExt = _RANDOM[9'h2A][0];
        req_isHyper = _RANDOM[9'h2A][1];
        req_gpaddr = {_RANDOM[9'h2B][31:18], _RANDOM[9'h2C], _RANDOM[9'h2D][17:0]};
        req_isForVSnonLeafPTE = _RANDOM[9'h2D][18];
        s2_req_0_uop_uopIdx = _RANDOM[9'h4B][21:15];
        s2_req_0_uop_robIdx_flag = _RANDOM[9'h4F][9];
        s2_req_0_uop_robIdx_value = _RANDOM[9'h4F][17:10];
        s2_req_0_fullva = {_RANDOM[9'h64][31:28], _RANDOM[9'h65], _RANDOM[9'h66][27:0]};
        s2_req_0_vaNeedExt = _RANDOM[9'h66][28];
        s2_req_0_isHyper = _RANDOM[9'h66][29];
        s2_req_0_gpaddr = {_RANDOM[9'h68][31:14], _RANDOM[9'h69], _RANDOM[9'h6A][13:0]};
        s2_req_0_isForVSnonLeafPTE = _RANDOM[9'h6A][14];
        s2_req_1_uop_uopIdx = _RANDOM[9'h88][17:11];
        s2_req_1_uop_robIdx_flag = _RANDOM[9'h8C][5];
        s2_req_1_uop_robIdx_value = _RANDOM[9'h8C][13:6];
        s2_req_1_fullva = {_RANDOM[9'hA1][31:24], _RANDOM[9'hA2], _RANDOM[9'hA3][23:0]};
        s2_req_1_vaNeedExt = _RANDOM[9'hA3][24];
        s2_req_1_isHyper = _RANDOM[9'hA3][25];
        s2_req_1_gpaddr = {_RANDOM[9'hA5][31:10], _RANDOM[9'hA6], _RANDOM[9'hA7][9:0]};
        s2_req_1_isForVSnonLeafPTE = _RANDOM[9'hA7][10];
        s2_req_2_uop_uopIdx = _RANDOM[9'hC5][13:7];
        s2_req_2_uop_robIdx_flag = _RANDOM[9'hC9][1];
        s2_req_2_uop_robIdx_value = _RANDOM[9'hC9][9:2];
        s2_req_2_fullva = {_RANDOM[9'hDE][31:20], _RANDOM[9'hDF], _RANDOM[9'hE0][19:0]};
        s2_req_2_vaNeedExt = _RANDOM[9'hE0][20];
        s2_req_2_isHyper = _RANDOM[9'hE0][21];
        s2_req_2_gpaddr = {_RANDOM[9'hE2][31:6], _RANDOM[9'hE3], _RANDOM[9'hE4][5:0]};
        s2_req_2_isForVSnonLeafPTE = _RANDOM[9'hE4][6];
        s2_req_3_uop_uopIdx = _RANDOM[9'h102][9:3];
        s2_req_3_uop_robIdx_flag = _RANDOM[9'h105][29];
        s2_req_3_uop_robIdx_value = {_RANDOM[9'h105][31:30], _RANDOM[9'h106][5:0]};
        s2_req_3_fullva =
          {_RANDOM[9'h11B][31:16], _RANDOM[9'h11C], _RANDOM[9'h11D][15:0]};
        s2_req_3_vaNeedExt = _RANDOM[9'h11D][16];
        s2_req_3_isHyper = _RANDOM[9'h11D][17];
        s2_req_3_gpaddr = {_RANDOM[9'h11F][31:2], _RANDOM[9'h120], _RANDOM[9'h121][1:0]};
        s2_req_3_isForVSnonLeafPTE = _RANDOM[9'h121][2];
        s2_req_4_uop_uopIdx = {_RANDOM[9'h13E][31], _RANDOM[9'h13F][5:0]};
        s2_req_4_uop_robIdx_flag = _RANDOM[9'h142][25];
        s2_req_4_uop_robIdx_value = {_RANDOM[9'h142][31:26], _RANDOM[9'h143][1:0]};
        s2_req_4_fullva =
          {_RANDOM[9'h158][31:12], _RANDOM[9'h159], _RANDOM[9'h15A][11:0]};
        s2_req_4_vaNeedExt = _RANDOM[9'h15A][12];
        s2_req_4_gpaddr =
          {_RANDOM[9'h15B][31:30], _RANDOM[9'h15C], _RANDOM[9'h15D][29:0]};
        s2_req_4_isForVSnonLeafPTE = _RANDOM[9'h15D][30];
        s2_req_5_uop_uopIdx = {_RANDOM[9'h17B][31:27], _RANDOM[9'h17C][1:0]};
        s2_req_5_uop_robIdx_flag = _RANDOM[9'h17F][21];
        s2_req_5_uop_robIdx_value = _RANDOM[9'h17F][29:22];
        s2_req_5_fullva = {_RANDOM[9'h195][31:8], _RANDOM[9'h196], _RANDOM[9'h197][7:0]};
        s2_req_5_vaNeedExt = _RANDOM[9'h197][8];
        s2_req_5_gpaddr =
          {_RANDOM[9'h198][31:26], _RANDOM[9'h199], _RANDOM[9'h19A][25:0]};
        s2_req_5_isForVSnonLeafPTE = _RANDOM[9'h19A][26];
        s2_req_6_uop_uopIdx = _RANDOM[9'h1B8][29:23];
        s2_req_6_uop_robIdx_flag = _RANDOM[9'h1BC][17];
        s2_req_6_uop_robIdx_value = _RANDOM[9'h1BC][25:18];
        s2_req_6_fullva = {_RANDOM[9'h1D2][31:4], _RANDOM[9'h1D3], _RANDOM[9'h1D4][3:0]};
        s2_valid_REG = _RANDOM[9'h1E7][1];
        s2_valid_REG_1 = _RANDOM[9'h1E7][2];
        s2_valid_REG_2 = _RANDOM[9'h1E7][3];
        s2_valid_REG_3 = _RANDOM[9'h1E7][4];
        s2_valid_REG_4 = _RANDOM[9'h1E7][5];
        s2_valid_REG_5 = _RANDOM[9'h1E7][6];
        s2_valid_REG_6 = _RANDOM[9'h1E7][7];
      `endif // RANDOMIZE_REG_INIT
      if (reset)
        req_valid = 1'h0;
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_exceptionAddr_vaddr = req_fullva;
  assign io_exceptionAddr_vaNeedExt = req_vaNeedExt;
  assign io_exceptionAddr_isHyper = req_isHyper;
  assign io_exceptionAddr_gpaddr = req_gpaddr;
  assign io_exceptionAddr_isForVSnonLeafPTE = req_isForVSnonLeafPTE;
endmodule

