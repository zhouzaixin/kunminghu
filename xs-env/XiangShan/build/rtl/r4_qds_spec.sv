// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module r4_qds_spec(
  input  [8:0] rem_i,
  input  [8:0] sqrt_csa_val_neg_2_msbs_i,
  input  [8:0] sqrt_csa_val_neg_1_msbs_i,
  input  [8:0] sqrt_csa_val_pos_1_msbs_i,
  input  [8:0] sqrt_csa_val_pos_2_msbs_i,
  input  [6:0] m_neg_1_neg_2_i,
  input  [6:0] m_neg_0_neg_2_i,
  input  [6:0] m_pos_1_neg_2_i,
  input  [6:0] m_pos_2_neg_2_i,
  input  [6:0] m_neg_1_neg_1_i,
  input  [6:0] m_neg_0_neg_1_i,
  input  [6:0] m_pos_1_neg_1_i,
  input  [6:0] m_pos_2_neg_1_i,
  input  [6:0] m_neg_1_neg_0_i,
  input  [6:0] m_neg_0_neg_0_i,
  input  [6:0] m_pos_1_neg_0_i,
  input  [6:0] m_pos_2_neg_0_i,
  input  [6:0] m_neg_1_pos_1_i,
  input  [6:0] m_neg_0_pos_1_i,
  input  [6:0] m_pos_1_pos_1_i,
  input  [6:0] m_pos_2_pos_1_i,
  input  [6:0] m_neg_1_pos_2_i,
  input  [6:0] m_neg_0_pos_2_i,
  input  [6:0] m_pos_1_pos_2_i,
  input  [6:0] m_pos_2_pos_2_i,
  input  [4:0] prev_rt_dig_i,
  output [4:0] rt_dig_o
);

  wire [8:0] _qds_sign_spec_4_T_18 = 9'(rem_i + sqrt_csa_val_neg_2_msbs_i);
  wire [8:0] _qds_sign_spec_4_T_3 = 9'(_qds_sign_spec_4_T_18 + {m_pos_2_neg_2_i, 2'h0});
  wire [8:0] _qds_sign_spec_4_T_9 = 9'(_qds_sign_spec_4_T_18 + {m_pos_1_neg_2_i, 2'h0});
  wire [8:0] _qds_sign_spec_4_T_15 = 9'(_qds_sign_spec_4_T_18 + {m_neg_0_neg_2_i, 2'h0});
  wire [8:0] _qds_sign_spec_4_T_21 = 9'(_qds_sign_spec_4_T_18 + {m_neg_1_neg_2_i, 2'h0});
  wire [8:0] _qds_sign_spec_3_T_18 = 9'(rem_i + sqrt_csa_val_neg_1_msbs_i);
  wire [8:0] _qds_sign_spec_3_T_3 = 9'(_qds_sign_spec_3_T_18 + {m_pos_2_neg_1_i, 2'h0});
  wire [8:0] _qds_sign_spec_3_T_9 = 9'(_qds_sign_spec_3_T_18 + {m_pos_1_neg_1_i, 2'h0});
  wire [8:0] _qds_sign_spec_3_T_15 = 9'(_qds_sign_spec_3_T_18 + {m_neg_0_neg_1_i, 2'h0});
  wire [8:0] _qds_sign_spec_3_T_21 = 9'(_qds_sign_spec_3_T_18 + {m_neg_1_neg_1_i, 2'h0});
  wire [8:0] _qds_sign_spec_2_T_1 = 9'(rem_i + {m_pos_2_neg_0_i, 2'h0});
  wire [8:0] _qds_sign_spec_2_T_5 = 9'(rem_i + {m_pos_1_neg_0_i, 2'h0});
  wire [8:0] _qds_sign_spec_2_T_9 = 9'(rem_i + {m_neg_0_neg_0_i, 2'h0});
  wire [8:0] _qds_sign_spec_2_T_13 = 9'(rem_i + {m_neg_1_neg_0_i, 2'h0});
  wire [8:0] _qds_sign_spec_1_T_18 = 9'(rem_i + sqrt_csa_val_pos_1_msbs_i);
  wire [8:0] _qds_sign_spec_1_T_3 = 9'(_qds_sign_spec_1_T_18 + {m_pos_2_pos_1_i, 2'h0});
  wire [8:0] _qds_sign_spec_1_T_9 = 9'(_qds_sign_spec_1_T_18 + {m_pos_1_pos_1_i, 2'h0});
  wire [8:0] _qds_sign_spec_1_T_15 = 9'(_qds_sign_spec_1_T_18 + {m_neg_0_pos_1_i, 2'h0});
  wire [8:0] _qds_sign_spec_1_T_21 = 9'(_qds_sign_spec_1_T_18 + {m_neg_1_pos_1_i, 2'h0});
  wire [8:0] _qds_sign_spec_0_T_18 = 9'(rem_i + sqrt_csa_val_pos_2_msbs_i);
  wire [8:0] _qds_sign_spec_0_T_3 = 9'(_qds_sign_spec_0_T_18 + {m_pos_2_pos_2_i, 2'h0});
  wire [8:0] _qds_sign_spec_0_T_9 = 9'(_qds_sign_spec_0_T_18 + {m_pos_1_pos_2_i, 2'h0});
  wire [8:0] _qds_sign_spec_0_T_15 = 9'(_qds_sign_spec_0_T_18 + {m_neg_0_pos_2_i, 2'h0});
  wire [8:0] _qds_sign_spec_0_T_21 = 9'(_qds_sign_spec_0_T_18 + {m_neg_1_pos_2_i, 2'h0});
  wire [3:0] _qds_sign_T_13 =
    (prev_rt_dig_i[4]
       ? {_qds_sign_spec_4_T_3[8],
          _qds_sign_spec_4_T_9[8],
          _qds_sign_spec_4_T_15[8],
          _qds_sign_spec_4_T_21[8]}
       : 4'h0)
    | (prev_rt_dig_i[3]
         ? {_qds_sign_spec_3_T_3[8],
            _qds_sign_spec_3_T_9[8],
            _qds_sign_spec_3_T_15[8],
            _qds_sign_spec_3_T_21[8]}
         : 4'h0)
    | (prev_rt_dig_i[2]
         ? {_qds_sign_spec_2_T_1[8],
            _qds_sign_spec_2_T_5[8],
            _qds_sign_spec_2_T_9[8],
            _qds_sign_spec_2_T_13[8]}
         : 4'h0)
    | (prev_rt_dig_i[1]
         ? {_qds_sign_spec_1_T_3[8],
            _qds_sign_spec_1_T_9[8],
            _qds_sign_spec_1_T_15[8],
            _qds_sign_spec_1_T_21[8]}
         : 4'h0)
    | (prev_rt_dig_i[0]
         ? {_qds_sign_spec_0_T_3[8],
            _qds_sign_spec_0_T_9[8],
            _qds_sign_spec_0_T_15[8],
            _qds_sign_spec_0_T_21[8]}
         : 4'h0);
  assign rt_dig_o =
    {&(_qds_sign_T_13[1:0]),
     _qds_sign_T_13[1:0] == 2'h2,
     _qds_sign_T_13[2:1] == 2'h2,
     _qds_sign_T_13[3:2] == 2'h2,
     _qds_sign_T_13[3:2] == 2'h0};
endmodule

