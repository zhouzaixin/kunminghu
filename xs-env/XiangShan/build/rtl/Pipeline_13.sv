// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module Pipeline_13(
  input         clock,
  input         reset,
  output        io_in_ready,
  input         io_in_valid,
  input         io_in_bits_counter,
  input         io_in_bits_beat,
  input         io_in_bits_last,
  input         io_in_bits_needPb,
  input         io_in_bits_need_d,
  input         io_in_bits_isReleaseAck,
  input  [10:0] io_in_bits_req_sourceId,
  input  [10:0] io_in_bits_req_set,
  input  [30:0] io_in_bits_req_tag,
  input  [2:0]  io_in_bits_req_channel,
  input  [2:0]  io_in_bits_req_opcode,
  input  [2:0]  io_in_bits_req_param,
  input  [2:0]  io_in_bits_req_size,
  input  [2:0]  io_in_bits_req_way,
  input  [5:0]  io_in_bits_req_off,
  input         io_in_bits_req_useBypass,
  input  [3:0]  io_in_bits_req_bufIdx,
  input         io_in_bits_req_denied,
  input  [3:0]  io_in_bits_req_sinkId,
  input         io_in_bits_req_bypassPut,
  input         io_in_bits_req_dirty,
  input         io_in_bits_req_isHit,
  input         io_out_ready,
  output        io_out_valid,
  output        io_out_bits_counter,
  output        io_out_bits_beat,
  output        io_out_bits_last,
  output        io_out_bits_needPb,
  output        io_out_bits_isReleaseAck,
  output [10:0] io_out_bits_req_sourceId,
  output [10:0] io_out_bits_req_set,
  output [2:0]  io_out_bits_req_opcode,
  output [2:0]  io_out_bits_req_param,
  output [2:0]  io_out_bits_req_size,
  output [2:0]  io_out_bits_req_way,
  output        io_out_bits_req_denied,
  output [3:0]  io_out_bits_req_sinkId,
  output        io_out_bits_req_dirty
);

  wire        _stages_1_io_enq_ready;
  wire        _stages_0_io_deq_valid;
  wire        _stages_0_io_deq_bits_counter;
  wire        _stages_0_io_deq_bits_beat;
  wire        _stages_0_io_deq_bits_last;
  wire        _stages_0_io_deq_bits_needPb;
  wire        _stages_0_io_deq_bits_need_d;
  wire        _stages_0_io_deq_bits_isReleaseAck;
  wire [10:0] _stages_0_io_deq_bits_req_sourceId;
  wire [10:0] _stages_0_io_deq_bits_req_set;
  wire [30:0] _stages_0_io_deq_bits_req_tag;
  wire [2:0]  _stages_0_io_deq_bits_req_channel;
  wire [2:0]  _stages_0_io_deq_bits_req_opcode;
  wire [2:0]  _stages_0_io_deq_bits_req_param;
  wire [2:0]  _stages_0_io_deq_bits_req_size;
  wire [2:0]  _stages_0_io_deq_bits_req_way;
  wire [5:0]  _stages_0_io_deq_bits_req_off;
  wire        _stages_0_io_deq_bits_req_useBypass;
  wire [3:0]  _stages_0_io_deq_bits_req_bufIdx;
  wire        _stages_0_io_deq_bits_req_denied;
  wire [3:0]  _stages_0_io_deq_bits_req_sinkId;
  wire        _stages_0_io_deq_bits_req_bypassPut;
  wire        _stages_0_io_deq_bits_req_dirty;
  wire        _stages_0_io_deq_bits_req_isHit;
  Queue1_PipeInfo stages_0 (
    .clock                     (clock),
    .reset                     (reset),
    .io_enq_ready              (io_in_ready),
    .io_enq_valid              (io_in_valid),
    .io_enq_bits_counter       (io_in_bits_counter),
    .io_enq_bits_beat          (io_in_bits_beat),
    .io_enq_bits_last          (io_in_bits_last),
    .io_enq_bits_needPb        (io_in_bits_needPb),
    .io_enq_bits_need_d        (io_in_bits_need_d),
    .io_enq_bits_isReleaseAck  (io_in_bits_isReleaseAck),
    .io_enq_bits_req_sourceId  (io_in_bits_req_sourceId),
    .io_enq_bits_req_set       (io_in_bits_req_set),
    .io_enq_bits_req_tag       (io_in_bits_req_tag),
    .io_enq_bits_req_channel   (io_in_bits_req_channel),
    .io_enq_bits_req_opcode    (io_in_bits_req_opcode),
    .io_enq_bits_req_param     (io_in_bits_req_param),
    .io_enq_bits_req_size      (io_in_bits_req_size),
    .io_enq_bits_req_way       (io_in_bits_req_way),
    .io_enq_bits_req_off       (io_in_bits_req_off),
    .io_enq_bits_req_useBypass (io_in_bits_req_useBypass),
    .io_enq_bits_req_bufIdx    (io_in_bits_req_bufIdx),
    .io_enq_bits_req_denied    (io_in_bits_req_denied),
    .io_enq_bits_req_sinkId    (io_in_bits_req_sinkId),
    .io_enq_bits_req_bypassPut (io_in_bits_req_bypassPut),
    .io_enq_bits_req_dirty     (io_in_bits_req_dirty),
    .io_enq_bits_req_isHit     (io_in_bits_req_isHit),
    .io_deq_ready              (_stages_1_io_enq_ready),
    .io_deq_valid              (_stages_0_io_deq_valid),
    .io_deq_bits_counter       (_stages_0_io_deq_bits_counter),
    .io_deq_bits_beat          (_stages_0_io_deq_bits_beat),
    .io_deq_bits_last          (_stages_0_io_deq_bits_last),
    .io_deq_bits_needPb        (_stages_0_io_deq_bits_needPb),
    .io_deq_bits_need_d        (_stages_0_io_deq_bits_need_d),
    .io_deq_bits_isReleaseAck  (_stages_0_io_deq_bits_isReleaseAck),
    .io_deq_bits_req_sourceId  (_stages_0_io_deq_bits_req_sourceId),
    .io_deq_bits_req_set       (_stages_0_io_deq_bits_req_set),
    .io_deq_bits_req_tag       (_stages_0_io_deq_bits_req_tag),
    .io_deq_bits_req_channel   (_stages_0_io_deq_bits_req_channel),
    .io_deq_bits_req_opcode    (_stages_0_io_deq_bits_req_opcode),
    .io_deq_bits_req_param     (_stages_0_io_deq_bits_req_param),
    .io_deq_bits_req_size      (_stages_0_io_deq_bits_req_size),
    .io_deq_bits_req_way       (_stages_0_io_deq_bits_req_way),
    .io_deq_bits_req_off       (_stages_0_io_deq_bits_req_off),
    .io_deq_bits_req_useBypass (_stages_0_io_deq_bits_req_useBypass),
    .io_deq_bits_req_bufIdx    (_stages_0_io_deq_bits_req_bufIdx),
    .io_deq_bits_req_denied    (_stages_0_io_deq_bits_req_denied),
    .io_deq_bits_req_sinkId    (_stages_0_io_deq_bits_req_sinkId),
    .io_deq_bits_req_bypassPut (_stages_0_io_deq_bits_req_bypassPut),
    .io_deq_bits_req_dirty     (_stages_0_io_deq_bits_req_dirty),
    .io_deq_bits_req_isHit     (_stages_0_io_deq_bits_req_isHit)
  );
  Queue1_PipeInfo stages_1 (
    .clock                     (clock),
    .reset                     (reset),
    .io_enq_ready              (_stages_1_io_enq_ready),
    .io_enq_valid              (_stages_0_io_deq_valid),
    .io_enq_bits_counter       (_stages_0_io_deq_bits_counter),
    .io_enq_bits_beat          (_stages_0_io_deq_bits_beat),
    .io_enq_bits_last          (_stages_0_io_deq_bits_last),
    .io_enq_bits_needPb        (_stages_0_io_deq_bits_needPb),
    .io_enq_bits_need_d        (_stages_0_io_deq_bits_need_d),
    .io_enq_bits_isReleaseAck  (_stages_0_io_deq_bits_isReleaseAck),
    .io_enq_bits_req_sourceId  (_stages_0_io_deq_bits_req_sourceId),
    .io_enq_bits_req_set       (_stages_0_io_deq_bits_req_set),
    .io_enq_bits_req_tag       (_stages_0_io_deq_bits_req_tag),
    .io_enq_bits_req_channel   (_stages_0_io_deq_bits_req_channel),
    .io_enq_bits_req_opcode    (_stages_0_io_deq_bits_req_opcode),
    .io_enq_bits_req_param     (_stages_0_io_deq_bits_req_param),
    .io_enq_bits_req_size      (_stages_0_io_deq_bits_req_size),
    .io_enq_bits_req_way       (_stages_0_io_deq_bits_req_way),
    .io_enq_bits_req_off       (_stages_0_io_deq_bits_req_off),
    .io_enq_bits_req_useBypass (_stages_0_io_deq_bits_req_useBypass),
    .io_enq_bits_req_bufIdx    (_stages_0_io_deq_bits_req_bufIdx),
    .io_enq_bits_req_denied    (_stages_0_io_deq_bits_req_denied),
    .io_enq_bits_req_sinkId    (_stages_0_io_deq_bits_req_sinkId),
    .io_enq_bits_req_bypassPut (_stages_0_io_deq_bits_req_bypassPut),
    .io_enq_bits_req_dirty     (_stages_0_io_deq_bits_req_dirty),
    .io_enq_bits_req_isHit     (_stages_0_io_deq_bits_req_isHit),
    .io_deq_ready              (io_out_ready),
    .io_deq_valid              (io_out_valid),
    .io_deq_bits_counter       (io_out_bits_counter),
    .io_deq_bits_beat          (io_out_bits_beat),
    .io_deq_bits_last          (io_out_bits_last),
    .io_deq_bits_needPb        (io_out_bits_needPb),
    .io_deq_bits_need_d        (/* unused */),
    .io_deq_bits_isReleaseAck  (io_out_bits_isReleaseAck),
    .io_deq_bits_req_sourceId  (io_out_bits_req_sourceId),
    .io_deq_bits_req_set       (io_out_bits_req_set),
    .io_deq_bits_req_tag       (/* unused */),
    .io_deq_bits_req_channel   (/* unused */),
    .io_deq_bits_req_opcode    (io_out_bits_req_opcode),
    .io_deq_bits_req_param     (io_out_bits_req_param),
    .io_deq_bits_req_size      (io_out_bits_req_size),
    .io_deq_bits_req_way       (io_out_bits_req_way),
    .io_deq_bits_req_off       (/* unused */),
    .io_deq_bits_req_useBypass (/* unused */),
    .io_deq_bits_req_bufIdx    (/* unused */),
    .io_deq_bits_req_denied    (io_out_bits_req_denied),
    .io_deq_bits_req_sinkId    (io_out_bits_req_sinkId),
    .io_deq_bits_req_bypassPut (/* unused */),
    .io_deq_bits_req_dirty     (io_out_bits_req_dirty),
    .io_deq_bits_req_isHit     (/* unused */)
  );
endmodule

