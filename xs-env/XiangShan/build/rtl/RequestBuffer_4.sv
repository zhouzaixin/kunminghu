// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module RequestBuffer_4(
  input         clock,
  input         reset,
  output        io_in_ready,
  input         io_in_valid,
  input  [2:0]  io_in_bits_channel,
  input  [2:0]  io_in_bits_opcode,
  input  [2:0]  io_in_bits_param,
  input  [2:0]  io_in_bits_size,
  input  [10:0] io_in_bits_source,
  input  [10:0] io_in_bits_set,
  input  [30:0] io_in_bits_tag,
  input  [5:0]  io_in_bits_off,
  input  [31:0] io_in_bits_mask,
  input  [3:0]  io_in_bits_bufIdx,
  input         io_in_bits_needHint,
  input         io_in_bits_isPrefetch,
  input         io_in_bits_isBop,
  input         io_in_bits_preferCache,
  input         io_in_bits_dirty,
  input         io_in_bits_isHit,
  input         io_in_bits_fromProbeHelper,
  input         io_in_bits_fromCmoHelper,
  input         io_in_bits_needProbeAckData,
  input  [3:0]  io_in_bits_reqSource,
  input         io_out_ready,
  output        io_out_valid,
  output [2:0]  io_out_bits_channel,
  output [2:0]  io_out_bits_opcode,
  output [2:0]  io_out_bits_param,
  output [2:0]  io_out_bits_size,
  output [10:0] io_out_bits_source,
  output [10:0] io_out_bits_set,
  output [30:0] io_out_bits_tag,
  output [5:0]  io_out_bits_off,
  output [31:0] io_out_bits_mask,
  output [3:0]  io_out_bits_bufIdx,
  output        io_out_bits_needHint,
  output        io_out_bits_isPrefetch,
  output        io_out_bits_isBop,
  output        io_out_bits_preferCache,
  output        io_out_bits_dirty,
  output        io_out_bits_fromProbeHelper,
  output        io_out_bits_fromCmoHelper,
  output        io_out_bits_needProbeAckData,
  output [3:0]  io_out_bits_reqSource,
  input         io_mshr_status_0_valid,
  input  [10:0] io_mshr_status_0_bits_set,
  input         io_mshr_status_0_bits_will_free,
  input         io_mshr_status_1_valid,
  input  [10:0] io_mshr_status_1_bits_set,
  input         io_mshr_status_1_bits_will_free,
  input         io_mshr_status_2_valid,
  input  [10:0] io_mshr_status_2_bits_set,
  input         io_mshr_status_2_bits_will_free,
  input         io_mshr_status_3_valid,
  input  [10:0] io_mshr_status_3_bits_set,
  input         io_mshr_status_3_bits_will_free,
  input         io_mshr_status_4_valid,
  input  [10:0] io_mshr_status_4_bits_set,
  input         io_mshr_status_4_bits_will_free,
  input         io_mshr_status_5_valid,
  input  [10:0] io_mshr_status_5_bits_set,
  input         io_mshr_status_5_bits_will_free,
  input         io_mshr_status_6_valid,
  input  [10:0] io_mshr_status_6_bits_set,
  input         io_mshr_status_6_bits_will_free,
  input         io_mshr_status_7_valid,
  input  [10:0] io_mshr_status_7_bits_set,
  input         io_mshr_status_7_bits_will_free,
  input         io_mshr_status_8_valid,
  input  [10:0] io_mshr_status_8_bits_set,
  input         io_mshr_status_8_bits_will_free,
  input         io_mshr_status_9_valid,
  input  [10:0] io_mshr_status_9_bits_set,
  input         io_mshr_status_9_bits_will_free,
  input         io_mshr_status_10_valid,
  input  [10:0] io_mshr_status_10_bits_set,
  input         io_mshr_status_10_bits_will_free,
  input         io_mshr_status_11_valid,
  input  [10:0] io_mshr_status_11_bits_set,
  input         io_mshr_status_11_bits_will_free,
  input         io_mshr_status_12_valid,
  input  [10:0] io_mshr_status_12_bits_set,
  input         io_mshr_status_12_bits_will_free,
  input         io_mshr_status_13_valid,
  input  [10:0] io_mshr_status_13_bits_set,
  input         io_mshr_status_13_bits_will_free
);

  wire         _output_pipe_q_io_enq_ready;
  wire         _output_pipe_q_io_deq_valid;
  wire [2:0]   _output_pipe_q_io_deq_bits_channel;
  wire [2:0]   _output_pipe_q_io_deq_bits_opcode;
  wire [2:0]   _output_pipe_q_io_deq_bits_param;
  wire [2:0]   _output_pipe_q_io_deq_bits_size;
  wire [10:0]  _output_pipe_q_io_deq_bits_source;
  wire [10:0]  _output_pipe_q_io_deq_bits_set;
  wire [30:0]  _output_pipe_q_io_deq_bits_tag;
  wire [5:0]   _output_pipe_q_io_deq_bits_off;
  wire [31:0]  _output_pipe_q_io_deq_bits_mask;
  wire [3:0]   _output_pipe_q_io_deq_bits_bufIdx;
  wire         _output_pipe_q_io_deq_bits_needHint;
  wire         _output_pipe_q_io_deq_bits_isPrefetch;
  wire         _output_pipe_q_io_deq_bits_isBop;
  wire         _output_pipe_q_io_deq_bits_preferCache;
  wire         _output_pipe_q_io_deq_bits_dirty;
  wire         _output_pipe_q_io_deq_bits_fromProbeHelper;
  wire         _output_pipe_q_io_deq_bits_fromCmoHelper;
  wire         _output_pipe_q_io_deq_bits_needProbeAckData;
  wire [3:0]   _output_pipe_q_io_deq_bits_reqSource;
  wire         _issue_arb_io_in_0_ready;
  wire         _issue_arb_io_in_1_ready;
  wire         _issue_arb_io_in_2_ready;
  wire         _issue_arb_io_in_3_ready;
  wire         _issue_arb_io_out_valid;
  wire [2:0]   _issue_arb_io_out_bits_channel;
  wire [2:0]   _issue_arb_io_out_bits_opcode;
  wire [2:0]   _issue_arb_io_out_bits_param;
  wire [2:0]   _issue_arb_io_out_bits_size;
  wire [10:0]  _issue_arb_io_out_bits_source;
  wire [10:0]  _issue_arb_io_out_bits_set;
  wire [30:0]  _issue_arb_io_out_bits_tag;
  wire [5:0]   _issue_arb_io_out_bits_off;
  wire [31:0]  _issue_arb_io_out_bits_mask;
  wire [3:0]   _issue_arb_io_out_bits_bufIdx;
  wire         _issue_arb_io_out_bits_needHint;
  wire         _issue_arb_io_out_bits_isPrefetch;
  wire         _issue_arb_io_out_bits_isBop;
  wire         _issue_arb_io_out_bits_preferCache;
  wire         _issue_arb_io_out_bits_dirty;
  wire         _issue_arb_io_out_bits_isHit;
  wire         _issue_arb_io_out_bits_fromProbeHelper;
  wire         _issue_arb_io_out_bits_fromCmoHelper;
  wire         _issue_arb_io_out_bits_needProbeAckData;
  wire [3:0]   _issue_arb_io_out_bits_reqSource;
  wire [1:0]   _issue_arb_io_chosen;
  wire [119:0] _buffer_ext_R0_data;
  wire [119:0] _buffer_ext_R1_data;
  wire [119:0] _buffer_ext_R2_data;
  wire [119:0] _buffer_ext_R3_data;
  reg          valids_0;
  reg          valids_1;
  reg          valids_2;
  reg          valids_3;
  reg  [13:0]  wait_table_0;
  reg  [13:0]  wait_table_1;
  reg  [13:0]  wait_table_2;
  reg  [13:0]  wait_table_3;
  reg          buffer_dep_mask_0_0;
  reg          buffer_dep_mask_0_1;
  reg          buffer_dep_mask_0_2;
  reg          buffer_dep_mask_0_3;
  reg          buffer_dep_mask_1_0;
  reg          buffer_dep_mask_1_1;
  reg          buffer_dep_mask_1_2;
  reg          buffer_dep_mask_1_3;
  reg          buffer_dep_mask_2_0;
  reg          buffer_dep_mask_2_1;
  reg          buffer_dep_mask_2_2;
  reg          buffer_dep_mask_2_3;
  reg          buffer_dep_mask_3_0;
  reg          buffer_dep_mask_3_1;
  reg          buffer_dep_mask_3_2;
  reg          buffer_dep_mask_3_3;
  reg          rdys_0;
  reg          rdys_1;
  reg          rdys_2;
  reg          rdys_3;
  wire         _issue_arb_io_in_0_valid_T = valids_0 & rdys_0;
  wire         _issue_arb_io_in_1_valid_T = valids_1 & rdys_1;
  wire         _issue_arb_io_in_2_valid_T = valids_2 & rdys_2;
  wire         _issue_arb_io_in_3_valid_T = valids_3 & rdys_3;
  wire         io_in_ready_0 = {valids_0, valids_1, valids_2, valids_3} != 4'hF;
  wire         conflict_mask_0 =
    io_mshr_status_0_valid & io_mshr_status_0_bits_set[6:0] == io_in_bits_set[6:0]
    & ~io_mshr_status_0_bits_will_free;
  wire         conflict_mask_1 =
    io_mshr_status_1_valid & io_mshr_status_1_bits_set[6:0] == io_in_bits_set[6:0]
    & ~io_mshr_status_1_bits_will_free;
  wire         conflict_mask_2 =
    io_mshr_status_2_valid & io_mshr_status_2_bits_set[6:0] == io_in_bits_set[6:0]
    & ~io_mshr_status_2_bits_will_free;
  wire         conflict_mask_3 =
    io_mshr_status_3_valid & io_mshr_status_3_bits_set[6:0] == io_in_bits_set[6:0]
    & ~io_mshr_status_3_bits_will_free;
  wire         conflict_mask_4 =
    io_mshr_status_4_valid & io_mshr_status_4_bits_set[6:0] == io_in_bits_set[6:0]
    & ~io_mshr_status_4_bits_will_free;
  wire         conflict_mask_5 =
    io_mshr_status_5_valid & io_mshr_status_5_bits_set[6:0] == io_in_bits_set[6:0]
    & ~io_mshr_status_5_bits_will_free;
  wire         conflict_mask_6 =
    io_mshr_status_6_valid & io_mshr_status_6_bits_set[6:0] == io_in_bits_set[6:0]
    & ~io_mshr_status_6_bits_will_free;
  wire         conflict_mask_7 =
    io_mshr_status_7_valid & io_mshr_status_7_bits_set[6:0] == io_in_bits_set[6:0]
    & ~io_mshr_status_7_bits_will_free;
  wire         conflict_mask_8 =
    io_mshr_status_8_valid & io_mshr_status_8_bits_set[6:0] == io_in_bits_set[6:0]
    & ~io_mshr_status_8_bits_will_free;
  wire         conflict_mask_9 =
    io_mshr_status_9_valid & io_mshr_status_9_bits_set[6:0] == io_in_bits_set[6:0]
    & ~io_mshr_status_9_bits_will_free;
  wire         conflict_mask_10 =
    io_mshr_status_10_valid & io_mshr_status_10_bits_set[6:0] == io_in_bits_set[6:0]
    & ~io_mshr_status_10_bits_will_free;
  wire         conflict_mask_11 =
    io_mshr_status_11_valid & io_mshr_status_11_bits_set[6:0] == io_in_bits_set[6:0]
    & ~io_mshr_status_11_bits_will_free;
  wire         conflict_mask_12 =
    io_mshr_status_12_valid & io_mshr_status_12_bits_set[6:0] == io_in_bits_set[6:0]
    & ~io_mshr_status_12_bits_will_free;
  wire         conflict_mask_13 =
    io_mshr_status_13_valid & io_mshr_status_13_bits_set[6:0] == io_in_bits_set[6:0]
    & ~io_mshr_status_13_bits_will_free;
  wire [41:0]  _dup_mask_T_10 = {io_in_bits_tag, io_in_bits_set};
  wire         req_deps_0 = valids_0 & _buffer_ext_R3_data[29:23] == io_in_bits_set[6:0];
  wire         req_deps_1 = valids_1 & _buffer_ext_R2_data[29:23] == io_in_bits_set[6:0];
  wire         req_deps_2 = valids_2 & _buffer_ext_R1_data[29:23] == io_in_bits_set[6:0];
  wire         req_deps_3 = valids_3 & _buffer_ext_R0_data[29:23] == io_in_bits_set[6:0];
  wire [2:0]   _insert_idx_T_1 = ~{valids_2, valids_1, valids_0};
  wire [1:0]   insert_idx =
    _insert_idx_T_1[0] ? 2'h0 : _insert_idx_T_1[1] ? 2'h1 : {1'h1, ~(_insert_idx_T_1[2])};
  wire         alloc =
    io_in_ready_0 & io_in_valid & ~(~_output_pipe_q_io_deq_valid & io_out_ready)
    & ~(io_in_valid & io_in_bits_isPrefetch
        & (|{valids_0 & _buffer_ext_R3_data[64:23] == _dup_mask_T_10,
             valids_1 & _buffer_ext_R2_data[64:23] == _dup_mask_T_10,
             valids_2 & _buffer_ext_R1_data[64:23] == _dup_mask_T_10,
             valids_3 & _buffer_ext_R0_data[64:23] == _dup_mask_T_10}));
  wire         _GEN = alloc & insert_idx == 2'h0;
  wire         _GEN_0 = alloc & insert_idx == 2'h1;
  wire         _GEN_1 = alloc & insert_idx == 2'h2;
  wire         _GEN_2 = alloc & (&insert_idx);
  wire [13:0]  free_mask =
    {io_mshr_status_13_valid & io_mshr_status_13_bits_will_free,
     io_mshr_status_12_valid & io_mshr_status_12_bits_will_free,
     io_mshr_status_11_valid & io_mshr_status_11_bits_will_free,
     io_mshr_status_10_valid & io_mshr_status_10_bits_will_free,
     io_mshr_status_9_valid & io_mshr_status_9_bits_will_free,
     io_mshr_status_8_valid & io_mshr_status_8_bits_will_free,
     io_mshr_status_7_valid & io_mshr_status_7_bits_will_free,
     io_mshr_status_6_valid & io_mshr_status_6_bits_will_free,
     io_mshr_status_5_valid & io_mshr_status_5_bits_will_free,
     io_mshr_status_4_valid & io_mshr_status_4_bits_will_free,
     io_mshr_status_3_valid & io_mshr_status_3_bits_will_free,
     io_mshr_status_2_valid & io_mshr_status_2_bits_will_free,
     io_mshr_status_1_valid & io_mshr_status_1_bits_will_free,
     io_mshr_status_0_valid & io_mshr_status_0_bits_will_free};
  wire [13:0]  wait_next = wait_table_0 & ~free_mask;
  wire         _GEN_3 = _output_pipe_q_io_enq_ready & _issue_arb_io_out_valid;
  wire         _GEN_4 = _GEN_3 & _issue_arb_io_chosen == 2'h0;
  wire         _GEN_5 = _GEN_3 & _issue_arb_io_chosen == 2'h1;
  wire         _GEN_6 = _GEN_3 & _issue_arb_io_chosen == 2'h2;
  wire         _GEN_7 = _GEN_3 & (&_issue_arb_io_chosen);
  wire [13:0]  wait_next_1 = wait_table_1 & ~free_mask;
  wire [13:0]  wait_next_2 = wait_table_2 & ~free_mask;
  wire [13:0]  wait_next_3 = wait_table_3 & ~free_mask;
  wire         _rdys_T_4 =
    {conflict_mask_0,
     conflict_mask_1,
     conflict_mask_2,
     conflict_mask_3,
     conflict_mask_4,
     conflict_mask_5,
     conflict_mask_6,
     conflict_mask_7,
     conflict_mask_8,
     conflict_mask_9,
     conflict_mask_10,
     conflict_mask_11,
     conflict_mask_12,
     conflict_mask_13} == 14'h0
    & {req_deps_0, req_deps_1, req_deps_2, req_deps_3} == 4'h0;
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      valids_0 <= 1'h0;
      valids_1 <= 1'h0;
      valids_2 <= 1'h0;
      valids_3 <= 1'h0;
      rdys_0 <= 1'h0;
      rdys_1 <= 1'h0;
      rdys_2 <= 1'h0;
      rdys_3 <= 1'h0;
    end
    else begin
      valids_0 <=
        _GEN | ~(_issue_arb_io_in_0_ready & _issue_arb_io_in_0_valid_T) & valids_0;
      valids_1 <=
        _GEN_0 | ~(_issue_arb_io_in_1_ready & _issue_arb_io_in_1_valid_T) & valids_1;
      valids_2 <=
        _GEN_1 | ~(_issue_arb_io_in_2_ready & _issue_arb_io_in_2_valid_T) & valids_2;
      valids_3 <=
        _GEN_2 | ~(_issue_arb_io_in_3_ready & _issue_arb_io_in_3_valid_T) & valids_3;
      if (valids_0)
        rdys_0 <=
          wait_next == 14'h0
          & {~_GEN_4 & buffer_dep_mask_0_0,
             ~_GEN_5 & buffer_dep_mask_0_1,
             ~_GEN_6 & buffer_dep_mask_0_2,
             ~_GEN_7 & buffer_dep_mask_0_3} == 4'h0;
      else if (_GEN)
        rdys_0 <= _rdys_T_4;
      if (valids_1)
        rdys_1 <=
          wait_next_1 == 14'h0
          & {~_GEN_4 & buffer_dep_mask_1_0,
             ~_GEN_5 & buffer_dep_mask_1_1,
             ~_GEN_6 & buffer_dep_mask_1_2,
             ~_GEN_7 & buffer_dep_mask_1_3} == 4'h0;
      else if (_GEN_0)
        rdys_1 <= _rdys_T_4;
      if (valids_2)
        rdys_2 <=
          wait_next_2 == 14'h0
          & {~_GEN_4 & buffer_dep_mask_2_0,
             ~_GEN_5 & buffer_dep_mask_2_1,
             ~_GEN_6 & buffer_dep_mask_2_2,
             ~_GEN_7 & buffer_dep_mask_2_3} == 4'h0;
      else if (_GEN_1)
        rdys_2 <= _rdys_T_4;
      if (valids_3)
        rdys_3 <=
          wait_next_3 == 14'h0
          & {~_GEN_4 & buffer_dep_mask_3_0,
             ~_GEN_5 & buffer_dep_mask_3_1,
             ~_GEN_6 & buffer_dep_mask_3_2,
             ~_GEN_7 & buffer_dep_mask_3_3} == 4'h0;
      else if (_GEN_2)
        rdys_3 <= _rdys_T_4;
    end
  end // always @(posedge, posedge)
  wire [13:0]  _wait_table_T =
    {conflict_mask_13,
     conflict_mask_12,
     conflict_mask_11,
     conflict_mask_10,
     conflict_mask_9,
     conflict_mask_8,
     conflict_mask_7,
     conflict_mask_6,
     conflict_mask_5,
     conflict_mask_4,
     conflict_mask_3,
     conflict_mask_2,
     conflict_mask_1,
     conflict_mask_0};
  always @(posedge clock) begin
    if (valids_0)
      wait_table_0 <= wait_next;
    else if (_GEN)
      wait_table_0 <= _wait_table_T;
    if (valids_1)
      wait_table_1 <= wait_next_1;
    else if (_GEN_0)
      wait_table_1 <= _wait_table_T;
    if (valids_2)
      wait_table_2 <= wait_next_2;
    else if (_GEN_1)
      wait_table_2 <= _wait_table_T;
    if (valids_3)
      wait_table_3 <= wait_next_3;
    else if (_GEN_2)
      wait_table_3 <= _wait_table_T;
    buffer_dep_mask_0_0 <= ~_GEN_4 & (_GEN ? req_deps_0 : buffer_dep_mask_0_0);
    buffer_dep_mask_0_1 <= ~_GEN_5 & (_GEN ? req_deps_1 : buffer_dep_mask_0_1);
    buffer_dep_mask_0_2 <= ~_GEN_6 & (_GEN ? req_deps_2 : buffer_dep_mask_0_2);
    buffer_dep_mask_0_3 <= ~_GEN_7 & (_GEN ? req_deps_3 : buffer_dep_mask_0_3);
    buffer_dep_mask_1_0 <= ~_GEN_4 & (_GEN_0 ? req_deps_0 : buffer_dep_mask_1_0);
    buffer_dep_mask_1_1 <= ~_GEN_5 & (_GEN_0 ? req_deps_1 : buffer_dep_mask_1_1);
    buffer_dep_mask_1_2 <= ~_GEN_6 & (_GEN_0 ? req_deps_2 : buffer_dep_mask_1_2);
    buffer_dep_mask_1_3 <= ~_GEN_7 & (_GEN_0 ? req_deps_3 : buffer_dep_mask_1_3);
    buffer_dep_mask_2_0 <= ~_GEN_4 & (_GEN_1 ? req_deps_0 : buffer_dep_mask_2_0);
    buffer_dep_mask_2_1 <= ~_GEN_5 & (_GEN_1 ? req_deps_1 : buffer_dep_mask_2_1);
    buffer_dep_mask_2_2 <= ~_GEN_6 & (_GEN_1 ? req_deps_2 : buffer_dep_mask_2_2);
    buffer_dep_mask_2_3 <= ~_GEN_7 & (_GEN_1 ? req_deps_3 : buffer_dep_mask_2_3);
    buffer_dep_mask_3_0 <= ~_GEN_4 & (_GEN_2 ? req_deps_0 : buffer_dep_mask_3_0);
    buffer_dep_mask_3_1 <= ~_GEN_5 & (_GEN_2 ? req_deps_1 : buffer_dep_mask_3_1);
    buffer_dep_mask_3_2 <= ~_GEN_6 & (_GEN_2 ? req_deps_2 : buffer_dep_mask_3_2);
    buffer_dep_mask_3_3 <= ~_GEN_7 & (_GEN_2 ? req_deps_3 : buffer_dep_mask_3_3);
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:2];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        valids_0 = _RANDOM[2'h0][0];
        valids_1 = _RANDOM[2'h0][1];
        valids_2 = _RANDOM[2'h0][2];
        valids_3 = _RANDOM[2'h0][3];
        wait_table_0 = _RANDOM[2'h0][17:4];
        wait_table_1 = _RANDOM[2'h0][31:18];
        wait_table_2 = _RANDOM[2'h1][13:0];
        wait_table_3 = _RANDOM[2'h1][27:14];
        buffer_dep_mask_0_0 = _RANDOM[2'h1][28];
        buffer_dep_mask_0_1 = _RANDOM[2'h1][29];
        buffer_dep_mask_0_2 = _RANDOM[2'h1][30];
        buffer_dep_mask_0_3 = _RANDOM[2'h1][31];
        buffer_dep_mask_1_0 = _RANDOM[2'h2][0];
        buffer_dep_mask_1_1 = _RANDOM[2'h2][1];
        buffer_dep_mask_1_2 = _RANDOM[2'h2][2];
        buffer_dep_mask_1_3 = _RANDOM[2'h2][3];
        buffer_dep_mask_2_0 = _RANDOM[2'h2][4];
        buffer_dep_mask_2_1 = _RANDOM[2'h2][5];
        buffer_dep_mask_2_2 = _RANDOM[2'h2][6];
        buffer_dep_mask_2_3 = _RANDOM[2'h2][7];
        buffer_dep_mask_3_0 = _RANDOM[2'h2][8];
        buffer_dep_mask_3_1 = _RANDOM[2'h2][9];
        buffer_dep_mask_3_2 = _RANDOM[2'h2][10];
        buffer_dep_mask_3_3 = _RANDOM[2'h2][11];
        rdys_0 = _RANDOM[2'h2][12];
        rdys_1 = _RANDOM[2'h2][13];
        rdys_2 = _RANDOM[2'h2][14];
        rdys_3 = _RANDOM[2'h2][15];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        valids_0 = 1'h0;
        valids_1 = 1'h0;
        valids_2 = 1'h0;
        valids_3 = 1'h0;
        rdys_0 = 1'h0;
        rdys_1 = 1'h0;
        rdys_2 = 1'h0;
        rdys_3 = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  buffer_4x120 buffer_ext (
    .R0_addr (2'h3),
    .R0_en   (1'h1),
    .R0_clk  (clock),
    .R0_data (_buffer_ext_R0_data),
    .R1_addr (2'h2),
    .R1_en   (1'h1),
    .R1_clk  (clock),
    .R1_data (_buffer_ext_R1_data),
    .R2_addr (2'h1),
    .R2_en   (1'h1),
    .R2_clk  (clock),
    .R2_data (_buffer_ext_R2_data),
    .R3_addr (2'h0),
    .R3_en   (1'h1),
    .R3_clk  (clock),
    .R3_data (_buffer_ext_R3_data),
    .W0_addr (insert_idx),
    .W0_en   (alloc),
    .W0_clk  (clock),
    .W0_data
      ({io_in_bits_reqSource,
        io_in_bits_needProbeAckData,
        io_in_bits_fromCmoHelper,
        io_in_bits_fromProbeHelper,
        io_in_bits_isHit,
        io_in_bits_dirty,
        io_in_bits_preferCache,
        io_in_bits_isBop,
        io_in_bits_isPrefetch,
        io_in_bits_needHint,
        io_in_bits_bufIdx,
        io_in_bits_mask,
        io_in_bits_off,
        io_in_bits_tag,
        io_in_bits_set,
        io_in_bits_source,
        io_in_bits_size,
        io_in_bits_param,
        io_in_bits_opcode,
        io_in_bits_channel})
  );
  FastArbiter_26 issue_arb (
    .clock                         (clock),
    .reset                         (reset),
    .io_in_0_ready                 (_issue_arb_io_in_0_ready),
    .io_in_0_valid                 (_issue_arb_io_in_0_valid_T),
    .io_in_0_bits_channel          (_buffer_ext_R3_data[2:0]),
    .io_in_0_bits_opcode           (_buffer_ext_R3_data[5:3]),
    .io_in_0_bits_param            (_buffer_ext_R3_data[8:6]),
    .io_in_0_bits_size             (_buffer_ext_R3_data[11:9]),
    .io_in_0_bits_source           (_buffer_ext_R3_data[22:12]),
    .io_in_0_bits_set              (_buffer_ext_R3_data[33:23]),
    .io_in_0_bits_tag              (_buffer_ext_R3_data[64:34]),
    .io_in_0_bits_off              (_buffer_ext_R3_data[70:65]),
    .io_in_0_bits_mask             (_buffer_ext_R3_data[102:71]),
    .io_in_0_bits_bufIdx           (_buffer_ext_R3_data[106:103]),
    .io_in_0_bits_needHint         (_buffer_ext_R3_data[107]),
    .io_in_0_bits_isPrefetch       (_buffer_ext_R3_data[108]),
    .io_in_0_bits_isBop            (_buffer_ext_R3_data[109]),
    .io_in_0_bits_preferCache      (_buffer_ext_R3_data[110]),
    .io_in_0_bits_dirty            (_buffer_ext_R3_data[111]),
    .io_in_0_bits_isHit            (_buffer_ext_R3_data[112]),
    .io_in_0_bits_fromProbeHelper  (_buffer_ext_R3_data[113]),
    .io_in_0_bits_fromCmoHelper    (_buffer_ext_R3_data[114]),
    .io_in_0_bits_needProbeAckData (_buffer_ext_R3_data[115]),
    .io_in_0_bits_reqSource        (_buffer_ext_R3_data[119:116]),
    .io_in_1_ready                 (_issue_arb_io_in_1_ready),
    .io_in_1_valid                 (_issue_arb_io_in_1_valid_T),
    .io_in_1_bits_channel          (_buffer_ext_R2_data[2:0]),
    .io_in_1_bits_opcode           (_buffer_ext_R2_data[5:3]),
    .io_in_1_bits_param            (_buffer_ext_R2_data[8:6]),
    .io_in_1_bits_size             (_buffer_ext_R2_data[11:9]),
    .io_in_1_bits_source           (_buffer_ext_R2_data[22:12]),
    .io_in_1_bits_set              (_buffer_ext_R2_data[33:23]),
    .io_in_1_bits_tag              (_buffer_ext_R2_data[64:34]),
    .io_in_1_bits_off              (_buffer_ext_R2_data[70:65]),
    .io_in_1_bits_mask             (_buffer_ext_R2_data[102:71]),
    .io_in_1_bits_bufIdx           (_buffer_ext_R2_data[106:103]),
    .io_in_1_bits_needHint         (_buffer_ext_R2_data[107]),
    .io_in_1_bits_isPrefetch       (_buffer_ext_R2_data[108]),
    .io_in_1_bits_isBop            (_buffer_ext_R2_data[109]),
    .io_in_1_bits_preferCache      (_buffer_ext_R2_data[110]),
    .io_in_1_bits_dirty            (_buffer_ext_R2_data[111]),
    .io_in_1_bits_isHit            (_buffer_ext_R2_data[112]),
    .io_in_1_bits_fromProbeHelper  (_buffer_ext_R2_data[113]),
    .io_in_1_bits_fromCmoHelper    (_buffer_ext_R2_data[114]),
    .io_in_1_bits_needProbeAckData (_buffer_ext_R2_data[115]),
    .io_in_1_bits_reqSource        (_buffer_ext_R2_data[119:116]),
    .io_in_2_ready                 (_issue_arb_io_in_2_ready),
    .io_in_2_valid                 (_issue_arb_io_in_2_valid_T),
    .io_in_2_bits_channel          (_buffer_ext_R1_data[2:0]),
    .io_in_2_bits_opcode           (_buffer_ext_R1_data[5:3]),
    .io_in_2_bits_param            (_buffer_ext_R1_data[8:6]),
    .io_in_2_bits_size             (_buffer_ext_R1_data[11:9]),
    .io_in_2_bits_source           (_buffer_ext_R1_data[22:12]),
    .io_in_2_bits_set              (_buffer_ext_R1_data[33:23]),
    .io_in_2_bits_tag              (_buffer_ext_R1_data[64:34]),
    .io_in_2_bits_off              (_buffer_ext_R1_data[70:65]),
    .io_in_2_bits_mask             (_buffer_ext_R1_data[102:71]),
    .io_in_2_bits_bufIdx           (_buffer_ext_R1_data[106:103]),
    .io_in_2_bits_needHint         (_buffer_ext_R1_data[107]),
    .io_in_2_bits_isPrefetch       (_buffer_ext_R1_data[108]),
    .io_in_2_bits_isBop            (_buffer_ext_R1_data[109]),
    .io_in_2_bits_preferCache      (_buffer_ext_R1_data[110]),
    .io_in_2_bits_dirty            (_buffer_ext_R1_data[111]),
    .io_in_2_bits_isHit            (_buffer_ext_R1_data[112]),
    .io_in_2_bits_fromProbeHelper  (_buffer_ext_R1_data[113]),
    .io_in_2_bits_fromCmoHelper    (_buffer_ext_R1_data[114]),
    .io_in_2_bits_needProbeAckData (_buffer_ext_R1_data[115]),
    .io_in_2_bits_reqSource        (_buffer_ext_R1_data[119:116]),
    .io_in_3_ready                 (_issue_arb_io_in_3_ready),
    .io_in_3_valid                 (_issue_arb_io_in_3_valid_T),
    .io_in_3_bits_channel          (_buffer_ext_R0_data[2:0]),
    .io_in_3_bits_opcode           (_buffer_ext_R0_data[5:3]),
    .io_in_3_bits_param            (_buffer_ext_R0_data[8:6]),
    .io_in_3_bits_size             (_buffer_ext_R0_data[11:9]),
    .io_in_3_bits_source           (_buffer_ext_R0_data[22:12]),
    .io_in_3_bits_set              (_buffer_ext_R0_data[33:23]),
    .io_in_3_bits_tag              (_buffer_ext_R0_data[64:34]),
    .io_in_3_bits_off              (_buffer_ext_R0_data[70:65]),
    .io_in_3_bits_mask             (_buffer_ext_R0_data[102:71]),
    .io_in_3_bits_bufIdx           (_buffer_ext_R0_data[106:103]),
    .io_in_3_bits_needHint         (_buffer_ext_R0_data[107]),
    .io_in_3_bits_isPrefetch       (_buffer_ext_R0_data[108]),
    .io_in_3_bits_isBop            (_buffer_ext_R0_data[109]),
    .io_in_3_bits_preferCache      (_buffer_ext_R0_data[110]),
    .io_in_3_bits_dirty            (_buffer_ext_R0_data[111]),
    .io_in_3_bits_isHit            (_buffer_ext_R0_data[112]),
    .io_in_3_bits_fromProbeHelper  (_buffer_ext_R0_data[113]),
    .io_in_3_bits_fromCmoHelper    (_buffer_ext_R0_data[114]),
    .io_in_3_bits_needProbeAckData (_buffer_ext_R0_data[115]),
    .io_in_3_bits_reqSource        (_buffer_ext_R0_data[119:116]),
    .io_out_ready                  (_output_pipe_q_io_enq_ready),
    .io_out_valid                  (_issue_arb_io_out_valid),
    .io_out_bits_channel           (_issue_arb_io_out_bits_channel),
    .io_out_bits_opcode            (_issue_arb_io_out_bits_opcode),
    .io_out_bits_param             (_issue_arb_io_out_bits_param),
    .io_out_bits_size              (_issue_arb_io_out_bits_size),
    .io_out_bits_source            (_issue_arb_io_out_bits_source),
    .io_out_bits_set               (_issue_arb_io_out_bits_set),
    .io_out_bits_tag               (_issue_arb_io_out_bits_tag),
    .io_out_bits_off               (_issue_arb_io_out_bits_off),
    .io_out_bits_mask              (_issue_arb_io_out_bits_mask),
    .io_out_bits_bufIdx            (_issue_arb_io_out_bits_bufIdx),
    .io_out_bits_needHint          (_issue_arb_io_out_bits_needHint),
    .io_out_bits_isPrefetch        (_issue_arb_io_out_bits_isPrefetch),
    .io_out_bits_isBop             (_issue_arb_io_out_bits_isBop),
    .io_out_bits_preferCache       (_issue_arb_io_out_bits_preferCache),
    .io_out_bits_dirty             (_issue_arb_io_out_bits_dirty),
    .io_out_bits_isHit             (_issue_arb_io_out_bits_isHit),
    .io_out_bits_fromProbeHelper   (_issue_arb_io_out_bits_fromProbeHelper),
    .io_out_bits_fromCmoHelper     (_issue_arb_io_out_bits_fromCmoHelper),
    .io_out_bits_needProbeAckData  (_issue_arb_io_out_bits_needProbeAckData),
    .io_out_bits_reqSource         (_issue_arb_io_out_bits_reqSource),
    .io_chosen                     (_issue_arb_io_chosen)
  );
  Queue1_MSHRRequest output_pipe_q (
    .clock                        (clock),
    .reset                        (reset),
    .io_enq_ready                 (_output_pipe_q_io_enq_ready),
    .io_enq_valid                 (_issue_arb_io_out_valid),
    .io_enq_bits_channel          (_issue_arb_io_out_bits_channel),
    .io_enq_bits_opcode           (_issue_arb_io_out_bits_opcode),
    .io_enq_bits_param            (_issue_arb_io_out_bits_param),
    .io_enq_bits_size             (_issue_arb_io_out_bits_size),
    .io_enq_bits_source           (_issue_arb_io_out_bits_source),
    .io_enq_bits_set              (_issue_arb_io_out_bits_set),
    .io_enq_bits_tag              (_issue_arb_io_out_bits_tag),
    .io_enq_bits_off              (_issue_arb_io_out_bits_off),
    .io_enq_bits_mask             (_issue_arb_io_out_bits_mask),
    .io_enq_bits_bufIdx           (_issue_arb_io_out_bits_bufIdx),
    .io_enq_bits_needHint         (_issue_arb_io_out_bits_needHint),
    .io_enq_bits_isPrefetch       (_issue_arb_io_out_bits_isPrefetch),
    .io_enq_bits_isBop            (_issue_arb_io_out_bits_isBop),
    .io_enq_bits_preferCache      (_issue_arb_io_out_bits_preferCache),
    .io_enq_bits_dirty            (_issue_arb_io_out_bits_dirty),
    .io_enq_bits_isHit            (_issue_arb_io_out_bits_isHit),
    .io_enq_bits_fromProbeHelper  (_issue_arb_io_out_bits_fromProbeHelper),
    .io_enq_bits_fromCmoHelper    (_issue_arb_io_out_bits_fromCmoHelper),
    .io_enq_bits_needProbeAckData (_issue_arb_io_out_bits_needProbeAckData),
    .io_enq_bits_reqSource        (_issue_arb_io_out_bits_reqSource),
    .io_deq_ready                 (io_out_ready),
    .io_deq_valid                 (_output_pipe_q_io_deq_valid),
    .io_deq_bits_channel          (_output_pipe_q_io_deq_bits_channel),
    .io_deq_bits_opcode           (_output_pipe_q_io_deq_bits_opcode),
    .io_deq_bits_param            (_output_pipe_q_io_deq_bits_param),
    .io_deq_bits_size             (_output_pipe_q_io_deq_bits_size),
    .io_deq_bits_source           (_output_pipe_q_io_deq_bits_source),
    .io_deq_bits_set              (_output_pipe_q_io_deq_bits_set),
    .io_deq_bits_tag              (_output_pipe_q_io_deq_bits_tag),
    .io_deq_bits_off              (_output_pipe_q_io_deq_bits_off),
    .io_deq_bits_mask             (_output_pipe_q_io_deq_bits_mask),
    .io_deq_bits_bufIdx           (_output_pipe_q_io_deq_bits_bufIdx),
    .io_deq_bits_needHint         (_output_pipe_q_io_deq_bits_needHint),
    .io_deq_bits_isPrefetch       (_output_pipe_q_io_deq_bits_isPrefetch),
    .io_deq_bits_isBop            (_output_pipe_q_io_deq_bits_isBop),
    .io_deq_bits_preferCache      (_output_pipe_q_io_deq_bits_preferCache),
    .io_deq_bits_dirty            (_output_pipe_q_io_deq_bits_dirty),
    .io_deq_bits_fromProbeHelper  (_output_pipe_q_io_deq_bits_fromProbeHelper),
    .io_deq_bits_fromCmoHelper    (_output_pipe_q_io_deq_bits_fromCmoHelper),
    .io_deq_bits_needProbeAckData (_output_pipe_q_io_deq_bits_needProbeAckData),
    .io_deq_bits_reqSource        (_output_pipe_q_io_deq_bits_reqSource)
  );
  assign io_in_ready = io_in_ready_0;
  assign io_out_valid =
    ~_output_pipe_q_io_deq_valid & io_in_valid & io_in_ready_0
    | _output_pipe_q_io_deq_valid;
  assign io_out_bits_channel =
    _output_pipe_q_io_deq_valid ? _output_pipe_q_io_deq_bits_channel : io_in_bits_channel;
  assign io_out_bits_opcode =
    _output_pipe_q_io_deq_valid ? _output_pipe_q_io_deq_bits_opcode : io_in_bits_opcode;
  assign io_out_bits_param =
    _output_pipe_q_io_deq_valid ? _output_pipe_q_io_deq_bits_param : io_in_bits_param;
  assign io_out_bits_size =
    _output_pipe_q_io_deq_valid ? _output_pipe_q_io_deq_bits_size : io_in_bits_size;
  assign io_out_bits_source =
    _output_pipe_q_io_deq_valid ? _output_pipe_q_io_deq_bits_source : io_in_bits_source;
  assign io_out_bits_set =
    _output_pipe_q_io_deq_valid ? _output_pipe_q_io_deq_bits_set : io_in_bits_set;
  assign io_out_bits_tag =
    _output_pipe_q_io_deq_valid ? _output_pipe_q_io_deq_bits_tag : io_in_bits_tag;
  assign io_out_bits_off =
    _output_pipe_q_io_deq_valid ? _output_pipe_q_io_deq_bits_off : io_in_bits_off;
  assign io_out_bits_mask =
    _output_pipe_q_io_deq_valid ? _output_pipe_q_io_deq_bits_mask : io_in_bits_mask;
  assign io_out_bits_bufIdx =
    _output_pipe_q_io_deq_valid ? _output_pipe_q_io_deq_bits_bufIdx : io_in_bits_bufIdx;
  assign io_out_bits_needHint =
    _output_pipe_q_io_deq_valid
      ? _output_pipe_q_io_deq_bits_needHint
      : io_in_bits_needHint;
  assign io_out_bits_isPrefetch =
    _output_pipe_q_io_deq_valid
      ? _output_pipe_q_io_deq_bits_isPrefetch
      : io_in_bits_isPrefetch;
  assign io_out_bits_isBop =
    _output_pipe_q_io_deq_valid ? _output_pipe_q_io_deq_bits_isBop : io_in_bits_isBop;
  assign io_out_bits_preferCache =
    _output_pipe_q_io_deq_valid
      ? _output_pipe_q_io_deq_bits_preferCache
      : io_in_bits_preferCache;
  assign io_out_bits_dirty =
    _output_pipe_q_io_deq_valid ? _output_pipe_q_io_deq_bits_dirty : io_in_bits_dirty;
  assign io_out_bits_fromProbeHelper =
    _output_pipe_q_io_deq_valid
      ? _output_pipe_q_io_deq_bits_fromProbeHelper
      : io_in_bits_fromProbeHelper;
  assign io_out_bits_fromCmoHelper =
    _output_pipe_q_io_deq_valid
      ? _output_pipe_q_io_deq_bits_fromCmoHelper
      : io_in_bits_fromCmoHelper;
  assign io_out_bits_needProbeAckData =
    _output_pipe_q_io_deq_valid
      ? _output_pipe_q_io_deq_bits_needProbeAckData
      : io_in_bits_needProbeAckData;
  assign io_out_bits_reqSource =
    _output_pipe_q_io_deq_valid
      ? _output_pipe_q_io_deq_bits_reqSource
      : io_in_bits_reqSource;
endmodule

