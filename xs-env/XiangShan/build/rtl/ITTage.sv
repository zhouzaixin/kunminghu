// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module ITTage(
  input          clock,
  input          reset,
  input  [47:0]  io_reset_vector,
  input  [49:0]  io_in_bits_s0_pc_0,
  input  [49:0]  io_in_bits_s0_pc_1,
  input  [49:0]  io_in_bits_s0_pc_2,
  input  [49:0]  io_in_bits_s0_pc_3,
  input  [7:0]   io_in_bits_s1_folded_hist_3_hist_14_folded_hist,
  input  [8:0]   io_in_bits_s1_folded_hist_3_hist_13_folded_hist,
  input  [3:0]   io_in_bits_s1_folded_hist_3_hist_12_folded_hist,
  input  [8:0]   io_in_bits_s1_folded_hist_3_hist_10_folded_hist,
  input  [8:0]   io_in_bits_s1_folded_hist_3_hist_6_folded_hist,
  input  [7:0]   io_in_bits_s1_folded_hist_3_hist_4_folded_hist,
  input  [7:0]   io_in_bits_s1_folded_hist_3_hist_3_folded_hist,
  input  [7:0]   io_in_bits_s1_folded_hist_3_hist_2_folded_hist,
  input          io_in_bits_resp_in_0_s2_full_pred_0_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s2_full_pred_0_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s2_full_pred_0_slot_valids_0,
  input          io_in_bits_resp_in_0_s2_full_pred_0_slot_valids_1,
  input  [49:0]  io_in_bits_resp_in_0_s2_full_pred_0_targets_0,
  input  [49:0]  io_in_bits_resp_in_0_s2_full_pred_0_targets_1,
  input  [49:0]  io_in_bits_resp_in_0_s2_full_pred_0_jalr_target,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_0_offsets_0,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_0_offsets_1,
  input  [49:0]  io_in_bits_resp_in_0_s2_full_pred_0_fallThroughAddr,
  input          io_in_bits_resp_in_0_s2_full_pred_0_is_br_sharing,
  input          io_in_bits_resp_in_0_s2_full_pred_0_hit,
  input          io_in_bits_resp_in_0_s2_full_pred_1_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s2_full_pred_1_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s2_full_pred_1_slot_valids_0,
  input          io_in_bits_resp_in_0_s2_full_pred_1_slot_valids_1,
  input  [49:0]  io_in_bits_resp_in_0_s2_full_pred_1_targets_0,
  input  [49:0]  io_in_bits_resp_in_0_s2_full_pred_1_targets_1,
  input  [49:0]  io_in_bits_resp_in_0_s2_full_pred_1_jalr_target,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_1_offsets_0,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_1_offsets_1,
  input  [49:0]  io_in_bits_resp_in_0_s2_full_pred_1_fallThroughAddr,
  input          io_in_bits_resp_in_0_s2_full_pred_1_is_br_sharing,
  input          io_in_bits_resp_in_0_s2_full_pred_1_hit,
  input          io_in_bits_resp_in_0_s2_full_pred_2_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s2_full_pred_2_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s2_full_pred_2_slot_valids_0,
  input          io_in_bits_resp_in_0_s2_full_pred_2_slot_valids_1,
  input  [49:0]  io_in_bits_resp_in_0_s2_full_pred_2_targets_0,
  input  [49:0]  io_in_bits_resp_in_0_s2_full_pred_2_targets_1,
  input  [49:0]  io_in_bits_resp_in_0_s2_full_pred_2_jalr_target,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_2_offsets_0,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_2_offsets_1,
  input  [49:0]  io_in_bits_resp_in_0_s2_full_pred_2_fallThroughAddr,
  input          io_in_bits_resp_in_0_s2_full_pred_2_is_jalr,
  input          io_in_bits_resp_in_0_s2_full_pred_2_is_call,
  input          io_in_bits_resp_in_0_s2_full_pred_2_is_ret,
  input          io_in_bits_resp_in_0_s2_full_pred_2_last_may_be_rvi_call,
  input          io_in_bits_resp_in_0_s2_full_pred_2_is_br_sharing,
  input          io_in_bits_resp_in_0_s2_full_pred_2_hit,
  input          io_in_bits_resp_in_0_s2_full_pred_3_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s2_full_pred_3_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s2_full_pred_3_slot_valids_0,
  input          io_in_bits_resp_in_0_s2_full_pred_3_slot_valids_1,
  input  [49:0]  io_in_bits_resp_in_0_s2_full_pred_3_targets_0,
  input  [49:0]  io_in_bits_resp_in_0_s2_full_pred_3_targets_1,
  input  [49:0]  io_in_bits_resp_in_0_s2_full_pred_3_jalr_target,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_3_offsets_0,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_3_offsets_1,
  input  [49:0]  io_in_bits_resp_in_0_s2_full_pred_3_fallThroughAddr,
  input          io_in_bits_resp_in_0_s2_full_pred_3_fallThroughErr,
  input          io_in_bits_resp_in_0_s2_full_pred_3_is_br_sharing,
  input          io_in_bits_resp_in_0_s2_full_pred_3_hit,
  input          io_in_bits_resp_in_0_s3_full_pred_0_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s3_full_pred_0_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s3_full_pred_0_slot_valids_0,
  input          io_in_bits_resp_in_0_s3_full_pred_0_slot_valids_1,
  input  [49:0]  io_in_bits_resp_in_0_s3_full_pred_0_targets_0,
  input  [49:0]  io_in_bits_resp_in_0_s3_full_pred_0_targets_1,
  input  [49:0]  io_in_bits_resp_in_0_s3_full_pred_0_fallThroughAddr,
  input          io_in_bits_resp_in_0_s3_full_pred_0_fallThroughErr,
  input          io_in_bits_resp_in_0_s3_full_pred_0_multiHit,
  input          io_in_bits_resp_in_0_s3_full_pred_0_is_br_sharing,
  input          io_in_bits_resp_in_0_s3_full_pred_0_hit,
  input          io_in_bits_resp_in_0_s3_full_pred_1_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s3_full_pred_1_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s3_full_pred_1_slot_valids_0,
  input          io_in_bits_resp_in_0_s3_full_pred_1_slot_valids_1,
  input  [49:0]  io_in_bits_resp_in_0_s3_full_pred_1_targets_0,
  input  [49:0]  io_in_bits_resp_in_0_s3_full_pred_1_targets_1,
  input  [49:0]  io_in_bits_resp_in_0_s3_full_pred_1_fallThroughAddr,
  input          io_in_bits_resp_in_0_s3_full_pred_1_fallThroughErr,
  input          io_in_bits_resp_in_0_s3_full_pred_1_multiHit,
  input          io_in_bits_resp_in_0_s3_full_pred_1_is_br_sharing,
  input          io_in_bits_resp_in_0_s3_full_pred_1_hit,
  input          io_in_bits_resp_in_0_s3_full_pred_2_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s3_full_pred_2_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s3_full_pred_2_slot_valids_0,
  input          io_in_bits_resp_in_0_s3_full_pred_2_slot_valids_1,
  input  [49:0]  io_in_bits_resp_in_0_s3_full_pred_2_targets_0,
  input  [49:0]  io_in_bits_resp_in_0_s3_full_pred_2_targets_1,
  input  [49:0]  io_in_bits_resp_in_0_s3_full_pred_2_fallThroughAddr,
  input          io_in_bits_resp_in_0_s3_full_pred_2_fallThroughErr,
  input          io_in_bits_resp_in_0_s3_full_pred_2_multiHit,
  input          io_in_bits_resp_in_0_s3_full_pred_2_is_jalr,
  input          io_in_bits_resp_in_0_s3_full_pred_2_is_call,
  input          io_in_bits_resp_in_0_s3_full_pred_2_is_ret,
  input          io_in_bits_resp_in_0_s3_full_pred_2_is_br_sharing,
  input          io_in_bits_resp_in_0_s3_full_pred_2_hit,
  input          io_in_bits_resp_in_0_s3_full_pred_3_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s3_full_pred_3_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s3_full_pred_3_slot_valids_0,
  input          io_in_bits_resp_in_0_s3_full_pred_3_slot_valids_1,
  input  [49:0]  io_in_bits_resp_in_0_s3_full_pred_3_targets_0,
  input  [49:0]  io_in_bits_resp_in_0_s3_full_pred_3_targets_1,
  input  [3:0]   io_in_bits_resp_in_0_s3_full_pred_3_offsets_0,
  input  [3:0]   io_in_bits_resp_in_0_s3_full_pred_3_offsets_1,
  input  [49:0]  io_in_bits_resp_in_0_s3_full_pred_3_fallThroughAddr,
  input          io_in_bits_resp_in_0_s3_full_pred_3_fallThroughErr,
  input          io_in_bits_resp_in_0_s3_full_pred_3_multiHit,
  input          io_in_bits_resp_in_0_s3_full_pred_3_is_br_sharing,
  input          io_in_bits_resp_in_0_s3_full_pred_3_hit,
  input          io_in_bits_resp_in_0_s1_uftbHit,
  input          io_in_bits_resp_in_0_s1_uftbHasIndirect,
  input          io_in_bits_resp_in_0_s1_ftbCloseReq,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_isCall,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_isRet,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_isJalr,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_valid,
  input  [3:0]   io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_offset,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_sharing,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_valid,
  input  [11:0]  io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_lower,
  input  [1:0]   io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_tarStat,
  input  [3:0]   io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_offset,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_sharing,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_valid,
  input  [19:0]  io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_lower,
  input  [1:0]   io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_tarStat,
  input  [3:0]   io_in_bits_resp_in_0_last_stage_ftb_entry_pftAddr,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_carry,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_last_may_be_rvi_call,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_strong_bias_0,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_strong_bias_1,
  output         io_out_s2_full_pred_0_br_taken_mask_0,
  output         io_out_s2_full_pred_0_br_taken_mask_1,
  output         io_out_s2_full_pred_0_slot_valids_0,
  output         io_out_s2_full_pred_0_slot_valids_1,
  output [49:0]  io_out_s2_full_pred_0_targets_0,
  output [49:0]  io_out_s2_full_pred_0_targets_1,
  output [49:0]  io_out_s2_full_pred_0_jalr_target,
  output [3:0]   io_out_s2_full_pred_0_offsets_0,
  output [3:0]   io_out_s2_full_pred_0_offsets_1,
  output [49:0]  io_out_s2_full_pred_0_fallThroughAddr,
  output         io_out_s2_full_pred_0_is_br_sharing,
  output         io_out_s2_full_pred_0_hit,
  output         io_out_s2_full_pred_1_br_taken_mask_0,
  output         io_out_s2_full_pred_1_br_taken_mask_1,
  output         io_out_s2_full_pred_1_slot_valids_0,
  output         io_out_s2_full_pred_1_slot_valids_1,
  output [49:0]  io_out_s2_full_pred_1_targets_0,
  output [49:0]  io_out_s2_full_pred_1_targets_1,
  output [49:0]  io_out_s2_full_pred_1_jalr_target,
  output [3:0]   io_out_s2_full_pred_1_offsets_0,
  output [3:0]   io_out_s2_full_pred_1_offsets_1,
  output [49:0]  io_out_s2_full_pred_1_fallThroughAddr,
  output         io_out_s2_full_pred_1_is_br_sharing,
  output         io_out_s2_full_pred_1_hit,
  output         io_out_s2_full_pred_2_br_taken_mask_0,
  output         io_out_s2_full_pred_2_br_taken_mask_1,
  output         io_out_s2_full_pred_2_slot_valids_0,
  output         io_out_s2_full_pred_2_slot_valids_1,
  output [49:0]  io_out_s2_full_pred_2_targets_0,
  output [49:0]  io_out_s2_full_pred_2_targets_1,
  output [49:0]  io_out_s2_full_pred_2_jalr_target,
  output [3:0]   io_out_s2_full_pred_2_offsets_0,
  output [3:0]   io_out_s2_full_pred_2_offsets_1,
  output [49:0]  io_out_s2_full_pred_2_fallThroughAddr,
  output         io_out_s2_full_pred_2_is_jalr,
  output         io_out_s2_full_pred_2_is_call,
  output         io_out_s2_full_pred_2_is_ret,
  output         io_out_s2_full_pred_2_last_may_be_rvi_call,
  output         io_out_s2_full_pred_2_is_br_sharing,
  output         io_out_s2_full_pred_2_hit,
  output         io_out_s2_full_pred_3_br_taken_mask_0,
  output         io_out_s2_full_pred_3_br_taken_mask_1,
  output         io_out_s2_full_pred_3_slot_valids_0,
  output         io_out_s2_full_pred_3_slot_valids_1,
  output [49:0]  io_out_s2_full_pred_3_targets_0,
  output [49:0]  io_out_s2_full_pred_3_targets_1,
  output [49:0]  io_out_s2_full_pred_3_jalr_target,
  output [3:0]   io_out_s2_full_pred_3_offsets_0,
  output [3:0]   io_out_s2_full_pred_3_offsets_1,
  output [49:0]  io_out_s2_full_pred_3_fallThroughAddr,
  output         io_out_s2_full_pred_3_fallThroughErr,
  output         io_out_s2_full_pred_3_is_br_sharing,
  output         io_out_s2_full_pred_3_hit,
  output         io_out_s3_full_pred_0_br_taken_mask_0,
  output         io_out_s3_full_pred_0_br_taken_mask_1,
  output         io_out_s3_full_pred_0_slot_valids_0,
  output         io_out_s3_full_pred_0_slot_valids_1,
  output [49:0]  io_out_s3_full_pred_0_targets_0,
  output [49:0]  io_out_s3_full_pred_0_targets_1,
  output [49:0]  io_out_s3_full_pred_0_jalr_target,
  output [49:0]  io_out_s3_full_pred_0_fallThroughAddr,
  output         io_out_s3_full_pred_0_fallThroughErr,
  output         io_out_s3_full_pred_0_multiHit,
  output         io_out_s3_full_pred_0_is_br_sharing,
  output         io_out_s3_full_pred_0_hit,
  output         io_out_s3_full_pred_1_br_taken_mask_0,
  output         io_out_s3_full_pred_1_br_taken_mask_1,
  output         io_out_s3_full_pred_1_slot_valids_0,
  output         io_out_s3_full_pred_1_slot_valids_1,
  output [49:0]  io_out_s3_full_pred_1_targets_0,
  output [49:0]  io_out_s3_full_pred_1_targets_1,
  output [49:0]  io_out_s3_full_pred_1_jalr_target,
  output [49:0]  io_out_s3_full_pred_1_fallThroughAddr,
  output         io_out_s3_full_pred_1_fallThroughErr,
  output         io_out_s3_full_pred_1_multiHit,
  output         io_out_s3_full_pred_1_is_br_sharing,
  output         io_out_s3_full_pred_1_hit,
  output         io_out_s3_full_pred_2_br_taken_mask_0,
  output         io_out_s3_full_pred_2_br_taken_mask_1,
  output         io_out_s3_full_pred_2_slot_valids_0,
  output         io_out_s3_full_pred_2_slot_valids_1,
  output [49:0]  io_out_s3_full_pred_2_targets_0,
  output [49:0]  io_out_s3_full_pred_2_targets_1,
  output [49:0]  io_out_s3_full_pred_2_jalr_target,
  output [49:0]  io_out_s3_full_pred_2_fallThroughAddr,
  output         io_out_s3_full_pred_2_fallThroughErr,
  output         io_out_s3_full_pred_2_multiHit,
  output         io_out_s3_full_pred_2_is_jalr,
  output         io_out_s3_full_pred_2_is_call,
  output         io_out_s3_full_pred_2_is_ret,
  output         io_out_s3_full_pred_2_is_br_sharing,
  output         io_out_s3_full_pred_2_hit,
  output         io_out_s3_full_pred_3_br_taken_mask_0,
  output         io_out_s3_full_pred_3_br_taken_mask_1,
  output         io_out_s3_full_pred_3_slot_valids_0,
  output         io_out_s3_full_pred_3_slot_valids_1,
  output [49:0]  io_out_s3_full_pred_3_targets_0,
  output [49:0]  io_out_s3_full_pred_3_targets_1,
  output [49:0]  io_out_s3_full_pred_3_jalr_target,
  output [3:0]   io_out_s3_full_pred_3_offsets_0,
  output [3:0]   io_out_s3_full_pred_3_offsets_1,
  output [49:0]  io_out_s3_full_pred_3_fallThroughAddr,
  output         io_out_s3_full_pred_3_fallThroughErr,
  output         io_out_s3_full_pred_3_multiHit,
  output         io_out_s3_full_pred_3_is_br_sharing,
  output         io_out_s3_full_pred_3_hit,
  output [259:0] io_out_last_stage_meta,
  output         io_out_last_stage_ftb_entry_isCall,
  output         io_out_last_stage_ftb_entry_isRet,
  output         io_out_last_stage_ftb_entry_isJalr,
  output         io_out_last_stage_ftb_entry_valid,
  output [3:0]   io_out_last_stage_ftb_entry_brSlots_0_offset,
  output         io_out_last_stage_ftb_entry_brSlots_0_sharing,
  output         io_out_last_stage_ftb_entry_brSlots_0_valid,
  output [11:0]  io_out_last_stage_ftb_entry_brSlots_0_lower,
  output [1:0]   io_out_last_stage_ftb_entry_brSlots_0_tarStat,
  output [3:0]   io_out_last_stage_ftb_entry_tailSlot_offset,
  output         io_out_last_stage_ftb_entry_tailSlot_sharing,
  output         io_out_last_stage_ftb_entry_tailSlot_valid,
  output [19:0]  io_out_last_stage_ftb_entry_tailSlot_lower,
  output [1:0]   io_out_last_stage_ftb_entry_tailSlot_tarStat,
  output [3:0]   io_out_last_stage_ftb_entry_pftAddr,
  output         io_out_last_stage_ftb_entry_carry,
  output         io_out_last_stage_ftb_entry_last_may_be_rvi_call,
  output         io_out_last_stage_ftb_entry_strong_bias_0,
  output         io_out_last_stage_ftb_entry_strong_bias_1,
  input          io_s0_fire_0,
  input          io_s0_fire_1,
  input          io_s0_fire_2,
  input          io_s0_fire_3,
  input          io_s1_fire_0,
  input          io_s1_fire_1,
  input          io_s1_fire_2,
  input          io_s1_fire_3,
  input          io_s2_fire_0,
  input          io_s2_fire_1,
  input          io_s2_fire_2,
  input          io_s2_fire_3,
  output         io_s1_ready,
  input          io_update_valid,
  input  [49:0]  io_update_bits_pc,
  input          io_update_bits_ftb_entry_isRet,
  input          io_update_bits_ftb_entry_isJalr,
  input  [3:0]   io_update_bits_ftb_entry_tailSlot_offset,
  input          io_update_bits_ftb_entry_tailSlot_sharing,
  input          io_update_bits_ftb_entry_tailSlot_valid,
  input          io_update_bits_ftb_entry_strong_bias_1,
  input          io_update_bits_cfi_idx_valid,
  input  [3:0]   io_update_bits_cfi_idx_bits,
  input          io_update_bits_jmp_taken,
  input          io_update_bits_mispred_mask_2,
  input  [259:0] io_update_bits_meta,
  input  [49:0]  io_update_bits_full_target,
  input  [255:0] io_update_bits_ghist
);

  wire         updateAlloc_4;
  wire         updateAlloc_3;
  wire         updateAlloc_2;
  wire         updateAlloc_1;
  wire         updateAlloc_0;
  reg  [2:0]   resp_meta_allocate_bits_r;
  reg          resp_meta_allocate_valid_r;
  wire         resp_meta_altDiffers;
  wire         _s2_allocLFSR_prng_io_out_0;
  wire         _s2_allocLFSR_prng_io_out_1;
  wire         _s2_allocLFSR_prng_io_out_2;
  wire         _s2_allocLFSR_prng_io_out_3;
  wire         _s2_allocLFSR_prng_io_out_4;
  wire         _rTable_io_resp_hit_0;
  wire         _rTable_io_resp_hit_1;
  wire         _rTable_io_resp_hit_2;
  wire         _rTable_io_resp_hit_3;
  wire         _rTable_io_resp_hit_4;
  wire [29:0]  _rTable_io_resp_region_0;
  wire [29:0]  _rTable_io_resp_region_1;
  wire [29:0]  _rTable_io_resp_region_2;
  wire [29:0]  _rTable_io_resp_region_3;
  wire [29:0]  _rTable_io_resp_region_4;
  wire         _rTable_io_update_hit_0;
  wire         _rTable_io_update_hit_1;
  wire [3:0]   _rTable_io_update_pointer_0;
  wire [3:0]   _rTable_io_update_pointer_1;
  wire [3:0]   _rTable_io_write_pointer;
  wire         _tables_4_io_req_ready;
  wire         _tables_4_io_resp_valid;
  wire [1:0]   _tables_4_io_resp_bits_ctr;
  wire         _tables_4_io_resp_bits_u;
  wire [19:0]  _tables_4_io_resp_bits_target_offset_offset;
  wire [3:0]   _tables_4_io_resp_bits_target_offset_pointer;
  wire         _tables_4_io_resp_bits_target_offset_usePCRegion;
  wire         _tables_3_io_req_ready;
  wire         _tables_3_io_resp_valid;
  wire [1:0]   _tables_3_io_resp_bits_ctr;
  wire         _tables_3_io_resp_bits_u;
  wire [19:0]  _tables_3_io_resp_bits_target_offset_offset;
  wire [3:0]   _tables_3_io_resp_bits_target_offset_pointer;
  wire         _tables_3_io_resp_bits_target_offset_usePCRegion;
  wire         _tables_2_io_req_ready;
  wire         _tables_2_io_resp_valid;
  wire [1:0]   _tables_2_io_resp_bits_ctr;
  wire         _tables_2_io_resp_bits_u;
  wire [19:0]  _tables_2_io_resp_bits_target_offset_offset;
  wire [3:0]   _tables_2_io_resp_bits_target_offset_pointer;
  wire         _tables_2_io_resp_bits_target_offset_usePCRegion;
  wire         _tables_1_io_req_ready;
  wire         _tables_1_io_resp_valid;
  wire [1:0]   _tables_1_io_resp_bits_ctr;
  wire         _tables_1_io_resp_bits_u;
  wire [19:0]  _tables_1_io_resp_bits_target_offset_offset;
  wire [3:0]   _tables_1_io_resp_bits_target_offset_pointer;
  wire         _tables_1_io_resp_bits_target_offset_usePCRegion;
  wire         _tables_0_io_req_ready;
  wire         _tables_0_io_resp_valid;
  wire [1:0]   _tables_0_io_resp_bits_ctr;
  wire         _tables_0_io_resp_bits_u;
  wire [19:0]  _tables_0_io_resp_bits_target_offset_offset;
  wire [3:0]   _tables_0_io_resp_bits_target_offset_pointer;
  wire         _tables_0_io_resp_bits_target_offset_usePCRegion;
  wire         s2_pc_dup_debug_modified_debug_s2_pc_modified_2 = 1'h1;
  wire         s2_pc_dup_debug_modified_debug_s2_pc_modified_1_2 = 1'h1;
  wire         s2_pc_dup_debug_modified_debug_s2_pc_modified_2_2 = 1'h1;
  wire         s2_pc_dup_debug_modified_debug_s2_pc_modified_3_2 = 1'h1;
  wire         s3_pc_dup_debug_modified_debug_s3_pc_modified_2 = 1'h1;
  wire         s3_pc_dup_debug_modified_debug_s3_pc_modified_1_2 = 1'h1;
  wire         s3_pc_dup_debug_modified_debug_s3_pc_modified_2_2 = 1'h1;
  wire         s3_pc_dup_debug_modified_debug_s3_pc_modified_3_2 = 1'h1;
  reg  [49:0]  s1_pc_dup_0;
  reg  [49:0]  s1_pc_dup_1;
  reg  [49:0]  s1_pc_dup_2;
  reg  [49:0]  s1_pc_dup_3;
  reg  [25:0]  s2_pc_dup_s2_pc_seg_0_value;
  reg  [11:0]  s2_pc_dup_s2_pc_seg_1_value;
  reg  [11:0]  s2_pc_dup_s2_pc_seg_2_value;
  wire         s2_pc_dup_debug_modified_debug_s2_pc_modified_0 =
    s2_pc_dup_s2_pc_seg_0_value != s1_pc_dup_0[49:24];
  wire         s2_pc_dup_debug_modified_debug_s2_pc_modified_1 =
    s2_pc_dup_s2_pc_seg_1_value != s1_pc_dup_0[23:12];
  wire [49:0]  s2_pc_dup_debug_s2_pc_addr =
    {s2_pc_dup_s2_pc_seg_0_value,
     s2_pc_dup_s2_pc_seg_1_value,
     s2_pc_dup_s2_pc_seg_2_value};
  reg  [25:0]  s2_pc_dup_s2_pc_seg_0_value_1;
  reg  [11:0]  s2_pc_dup_s2_pc_seg_1_value_1;
  reg  [11:0]  s2_pc_dup_s2_pc_seg_2_value_1;
  wire         s2_pc_dup_debug_modified_debug_s2_pc_modified_1_0 =
    s2_pc_dup_s2_pc_seg_0_value_1 != s1_pc_dup_1[49:24];
  wire         s2_pc_dup_debug_modified_debug_s2_pc_modified_1_1 =
    s2_pc_dup_s2_pc_seg_1_value_1 != s1_pc_dup_1[23:12];
  wire [49:0]  s2_pc_dup_debug_s2_pc_addr_1 =
    {s2_pc_dup_s2_pc_seg_0_value_1,
     s2_pc_dup_s2_pc_seg_1_value_1,
     s2_pc_dup_s2_pc_seg_2_value_1};
  reg  [25:0]  s2_pc_dup_s2_pc_seg_0_value_2;
  reg  [11:0]  s2_pc_dup_s2_pc_seg_1_value_2;
  reg  [11:0]  s2_pc_dup_s2_pc_seg_2_value_2;
  wire         s2_pc_dup_debug_modified_debug_s2_pc_modified_2_0 =
    s2_pc_dup_s2_pc_seg_0_value_2 != s1_pc_dup_2[49:24];
  wire         s2_pc_dup_debug_modified_debug_s2_pc_modified_2_1 =
    s2_pc_dup_s2_pc_seg_1_value_2 != s1_pc_dup_2[23:12];
  wire [49:0]  s2_pc_dup_debug_s2_pc_addr_2 =
    {s2_pc_dup_s2_pc_seg_0_value_2,
     s2_pc_dup_s2_pc_seg_1_value_2,
     s2_pc_dup_s2_pc_seg_2_value_2};
  reg  [25:0]  s2_pc_dup_s2_pc_seg_0_value_3;
  reg  [11:0]  s2_pc_dup_s2_pc_seg_1_value_3;
  reg  [11:0]  s2_pc_dup_s2_pc_seg_2_value_3;
  wire         s2_pc_dup_debug_modified_debug_s2_pc_modified_3_0 =
    s2_pc_dup_s2_pc_seg_0_value_3 != s1_pc_dup_3[49:24];
  wire         s2_pc_dup_debug_modified_debug_s2_pc_modified_3_1 =
    s2_pc_dup_s2_pc_seg_1_value_3 != s1_pc_dup_3[23:12];
  wire [49:0]  s2_pc_dup_debug_s2_pc_addr_3 =
    {s2_pc_dup_s2_pc_seg_0_value_3,
     s2_pc_dup_s2_pc_seg_1_value_3,
     s2_pc_dup_s2_pc_seg_2_value_3};
  reg  [25:0]  s3_pc_dup_s3_pc_seg_0_value;
  reg  [11:0]  s3_pc_dup_s3_pc_seg_1_value;
  reg  [11:0]  s3_pc_dup_s3_pc_seg_2_value;
  wire         s3_pc_dup_debug_modified_debug_s3_pc_modified_0 =
    s3_pc_dup_s3_pc_seg_0_value != s2_pc_dup_s2_pc_seg_0_value;
  wire         s3_pc_dup_debug_modified_debug_s3_pc_modified_1 =
    s3_pc_dup_s3_pc_seg_1_value != s2_pc_dup_s2_pc_seg_1_value;
  wire [49:0]  s3_pc_dup_debug_s3_pc_addr =
    {s3_pc_dup_s3_pc_seg_0_value,
     s3_pc_dup_s3_pc_seg_1_value,
     s3_pc_dup_s3_pc_seg_2_value};
  reg  [25:0]  s3_pc_dup_s3_pc_seg_0_value_1;
  reg  [11:0]  s3_pc_dup_s3_pc_seg_1_value_1;
  reg  [11:0]  s3_pc_dup_s3_pc_seg_2_value_1;
  wire         s3_pc_dup_debug_modified_debug_s3_pc_modified_1_0 =
    s3_pc_dup_s3_pc_seg_0_value_1 != s2_pc_dup_s2_pc_seg_0_value_1;
  wire         s3_pc_dup_debug_modified_debug_s3_pc_modified_1_1 =
    s3_pc_dup_s3_pc_seg_1_value_1 != s2_pc_dup_s2_pc_seg_1_value_1;
  wire [49:0]  s3_pc_dup_debug_s3_pc_addr_1 =
    {s3_pc_dup_s3_pc_seg_0_value_1,
     s3_pc_dup_s3_pc_seg_1_value_1,
     s3_pc_dup_s3_pc_seg_2_value_1};
  reg  [25:0]  s3_pc_dup_s3_pc_seg_0_value_2;
  reg  [11:0]  s3_pc_dup_s3_pc_seg_1_value_2;
  reg  [11:0]  s3_pc_dup_s3_pc_seg_2_value_2;
  wire         s3_pc_dup_debug_modified_debug_s3_pc_modified_2_0 =
    s3_pc_dup_s3_pc_seg_0_value_2 != s2_pc_dup_s2_pc_seg_0_value_2;
  wire         s3_pc_dup_debug_modified_debug_s3_pc_modified_2_1 =
    s3_pc_dup_s3_pc_seg_1_value_2 != s2_pc_dup_s2_pc_seg_1_value_2;
  wire [49:0]  s3_pc_dup_debug_s3_pc_addr_2 =
    {s3_pc_dup_s3_pc_seg_0_value_2,
     s3_pc_dup_s3_pc_seg_1_value_2,
     s3_pc_dup_s3_pc_seg_2_value_2};
  reg  [25:0]  s3_pc_dup_s3_pc_seg_0_value_3;
  reg  [11:0]  s3_pc_dup_s3_pc_seg_1_value_3;
  reg  [11:0]  s3_pc_dup_s3_pc_seg_2_value_3;
  wire         s3_pc_dup_debug_modified_debug_s3_pc_modified_3_0 =
    s3_pc_dup_s3_pc_seg_0_value_3 != s2_pc_dup_s2_pc_seg_0_value_3;
  wire         s3_pc_dup_debug_modified_debug_s3_pc_modified_3_1 =
    s3_pc_dup_s3_pc_seg_1_value_3 != s2_pc_dup_s2_pc_seg_1_value_3;
  wire [49:0]  s3_pc_dup_debug_s3_pc_addr_3 =
    {s3_pc_dup_s3_pc_seg_0_value_3,
     s3_pc_dup_s3_pc_seg_1_value_3,
     s3_pc_dup_s3_pc_seg_2_value_3};
  reg          REG;
  reg          REG_1;
  reg  [7:0]   tickCtr;
  reg  [49:0]  s3_tageTarget_dup_0;
  reg  [49:0]  s3_tageTarget_dup_1;
  reg  [49:0]  s3_tageTarget_dup_2;
  reg  [49:0]  s3_tageTarget_dup_3;
  reg  [49:0]  s3_providerTarget;
  reg  [49:0]  s3_altProviderTarget;
  reg          s3_provided;
  reg  [2:0]   s3_provider;
  reg          s3_altProvided;
  reg  [2:0]   s3_altProvider;
  reg          s3_providerU;
  reg  [1:0]   s3_providerCtr;
  reg  [1:0]   s3_altProviderCtr;
  reg          u_valid;
  reg  [49:0]  update_r_pc;
  reg          update_r_ftb_entry_isRet;
  reg          update_r_ftb_entry_isJalr;
  reg  [3:0]   update_r_ftb_entry_tailSlot_offset;
  reg          update_r_ftb_entry_tailSlot_sharing;
  reg          update_r_ftb_entry_tailSlot_valid;
  reg          update_r_ftb_entry_strong_bias_1;
  reg          update_r_cfi_idx_valid;
  reg          update_r_jmp_taken;
  reg          update_r_mispred_mask_2;
  reg          updateMeta_r_provider_valid;
  reg          updateMeta_r_altProvider_valid;
  reg          updateMeta_r_altDiffers;
  reg          updateMeta_r_providerU;
  reg  [1:0]   updateMeta_r_providerCtr;
  reg  [1:0]   updateMeta_r_altProviderCtr;
  reg          updateMeta_r_allocate_valid;
  reg  [2:0]   updateMeta_provider_bits_r;
  reg  [49:0]  updateMeta_providerTarget_r;
  reg  [2:0]   updateMeta_allocate_bits_r;
  reg  [2:0]   updateMeta_altProvider_bits_r;
  reg  [49:0]  updateMeta_altProviderTarget_r;
  reg  [49:0]  update_full_target_r;
  reg  [3:0]   update_cfi_idx_bits_r;
  reg  [255:0] update_ghist_r;
  wire         updateValid =
    update_r_ftb_entry_tailSlot_valid & update_r_ftb_entry_isJalr
    & ~(update_r_ftb_entry_tailSlot_valid & update_r_ftb_entry_isRet) & u_valid
    & ~update_r_ftb_entry_tailSlot_sharing & update_r_jmp_taken & update_r_cfi_idx_valid
    & update_cfi_idx_bits_r == update_r_ftb_entry_tailSlot_offset
    & ~update_r_ftb_entry_strong_bias_1;
  wire         _tables_4_io_req_valid_T =
    io_s1_fire_3
    & (~io_in_bits_resp_in_0_s1_uftbHit & ~io_in_bits_resp_in_0_s1_ftbCloseReq
       | io_in_bits_resp_in_0_s1_uftbHasIndirect);
  assign resp_meta_altDiffers = s3_providerTarget != s3_altProviderTarget;
  wire         updateRealUsePCRegion = update_full_target_r[49:20] == update_r_pc[49:20];
  wire         _rTable_io_write_valid_T_1 = updateAlloc_0 | updateAlloc_1;
  wire         providerUnconf = updateMeta_r_providerCtr == 2'h0;
  wire         _GEN =
    updateMeta_r_altProvider_valid & providerUnconf & update_r_mispred_mask_2;
  wire         _GEN_0 = updateMeta_provider_bits_r == 3'h0;
  wire         _GEN_1 = updateValid & updateMeta_r_provider_valid;
  wire         _GEN_2 = updateMeta_provider_bits_r == 3'h1;
  wire         _GEN_3 = updateMeta_provider_bits_r == 3'h2;
  wire         _GEN_4 = updateMeta_provider_bits_r == 3'h3;
  wire         _GEN_5 = updateMeta_provider_bits_r == 3'h4;
  wire         _GEN_6 =
    updateValid & update_r_mispred_mask_2
    & ~(updateMeta_r_provider_valid & updateMeta_providerTarget_r == update_full_target_r
        & providerUnconf);
  wire         _GEN_7 = updateMeta_allocate_bits_r == 3'h0;
  wire         _GEN_8 = _GEN_6 & updateMeta_r_allocate_valid & _GEN_7;
  wire         updateMask_0 =
    _GEN_8 | _GEN_1 & (_GEN_0 | _GEN & updateMeta_altProvider_bits_r == 3'h0);
  wire         _GEN_9 = updateMeta_allocate_bits_r == 3'h1;
  wire         _GEN_10 = _GEN_6 & updateMeta_r_allocate_valid & _GEN_9;
  wire         updateMask_1 =
    _GEN_10 | _GEN_1 & (_GEN_2 | _GEN & updateMeta_altProvider_bits_r == 3'h1);
  wire         _GEN_11 = updateMeta_allocate_bits_r == 3'h2;
  wire         _GEN_12 = _GEN_6 & updateMeta_r_allocate_valid & _GEN_11;
  wire         updateMask_2 =
    _GEN_12 | _GEN_1 & (_GEN_3 | _GEN & updateMeta_altProvider_bits_r == 3'h2);
  wire         _GEN_13 = updateMeta_allocate_bits_r == 3'h3;
  wire         _GEN_14 = _GEN_6 & updateMeta_r_allocate_valid & _GEN_13;
  wire         updateMask_3 =
    _GEN_14 | _GEN_1 & (_GEN_4 | _GEN & updateMeta_altProvider_bits_r == 3'h3);
  wire         _GEN_15 = updateMeta_allocate_bits_r == 3'h4;
  wire         _GEN_16 = _GEN_6 & updateMeta_r_allocate_valid & _GEN_15;
  wire         updateMask_4 =
    _GEN_16 | _GEN_1 & (_GEN_5 | _GEN & updateMeta_altProvider_bits_r == 3'h4);
  wire         _GEN_17 = _GEN_6 & updateMeta_r_allocate_valid;
  assign updateAlloc_0 = _GEN_17 & _GEN_7;
  assign updateAlloc_1 = _GEN_17 & _GEN_9;
  assign updateAlloc_2 = _GEN_17 & _GEN_11;
  assign updateAlloc_3 = _GEN_17 & _GEN_13;
  assign updateAlloc_4 = _GEN_17 & _GEN_15;
  reg          tables_0_io_update_valid_REG;
  reg          tables_0_io_update_reset_u_REG;
  reg          tables_0_io_update_correct_r;
  reg          tables_0_io_update_alloc_r;
  reg  [1:0]   tables_0_io_update_oldCtr_r;
  reg  [19:0]  tables_0_io_update_target_offset_r_offset;
  reg  [3:0]   tables_0_io_update_target_offset_r_pointer;
  reg          tables_0_io_update_target_offset_r_usePCRegion;
  reg  [19:0]  tables_0_io_update_old_target_offset_r_offset;
  reg  [3:0]   tables_0_io_update_old_target_offset_r_pointer;
  reg          tables_0_io_update_old_target_offset_r_usePCRegion;
  reg          tables_0_io_update_uValid_r;
  reg          tables_0_io_update_u_r;
  reg  [49:0]  tables_0_io_update_pc_r;
  reg  [255:0] tables_0_io_update_ghist_r;
  reg          tables_1_io_update_valid_REG;
  reg          tables_1_io_update_reset_u_REG;
  reg          tables_1_io_update_correct_r;
  reg          tables_1_io_update_alloc_r;
  reg  [1:0]   tables_1_io_update_oldCtr_r;
  reg  [19:0]  tables_1_io_update_target_offset_r_offset;
  reg  [3:0]   tables_1_io_update_target_offset_r_pointer;
  reg          tables_1_io_update_target_offset_r_usePCRegion;
  reg  [19:0]  tables_1_io_update_old_target_offset_r_offset;
  reg  [3:0]   tables_1_io_update_old_target_offset_r_pointer;
  reg          tables_1_io_update_old_target_offset_r_usePCRegion;
  reg          tables_1_io_update_uValid_r;
  reg          tables_1_io_update_u_r;
  reg  [49:0]  tables_1_io_update_pc_r;
  reg  [255:0] tables_1_io_update_ghist_r;
  reg          tables_2_io_update_valid_REG;
  reg          tables_2_io_update_reset_u_REG;
  reg          tables_2_io_update_correct_r;
  reg          tables_2_io_update_alloc_r;
  reg  [1:0]   tables_2_io_update_oldCtr_r;
  reg  [19:0]  tables_2_io_update_target_offset_r_offset;
  reg  [3:0]   tables_2_io_update_target_offset_r_pointer;
  reg          tables_2_io_update_target_offset_r_usePCRegion;
  reg  [19:0]  tables_2_io_update_old_target_offset_r_offset;
  reg  [3:0]   tables_2_io_update_old_target_offset_r_pointer;
  reg          tables_2_io_update_old_target_offset_r_usePCRegion;
  reg          tables_2_io_update_uValid_r;
  reg          tables_2_io_update_u_r;
  reg  [49:0]  tables_2_io_update_pc_r;
  reg  [255:0] tables_2_io_update_ghist_r;
  reg          tables_3_io_update_valid_REG;
  reg          tables_3_io_update_reset_u_REG;
  reg          tables_3_io_update_correct_r;
  reg          tables_3_io_update_alloc_r;
  reg  [1:0]   tables_3_io_update_oldCtr_r;
  reg  [19:0]  tables_3_io_update_target_offset_r_offset;
  reg  [3:0]   tables_3_io_update_target_offset_r_pointer;
  reg          tables_3_io_update_target_offset_r_usePCRegion;
  reg  [19:0]  tables_3_io_update_old_target_offset_r_offset;
  reg  [3:0]   tables_3_io_update_old_target_offset_r_pointer;
  reg          tables_3_io_update_old_target_offset_r_usePCRegion;
  reg          tables_3_io_update_uValid_r;
  reg          tables_3_io_update_u_r;
  reg  [49:0]  tables_3_io_update_pc_r;
  reg  [255:0] tables_3_io_update_ghist_r;
  reg          tables_4_io_update_valid_REG;
  reg          tables_4_io_update_reset_u_REG;
  reg          tables_4_io_update_correct_r;
  reg          tables_4_io_update_alloc_r;
  reg  [1:0]   tables_4_io_update_oldCtr_r;
  reg  [19:0]  tables_4_io_update_target_offset_r_offset;
  reg  [3:0]   tables_4_io_update_target_offset_r_pointer;
  reg          tables_4_io_update_target_offset_r_usePCRegion;
  reg  [19:0]  tables_4_io_update_old_target_offset_r_offset;
  reg  [3:0]   tables_4_io_update_old_target_offset_r_pointer;
  reg          tables_4_io_update_old_target_offset_r_usePCRegion;
  reg          tables_4_io_update_uValid_r;
  reg          tables_4_io_update_u_r;
  reg  [49:0]  tables_4_io_update_pc_r;
  reg  [255:0] tables_4_io_update_ghist_r;
  wire [49:0]  _GEN_18 = {2'h0, io_reset_vector};
  wire [2:0]   selectedInfo_res_1_first_tableIdx = {2'h0, _tables_1_io_resp_valid};
  wire [2:0]   selectedInfo_res_2_first_tableIdx =
    _tables_2_io_resp_valid ? 3'h2 : selectedInfo_res_1_first_tableIdx;
  wire         _updateMeta_altProviderTarget_T =
    io_update_valid & io_update_bits_meta[117];
  wire         selectedInfo_res_hasOne =
    _tables_4_io_resp_valid | _tables_3_io_resp_valid;
  wire         selectedInfo_res_hasTwo =
    _tables_4_io_resp_valid & _tables_3_io_resp_valid;
  wire         selectedInfo_res_1_hasOne =
    _tables_1_io_resp_valid | _tables_0_io_resp_valid;
  wire [1:0]   selectedInfo_res_1_first_ctr =
    _tables_1_io_resp_valid ? _tables_1_io_resp_bits_ctr : _tables_0_io_resp_bits_ctr;
  wire [49:0]  selectedInfo_res_1_first_maskTarget_1 = {50{_tables_1_io_resp_valid}};
  wire         selectedInfo_res_2_hasOne =
    _tables_2_io_resp_valid | selectedInfo_res_1_hasOne;
  wire [1:0]   selectedInfo_res_2_first_ctr =
    _tables_2_io_resp_valid ? _tables_2_io_resp_bits_ctr : selectedInfo_res_1_first_ctr;
  wire         _GEN_19 = _tables_2_io_resp_valid | _tables_1_io_resp_valid;
  wire [49:0]  selectedInfo_res_2_first_maskTarget_2 = {50{_tables_2_io_resp_valid}};
  wire         selectedInfo_hasOne = selectedInfo_res_hasOne | selectedInfo_res_2_hasOne;
  wire         selectedInfo_hasTwo =
    selectedInfo_res_hasTwo | _tables_1_io_resp_valid & _tables_0_io_resp_valid
    | _tables_2_io_resp_valid & selectedInfo_res_1_hasOne | selectedInfo_res_hasOne
    & selectedInfo_res_2_hasOne;
  wire [1:0]   selectedInfo_first_ctr =
    selectedInfo_res_hasOne
      ? (_tables_4_io_resp_valid
           ? _tables_4_io_resp_bits_ctr
           : _tables_3_io_resp_bits_ctr)
      : selectedInfo_res_2_first_ctr;
  wire         _selectedInfo_T_196 = selectedInfo_res_hasOne & ~selectedInfo_res_hasTwo;
  wire         _GEN_20 = selectedInfo_res_hasOne | ~_tables_2_io_resp_valid;
  wire         providerNull = selectedInfo_first_ctr == 2'h0;
  wire [29:0]  _region_targets_4_T_3 =
    {s2_pc_dup_s2_pc_seg_0_value, s2_pc_dup_s2_pc_seg_1_value[11:8]};
  wire [49:0]  region_targets_0 =
    {_rTable_io_resp_hit_0 & ~_tables_0_io_resp_bits_target_offset_usePCRegion
       ? _rTable_io_resp_region_0
       : _region_targets_4_T_3,
     _tables_0_io_resp_bits_target_offset_offset};
  wire [49:0]  region_targets_1 =
    {_rTable_io_resp_hit_1 & ~_tables_1_io_resp_bits_target_offset_usePCRegion
       ? _rTable_io_resp_region_1
       : _region_targets_4_T_3,
     _tables_1_io_resp_bits_target_offset_offset};
  wire [49:0]  region_targets_2 =
    {_rTable_io_resp_hit_2 & ~_tables_2_io_resp_bits_target_offset_usePCRegion
       ? _rTable_io_resp_region_2
       : _region_targets_4_T_3,
     _tables_2_io_resp_bits_target_offset_offset};
  wire [49:0]  region_targets_3 =
    {_rTable_io_resp_hit_3 & ~_tables_3_io_resp_bits_target_offset_usePCRegion
       ? _rTable_io_resp_region_3
       : _region_targets_4_T_3,
     _tables_3_io_resp_bits_target_offset_offset};
  wire [49:0]  providerCatTarget =
    (selectedInfo_res_hasOne | _GEN_19 ? 50'h0 : 50'h3FFFFFFFFFFFF) & region_targets_0
    | (selectedInfo_res_hasOne | _tables_2_io_resp_valid
         ? 50'h0
         : selectedInfo_res_1_first_maskTarget_1) & region_targets_1
    | (selectedInfo_res_hasOne ? 50'h0 : selectedInfo_res_2_first_maskTarget_2)
    & region_targets_2
    | (~selectedInfo_res_hasOne | _tables_4_io_resp_valid ? 50'h0 : 50'h3FFFFFFFFFFFF)
    & region_targets_3 | (selectedInfo_res_hasOne ? {50{_tables_4_io_resp_valid}} : 50'h0)
    & {_rTable_io_resp_hit_4 & ~_tables_4_io_resp_bits_target_offset_usePCRegion
         ? _rTable_io_resp_region_4
         : _region_targets_4_T_3,
       _tables_4_io_resp_bits_target_offset_offset};
  wire [49:0]  altproviderCatTarget =
    ((selectedInfo_res_hasOne
        ? 50'h0
        : (_tables_2_io_resp_valid
             ? 50'h0
             : {50{~_tables_1_io_resp_valid}} | {50{_tables_1_io_resp_valid}})
          | (~_tables_2_io_resp_valid | _tables_1_io_resp_valid
               ? 50'h0
               : 50'h3FFFFFFFFFFFF))
     | (~_selectedInfo_T_196 | _GEN_19 ? 50'h0 : 50'h3FFFFFFFFFFFF)) & region_targets_0
    | ((_GEN_20 ? 50'h0 : selectedInfo_res_1_first_maskTarget_1)
       | (~_selectedInfo_T_196 | _tables_2_io_resp_valid
            ? 50'h0
            : selectedInfo_res_1_first_maskTarget_1)) & region_targets_1
    | (_selectedInfo_T_196 ? selectedInfo_res_2_first_maskTarget_2 : 50'h0)
    & region_targets_2
    | (selectedInfo_res_hasTwo
         ? {50{~_tables_4_io_resp_valid}} | {50{_tables_4_io_resp_valid}}
         : 50'h0) & region_targets_3;
  wire [49:0]  _s2_tageTarget_T_9 =
    (selectedInfo_hasOne & ~(providerNull & selectedInfo_hasTwo)
       ? providerCatTarget
       : 50'h0) | (selectedInfo_hasTwo & providerNull ? altproviderCatTarget : 50'h0)
    | (selectedInfo_hasOne ? 50'h0 : io_in_bits_resp_in_0_s2_full_pred_3_jalr_target);
  wire         updateRealTargetOffset_usePCRegion =
    updateRealUsePCRegion
    | ~(_rTable_io_write_valid_T_1 | updateAlloc_2 | updateAlloc_3 | updateAlloc_4);
  wire         _updateCorrect_T = updateMeta_providerTarget_r == update_full_target_r;
  wire         _updateU_T_2 =
    updateMeta_r_altDiffers ? _updateCorrect_T : updateMeta_r_providerU;
  wire [2:0]   selectedInfo_first_tableIdx =
    selectedInfo_res_hasOne
      ? (_tables_4_io_resp_valid ? 3'h4 : 3'h3)
      : selectedInfo_res_2_first_tableIdx;
  wire [7:0]   _s2_allocatableSlots_T_17 = 8'h1 << selectedInfo_first_tableIdx;
  wire [4:0]   _GEN_21 = _s2_allocatableSlots_T_17[4:0] | _s2_allocatableSlots_T_17[5:1];
  wire [4:0]   _GEN_22 =
    ~({_GEN_21[4] | selectedInfo_first_tableIdx == 3'h6 | (&selectedInfo_first_tableIdx),
       _GEN_21[3:0] | _s2_allocatableSlots_T_17[5:2] | _s2_allocatableSlots_T_17[6:3]
         | _s2_allocatableSlots_T_17[7:4]} & {5{selectedInfo_hasOne}})
    & {~_tables_4_io_resp_valid & ~_tables_4_io_resp_bits_u,
       ~_tables_3_io_resp_valid & ~_tables_3_io_resp_bits_u,
       ~_tables_2_io_resp_valid & ~_tables_2_io_resp_bits_u,
       ~_tables_1_io_resp_valid & ~_tables_1_io_resp_bits_u,
       ~_tables_0_io_resp_valid & ~_tables_0_io_resp_bits_u};
  wire [4:0]   _GEN_23 =
    _GEN_22
    & {_s2_allocLFSR_prng_io_out_4,
       _s2_allocLFSR_prng_io_out_3,
       _s2_allocLFSR_prng_io_out_2,
       _s2_allocLFSR_prng_io_out_1,
       _s2_allocLFSR_prng_io_out_0};
  wire [2:0]   s2_maskedEntry =
    _GEN_23[0]
      ? 3'h0
      : _GEN_23[1]
          ? 3'h1
          : _GEN_23[2] ? 3'h2 : _GEN_23[3] ? 3'h3 : _GEN_23[4] ? 3'h4 : 3'h7;
  wire [7:0]   _s2_allocEntry_T = {3'h0, _GEN_22} >> s2_maskedEntry;
  always @(posedge clock) begin
    if (REG_1) begin
      s1_pc_dup_0 <= _GEN_18;
      s1_pc_dup_1 <= _GEN_18;
      s1_pc_dup_2 <= _GEN_18;
      s1_pc_dup_3 <= _GEN_18;
    end
    else begin
      if (io_s0_fire_0)
        s1_pc_dup_0 <= io_in_bits_s0_pc_0;
      if (io_s0_fire_1)
        s1_pc_dup_1 <= io_in_bits_s0_pc_1;
      if (io_s0_fire_2)
        s1_pc_dup_2 <= io_in_bits_s0_pc_2;
      if (io_s0_fire_3)
        s1_pc_dup_3 <= io_in_bits_s0_pc_3;
    end
    REG <= reset;
    REG_1 <= REG & ~reset;
    if (io_s2_fire_0)
      s3_tageTarget_dup_0 <= _s2_tageTarget_T_9;
    if (io_s2_fire_1)
      s3_tageTarget_dup_1 <= _s2_tageTarget_T_9;
    if (io_s2_fire_2)
      s3_tageTarget_dup_2 <= _s2_tageTarget_T_9;
    if (io_s2_fire_3) begin
      s3_tageTarget_dup_3 <= _s2_tageTarget_T_9;
      s3_providerTarget <= providerCatTarget;
      s3_altProviderTarget <= altproviderCatTarget;
      s3_provided <= selectedInfo_hasOne;
      s3_provider <= selectedInfo_first_tableIdx;
      s3_altProvided <= selectedInfo_hasTwo;
      s3_altProvider <=
        (_GEN_20 ? 3'h0 : selectedInfo_res_1_first_tableIdx)
        | (_selectedInfo_T_196 ? selectedInfo_res_2_first_tableIdx : 3'h0)
        | (selectedInfo_res_hasTwo
             ? (_tables_4_io_resp_valid ? 3'h0 : 3'h3)
               | (_tables_4_io_resp_valid ? 3'h3 : 3'h0)
             : 3'h0);
      s3_providerU <=
        selectedInfo_res_hasOne
          ? (_tables_4_io_resp_valid
               ? _tables_4_io_resp_bits_u
               : _tables_3_io_resp_bits_u)
          : _tables_2_io_resp_valid
              ? _tables_2_io_resp_bits_u
              : _tables_1_io_resp_valid
                  ? _tables_1_io_resp_bits_u
                  : _tables_0_io_resp_bits_u;
      s3_providerCtr <= selectedInfo_first_ctr;
      s3_altProviderCtr <=
        (selectedInfo_res_hasOne
           ? 2'h0
           : (_tables_2_io_resp_valid
                ? 2'h0
                : (_tables_1_io_resp_valid ? 2'h0 : _tables_0_io_resp_bits_ctr)
                  | (_tables_1_io_resp_valid ? _tables_0_io_resp_bits_ctr : 2'h0))
             | (_tables_2_io_resp_valid ? selectedInfo_res_1_first_ctr : 2'h0))
        | (_selectedInfo_T_196 ? selectedInfo_res_2_first_ctr : 2'h0)
        | (selectedInfo_res_hasTwo
             ? (_tables_4_io_resp_valid ? 2'h0 : _tables_3_io_resp_bits_ctr)
               | (_tables_4_io_resp_valid ? _tables_3_io_resp_bits_ctr : 2'h0)
             : 2'h0);
      resp_meta_allocate_valid_r <= |_GEN_22;
      resp_meta_allocate_bits_r <=
        _s2_allocEntry_T[0]
          ? s2_maskedEntry
          : _GEN_22[0]
              ? 3'h0
              : _GEN_22[1]
                  ? 3'h1
                  : _GEN_22[2] ? 3'h2 : _GEN_22[3] ? 3'h3 : _GEN_22[4] ? 3'h4 : 3'h7;
    end
    if (io_update_valid) begin
      update_r_pc <= io_update_bits_pc;
      update_r_ftb_entry_isRet <= io_update_bits_ftb_entry_isRet;
      update_r_ftb_entry_isJalr <= io_update_bits_ftb_entry_isJalr;
      update_r_ftb_entry_tailSlot_offset <= io_update_bits_ftb_entry_tailSlot_offset;
      update_r_ftb_entry_tailSlot_sharing <= io_update_bits_ftb_entry_tailSlot_sharing;
      update_r_ftb_entry_tailSlot_valid <= io_update_bits_ftb_entry_tailSlot_valid;
      update_r_ftb_entry_strong_bias_1 <= io_update_bits_ftb_entry_strong_bias_1;
      update_r_cfi_idx_valid <= io_update_bits_cfi_idx_valid;
      update_r_jmp_taken <= io_update_bits_jmp_taken;
      update_r_mispred_mask_2 <= io_update_bits_mispred_mask_2;
      updateMeta_r_provider_valid <= io_update_bits_meta[117];
      updateMeta_r_altProvider_valid <= io_update_bits_meta[113];
      updateMeta_r_altDiffers <= io_update_bits_meta[109];
      updateMeta_r_providerU <= io_update_bits_meta[108];
      updateMeta_r_providerCtr <= io_update_bits_meta[107:106];
      updateMeta_r_altProviderCtr <= io_update_bits_meta[105:104];
      updateMeta_r_allocate_valid <= io_update_bits_meta[103];
      update_full_target_r <= io_update_bits_full_target;
      update_ghist_r <= io_update_bits_ghist;
    end
    if (_updateMeta_altProviderTarget_T) begin
      updateMeta_provider_bits_r <= io_update_bits_meta[116:114];
      updateMeta_providerTarget_r <= io_update_bits_meta[99:50];
    end
    if (io_update_valid & io_update_bits_meta[103])
      updateMeta_allocate_bits_r <= io_update_bits_meta[102:100];
    if (io_update_valid & io_update_bits_meta[113])
      updateMeta_altProvider_bits_r <= io_update_bits_meta[112:110];
    if (_updateMeta_altProviderTarget_T & io_update_bits_meta[113]
        & io_update_bits_meta[107:106] == 2'h0)
      updateMeta_altProviderTarget_r <= io_update_bits_meta[49:0];
    if (io_update_valid & io_update_bits_cfi_idx_valid)
      update_cfi_idx_bits_r <= io_update_bits_cfi_idx_bits;
    if (updateMask_0) begin
      tables_0_io_update_correct_r <= _GEN_0 & _updateCorrect_T;
      tables_0_io_update_alloc_r <= updateAlloc_0;
      tables_0_io_update_oldCtr_r <=
        _GEN_0 ? updateMeta_r_providerCtr : updateMeta_r_altProviderCtr;
      tables_0_io_update_target_offset_r_offset <= update_full_target_r[19:0];
      tables_0_io_update_target_offset_r_pointer <= _rTable_io_write_pointer;
      tables_0_io_update_target_offset_r_usePCRegion <=
        updateRealTargetOffset_usePCRegion;
      tables_0_io_update_old_target_offset_r_offset <=
        _GEN_0 ? updateMeta_providerTarget_r[19:0] : updateMeta_altProviderTarget_r[19:0];
      tables_0_io_update_old_target_offset_r_pointer <=
        _GEN_0 ? _rTable_io_update_pointer_0 : _rTable_io_update_pointer_1;
      tables_0_io_update_old_target_offset_r_usePCRegion <=
        _GEN_0 ? ~_rTable_io_update_hit_0 : ~_rTable_io_update_hit_1;
      tables_0_io_update_u_r <= ~_GEN_8 & _updateU_T_2;
      tables_0_io_update_pc_r <= io_update_bits_pc;
      tables_0_io_update_ghist_r <= update_ghist_r;
    end
    if (updateMask_1) begin
      tables_1_io_update_correct_r <= _GEN_2 & _updateCorrect_T;
      tables_1_io_update_alloc_r <= updateAlloc_1;
      tables_1_io_update_oldCtr_r <=
        _GEN_2 ? updateMeta_r_providerCtr : updateMeta_r_altProviderCtr;
      tables_1_io_update_target_offset_r_offset <= update_full_target_r[19:0];
      tables_1_io_update_target_offset_r_pointer <= _rTable_io_write_pointer;
      tables_1_io_update_target_offset_r_usePCRegion <=
        updateRealTargetOffset_usePCRegion;
      tables_1_io_update_old_target_offset_r_offset <=
        _GEN_2 ? updateMeta_providerTarget_r[19:0] : updateMeta_altProviderTarget_r[19:0];
      tables_1_io_update_old_target_offset_r_pointer <=
        _GEN_2 ? _rTable_io_update_pointer_0 : _rTable_io_update_pointer_1;
      tables_1_io_update_old_target_offset_r_usePCRegion <=
        _GEN_2 ? ~_rTable_io_update_hit_0 : ~_rTable_io_update_hit_1;
      tables_1_io_update_u_r <= ~_GEN_10 & _updateU_T_2;
      tables_1_io_update_pc_r <= io_update_bits_pc;
      tables_1_io_update_ghist_r <= update_ghist_r;
    end
    if (updateMask_2) begin
      tables_2_io_update_correct_r <= _GEN_3 & _updateCorrect_T;
      tables_2_io_update_alloc_r <= updateAlloc_2;
      tables_2_io_update_oldCtr_r <=
        _GEN_3 ? updateMeta_r_providerCtr : updateMeta_r_altProviderCtr;
      tables_2_io_update_target_offset_r_offset <= update_full_target_r[19:0];
      tables_2_io_update_target_offset_r_pointer <= _rTable_io_write_pointer;
      tables_2_io_update_target_offset_r_usePCRegion <=
        updateRealTargetOffset_usePCRegion;
      tables_2_io_update_old_target_offset_r_offset <=
        _GEN_3 ? updateMeta_providerTarget_r[19:0] : updateMeta_altProviderTarget_r[19:0];
      tables_2_io_update_old_target_offset_r_pointer <=
        _GEN_3 ? _rTable_io_update_pointer_0 : _rTable_io_update_pointer_1;
      tables_2_io_update_old_target_offset_r_usePCRegion <=
        _GEN_3 ? ~_rTable_io_update_hit_0 : ~_rTable_io_update_hit_1;
      tables_2_io_update_u_r <= ~_GEN_12 & _updateU_T_2;
      tables_2_io_update_pc_r <= io_update_bits_pc;
      tables_2_io_update_ghist_r <= update_ghist_r;
    end
    if (updateMask_3) begin
      tables_3_io_update_correct_r <= _GEN_4 & _updateCorrect_T;
      tables_3_io_update_alloc_r <= updateAlloc_3;
      tables_3_io_update_oldCtr_r <=
        _GEN_4 ? updateMeta_r_providerCtr : updateMeta_r_altProviderCtr;
      tables_3_io_update_target_offset_r_offset <= update_full_target_r[19:0];
      tables_3_io_update_target_offset_r_pointer <= _rTable_io_write_pointer;
      tables_3_io_update_target_offset_r_usePCRegion <=
        updateRealTargetOffset_usePCRegion;
      tables_3_io_update_old_target_offset_r_offset <=
        _GEN_4 ? updateMeta_providerTarget_r[19:0] : updateMeta_altProviderTarget_r[19:0];
      tables_3_io_update_old_target_offset_r_pointer <=
        _GEN_4 ? _rTable_io_update_pointer_0 : _rTable_io_update_pointer_1;
      tables_3_io_update_old_target_offset_r_usePCRegion <=
        _GEN_4 ? ~_rTable_io_update_hit_0 : ~_rTable_io_update_hit_1;
      tables_3_io_update_u_r <= ~_GEN_14 & _updateU_T_2;
      tables_3_io_update_pc_r <= io_update_bits_pc;
      tables_3_io_update_ghist_r <= update_ghist_r;
    end
    if (updateMask_4) begin
      tables_4_io_update_correct_r <= _GEN_5 & _updateCorrect_T;
      tables_4_io_update_alloc_r <= updateAlloc_4;
      tables_4_io_update_oldCtr_r <=
        _GEN_5 ? updateMeta_r_providerCtr : updateMeta_r_altProviderCtr;
      tables_4_io_update_target_offset_r_offset <= update_full_target_r[19:0];
      tables_4_io_update_target_offset_r_pointer <= _rTable_io_write_pointer;
      tables_4_io_update_target_offset_r_usePCRegion <=
        updateRealTargetOffset_usePCRegion;
      tables_4_io_update_old_target_offset_r_offset <=
        _GEN_5 ? updateMeta_providerTarget_r[19:0] : updateMeta_altProviderTarget_r[19:0];
      tables_4_io_update_old_target_offset_r_pointer <=
        _GEN_5 ? _rTable_io_update_pointer_0 : _rTable_io_update_pointer_1;
      tables_4_io_update_old_target_offset_r_usePCRegion <=
        _GEN_5 ? ~_rTable_io_update_hit_0 : ~_rTable_io_update_hit_1;
      tables_4_io_update_u_r <= ~_GEN_16 & _updateU_T_2;
      tables_4_io_update_pc_r <= io_update_bits_pc;
      tables_4_io_update_ghist_r <= update_ghist_r;
    end
  end // always @(posedge)
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      s2_pc_dup_s2_pc_seg_0_value <= 26'h0;
      s2_pc_dup_s2_pc_seg_1_value <= 12'h0;
      s2_pc_dup_s2_pc_seg_2_value <= 12'h0;
      s2_pc_dup_s2_pc_seg_0_value_1 <= 26'h0;
      s2_pc_dup_s2_pc_seg_1_value_1 <= 12'h0;
      s2_pc_dup_s2_pc_seg_2_value_1 <= 12'h0;
      s2_pc_dup_s2_pc_seg_0_value_2 <= 26'h0;
      s2_pc_dup_s2_pc_seg_1_value_2 <= 12'h0;
      s2_pc_dup_s2_pc_seg_2_value_2 <= 12'h0;
      s2_pc_dup_s2_pc_seg_0_value_3 <= 26'h0;
      s2_pc_dup_s2_pc_seg_1_value_3 <= 12'h0;
      s2_pc_dup_s2_pc_seg_2_value_3 <= 12'h0;
      s3_pc_dup_s3_pc_seg_0_value <= 26'h0;
      s3_pc_dup_s3_pc_seg_1_value <= 12'h0;
      s3_pc_dup_s3_pc_seg_2_value <= 12'h0;
      s3_pc_dup_s3_pc_seg_0_value_1 <= 26'h0;
      s3_pc_dup_s3_pc_seg_1_value_1 <= 12'h0;
      s3_pc_dup_s3_pc_seg_2_value_1 <= 12'h0;
      s3_pc_dup_s3_pc_seg_0_value_2 <= 26'h0;
      s3_pc_dup_s3_pc_seg_1_value_2 <= 12'h0;
      s3_pc_dup_s3_pc_seg_2_value_2 <= 12'h0;
      s3_pc_dup_s3_pc_seg_0_value_3 <= 26'h0;
      s3_pc_dup_s3_pc_seg_1_value_3 <= 12'h0;
      s3_pc_dup_s3_pc_seg_2_value_3 <= 12'h0;
      tickCtr <= 8'h0;
      u_valid <= 1'h0;
      tables_0_io_update_valid_REG <= 1'h0;
      tables_0_io_update_reset_u_REG <= 1'h0;
      tables_0_io_update_uValid_r <= 1'h0;
      tables_1_io_update_valid_REG <= 1'h0;
      tables_1_io_update_reset_u_REG <= 1'h0;
      tables_1_io_update_uValid_r <= 1'h0;
      tables_2_io_update_valid_REG <= 1'h0;
      tables_2_io_update_reset_u_REG <= 1'h0;
      tables_2_io_update_uValid_r <= 1'h0;
      tables_3_io_update_valid_REG <= 1'h0;
      tables_3_io_update_reset_u_REG <= 1'h0;
      tables_3_io_update_uValid_r <= 1'h0;
      tables_4_io_update_valid_REG <= 1'h0;
      tables_4_io_update_reset_u_REG <= 1'h0;
      tables_4_io_update_uValid_r <= 1'h0;
    end
    else begin
      if (s2_pc_dup_debug_modified_debug_s2_pc_modified_0 & io_s1_fire_0)
        s2_pc_dup_s2_pc_seg_0_value <= s1_pc_dup_0[49:24];
      if (s2_pc_dup_debug_modified_debug_s2_pc_modified_1 & io_s1_fire_0)
        s2_pc_dup_s2_pc_seg_1_value <= s1_pc_dup_0[23:12];
      if (s2_pc_dup_debug_modified_debug_s2_pc_modified_2 & io_s1_fire_0)
        s2_pc_dup_s2_pc_seg_2_value <= s1_pc_dup_0[11:0];
      if (s2_pc_dup_debug_modified_debug_s2_pc_modified_1_0 & io_s1_fire_1)
        s2_pc_dup_s2_pc_seg_0_value_1 <= s1_pc_dup_1[49:24];
      if (s2_pc_dup_debug_modified_debug_s2_pc_modified_1_1 & io_s1_fire_1)
        s2_pc_dup_s2_pc_seg_1_value_1 <= s1_pc_dup_1[23:12];
      if (s2_pc_dup_debug_modified_debug_s2_pc_modified_1_2 & io_s1_fire_1)
        s2_pc_dup_s2_pc_seg_2_value_1 <= s1_pc_dup_1[11:0];
      if (s2_pc_dup_debug_modified_debug_s2_pc_modified_2_0 & io_s1_fire_2)
        s2_pc_dup_s2_pc_seg_0_value_2 <= s1_pc_dup_2[49:24];
      if (s2_pc_dup_debug_modified_debug_s2_pc_modified_2_1 & io_s1_fire_2)
        s2_pc_dup_s2_pc_seg_1_value_2 <= s1_pc_dup_2[23:12];
      if (s2_pc_dup_debug_modified_debug_s2_pc_modified_2_2 & io_s1_fire_2)
        s2_pc_dup_s2_pc_seg_2_value_2 <= s1_pc_dup_2[11:0];
      if (s2_pc_dup_debug_modified_debug_s2_pc_modified_3_0 & io_s1_fire_3)
        s2_pc_dup_s2_pc_seg_0_value_3 <= s1_pc_dup_3[49:24];
      if (s2_pc_dup_debug_modified_debug_s2_pc_modified_3_1 & io_s1_fire_3)
        s2_pc_dup_s2_pc_seg_1_value_3 <= s1_pc_dup_3[23:12];
      if (s2_pc_dup_debug_modified_debug_s2_pc_modified_3_2 & io_s1_fire_3)
        s2_pc_dup_s2_pc_seg_2_value_3 <= s1_pc_dup_3[11:0];
      if (s3_pc_dup_debug_modified_debug_s3_pc_modified_0 & io_s2_fire_0)
        s3_pc_dup_s3_pc_seg_0_value <= s2_pc_dup_s2_pc_seg_0_value;
      if (s3_pc_dup_debug_modified_debug_s3_pc_modified_1 & io_s2_fire_0)
        s3_pc_dup_s3_pc_seg_1_value <= s2_pc_dup_s2_pc_seg_1_value;
      if (s3_pc_dup_debug_modified_debug_s3_pc_modified_2 & io_s2_fire_0)
        s3_pc_dup_s3_pc_seg_2_value <= s2_pc_dup_s2_pc_seg_2_value;
      if (s3_pc_dup_debug_modified_debug_s3_pc_modified_1_0 & io_s2_fire_1)
        s3_pc_dup_s3_pc_seg_0_value_1 <= s2_pc_dup_s2_pc_seg_0_value_1;
      if (s3_pc_dup_debug_modified_debug_s3_pc_modified_1_1 & io_s2_fire_1)
        s3_pc_dup_s3_pc_seg_1_value_1 <= s2_pc_dup_s2_pc_seg_1_value_1;
      if (s3_pc_dup_debug_modified_debug_s3_pc_modified_1_2 & io_s2_fire_1)
        s3_pc_dup_s3_pc_seg_2_value_1 <= s2_pc_dup_s2_pc_seg_2_value_1;
      if (s3_pc_dup_debug_modified_debug_s3_pc_modified_2_0 & io_s2_fire_2)
        s3_pc_dup_s3_pc_seg_0_value_2 <= s2_pc_dup_s2_pc_seg_0_value_2;
      if (s3_pc_dup_debug_modified_debug_s3_pc_modified_2_1 & io_s2_fire_2)
        s3_pc_dup_s3_pc_seg_1_value_2 <= s2_pc_dup_s2_pc_seg_1_value_2;
      if (s3_pc_dup_debug_modified_debug_s3_pc_modified_2_2 & io_s2_fire_2)
        s3_pc_dup_s3_pc_seg_2_value_2 <= s2_pc_dup_s2_pc_seg_2_value_2;
      if (s3_pc_dup_debug_modified_debug_s3_pc_modified_3_0 & io_s2_fire_3)
        s3_pc_dup_s3_pc_seg_0_value_3 <= s2_pc_dup_s2_pc_seg_0_value_3;
      if (s3_pc_dup_debug_modified_debug_s3_pc_modified_3_1 & io_s2_fire_3)
        s3_pc_dup_s3_pc_seg_1_value_3 <= s2_pc_dup_s2_pc_seg_1_value_3;
      if (s3_pc_dup_debug_modified_debug_s3_pc_modified_3_2 & io_s2_fire_3)
        s3_pc_dup_s3_pc_seg_2_value_3 <= s2_pc_dup_s2_pc_seg_2_value_3;
      if (&tickCtr)
        tickCtr <= 8'h0;
      else if (_GEN_6) begin
        if ((&tickCtr) & ~updateMeta_r_allocate_valid)
          tickCtr <= 8'hFF;
        else if (tickCtr == 8'h0 & updateMeta_r_allocate_valid)
          tickCtr <= 8'h0;
        else if (updateMeta_r_allocate_valid)
          tickCtr <= 8'(tickCtr - 8'h1);
        else
          tickCtr <= 8'(tickCtr + 8'h1);
      end
      u_valid <= io_update_valid;
      tables_0_io_update_valid_REG <= updateMask_0;
      tables_0_io_update_reset_u_REG <= &tickCtr;
      if (updateMask_0)
        tables_0_io_update_uValid_r <= _GEN_8 | _GEN_1 & _GEN_0;
      tables_1_io_update_valid_REG <= updateMask_1;
      tables_1_io_update_reset_u_REG <= &tickCtr;
      if (updateMask_1)
        tables_1_io_update_uValid_r <= _GEN_10 | _GEN_1 & _GEN_2;
      tables_2_io_update_valid_REG <= updateMask_2;
      tables_2_io_update_reset_u_REG <= &tickCtr;
      if (updateMask_2)
        tables_2_io_update_uValid_r <= _GEN_12 | _GEN_1 & _GEN_3;
      tables_3_io_update_valid_REG <= updateMask_3;
      tables_3_io_update_reset_u_REG <= &tickCtr;
      if (updateMask_3)
        tables_3_io_update_uValid_r <= _GEN_14 | _GEN_1 & _GEN_4;
      tables_4_io_update_valid_REG <= updateMask_4;
      tables_4_io_update_reset_u_REG <= &tickCtr;
      if (updateMask_4)
        tables_4_io_update_uValid_r <= _GEN_16 | _GEN_1 & _GEN_5;
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:131];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [7:0] i = 8'h0; i < 8'h84; i += 8'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        s1_pc_dup_0 = {_RANDOM[8'h0], _RANDOM[8'h1][17:0]};
        s1_pc_dup_1 = {_RANDOM[8'h1][31:18], _RANDOM[8'h2], _RANDOM[8'h3][3:0]};
        s1_pc_dup_2 = {_RANDOM[8'h3][31:4], _RANDOM[8'h4][21:0]};
        s1_pc_dup_3 = {_RANDOM[8'h4][31:22], _RANDOM[8'h5], _RANDOM[8'h6][7:0]};
        s2_pc_dup_s2_pc_seg_0_value = {_RANDOM[8'h6][31:8], _RANDOM[8'h7][1:0]};
        s2_pc_dup_s2_pc_seg_1_value = _RANDOM[8'h7][13:2];
        s2_pc_dup_s2_pc_seg_2_value = _RANDOM[8'h7][25:14];
        s2_pc_dup_s2_pc_seg_0_value_1 = {_RANDOM[8'h7][31:26], _RANDOM[8'h8][19:0]};
        s2_pc_dup_s2_pc_seg_1_value_1 = _RANDOM[8'h8][31:20];
        s2_pc_dup_s2_pc_seg_2_value_1 = _RANDOM[8'h9][11:0];
        s2_pc_dup_s2_pc_seg_0_value_2 = {_RANDOM[8'h9][31:12], _RANDOM[8'hA][5:0]};
        s2_pc_dup_s2_pc_seg_1_value_2 = _RANDOM[8'hA][17:6];
        s2_pc_dup_s2_pc_seg_2_value_2 = _RANDOM[8'hA][29:18];
        s2_pc_dup_s2_pc_seg_0_value_3 = {_RANDOM[8'hA][31:30], _RANDOM[8'hB][23:0]};
        s2_pc_dup_s2_pc_seg_1_value_3 = {_RANDOM[8'hB][31:24], _RANDOM[8'hC][3:0]};
        s2_pc_dup_s2_pc_seg_2_value_3 = _RANDOM[8'hC][15:4];
        s3_pc_dup_s3_pc_seg_0_value = {_RANDOM[8'hC][31:16], _RANDOM[8'hD][9:0]};
        s3_pc_dup_s3_pc_seg_1_value = _RANDOM[8'hD][21:10];
        s3_pc_dup_s3_pc_seg_2_value = {_RANDOM[8'hD][31:22], _RANDOM[8'hE][1:0]};
        s3_pc_dup_s3_pc_seg_0_value_1 = _RANDOM[8'hE][27:2];
        s3_pc_dup_s3_pc_seg_1_value_1 = {_RANDOM[8'hE][31:28], _RANDOM[8'hF][7:0]};
        s3_pc_dup_s3_pc_seg_2_value_1 = _RANDOM[8'hF][19:8];
        s3_pc_dup_s3_pc_seg_0_value_2 = {_RANDOM[8'hF][31:20], _RANDOM[8'h10][13:0]};
        s3_pc_dup_s3_pc_seg_1_value_2 = _RANDOM[8'h10][25:14];
        s3_pc_dup_s3_pc_seg_2_value_2 = {_RANDOM[8'h10][31:26], _RANDOM[8'h11][5:0]};
        s3_pc_dup_s3_pc_seg_0_value_3 = _RANDOM[8'h11][31:6];
        s3_pc_dup_s3_pc_seg_1_value_3 = _RANDOM[8'h12][11:0];
        s3_pc_dup_s3_pc_seg_2_value_3 = _RANDOM[8'h12][23:12];
        REG = _RANDOM[8'h12][24];
        REG_1 = _RANDOM[8'h12][25];
        tickCtr = {_RANDOM[8'h12][31:30], _RANDOM[8'h13][5:0]};
        s3_tageTarget_dup_0 =
          {_RANDOM[8'h17][31:28], _RANDOM[8'h18], _RANDOM[8'h19][13:0]};
        s3_tageTarget_dup_1 = {_RANDOM[8'h19][31:14], _RANDOM[8'h1A]};
        s3_tageTarget_dup_2 = {_RANDOM[8'h1B], _RANDOM[8'h1C][17:0]};
        s3_tageTarget_dup_3 =
          {_RANDOM[8'h1C][31:18], _RANDOM[8'h1D], _RANDOM[8'h1E][3:0]};
        s3_providerTarget = {_RANDOM[8'h1E][31:4], _RANDOM[8'h1F][21:0]};
        s3_altProviderTarget =
          {_RANDOM[8'h1F][31:22], _RANDOM[8'h20], _RANDOM[8'h21][7:0]};
        s3_provided = _RANDOM[8'h21][8];
        s3_provider = _RANDOM[8'h21][11:9];
        s3_altProvided = _RANDOM[8'h21][12];
        s3_altProvider = _RANDOM[8'h21][15:13];
        s3_providerU = _RANDOM[8'h21][16];
        s3_providerCtr = _RANDOM[8'h21][18:17];
        s3_altProviderCtr = _RANDOM[8'h21][20:19];
        u_valid = _RANDOM[8'h21][21];
        update_r_pc = {_RANDOM[8'h21][31:22], _RANDOM[8'h22], _RANDOM[8'h23][7:0]};
        update_r_ftb_entry_isRet = _RANDOM[8'h25][29];
        update_r_ftb_entry_isJalr = _RANDOM[8'h25][30];
        update_r_ftb_entry_tailSlot_offset = _RANDOM[8'h26][23:20];
        update_r_ftb_entry_tailSlot_sharing = _RANDOM[8'h26][24];
        update_r_ftb_entry_tailSlot_valid = _RANDOM[8'h26][25];
        update_r_ftb_entry_strong_bias_1 = _RANDOM[8'h27][23];
        update_r_cfi_idx_valid = _RANDOM[8'h27][24];
        update_r_jmp_taken = _RANDOM[8'h28][1];
        update_r_mispred_mask_2 = _RANDOM[8'h28][4];
        updateMeta_r_provider_valid = _RANDOM[8'h3A][2];
        updateMeta_r_altProvider_valid = _RANDOM[8'h3A][6];
        updateMeta_r_altDiffers = _RANDOM[8'h3A][10];
        updateMeta_r_providerU = _RANDOM[8'h3A][11];
        updateMeta_r_providerCtr = _RANDOM[8'h3A][13:12];
        updateMeta_r_altProviderCtr = _RANDOM[8'h3A][15:14];
        updateMeta_r_allocate_valid = _RANDOM[8'h3A][16];
        updateMeta_provider_bits_r = _RANDOM[8'h3D][26:24];
        updateMeta_providerTarget_r =
          {_RANDOM[8'h3D][31:27], _RANDOM[8'h3E], _RANDOM[8'h3F][12:0]};
        updateMeta_allocate_bits_r = _RANDOM[8'h3F][15:13];
        updateMeta_altProvider_bits_r = _RANDOM[8'h3F][18:16];
        updateMeta_altProviderTarget_r =
          {_RANDOM[8'h3F][31:19], _RANDOM[8'h40], _RANDOM[8'h41][4:0]};
        update_full_target_r = {_RANDOM[8'h41][31:5], _RANDOM[8'h42][22:0]};
        update_cfi_idx_bits_r = _RANDOM[8'h42][26:23];
        update_ghist_r =
          {_RANDOM[8'h42][31:27],
           _RANDOM[8'h43],
           _RANDOM[8'h44],
           _RANDOM[8'h45],
           _RANDOM[8'h46],
           _RANDOM[8'h47],
           _RANDOM[8'h48],
           _RANDOM[8'h49],
           _RANDOM[8'h4A][26:0]};
        resp_meta_allocate_valid_r = _RANDOM[8'h4A][27];
        resp_meta_allocate_bits_r = _RANDOM[8'h4A][30:28];
        tables_0_io_update_valid_REG = _RANDOM[8'h4A][31];
        tables_0_io_update_reset_u_REG = _RANDOM[8'h4B][0];
        tables_0_io_update_correct_r = _RANDOM[8'h4B][1];
        tables_0_io_update_alloc_r = _RANDOM[8'h4B][2];
        tables_0_io_update_oldCtr_r = _RANDOM[8'h4B][4:3];
        tables_0_io_update_target_offset_r_offset = _RANDOM[8'h4B][24:5];
        tables_0_io_update_target_offset_r_pointer = _RANDOM[8'h4B][28:25];
        tables_0_io_update_target_offset_r_usePCRegion = _RANDOM[8'h4B][29];
        tables_0_io_update_old_target_offset_r_offset =
          {_RANDOM[8'h4B][31:30], _RANDOM[8'h4C][17:0]};
        tables_0_io_update_old_target_offset_r_pointer = _RANDOM[8'h4C][21:18];
        tables_0_io_update_old_target_offset_r_usePCRegion = _RANDOM[8'h4C][22];
        tables_0_io_update_uValid_r = _RANDOM[8'h4C][23];
        tables_0_io_update_u_r = _RANDOM[8'h4C][24];
        tables_0_io_update_pc_r =
          {_RANDOM[8'h4C][31:25], _RANDOM[8'h4D], _RANDOM[8'h4E][10:0]};
        tables_0_io_update_ghist_r =
          {_RANDOM[8'h4E][31:11],
           _RANDOM[8'h4F],
           _RANDOM[8'h50],
           _RANDOM[8'h51],
           _RANDOM[8'h52],
           _RANDOM[8'h53],
           _RANDOM[8'h54],
           _RANDOM[8'h55],
           _RANDOM[8'h56][10:0]};
        tables_1_io_update_valid_REG = _RANDOM[8'h56][11];
        tables_1_io_update_reset_u_REG = _RANDOM[8'h56][12];
        tables_1_io_update_correct_r = _RANDOM[8'h56][13];
        tables_1_io_update_alloc_r = _RANDOM[8'h56][14];
        tables_1_io_update_oldCtr_r = _RANDOM[8'h56][16:15];
        tables_1_io_update_target_offset_r_offset =
          {_RANDOM[8'h56][31:17], _RANDOM[8'h57][4:0]};
        tables_1_io_update_target_offset_r_pointer = _RANDOM[8'h57][8:5];
        tables_1_io_update_target_offset_r_usePCRegion = _RANDOM[8'h57][9];
        tables_1_io_update_old_target_offset_r_offset = _RANDOM[8'h57][29:10];
        tables_1_io_update_old_target_offset_r_pointer =
          {_RANDOM[8'h57][31:30], _RANDOM[8'h58][1:0]};
        tables_1_io_update_old_target_offset_r_usePCRegion = _RANDOM[8'h58][2];
        tables_1_io_update_uValid_r = _RANDOM[8'h58][3];
        tables_1_io_update_u_r = _RANDOM[8'h58][4];
        tables_1_io_update_pc_r = {_RANDOM[8'h58][31:5], _RANDOM[8'h59][22:0]};
        tables_1_io_update_ghist_r =
          {_RANDOM[8'h59][31:23],
           _RANDOM[8'h5A],
           _RANDOM[8'h5B],
           _RANDOM[8'h5C],
           _RANDOM[8'h5D],
           _RANDOM[8'h5E],
           _RANDOM[8'h5F],
           _RANDOM[8'h60],
           _RANDOM[8'h61][22:0]};
        tables_2_io_update_valid_REG = _RANDOM[8'h61][23];
        tables_2_io_update_reset_u_REG = _RANDOM[8'h61][24];
        tables_2_io_update_correct_r = _RANDOM[8'h61][25];
        tables_2_io_update_alloc_r = _RANDOM[8'h61][26];
        tables_2_io_update_oldCtr_r = _RANDOM[8'h61][28:27];
        tables_2_io_update_target_offset_r_offset =
          {_RANDOM[8'h61][31:29], _RANDOM[8'h62][16:0]};
        tables_2_io_update_target_offset_r_pointer = _RANDOM[8'h62][20:17];
        tables_2_io_update_target_offset_r_usePCRegion = _RANDOM[8'h62][21];
        tables_2_io_update_old_target_offset_r_offset =
          {_RANDOM[8'h62][31:22], _RANDOM[8'h63][9:0]};
        tables_2_io_update_old_target_offset_r_pointer = _RANDOM[8'h63][13:10];
        tables_2_io_update_old_target_offset_r_usePCRegion = _RANDOM[8'h63][14];
        tables_2_io_update_uValid_r = _RANDOM[8'h63][15];
        tables_2_io_update_u_r = _RANDOM[8'h63][16];
        tables_2_io_update_pc_r =
          {_RANDOM[8'h63][31:17], _RANDOM[8'h64], _RANDOM[8'h65][2:0]};
        tables_2_io_update_ghist_r =
          {_RANDOM[8'h65][31:3],
           _RANDOM[8'h66],
           _RANDOM[8'h67],
           _RANDOM[8'h68],
           _RANDOM[8'h69],
           _RANDOM[8'h6A],
           _RANDOM[8'h6B],
           _RANDOM[8'h6C],
           _RANDOM[8'h6D][2:0]};
        tables_3_io_update_valid_REG = _RANDOM[8'h6D][3];
        tables_3_io_update_reset_u_REG = _RANDOM[8'h6D][4];
        tables_3_io_update_correct_r = _RANDOM[8'h6D][5];
        tables_3_io_update_alloc_r = _RANDOM[8'h6D][6];
        tables_3_io_update_oldCtr_r = _RANDOM[8'h6D][8:7];
        tables_3_io_update_target_offset_r_offset = _RANDOM[8'h6D][28:9];
        tables_3_io_update_target_offset_r_pointer =
          {_RANDOM[8'h6D][31:29], _RANDOM[8'h6E][0]};
        tables_3_io_update_target_offset_r_usePCRegion = _RANDOM[8'h6E][1];
        tables_3_io_update_old_target_offset_r_offset = _RANDOM[8'h6E][21:2];
        tables_3_io_update_old_target_offset_r_pointer = _RANDOM[8'h6E][25:22];
        tables_3_io_update_old_target_offset_r_usePCRegion = _RANDOM[8'h6E][26];
        tables_3_io_update_uValid_r = _RANDOM[8'h6E][27];
        tables_3_io_update_u_r = _RANDOM[8'h6E][28];
        tables_3_io_update_pc_r =
          {_RANDOM[8'h6E][31:29], _RANDOM[8'h6F], _RANDOM[8'h70][14:0]};
        tables_3_io_update_ghist_r =
          {_RANDOM[8'h70][31:15],
           _RANDOM[8'h71],
           _RANDOM[8'h72],
           _RANDOM[8'h73],
           _RANDOM[8'h74],
           _RANDOM[8'h75],
           _RANDOM[8'h76],
           _RANDOM[8'h77],
           _RANDOM[8'h78][14:0]};
        tables_4_io_update_valid_REG = _RANDOM[8'h78][15];
        tables_4_io_update_reset_u_REG = _RANDOM[8'h78][16];
        tables_4_io_update_correct_r = _RANDOM[8'h78][17];
        tables_4_io_update_alloc_r = _RANDOM[8'h78][18];
        tables_4_io_update_oldCtr_r = _RANDOM[8'h78][20:19];
        tables_4_io_update_target_offset_r_offset =
          {_RANDOM[8'h78][31:21], _RANDOM[8'h79][8:0]};
        tables_4_io_update_target_offset_r_pointer = _RANDOM[8'h79][12:9];
        tables_4_io_update_target_offset_r_usePCRegion = _RANDOM[8'h79][13];
        tables_4_io_update_old_target_offset_r_offset =
          {_RANDOM[8'h79][31:14], _RANDOM[8'h7A][1:0]};
        tables_4_io_update_old_target_offset_r_pointer = _RANDOM[8'h7A][5:2];
        tables_4_io_update_old_target_offset_r_usePCRegion = _RANDOM[8'h7A][6];
        tables_4_io_update_uValid_r = _RANDOM[8'h7A][7];
        tables_4_io_update_u_r = _RANDOM[8'h7A][8];
        tables_4_io_update_pc_r = {_RANDOM[8'h7A][31:9], _RANDOM[8'h7B][26:0]};
        tables_4_io_update_ghist_r =
          {_RANDOM[8'h7B][31:27],
           _RANDOM[8'h7C],
           _RANDOM[8'h7D],
           _RANDOM[8'h7E],
           _RANDOM[8'h7F],
           _RANDOM[8'h80],
           _RANDOM[8'h81],
           _RANDOM[8'h82],
           _RANDOM[8'h83][26:0]};
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        s2_pc_dup_s2_pc_seg_0_value = 26'h0;
        s2_pc_dup_s2_pc_seg_1_value = 12'h0;
        s2_pc_dup_s2_pc_seg_2_value = 12'h0;
        s2_pc_dup_s2_pc_seg_0_value_1 = 26'h0;
        s2_pc_dup_s2_pc_seg_1_value_1 = 12'h0;
        s2_pc_dup_s2_pc_seg_2_value_1 = 12'h0;
        s2_pc_dup_s2_pc_seg_0_value_2 = 26'h0;
        s2_pc_dup_s2_pc_seg_1_value_2 = 12'h0;
        s2_pc_dup_s2_pc_seg_2_value_2 = 12'h0;
        s2_pc_dup_s2_pc_seg_0_value_3 = 26'h0;
        s2_pc_dup_s2_pc_seg_1_value_3 = 12'h0;
        s2_pc_dup_s2_pc_seg_2_value_3 = 12'h0;
        s3_pc_dup_s3_pc_seg_0_value = 26'h0;
        s3_pc_dup_s3_pc_seg_1_value = 12'h0;
        s3_pc_dup_s3_pc_seg_2_value = 12'h0;
        s3_pc_dup_s3_pc_seg_0_value_1 = 26'h0;
        s3_pc_dup_s3_pc_seg_1_value_1 = 12'h0;
        s3_pc_dup_s3_pc_seg_2_value_1 = 12'h0;
        s3_pc_dup_s3_pc_seg_0_value_2 = 26'h0;
        s3_pc_dup_s3_pc_seg_1_value_2 = 12'h0;
        s3_pc_dup_s3_pc_seg_2_value_2 = 12'h0;
        s3_pc_dup_s3_pc_seg_0_value_3 = 26'h0;
        s3_pc_dup_s3_pc_seg_1_value_3 = 12'h0;
        s3_pc_dup_s3_pc_seg_2_value_3 = 12'h0;
        tickCtr = 8'h0;
        u_valid = 1'h0;
        tables_0_io_update_valid_REG = 1'h0;
        tables_0_io_update_reset_u_REG = 1'h0;
        tables_0_io_update_uValid_r = 1'h0;
        tables_1_io_update_valid_REG = 1'h0;
        tables_1_io_update_reset_u_REG = 1'h0;
        tables_1_io_update_uValid_r = 1'h0;
        tables_2_io_update_valid_REG = 1'h0;
        tables_2_io_update_reset_u_REG = 1'h0;
        tables_2_io_update_uValid_r = 1'h0;
        tables_3_io_update_valid_REG = 1'h0;
        tables_3_io_update_reset_u_REG = 1'h0;
        tables_3_io_update_uValid_r = 1'h0;
        tables_4_io_update_valid_REG = 1'h0;
        tables_4_io_update_reset_u_REG = 1'h0;
        tables_4_io_update_uValid_r = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ITTageTable tables_0 (
    .clock                                       (clock),
    .reset                                       (reset),
    .io_req_ready                                (_tables_0_io_req_ready),
    .io_req_valid                                (_tables_4_io_req_valid_T),
    .io_req_bits_pc                              (s1_pc_dup_3),
    .io_req_bits_folded_hist_hist_12_folded_hist
      (io_in_bits_s1_folded_hist_3_hist_12_folded_hist),
    .io_resp_valid                               (_tables_0_io_resp_valid),
    .io_resp_bits_ctr                            (_tables_0_io_resp_bits_ctr),
    .io_resp_bits_u                              (_tables_0_io_resp_bits_u),
    .io_resp_bits_target_offset_offset
      (_tables_0_io_resp_bits_target_offset_offset),
    .io_resp_bits_target_offset_pointer
      (_tables_0_io_resp_bits_target_offset_pointer),
    .io_resp_bits_target_offset_usePCRegion
      (_tables_0_io_resp_bits_target_offset_usePCRegion),
    .io_update_pc                                (tables_0_io_update_pc_r),
    .io_update_ghist                             (tables_0_io_update_ghist_r),
    .io_update_valid                             (tables_0_io_update_valid_REG),
    .io_update_correct                           (tables_0_io_update_correct_r),
    .io_update_alloc                             (tables_0_io_update_alloc_r),
    .io_update_oldCtr                            (tables_0_io_update_oldCtr_r),
    .io_update_uValid                            (tables_0_io_update_uValid_r),
    .io_update_u                                 (tables_0_io_update_u_r),
    .io_update_reset_u                           (tables_0_io_update_reset_u_REG),
    .io_update_target_offset_offset
      (tables_0_io_update_target_offset_r_offset),
    .io_update_target_offset_pointer
      (tables_0_io_update_target_offset_r_pointer),
    .io_update_target_offset_usePCRegion
      (tables_0_io_update_target_offset_r_usePCRegion),
    .io_update_old_target_offset_offset
      (tables_0_io_update_old_target_offset_r_offset),
    .io_update_old_target_offset_pointer
      (tables_0_io_update_old_target_offset_r_pointer),
    .io_update_old_target_offset_usePCRegion
      (tables_0_io_update_old_target_offset_r_usePCRegion)
  );
  ITTageTable_1 tables_1 (
    .clock                                       (clock),
    .reset                                       (reset),
    .io_req_ready                                (_tables_1_io_req_ready),
    .io_req_valid                                (_tables_4_io_req_valid_T),
    .io_req_bits_pc                              (s1_pc_dup_3),
    .io_req_bits_folded_hist_hist_14_folded_hist
      (io_in_bits_s1_folded_hist_3_hist_14_folded_hist),
    .io_resp_valid                               (_tables_1_io_resp_valid),
    .io_resp_bits_ctr                            (_tables_1_io_resp_bits_ctr),
    .io_resp_bits_u                              (_tables_1_io_resp_bits_u),
    .io_resp_bits_target_offset_offset
      (_tables_1_io_resp_bits_target_offset_offset),
    .io_resp_bits_target_offset_pointer
      (_tables_1_io_resp_bits_target_offset_pointer),
    .io_resp_bits_target_offset_usePCRegion
      (_tables_1_io_resp_bits_target_offset_usePCRegion),
    .io_update_pc                                (tables_1_io_update_pc_r),
    .io_update_ghist                             (tables_1_io_update_ghist_r),
    .io_update_valid                             (tables_1_io_update_valid_REG),
    .io_update_correct                           (tables_1_io_update_correct_r),
    .io_update_alloc                             (tables_1_io_update_alloc_r),
    .io_update_oldCtr                            (tables_1_io_update_oldCtr_r),
    .io_update_uValid                            (tables_1_io_update_uValid_r),
    .io_update_u                                 (tables_1_io_update_u_r),
    .io_update_reset_u                           (tables_1_io_update_reset_u_REG),
    .io_update_target_offset_offset
      (tables_1_io_update_target_offset_r_offset),
    .io_update_target_offset_pointer
      (tables_1_io_update_target_offset_r_pointer),
    .io_update_target_offset_usePCRegion
      (tables_1_io_update_target_offset_r_usePCRegion),
    .io_update_old_target_offset_offset
      (tables_1_io_update_old_target_offset_r_offset),
    .io_update_old_target_offset_pointer
      (tables_1_io_update_old_target_offset_r_pointer),
    .io_update_old_target_offset_usePCRegion
      (tables_1_io_update_old_target_offset_r_usePCRegion)
  );
  ITTageTable_2 tables_2 (
    .clock                                       (clock),
    .reset                                       (reset),
    .io_req_ready                                (_tables_2_io_req_ready),
    .io_req_valid                                (_tables_4_io_req_valid_T),
    .io_req_bits_pc                              (s1_pc_dup_3),
    .io_req_bits_folded_hist_hist_13_folded_hist
      (io_in_bits_s1_folded_hist_3_hist_13_folded_hist),
    .io_req_bits_folded_hist_hist_4_folded_hist
      (io_in_bits_s1_folded_hist_3_hist_4_folded_hist),
    .io_resp_valid                               (_tables_2_io_resp_valid),
    .io_resp_bits_ctr                            (_tables_2_io_resp_bits_ctr),
    .io_resp_bits_u                              (_tables_2_io_resp_bits_u),
    .io_resp_bits_target_offset_offset
      (_tables_2_io_resp_bits_target_offset_offset),
    .io_resp_bits_target_offset_pointer
      (_tables_2_io_resp_bits_target_offset_pointer),
    .io_resp_bits_target_offset_usePCRegion
      (_tables_2_io_resp_bits_target_offset_usePCRegion),
    .io_update_pc                                (tables_2_io_update_pc_r),
    .io_update_ghist                             (tables_2_io_update_ghist_r),
    .io_update_valid                             (tables_2_io_update_valid_REG),
    .io_update_correct                           (tables_2_io_update_correct_r),
    .io_update_alloc                             (tables_2_io_update_alloc_r),
    .io_update_oldCtr                            (tables_2_io_update_oldCtr_r),
    .io_update_uValid                            (tables_2_io_update_uValid_r),
    .io_update_u                                 (tables_2_io_update_u_r),
    .io_update_reset_u                           (tables_2_io_update_reset_u_REG),
    .io_update_target_offset_offset
      (tables_2_io_update_target_offset_r_offset),
    .io_update_target_offset_pointer
      (tables_2_io_update_target_offset_r_pointer),
    .io_update_target_offset_usePCRegion
      (tables_2_io_update_target_offset_r_usePCRegion),
    .io_update_old_target_offset_offset
      (tables_2_io_update_old_target_offset_r_offset),
    .io_update_old_target_offset_pointer
      (tables_2_io_update_old_target_offset_r_pointer),
    .io_update_old_target_offset_usePCRegion
      (tables_2_io_update_old_target_offset_r_usePCRegion)
  );
  ITTageTable_3 tables_3 (
    .clock                                      (clock),
    .reset                                      (reset),
    .io_req_ready                               (_tables_3_io_req_ready),
    .io_req_valid                               (_tables_4_io_req_valid_T),
    .io_req_bits_pc                             (s1_pc_dup_3),
    .io_req_bits_folded_hist_hist_6_folded_hist
      (io_in_bits_s1_folded_hist_3_hist_6_folded_hist),
    .io_req_bits_folded_hist_hist_2_folded_hist
      (io_in_bits_s1_folded_hist_3_hist_2_folded_hist),
    .io_resp_valid                              (_tables_3_io_resp_valid),
    .io_resp_bits_ctr                           (_tables_3_io_resp_bits_ctr),
    .io_resp_bits_u                             (_tables_3_io_resp_bits_u),
    .io_resp_bits_target_offset_offset
      (_tables_3_io_resp_bits_target_offset_offset),
    .io_resp_bits_target_offset_pointer
      (_tables_3_io_resp_bits_target_offset_pointer),
    .io_resp_bits_target_offset_usePCRegion
      (_tables_3_io_resp_bits_target_offset_usePCRegion),
    .io_update_pc                               (tables_3_io_update_pc_r),
    .io_update_ghist                            (tables_3_io_update_ghist_r),
    .io_update_valid                            (tables_3_io_update_valid_REG),
    .io_update_correct                          (tables_3_io_update_correct_r),
    .io_update_alloc                            (tables_3_io_update_alloc_r),
    .io_update_oldCtr                           (tables_3_io_update_oldCtr_r),
    .io_update_uValid                           (tables_3_io_update_uValid_r),
    .io_update_u                                (tables_3_io_update_u_r),
    .io_update_reset_u                          (tables_3_io_update_reset_u_REG),
    .io_update_target_offset_offset
      (tables_3_io_update_target_offset_r_offset),
    .io_update_target_offset_pointer
      (tables_3_io_update_target_offset_r_pointer),
    .io_update_target_offset_usePCRegion
      (tables_3_io_update_target_offset_r_usePCRegion),
    .io_update_old_target_offset_offset
      (tables_3_io_update_old_target_offset_r_offset),
    .io_update_old_target_offset_pointer
      (tables_3_io_update_old_target_offset_r_pointer),
    .io_update_old_target_offset_usePCRegion
      (tables_3_io_update_old_target_offset_r_usePCRegion)
  );
  ITTageTable_4 tables_4 (
    .clock                                       (clock),
    .reset                                       (reset),
    .io_req_ready                                (_tables_4_io_req_ready),
    .io_req_valid                                (_tables_4_io_req_valid_T),
    .io_req_bits_pc                              (s1_pc_dup_3),
    .io_req_bits_folded_hist_hist_10_folded_hist
      (io_in_bits_s1_folded_hist_3_hist_10_folded_hist),
    .io_req_bits_folded_hist_hist_3_folded_hist
      (io_in_bits_s1_folded_hist_3_hist_3_folded_hist),
    .io_resp_valid                               (_tables_4_io_resp_valid),
    .io_resp_bits_ctr                            (_tables_4_io_resp_bits_ctr),
    .io_resp_bits_u                              (_tables_4_io_resp_bits_u),
    .io_resp_bits_target_offset_offset
      (_tables_4_io_resp_bits_target_offset_offset),
    .io_resp_bits_target_offset_pointer
      (_tables_4_io_resp_bits_target_offset_pointer),
    .io_resp_bits_target_offset_usePCRegion
      (_tables_4_io_resp_bits_target_offset_usePCRegion),
    .io_update_pc                                (tables_4_io_update_pc_r),
    .io_update_ghist                             (tables_4_io_update_ghist_r),
    .io_update_valid                             (tables_4_io_update_valid_REG),
    .io_update_correct                           (tables_4_io_update_correct_r),
    .io_update_alloc                             (tables_4_io_update_alloc_r),
    .io_update_oldCtr                            (tables_4_io_update_oldCtr_r),
    .io_update_uValid                            (tables_4_io_update_uValid_r),
    .io_update_u                                 (tables_4_io_update_u_r),
    .io_update_reset_u                           (tables_4_io_update_reset_u_REG),
    .io_update_target_offset_offset
      (tables_4_io_update_target_offset_r_offset),
    .io_update_target_offset_pointer
      (tables_4_io_update_target_offset_r_pointer),
    .io_update_target_offset_usePCRegion
      (tables_4_io_update_target_offset_r_usePCRegion),
    .io_update_old_target_offset_offset
      (tables_4_io_update_old_target_offset_r_offset),
    .io_update_old_target_offset_pointer
      (tables_4_io_update_old_target_offset_r_pointer),
    .io_update_old_target_offset_usePCRegion
      (tables_4_io_update_old_target_offset_r_usePCRegion)
  );
  RegionWays rTable (
    .clock               (clock),
    .reset               (reset),
    .io_req_pointer_0    (_tables_0_io_resp_bits_target_offset_pointer),
    .io_req_pointer_1    (_tables_1_io_resp_bits_target_offset_pointer),
    .io_req_pointer_2    (_tables_2_io_resp_bits_target_offset_pointer),
    .io_req_pointer_3    (_tables_3_io_resp_bits_target_offset_pointer),
    .io_req_pointer_4    (_tables_4_io_resp_bits_target_offset_pointer),
    .io_resp_hit_0       (_rTable_io_resp_hit_0),
    .io_resp_hit_1       (_rTable_io_resp_hit_1),
    .io_resp_hit_2       (_rTable_io_resp_hit_2),
    .io_resp_hit_3       (_rTable_io_resp_hit_3),
    .io_resp_hit_4       (_rTable_io_resp_hit_4),
    .io_resp_region_0    (_rTable_io_resp_region_0),
    .io_resp_region_1    (_rTable_io_resp_region_1),
    .io_resp_region_2    (_rTable_io_resp_region_2),
    .io_resp_region_3    (_rTable_io_resp_region_3),
    .io_resp_region_4    (_rTable_io_resp_region_4),
    .io_update_region_0  (updateMeta_providerTarget_r[49:20]),
    .io_update_region_1  (updateMeta_altProviderTarget_r[49:20]),
    .io_update_hit_0     (_rTable_io_update_hit_0),
    .io_update_hit_1     (_rTable_io_update_hit_1),
    .io_update_pointer_0 (_rTable_io_update_pointer_0),
    .io_update_pointer_1 (_rTable_io_update_pointer_1),
    .io_write_valid
      (~updateRealUsePCRegion
       & (_rTable_io_write_valid_T_1 | updateAlloc_2 | updateAlloc_3 | updateAlloc_4)),
    .io_write_region     (update_full_target_r[49:20]),
    .io_write_pointer    (_rTable_io_write_pointer)
  );
  MaxPeriodFibonacciLFSR s2_allocLFSR_prng (
    .clock     (clock),
    .reset     (reset),
    .io_out_0  (_s2_allocLFSR_prng_io_out_0),
    .io_out_1  (_s2_allocLFSR_prng_io_out_1),
    .io_out_2  (_s2_allocLFSR_prng_io_out_2),
    .io_out_3  (_s2_allocLFSR_prng_io_out_3),
    .io_out_4  (_s2_allocLFSR_prng_io_out_4),
    .io_out_5  (/* unused */),
    .io_out_6  (/* unused */),
    .io_out_7  (/* unused */),
    .io_out_8  (/* unused */),
    .io_out_9  (/* unused */),
    .io_out_10 (/* unused */),
    .io_out_11 (/* unused */),
    .io_out_12 (/* unused */),
    .io_out_13 (/* unused */),
    .io_out_14 (/* unused */)
  );
  assign io_out_s2_full_pred_0_br_taken_mask_0 =
    io_in_bits_resp_in_0_s2_full_pred_0_br_taken_mask_0;
  assign io_out_s2_full_pred_0_br_taken_mask_1 =
    io_in_bits_resp_in_0_s2_full_pred_0_br_taken_mask_1;
  assign io_out_s2_full_pred_0_slot_valids_0 =
    io_in_bits_resp_in_0_s2_full_pred_0_slot_valids_0;
  assign io_out_s2_full_pred_0_slot_valids_1 =
    io_in_bits_resp_in_0_s2_full_pred_0_slot_valids_1;
  assign io_out_s2_full_pred_0_targets_0 = io_in_bits_resp_in_0_s2_full_pred_0_targets_0;
  assign io_out_s2_full_pred_0_targets_1 = io_in_bits_resp_in_0_s2_full_pred_0_targets_1;
  assign io_out_s2_full_pred_0_jalr_target =
    io_in_bits_resp_in_0_s2_full_pred_0_jalr_target;
  assign io_out_s2_full_pred_0_offsets_0 = io_in_bits_resp_in_0_s2_full_pred_0_offsets_0;
  assign io_out_s2_full_pred_0_offsets_1 = io_in_bits_resp_in_0_s2_full_pred_0_offsets_1;
  assign io_out_s2_full_pred_0_fallThroughAddr =
    io_in_bits_resp_in_0_s2_full_pred_0_fallThroughAddr;
  assign io_out_s2_full_pred_0_is_br_sharing =
    io_in_bits_resp_in_0_s2_full_pred_0_is_br_sharing;
  assign io_out_s2_full_pred_0_hit = io_in_bits_resp_in_0_s2_full_pred_0_hit;
  assign io_out_s2_full_pred_1_br_taken_mask_0 =
    io_in_bits_resp_in_0_s2_full_pred_1_br_taken_mask_0;
  assign io_out_s2_full_pred_1_br_taken_mask_1 =
    io_in_bits_resp_in_0_s2_full_pred_1_br_taken_mask_1;
  assign io_out_s2_full_pred_1_slot_valids_0 =
    io_in_bits_resp_in_0_s2_full_pred_1_slot_valids_0;
  assign io_out_s2_full_pred_1_slot_valids_1 =
    io_in_bits_resp_in_0_s2_full_pred_1_slot_valids_1;
  assign io_out_s2_full_pred_1_targets_0 = io_in_bits_resp_in_0_s2_full_pred_1_targets_0;
  assign io_out_s2_full_pred_1_targets_1 = io_in_bits_resp_in_0_s2_full_pred_1_targets_1;
  assign io_out_s2_full_pred_1_jalr_target =
    io_in_bits_resp_in_0_s2_full_pred_1_jalr_target;
  assign io_out_s2_full_pred_1_offsets_0 = io_in_bits_resp_in_0_s2_full_pred_1_offsets_0;
  assign io_out_s2_full_pred_1_offsets_1 = io_in_bits_resp_in_0_s2_full_pred_1_offsets_1;
  assign io_out_s2_full_pred_1_fallThroughAddr =
    io_in_bits_resp_in_0_s2_full_pred_1_fallThroughAddr;
  assign io_out_s2_full_pred_1_is_br_sharing =
    io_in_bits_resp_in_0_s2_full_pred_1_is_br_sharing;
  assign io_out_s2_full_pred_1_hit = io_in_bits_resp_in_0_s2_full_pred_1_hit;
  assign io_out_s2_full_pred_2_br_taken_mask_0 =
    io_in_bits_resp_in_0_s2_full_pred_2_br_taken_mask_0;
  assign io_out_s2_full_pred_2_br_taken_mask_1 =
    io_in_bits_resp_in_0_s2_full_pred_2_br_taken_mask_1;
  assign io_out_s2_full_pred_2_slot_valids_0 =
    io_in_bits_resp_in_0_s2_full_pred_2_slot_valids_0;
  assign io_out_s2_full_pred_2_slot_valids_1 =
    io_in_bits_resp_in_0_s2_full_pred_2_slot_valids_1;
  assign io_out_s2_full_pred_2_targets_0 = io_in_bits_resp_in_0_s2_full_pred_2_targets_0;
  assign io_out_s2_full_pred_2_targets_1 = io_in_bits_resp_in_0_s2_full_pred_2_targets_1;
  assign io_out_s2_full_pred_2_jalr_target =
    io_in_bits_resp_in_0_s2_full_pred_2_jalr_target;
  assign io_out_s2_full_pred_2_offsets_0 = io_in_bits_resp_in_0_s2_full_pred_2_offsets_0;
  assign io_out_s2_full_pred_2_offsets_1 = io_in_bits_resp_in_0_s2_full_pred_2_offsets_1;
  assign io_out_s2_full_pred_2_fallThroughAddr =
    io_in_bits_resp_in_0_s2_full_pred_2_fallThroughAddr;
  assign io_out_s2_full_pred_2_is_jalr = io_in_bits_resp_in_0_s2_full_pred_2_is_jalr;
  assign io_out_s2_full_pred_2_is_call = io_in_bits_resp_in_0_s2_full_pred_2_is_call;
  assign io_out_s2_full_pred_2_is_ret = io_in_bits_resp_in_0_s2_full_pred_2_is_ret;
  assign io_out_s2_full_pred_2_last_may_be_rvi_call =
    io_in_bits_resp_in_0_s2_full_pred_2_last_may_be_rvi_call;
  assign io_out_s2_full_pred_2_is_br_sharing =
    io_in_bits_resp_in_0_s2_full_pred_2_is_br_sharing;
  assign io_out_s2_full_pred_2_hit = io_in_bits_resp_in_0_s2_full_pred_2_hit;
  assign io_out_s2_full_pred_3_br_taken_mask_0 =
    io_in_bits_resp_in_0_s2_full_pred_3_br_taken_mask_0;
  assign io_out_s2_full_pred_3_br_taken_mask_1 =
    io_in_bits_resp_in_0_s2_full_pred_3_br_taken_mask_1;
  assign io_out_s2_full_pred_3_slot_valids_0 =
    io_in_bits_resp_in_0_s2_full_pred_3_slot_valids_0;
  assign io_out_s2_full_pred_3_slot_valids_1 =
    io_in_bits_resp_in_0_s2_full_pred_3_slot_valids_1;
  assign io_out_s2_full_pred_3_targets_0 = io_in_bits_resp_in_0_s2_full_pred_3_targets_0;
  assign io_out_s2_full_pred_3_targets_1 = io_in_bits_resp_in_0_s2_full_pred_3_targets_1;
  assign io_out_s2_full_pred_3_jalr_target =
    io_in_bits_resp_in_0_s2_full_pred_3_jalr_target;
  assign io_out_s2_full_pred_3_offsets_0 = io_in_bits_resp_in_0_s2_full_pred_3_offsets_0;
  assign io_out_s2_full_pred_3_offsets_1 = io_in_bits_resp_in_0_s2_full_pred_3_offsets_1;
  assign io_out_s2_full_pred_3_fallThroughAddr =
    io_in_bits_resp_in_0_s2_full_pred_3_fallThroughAddr;
  assign io_out_s2_full_pred_3_fallThroughErr =
    io_in_bits_resp_in_0_s2_full_pred_3_fallThroughErr;
  assign io_out_s2_full_pred_3_is_br_sharing =
    io_in_bits_resp_in_0_s2_full_pred_3_is_br_sharing;
  assign io_out_s2_full_pred_3_hit = io_in_bits_resp_in_0_s2_full_pred_3_hit;
  assign io_out_s3_full_pred_0_br_taken_mask_0 =
    io_in_bits_resp_in_0_s3_full_pred_0_br_taken_mask_0;
  assign io_out_s3_full_pred_0_br_taken_mask_1 =
    io_in_bits_resp_in_0_s3_full_pred_0_br_taken_mask_1;
  assign io_out_s3_full_pred_0_slot_valids_0 =
    io_in_bits_resp_in_0_s3_full_pred_0_slot_valids_0;
  assign io_out_s3_full_pred_0_slot_valids_1 =
    io_in_bits_resp_in_0_s3_full_pred_0_slot_valids_1;
  assign io_out_s3_full_pred_0_targets_0 = io_in_bits_resp_in_0_s3_full_pred_0_targets_0;
  assign io_out_s3_full_pred_0_targets_1 = io_in_bits_resp_in_0_s3_full_pred_0_targets_1;
  assign io_out_s3_full_pred_0_jalr_target = s3_tageTarget_dup_0;
  assign io_out_s3_full_pred_0_fallThroughAddr =
    io_in_bits_resp_in_0_s3_full_pred_0_fallThroughAddr;
  assign io_out_s3_full_pred_0_fallThroughErr =
    io_in_bits_resp_in_0_s3_full_pred_0_fallThroughErr;
  assign io_out_s3_full_pred_0_multiHit = io_in_bits_resp_in_0_s3_full_pred_0_multiHit;
  assign io_out_s3_full_pred_0_is_br_sharing =
    io_in_bits_resp_in_0_s3_full_pred_0_is_br_sharing;
  assign io_out_s3_full_pred_0_hit = io_in_bits_resp_in_0_s3_full_pred_0_hit;
  assign io_out_s3_full_pred_1_br_taken_mask_0 =
    io_in_bits_resp_in_0_s3_full_pred_1_br_taken_mask_0;
  assign io_out_s3_full_pred_1_br_taken_mask_1 =
    io_in_bits_resp_in_0_s3_full_pred_1_br_taken_mask_1;
  assign io_out_s3_full_pred_1_slot_valids_0 =
    io_in_bits_resp_in_0_s3_full_pred_1_slot_valids_0;
  assign io_out_s3_full_pred_1_slot_valids_1 =
    io_in_bits_resp_in_0_s3_full_pred_1_slot_valids_1;
  assign io_out_s3_full_pred_1_targets_0 = io_in_bits_resp_in_0_s3_full_pred_1_targets_0;
  assign io_out_s3_full_pred_1_targets_1 = io_in_bits_resp_in_0_s3_full_pred_1_targets_1;
  assign io_out_s3_full_pred_1_jalr_target = s3_tageTarget_dup_1;
  assign io_out_s3_full_pred_1_fallThroughAddr =
    io_in_bits_resp_in_0_s3_full_pred_1_fallThroughAddr;
  assign io_out_s3_full_pred_1_fallThroughErr =
    io_in_bits_resp_in_0_s3_full_pred_1_fallThroughErr;
  assign io_out_s3_full_pred_1_multiHit = io_in_bits_resp_in_0_s3_full_pred_1_multiHit;
  assign io_out_s3_full_pred_1_is_br_sharing =
    io_in_bits_resp_in_0_s3_full_pred_1_is_br_sharing;
  assign io_out_s3_full_pred_1_hit = io_in_bits_resp_in_0_s3_full_pred_1_hit;
  assign io_out_s3_full_pred_2_br_taken_mask_0 =
    io_in_bits_resp_in_0_s3_full_pred_2_br_taken_mask_0;
  assign io_out_s3_full_pred_2_br_taken_mask_1 =
    io_in_bits_resp_in_0_s3_full_pred_2_br_taken_mask_1;
  assign io_out_s3_full_pred_2_slot_valids_0 =
    io_in_bits_resp_in_0_s3_full_pred_2_slot_valids_0;
  assign io_out_s3_full_pred_2_slot_valids_1 =
    io_in_bits_resp_in_0_s3_full_pred_2_slot_valids_1;
  assign io_out_s3_full_pred_2_targets_0 = io_in_bits_resp_in_0_s3_full_pred_2_targets_0;
  assign io_out_s3_full_pred_2_targets_1 = io_in_bits_resp_in_0_s3_full_pred_2_targets_1;
  assign io_out_s3_full_pred_2_jalr_target = s3_tageTarget_dup_2;
  assign io_out_s3_full_pred_2_fallThroughAddr =
    io_in_bits_resp_in_0_s3_full_pred_2_fallThroughAddr;
  assign io_out_s3_full_pred_2_fallThroughErr =
    io_in_bits_resp_in_0_s3_full_pred_2_fallThroughErr;
  assign io_out_s3_full_pred_2_multiHit = io_in_bits_resp_in_0_s3_full_pred_2_multiHit;
  assign io_out_s3_full_pred_2_is_jalr = io_in_bits_resp_in_0_s3_full_pred_2_is_jalr;
  assign io_out_s3_full_pred_2_is_call = io_in_bits_resp_in_0_s3_full_pred_2_is_call;
  assign io_out_s3_full_pred_2_is_ret = io_in_bits_resp_in_0_s3_full_pred_2_is_ret;
  assign io_out_s3_full_pred_2_is_br_sharing =
    io_in_bits_resp_in_0_s3_full_pred_2_is_br_sharing;
  assign io_out_s3_full_pred_2_hit = io_in_bits_resp_in_0_s3_full_pred_2_hit;
  assign io_out_s3_full_pred_3_br_taken_mask_0 =
    io_in_bits_resp_in_0_s3_full_pred_3_br_taken_mask_0;
  assign io_out_s3_full_pred_3_br_taken_mask_1 =
    io_in_bits_resp_in_0_s3_full_pred_3_br_taken_mask_1;
  assign io_out_s3_full_pred_3_slot_valids_0 =
    io_in_bits_resp_in_0_s3_full_pred_3_slot_valids_0;
  assign io_out_s3_full_pred_3_slot_valids_1 =
    io_in_bits_resp_in_0_s3_full_pred_3_slot_valids_1;
  assign io_out_s3_full_pred_3_targets_0 = io_in_bits_resp_in_0_s3_full_pred_3_targets_0;
  assign io_out_s3_full_pred_3_targets_1 = io_in_bits_resp_in_0_s3_full_pred_3_targets_1;
  assign io_out_s3_full_pred_3_jalr_target = s3_tageTarget_dup_3;
  assign io_out_s3_full_pred_3_offsets_0 = io_in_bits_resp_in_0_s3_full_pred_3_offsets_0;
  assign io_out_s3_full_pred_3_offsets_1 = io_in_bits_resp_in_0_s3_full_pred_3_offsets_1;
  assign io_out_s3_full_pred_3_fallThroughAddr =
    io_in_bits_resp_in_0_s3_full_pred_3_fallThroughAddr;
  assign io_out_s3_full_pred_3_fallThroughErr =
    io_in_bits_resp_in_0_s3_full_pred_3_fallThroughErr;
  assign io_out_s3_full_pred_3_multiHit = io_in_bits_resp_in_0_s3_full_pred_3_multiHit;
  assign io_out_s3_full_pred_3_is_br_sharing =
    io_in_bits_resp_in_0_s3_full_pred_3_is_br_sharing;
  assign io_out_s3_full_pred_3_hit = io_in_bits_resp_in_0_s3_full_pred_3_hit;
  assign io_out_last_stage_meta =
    {142'h0,
     s3_provided,
     s3_provider,
     s3_altProvided,
     s3_altProvider,
     resp_meta_altDiffers,
     s3_providerU,
     s3_providerCtr,
     s3_altProviderCtr,
     resp_meta_allocate_valid_r,
     resp_meta_allocate_bits_r,
     s3_providerTarget,
     s3_altProviderTarget};
  assign io_out_last_stage_ftb_entry_isCall =
    io_in_bits_resp_in_0_last_stage_ftb_entry_isCall;
  assign io_out_last_stage_ftb_entry_isRet =
    io_in_bits_resp_in_0_last_stage_ftb_entry_isRet;
  assign io_out_last_stage_ftb_entry_isJalr =
    io_in_bits_resp_in_0_last_stage_ftb_entry_isJalr;
  assign io_out_last_stage_ftb_entry_valid =
    io_in_bits_resp_in_0_last_stage_ftb_entry_valid;
  assign io_out_last_stage_ftb_entry_brSlots_0_offset =
    io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_offset;
  assign io_out_last_stage_ftb_entry_brSlots_0_sharing =
    io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_sharing;
  assign io_out_last_stage_ftb_entry_brSlots_0_valid =
    io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_valid;
  assign io_out_last_stage_ftb_entry_brSlots_0_lower =
    io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_lower;
  assign io_out_last_stage_ftb_entry_brSlots_0_tarStat =
    io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_tarStat;
  assign io_out_last_stage_ftb_entry_tailSlot_offset =
    io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_offset;
  assign io_out_last_stage_ftb_entry_tailSlot_sharing =
    io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_sharing;
  assign io_out_last_stage_ftb_entry_tailSlot_valid =
    io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_valid;
  assign io_out_last_stage_ftb_entry_tailSlot_lower =
    io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_lower;
  assign io_out_last_stage_ftb_entry_tailSlot_tarStat =
    io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_tarStat;
  assign io_out_last_stage_ftb_entry_pftAddr =
    io_in_bits_resp_in_0_last_stage_ftb_entry_pftAddr;
  assign io_out_last_stage_ftb_entry_carry =
    io_in_bits_resp_in_0_last_stage_ftb_entry_carry;
  assign io_out_last_stage_ftb_entry_last_may_be_rvi_call =
    io_in_bits_resp_in_0_last_stage_ftb_entry_last_may_be_rvi_call;
  assign io_out_last_stage_ftb_entry_strong_bias_0 =
    io_in_bits_resp_in_0_last_stage_ftb_entry_strong_bias_0;
  assign io_out_last_stage_ftb_entry_strong_bias_1 =
    io_in_bits_resp_in_0_last_stage_ftb_entry_strong_bias_1;
  assign io_s1_ready =
    _tables_0_io_req_ready & _tables_1_io_req_ready & _tables_2_io_req_ready
    & _tables_3_io_req_ready & _tables_4_io_req_ready;
endmodule

