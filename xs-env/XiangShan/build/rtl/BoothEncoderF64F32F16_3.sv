// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module BoothEncoderF64F32F16_3(
  input  [52:0]  io_in_a,
  input  [52:0]  io_in_b,
  input          io_is_fp64,
  input          io_is_fp32,
  output [106:0] io_out_pp_0,
  output [106:0] io_out_pp_1,
  output [106:0] io_out_pp_2,
  output [106:0] io_out_pp_3,
  output [106:0] io_out_pp_4,
  output [106:0] io_out_pp_5,
  output [106:0] io_out_pp_6,
  output [106:0] io_out_pp_7,
  output [106:0] io_out_pp_8,
  output [106:0] io_out_pp_9,
  output [106:0] io_out_pp_10,
  output [106:0] io_out_pp_11,
  output [106:0] io_out_pp_12,
  output [106:0] io_out_pp_13,
  output [106:0] io_out_pp_14,
  output [106:0] io_out_pp_15,
  output [106:0] io_out_pp_16,
  output [106:0] io_out_pp_17,
  output [106:0] io_out_pp_18,
  output [106:0] io_out_pp_19,
  output [106:0] io_out_pp_20,
  output [106:0] io_out_pp_21,
  output [106:0] io_out_pp_22,
  output [106:0] io_out_pp_23,
  output [106:0] io_out_pp_24,
  output [106:0] io_out_pp_25,
  output [106:0] io_out_pp_26
);

  wire [53:0] _GEN =
    io_is_fp64
      ? {1'h0, io_in_b}
      : io_is_fp32
          ? {2'h0, io_in_b[52:29], 4'h0, io_in_b[23:0]}
          : {1'h0,
             io_in_b[52:42],
             3'h0,
             io_in_b[39:29],
             3'h0,
             io_in_b[23:13],
             3'h0,
             io_in_b[10:0]};
  wire [3:0]  booth_4bit_onehot_0 =
    _GEN[1:0] == 2'h1 ? 4'h8 : _GEN[1:0] == 2'h2 ? 4'h1 : {2'h0, &(_GEN[1:0]), 1'h0};
  wire [3:0]  booth_4bit_onehot_1 =
    _GEN[3:1] == 3'h1 | _GEN[3:1] == 3'h2
      ? 4'h8
      : _GEN[3:1] == 3'h3
          ? 4'h4
          : _GEN[3:1] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[3:1] == 3'h5 | _GEN[3:1] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_2 =
    _GEN[5:3] == 3'h1 | _GEN[5:3] == 3'h2
      ? 4'h8
      : _GEN[5:3] == 3'h3
          ? 4'h4
          : _GEN[5:3] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[5:3] == 3'h5 | _GEN[5:3] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_3 =
    _GEN[7:5] == 3'h1 | _GEN[7:5] == 3'h2
      ? 4'h8
      : _GEN[7:5] == 3'h3
          ? 4'h4
          : _GEN[7:5] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[7:5] == 3'h5 | _GEN[7:5] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_4 =
    _GEN[9:7] == 3'h1 | _GEN[9:7] == 3'h2
      ? 4'h8
      : _GEN[9:7] == 3'h3
          ? 4'h4
          : _GEN[9:7] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[9:7] == 3'h5 | _GEN[9:7] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_5 =
    _GEN[11:9] == 3'h1 | _GEN[11:9] == 3'h2
      ? 4'h8
      : _GEN[11:9] == 3'h3
          ? 4'h4
          : _GEN[11:9] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[11:9] == 3'h5 | _GEN[11:9] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_6 =
    _GEN[13:11] == 3'h1 | _GEN[13:11] == 3'h2
      ? 4'h8
      : _GEN[13:11] == 3'h3
          ? 4'h4
          : _GEN[13:11] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[13:11] == 3'h5 | _GEN[13:11] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_7 =
    _GEN[15:13] == 3'h1 | _GEN[15:13] == 3'h2
      ? 4'h8
      : _GEN[15:13] == 3'h3
          ? 4'h4
          : _GEN[15:13] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[15:13] == 3'h5 | _GEN[15:13] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_8 =
    _GEN[17:15] == 3'h1 | _GEN[17:15] == 3'h2
      ? 4'h8
      : _GEN[17:15] == 3'h3
          ? 4'h4
          : _GEN[17:15] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[17:15] == 3'h5 | _GEN[17:15] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_9 =
    _GEN[19:17] == 3'h1 | _GEN[19:17] == 3'h2
      ? 4'h8
      : _GEN[19:17] == 3'h3
          ? 4'h4
          : _GEN[19:17] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[19:17] == 3'h5 | _GEN[19:17] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_10 =
    _GEN[21:19] == 3'h1 | _GEN[21:19] == 3'h2
      ? 4'h8
      : _GEN[21:19] == 3'h3
          ? 4'h4
          : _GEN[21:19] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[21:19] == 3'h5 | _GEN[21:19] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_11 =
    _GEN[23:21] == 3'h1 | _GEN[23:21] == 3'h2
      ? 4'h8
      : _GEN[23:21] == 3'h3
          ? 4'h4
          : _GEN[23:21] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[23:21] == 3'h5 | _GEN[23:21] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_12 =
    _GEN[25:23] == 3'h1 | _GEN[25:23] == 3'h2
      ? 4'h8
      : _GEN[25:23] == 3'h3
          ? 4'h4
          : _GEN[25:23] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[25:23] == 3'h5 | _GEN[25:23] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_13 =
    _GEN[27:25] == 3'h1 | _GEN[27:25] == 3'h2
      ? 4'h8
      : _GEN[27:25] == 3'h3
          ? 4'h4
          : _GEN[27:25] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[27:25] == 3'h5 | _GEN[27:25] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_14 =
    _GEN[29:27] == 3'h1 | _GEN[29:27] == 3'h2
      ? 4'h8
      : _GEN[29:27] == 3'h3
          ? 4'h4
          : _GEN[29:27] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[29:27] == 3'h5 | _GEN[29:27] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_15 =
    _GEN[31:29] == 3'h1 | _GEN[31:29] == 3'h2
      ? 4'h8
      : _GEN[31:29] == 3'h3
          ? 4'h4
          : _GEN[31:29] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[31:29] == 3'h5 | _GEN[31:29] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_16 =
    _GEN[33:31] == 3'h1 | _GEN[33:31] == 3'h2
      ? 4'h8
      : _GEN[33:31] == 3'h3
          ? 4'h4
          : _GEN[33:31] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[33:31] == 3'h5 | _GEN[33:31] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_17 =
    _GEN[35:33] == 3'h1 | _GEN[35:33] == 3'h2
      ? 4'h8
      : _GEN[35:33] == 3'h3
          ? 4'h4
          : _GEN[35:33] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[35:33] == 3'h5 | _GEN[35:33] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_18 =
    _GEN[37:35] == 3'h1 | _GEN[37:35] == 3'h2
      ? 4'h8
      : _GEN[37:35] == 3'h3
          ? 4'h4
          : _GEN[37:35] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[37:35] == 3'h5 | _GEN[37:35] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_19 =
    _GEN[39:37] == 3'h1 | _GEN[39:37] == 3'h2
      ? 4'h8
      : _GEN[39:37] == 3'h3
          ? 4'h4
          : _GEN[39:37] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[39:37] == 3'h5 | _GEN[39:37] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_20 =
    _GEN[41:39] == 3'h1 | _GEN[41:39] == 3'h2
      ? 4'h8
      : _GEN[41:39] == 3'h3
          ? 4'h4
          : _GEN[41:39] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[41:39] == 3'h5 | _GEN[41:39] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_21 =
    _GEN[43:41] == 3'h1 | _GEN[43:41] == 3'h2
      ? 4'h8
      : _GEN[43:41] == 3'h3
          ? 4'h4
          : _GEN[43:41] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[43:41] == 3'h5 | _GEN[43:41] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_22 =
    _GEN[45:43] == 3'h1 | _GEN[45:43] == 3'h2
      ? 4'h8
      : _GEN[45:43] == 3'h3
          ? 4'h4
          : _GEN[45:43] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[45:43] == 3'h5 | _GEN[45:43] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_23 =
    _GEN[47:45] == 3'h1 | _GEN[47:45] == 3'h2
      ? 4'h8
      : _GEN[47:45] == 3'h3
          ? 4'h4
          : _GEN[47:45] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[47:45] == 3'h5 | _GEN[47:45] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_24 =
    _GEN[49:47] == 3'h1 | _GEN[49:47] == 3'h2
      ? 4'h8
      : _GEN[49:47] == 3'h3
          ? 4'h4
          : _GEN[49:47] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[49:47] == 3'h5 | _GEN[49:47] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_25 =
    _GEN[51:49] == 3'h1 | _GEN[51:49] == 3'h2
      ? 4'h8
      : _GEN[51:49] == 3'h3
          ? 4'h4
          : _GEN[51:49] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[51:49] == 3'h5 | _GEN[51:49] == 3'h6, 1'h0};
  wire [3:0]  booth_4bit_onehot_26 =
    _GEN[53:51] == 3'h1 | _GEN[53:51] == 3'h2
      ? 4'h8
      : _GEN[53:51] == 3'h3
          ? 4'h4
          : _GEN[53:51] == 3'h4
              ? 4'h1
              : {2'h0, _GEN[53:51] == 3'h5 | _GEN[53:51] == 3'h6, 1'h0};
  wire        sign_seq_0 = booth_4bit_onehot_0[1] | booth_4bit_onehot_0[0];
  wire [53:0] _pp_seq_f64_26_T_2 = {1'h0, io_in_a};
  wire [53:0] _pp_seq_f64_26_T_6 = {io_in_a, 1'h0};
  wire        sign_seq_1 = booth_4bit_onehot_1[1] | booth_4bit_onehot_1[0];
  wire        sign_seq_2 = booth_4bit_onehot_2[1] | booth_4bit_onehot_2[0];
  wire        sign_seq_3 = booth_4bit_onehot_3[1] | booth_4bit_onehot_3[0];
  wire        sign_seq_4 = booth_4bit_onehot_4[1] | booth_4bit_onehot_4[0];
  wire        sign_seq_5 = booth_4bit_onehot_5[1] | booth_4bit_onehot_5[0];
  wire        sign_seq_6 = booth_4bit_onehot_6[1] | booth_4bit_onehot_6[0];
  wire        sign_seq_7 = booth_4bit_onehot_7[1] | booth_4bit_onehot_7[0];
  wire        sign_seq_8 = booth_4bit_onehot_8[1] | booth_4bit_onehot_8[0];
  wire        sign_seq_9 = booth_4bit_onehot_9[1] | booth_4bit_onehot_9[0];
  wire        sign_seq_10 = booth_4bit_onehot_10[1] | booth_4bit_onehot_10[0];
  wire        sign_seq_11 = booth_4bit_onehot_11[1] | booth_4bit_onehot_11[0];
  wire        sign_seq_12 = booth_4bit_onehot_12[1] | booth_4bit_onehot_12[0];
  wire        sign_seq_13 = booth_4bit_onehot_13[1] | booth_4bit_onehot_13[0];
  wire        sign_seq_14 = booth_4bit_onehot_14[1] | booth_4bit_onehot_14[0];
  wire        sign_seq_15 = booth_4bit_onehot_15[1] | booth_4bit_onehot_15[0];
  wire        sign_seq_16 = booth_4bit_onehot_16[1] | booth_4bit_onehot_16[0];
  wire        sign_seq_17 = booth_4bit_onehot_17[1] | booth_4bit_onehot_17[0];
  wire        sign_seq_18 = booth_4bit_onehot_18[1] | booth_4bit_onehot_18[0];
  wire        sign_seq_19 = booth_4bit_onehot_19[1] | booth_4bit_onehot_19[0];
  wire        sign_seq_20 = booth_4bit_onehot_20[1] | booth_4bit_onehot_20[0];
  wire        sign_seq_21 = booth_4bit_onehot_21[1] | booth_4bit_onehot_21[0];
  wire        sign_seq_22 = booth_4bit_onehot_22[1] | booth_4bit_onehot_22[0];
  wire        sign_seq_23 = booth_4bit_onehot_23[1] | booth_4bit_onehot_23[0];
  wire        sign_seq_24 = booth_4bit_onehot_24[1] | booth_4bit_onehot_24[0];
  wire        sign_seq_25 = booth_4bit_onehot_25[1] | booth_4bit_onehot_25[0];
  wire [1:0]  _GEN_0 = {2{sign_seq_0}};
  wire [1:0]  _GEN_1 = {2{sign_seq_14}};
  assign io_out_pp_0 =
    io_is_fp64
      ? {50'h0,
         ~sign_seq_0,
         _GEN_0,
         {54{booth_4bit_onehot_0[3]}} & _pp_seq_f64_26_T_2 | {54{booth_4bit_onehot_0[2]}}
           & _pp_seq_f64_26_T_6 | {54{booth_4bit_onehot_0[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_0[0]}} & {~io_in_a, 1'h1}}
      : io_is_fp32
          ? {79'h0,
             ~sign_seq_0,
             _GEN_0,
             {25{booth_4bit_onehot_0[3]}} & {1'h0, io_in_a[23:0]}
               | {25{booth_4bit_onehot_0[2]}} & {io_in_a[23:0], 1'h0}
               | {25{booth_4bit_onehot_0[1]}} & {1'h1, ~(io_in_a[23:0])}
               | {25{booth_4bit_onehot_0[0]}} & {~(io_in_a[23:0]), 1'h1}}
          : {92'h0,
             ~sign_seq_0,
             _GEN_0,
             {12{booth_4bit_onehot_0[3]}} & {1'h0, io_in_a[10:0]}
               | {12{booth_4bit_onehot_0[2]}} & {io_in_a[10:0], 1'h0}
               | {12{booth_4bit_onehot_0[1]}} & {1'h1, ~(io_in_a[10:0])}
               | {12{booth_4bit_onehot_0[0]}} & {~(io_in_a[10:0]), 1'h1}};
  assign io_out_pp_1 =
    {io_is_fp64
       ? {50'h1,
          ~sign_seq_1,
          {54{booth_4bit_onehot_1[3]}} & _pp_seq_f64_26_T_2 | {54{booth_4bit_onehot_1[2]}}
            & _pp_seq_f64_26_T_6 | {54{booth_4bit_onehot_1[1]}} & {1'h1, ~io_in_a}
            | {54{booth_4bit_onehot_1[0]}} & {~io_in_a, 1'h1}}
       : io_is_fp32
           ? {79'h1,
              ~sign_seq_1,
              {25{booth_4bit_onehot_1[3]}} & {1'h0, io_in_a[23:0]}
                | {25{booth_4bit_onehot_1[2]}} & {io_in_a[23:0], 1'h0}
                | {25{booth_4bit_onehot_1[1]}} & {1'h1, ~(io_in_a[23:0])}
                | {25{booth_4bit_onehot_1[0]}} & {~(io_in_a[23:0]), 1'h1}}
           : {92'h1,
              ~sign_seq_1,
              {12{booth_4bit_onehot_1[3]}} & {1'h0, io_in_a[10:0]}
                | {12{booth_4bit_onehot_1[2]}} & {io_in_a[10:0], 1'h0}
                | {12{booth_4bit_onehot_1[1]}} & {1'h1, ~(io_in_a[10:0])}
                | {12{booth_4bit_onehot_1[0]}} & {~(io_in_a[10:0]), 1'h1}},
     1'h0,
     sign_seq_0};
  assign io_out_pp_2 =
    {io_is_fp64
       ? {48'h1,
          ~sign_seq_2,
          {54{booth_4bit_onehot_2[3]}} & _pp_seq_f64_26_T_2 | {54{booth_4bit_onehot_2[2]}}
            & _pp_seq_f64_26_T_6 | {54{booth_4bit_onehot_2[1]}} & {1'h1, ~io_in_a}
            | {54{booth_4bit_onehot_2[0]}} & {~io_in_a, 1'h1}}
       : io_is_fp32
           ? {77'h1,
              ~sign_seq_2,
              {25{booth_4bit_onehot_2[3]}} & {1'h0, io_in_a[23:0]}
                | {25{booth_4bit_onehot_2[2]}} & {io_in_a[23:0], 1'h0}
                | {25{booth_4bit_onehot_2[1]}} & {1'h1, ~(io_in_a[23:0])}
                | {25{booth_4bit_onehot_2[0]}} & {~(io_in_a[23:0]), 1'h1}}
           : {90'h1,
              ~sign_seq_2,
              {12{booth_4bit_onehot_2[3]}} & {1'h0, io_in_a[10:0]}
                | {12{booth_4bit_onehot_2[2]}} & {io_in_a[10:0], 1'h0}
                | {12{booth_4bit_onehot_2[1]}} & {1'h1, ~(io_in_a[10:0])}
                | {12{booth_4bit_onehot_2[0]}} & {~(io_in_a[10:0]), 1'h1}},
     1'h0,
     sign_seq_1,
     2'h0};
  assign io_out_pp_3 =
    {io_is_fp64
       ? {46'h1,
          ~sign_seq_3,
          {54{booth_4bit_onehot_3[3]}} & _pp_seq_f64_26_T_2 | {54{booth_4bit_onehot_3[2]}}
            & _pp_seq_f64_26_T_6 | {54{booth_4bit_onehot_3[1]}} & {1'h1, ~io_in_a}
            | {54{booth_4bit_onehot_3[0]}} & {~io_in_a, 1'h1}}
       : io_is_fp32
           ? {75'h1,
              ~sign_seq_3,
              {25{booth_4bit_onehot_3[3]}} & {1'h0, io_in_a[23:0]}
                | {25{booth_4bit_onehot_3[2]}} & {io_in_a[23:0], 1'h0}
                | {25{booth_4bit_onehot_3[1]}} & {1'h1, ~(io_in_a[23:0])}
                | {25{booth_4bit_onehot_3[0]}} & {~(io_in_a[23:0]), 1'h1}}
           : {88'h1,
              ~sign_seq_3,
              {12{booth_4bit_onehot_3[3]}} & {1'h0, io_in_a[10:0]}
                | {12{booth_4bit_onehot_3[2]}} & {io_in_a[10:0], 1'h0}
                | {12{booth_4bit_onehot_3[1]}} & {1'h1, ~(io_in_a[10:0])}
                | {12{booth_4bit_onehot_3[0]}} & {~(io_in_a[10:0]), 1'h1}},
     1'h0,
     sign_seq_2,
     4'h0};
  assign io_out_pp_4 =
    {io_is_fp64
       ? {44'h1,
          ~sign_seq_4,
          {54{booth_4bit_onehot_4[3]}} & _pp_seq_f64_26_T_2 | {54{booth_4bit_onehot_4[2]}}
            & _pp_seq_f64_26_T_6 | {54{booth_4bit_onehot_4[1]}} & {1'h1, ~io_in_a}
            | {54{booth_4bit_onehot_4[0]}} & {~io_in_a, 1'h1}}
       : io_is_fp32
           ? {73'h1,
              ~sign_seq_4,
              {25{booth_4bit_onehot_4[3]}} & {1'h0, io_in_a[23:0]}
                | {25{booth_4bit_onehot_4[2]}} & {io_in_a[23:0], 1'h0}
                | {25{booth_4bit_onehot_4[1]}} & {1'h1, ~(io_in_a[23:0])}
                | {25{booth_4bit_onehot_4[0]}} & {~(io_in_a[23:0]), 1'h1}}
           : {86'h1,
              ~sign_seq_4,
              {12{booth_4bit_onehot_4[3]}} & {1'h0, io_in_a[10:0]}
                | {12{booth_4bit_onehot_4[2]}} & {io_in_a[10:0], 1'h0}
                | {12{booth_4bit_onehot_4[1]}} & {1'h1, ~(io_in_a[10:0])}
                | {12{booth_4bit_onehot_4[0]}} & {~(io_in_a[10:0]), 1'h1}},
     1'h0,
     sign_seq_3,
     6'h0};
  assign io_out_pp_5 =
    {io_is_fp64
       ? {42'h1,
          ~sign_seq_5,
          {54{booth_4bit_onehot_5[3]}} & _pp_seq_f64_26_T_2 | {54{booth_4bit_onehot_5[2]}}
            & _pp_seq_f64_26_T_6 | {54{booth_4bit_onehot_5[1]}} & {1'h1, ~io_in_a}
            | {54{booth_4bit_onehot_5[0]}} & {~io_in_a, 1'h1}}
       : io_is_fp32
           ? {71'h1,
              ~sign_seq_5,
              {25{booth_4bit_onehot_5[3]}} & {1'h0, io_in_a[23:0]}
                | {25{booth_4bit_onehot_5[2]}} & {io_in_a[23:0], 1'h0}
                | {25{booth_4bit_onehot_5[1]}} & {1'h1, ~(io_in_a[23:0])}
                | {25{booth_4bit_onehot_5[0]}} & {~(io_in_a[23:0]), 1'h1}}
           : {85'h1,
              {12{booth_4bit_onehot_5[3]}} & {1'h0, io_in_a[10:0]}
                | {12{booth_4bit_onehot_5[2]}} & {io_in_a[10:0], 1'h0}
                | {12{booth_4bit_onehot_5[1]}} & {1'h1, ~(io_in_a[10:0])}
                | {12{booth_4bit_onehot_5[0]}} & {~(io_in_a[10:0]), 1'h1}},
     1'h0,
     sign_seq_4,
     8'h0};
  assign io_out_pp_6 =
    io_is_fp64
      ? {40'h1,
         ~sign_seq_6,
         {54{booth_4bit_onehot_6[3]}} & _pp_seq_f64_26_T_2 | {54{booth_4bit_onehot_6[2]}}
           & _pp_seq_f64_26_T_6 | {54{booth_4bit_onehot_6[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_6[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_5,
         10'h0}
      : io_is_fp32
          ? {69'h1,
             ~sign_seq_6,
             {25{booth_4bit_onehot_6[3]}} & {1'h0, io_in_a[23:0]}
               | {25{booth_4bit_onehot_6[2]}} & {io_in_a[23:0], 1'h0}
               | {25{booth_4bit_onehot_6[1]}} & {1'h1, ~(io_in_a[23:0])}
               | {25{booth_4bit_onehot_6[0]}} & {~(io_in_a[23:0]), 1'h1},
             1'h0,
             sign_seq_5,
             10'h0}
          : 107'h0;
  assign io_out_pp_7 =
    io_is_fp64
      ? {38'h1,
         ~sign_seq_7,
         {54{booth_4bit_onehot_7[3]}} & _pp_seq_f64_26_T_2 | {54{booth_4bit_onehot_7[2]}}
           & _pp_seq_f64_26_T_6 | {54{booth_4bit_onehot_7[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_7[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_6,
         12'h0}
      : io_is_fp32
          ? {67'h1,
             ~sign_seq_7,
             {25{booth_4bit_onehot_7[3]}} & {1'h0, io_in_a[23:0]}
               | {25{booth_4bit_onehot_7[2]}} & {io_in_a[23:0], 1'h0}
               | {25{booth_4bit_onehot_7[1]}} & {1'h1, ~(io_in_a[23:0])}
               | {25{booth_4bit_onehot_7[0]}} & {~(io_in_a[23:0]), 1'h1},
             1'h0,
             sign_seq_6,
             12'h0}
          : {66'h0,
             ~sign_seq_7,
             {2{sign_seq_7}},
             {12{booth_4bit_onehot_7[3]}} & {1'h0, io_in_a[23:13]}
               | {12{booth_4bit_onehot_7[2]}} & {io_in_a[23:13], 1'h0}
               | {12{booth_4bit_onehot_7[1]}} & {1'h1, ~(io_in_a[23:13])}
               | {12{booth_4bit_onehot_7[0]}} & {~(io_in_a[23:13]), 1'h1},
             26'h0};
  assign io_out_pp_8 =
    io_is_fp64
      ? {36'h1,
         ~sign_seq_8,
         {54{booth_4bit_onehot_8[3]}} & _pp_seq_f64_26_T_2 | {54{booth_4bit_onehot_8[2]}}
           & _pp_seq_f64_26_T_6 | {54{booth_4bit_onehot_8[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_8[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_7,
         14'h0}
      : io_is_fp32
          ? {65'h1,
             ~sign_seq_8,
             {25{booth_4bit_onehot_8[3]}} & {1'h0, io_in_a[23:0]}
               | {25{booth_4bit_onehot_8[2]}} & {io_in_a[23:0], 1'h0}
               | {25{booth_4bit_onehot_8[1]}} & {1'h1, ~(io_in_a[23:0])}
               | {25{booth_4bit_onehot_8[0]}} & {~(io_in_a[23:0]), 1'h1},
             1'h0,
             sign_seq_7,
             14'h0}
          : {66'h1,
             ~sign_seq_8,
             {12{booth_4bit_onehot_8[3]}} & {1'h0, io_in_a[23:13]}
               | {12{booth_4bit_onehot_8[2]}} & {io_in_a[23:13], 1'h0}
               | {12{booth_4bit_onehot_8[1]}} & {1'h1, ~(io_in_a[23:13])}
               | {12{booth_4bit_onehot_8[0]}} & {~(io_in_a[23:13]), 1'h1},
             1'h0,
             sign_seq_7,
             26'h0};
  assign io_out_pp_9 =
    io_is_fp64
      ? {34'h1,
         ~sign_seq_9,
         {54{booth_4bit_onehot_9[3]}} & _pp_seq_f64_26_T_2 | {54{booth_4bit_onehot_9[2]}}
           & _pp_seq_f64_26_T_6 | {54{booth_4bit_onehot_9[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_9[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_8,
         16'h0}
      : io_is_fp32
          ? {63'h1,
             ~sign_seq_9,
             {25{booth_4bit_onehot_9[3]}} & {1'h0, io_in_a[23:0]}
               | {25{booth_4bit_onehot_9[2]}} & {io_in_a[23:0], 1'h0}
               | {25{booth_4bit_onehot_9[1]}} & {1'h1, ~(io_in_a[23:0])}
               | {25{booth_4bit_onehot_9[0]}} & {~(io_in_a[23:0]), 1'h1},
             1'h0,
             sign_seq_8,
             16'h0}
          : {64'h1,
             ~sign_seq_9,
             {12{booth_4bit_onehot_9[3]}} & {1'h0, io_in_a[23:13]}
               | {12{booth_4bit_onehot_9[2]}} & {io_in_a[23:13], 1'h0}
               | {12{booth_4bit_onehot_9[1]}} & {1'h1, ~(io_in_a[23:13])}
               | {12{booth_4bit_onehot_9[0]}} & {~(io_in_a[23:13]), 1'h1},
             1'h0,
             sign_seq_8,
             28'h0};
  assign io_out_pp_10 =
    io_is_fp64
      ? {32'h1,
         ~sign_seq_10,
         {54{booth_4bit_onehot_10[3]}} & _pp_seq_f64_26_T_2
           | {54{booth_4bit_onehot_10[2]}} & _pp_seq_f64_26_T_6
           | {54{booth_4bit_onehot_10[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_10[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_9,
         18'h0}
      : io_is_fp32
          ? {61'h1,
             ~sign_seq_10,
             {25{booth_4bit_onehot_10[3]}} & {1'h0, io_in_a[23:0]}
               | {25{booth_4bit_onehot_10[2]}} & {io_in_a[23:0], 1'h0}
               | {25{booth_4bit_onehot_10[1]}} & {1'h1, ~(io_in_a[23:0])}
               | {25{booth_4bit_onehot_10[0]}} & {~(io_in_a[23:0]), 1'h1},
             1'h0,
             sign_seq_9,
             18'h0}
          : {62'h1,
             ~sign_seq_10,
             {12{booth_4bit_onehot_10[3]}} & {1'h0, io_in_a[23:13]}
               | {12{booth_4bit_onehot_10[2]}} & {io_in_a[23:13], 1'h0}
               | {12{booth_4bit_onehot_10[1]}} & {1'h1, ~(io_in_a[23:13])}
               | {12{booth_4bit_onehot_10[0]}} & {~(io_in_a[23:13]), 1'h1},
             1'h0,
             sign_seq_9,
             30'h0};
  assign io_out_pp_11 =
    io_is_fp64
      ? {30'h1,
         ~sign_seq_11,
         {54{booth_4bit_onehot_11[3]}} & _pp_seq_f64_26_T_2
           | {54{booth_4bit_onehot_11[2]}} & _pp_seq_f64_26_T_6
           | {54{booth_4bit_onehot_11[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_11[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_10,
         20'h0}
      : io_is_fp32
          ? {59'h1,
             ~sign_seq_11,
             {25{booth_4bit_onehot_11[3]}} & {1'h0, io_in_a[23:0]}
               | {25{booth_4bit_onehot_11[2]}} & {io_in_a[23:0], 1'h0}
               | {25{booth_4bit_onehot_11[1]}} & {1'h1, ~(io_in_a[23:0])}
               | {25{booth_4bit_onehot_11[0]}} & {~(io_in_a[23:0]), 1'h1},
             1'h0,
             sign_seq_10,
             20'h0}
          : {60'h1,
             ~sign_seq_11,
             {12{booth_4bit_onehot_11[3]}} & {1'h0, io_in_a[23:13]}
               | {12{booth_4bit_onehot_11[2]}} & {io_in_a[23:13], 1'h0}
               | {12{booth_4bit_onehot_11[1]}} & {1'h1, ~(io_in_a[23:13])}
               | {12{booth_4bit_onehot_11[0]}} & {~(io_in_a[23:13]), 1'h1},
             1'h0,
             sign_seq_10,
             32'h0};
  assign io_out_pp_12 =
    io_is_fp64
      ? {28'h1,
         ~sign_seq_12,
         {54{booth_4bit_onehot_12[3]}} & _pp_seq_f64_26_T_2
           | {54{booth_4bit_onehot_12[2]}} & _pp_seq_f64_26_T_6
           | {54{booth_4bit_onehot_12[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_12[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_11,
         22'h0}
      : io_is_fp32
          ? {59'h0,
             {24{booth_4bit_onehot_12[3]}} & io_in_a[23:0] | {24{booth_4bit_onehot_12[2]}}
               & {io_in_a[22:0], 1'h0} | {24{booth_4bit_onehot_12[1]}} & ~(io_in_a[23:0])
               | {24{booth_4bit_onehot_12[0]}} & {~(io_in_a[22:0]), 1'h1},
             1'h0,
             sign_seq_11,
             22'h0}
          : {59'h1,
             {12{booth_4bit_onehot_12[3]}} & {1'h0, io_in_a[23:13]}
               | {12{booth_4bit_onehot_12[2]}} & {io_in_a[23:13], 1'h0}
               | {12{booth_4bit_onehot_12[1]}} & {1'h1, ~(io_in_a[23:13])}
               | {12{booth_4bit_onehot_12[0]}} & {~(io_in_a[23:13]), 1'h1},
             1'h0,
             sign_seq_11,
             34'h0};
  assign io_out_pp_13 =
    io_is_fp64
      ? {26'h1,
         ~sign_seq_13,
         {54{booth_4bit_onehot_13[3]}} & _pp_seq_f64_26_T_2
           | {54{booth_4bit_onehot_13[2]}} & _pp_seq_f64_26_T_6
           | {54{booth_4bit_onehot_13[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_13[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_12,
         24'h0}
      : 107'h0;
  assign io_out_pp_14 =
    io_is_fp64
      ? {24'h1,
         ~sign_seq_14,
         {54{booth_4bit_onehot_14[3]}} & _pp_seq_f64_26_T_2
           | {54{booth_4bit_onehot_14[2]}} & _pp_seq_f64_26_T_6
           | {54{booth_4bit_onehot_14[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_14[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_13,
         26'h0}
      : {io_is_fp32
           ? {21'h0,
              ~sign_seq_14,
              _GEN_1,
              {25{booth_4bit_onehot_14[3]}} & {1'h0, io_in_a[52:29]}
                | {25{booth_4bit_onehot_14[2]}} & {io_in_a[52:29], 1'h0}
                | {25{booth_4bit_onehot_14[1]}} & {1'h1, ~(io_in_a[52:29])}
                | {25{booth_4bit_onehot_14[0]}} & {~(io_in_a[52:29]), 1'h1}}
           : {34'h0,
              ~sign_seq_14,
              _GEN_1,
              {12{booth_4bit_onehot_14[3]}} & {1'h0, io_in_a[39:29]}
                | {12{booth_4bit_onehot_14[2]}} & {io_in_a[39:29], 1'h0}
                | {12{booth_4bit_onehot_14[1]}} & {1'h1, ~(io_in_a[39:29])}
                | {12{booth_4bit_onehot_14[0]}} & {~(io_in_a[39:29]), 1'h1}},
         58'h0};
  assign io_out_pp_15 =
    io_is_fp64
      ? {22'h1,
         ~sign_seq_15,
         {54{booth_4bit_onehot_15[3]}} & _pp_seq_f64_26_T_2
           | {54{booth_4bit_onehot_15[2]}} & _pp_seq_f64_26_T_6
           | {54{booth_4bit_onehot_15[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_15[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_14,
         28'h0}
      : {io_is_fp32
           ? {21'h1,
              ~sign_seq_15,
              {25{booth_4bit_onehot_15[3]}} & {1'h0, io_in_a[52:29]}
                | {25{booth_4bit_onehot_15[2]}} & {io_in_a[52:29], 1'h0}
                | {25{booth_4bit_onehot_15[1]}} & {1'h1, ~(io_in_a[52:29])}
                | {25{booth_4bit_onehot_15[0]}} & {~(io_in_a[52:29]), 1'h1}}
           : {34'h1,
              ~sign_seq_15,
              {12{booth_4bit_onehot_15[3]}} & {1'h0, io_in_a[39:29]}
                | {12{booth_4bit_onehot_15[2]}} & {io_in_a[39:29], 1'h0}
                | {12{booth_4bit_onehot_15[1]}} & {1'h1, ~(io_in_a[39:29])}
                | {12{booth_4bit_onehot_15[0]}} & {~(io_in_a[39:29]), 1'h1}},
         1'h0,
         sign_seq_14,
         58'h0};
  assign io_out_pp_16 =
    io_is_fp64
      ? {20'h1,
         ~sign_seq_16,
         {54{booth_4bit_onehot_16[3]}} & _pp_seq_f64_26_T_2
           | {54{booth_4bit_onehot_16[2]}} & _pp_seq_f64_26_T_6
           | {54{booth_4bit_onehot_16[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_16[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_15,
         30'h0}
      : {io_is_fp32
           ? {19'h1,
              ~sign_seq_16,
              {25{booth_4bit_onehot_16[3]}} & {1'h0, io_in_a[52:29]}
                | {25{booth_4bit_onehot_16[2]}} & {io_in_a[52:29], 1'h0}
                | {25{booth_4bit_onehot_16[1]}} & {1'h1, ~(io_in_a[52:29])}
                | {25{booth_4bit_onehot_16[0]}} & {~(io_in_a[52:29]), 1'h1}}
           : {32'h1,
              ~sign_seq_16,
              {12{booth_4bit_onehot_16[3]}} & {1'h0, io_in_a[39:29]}
                | {12{booth_4bit_onehot_16[2]}} & {io_in_a[39:29], 1'h0}
                | {12{booth_4bit_onehot_16[1]}} & {1'h1, ~(io_in_a[39:29])}
                | {12{booth_4bit_onehot_16[0]}} & {~(io_in_a[39:29]), 1'h1}},
         1'h0,
         sign_seq_15,
         60'h0};
  assign io_out_pp_17 =
    io_is_fp64
      ? {18'h1,
         ~sign_seq_17,
         {54{booth_4bit_onehot_17[3]}} & _pp_seq_f64_26_T_2
           | {54{booth_4bit_onehot_17[2]}} & _pp_seq_f64_26_T_6
           | {54{booth_4bit_onehot_17[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_17[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_16,
         32'h0}
      : {io_is_fp32
           ? {17'h1,
              ~sign_seq_17,
              {25{booth_4bit_onehot_17[3]}} & {1'h0, io_in_a[52:29]}
                | {25{booth_4bit_onehot_17[2]}} & {io_in_a[52:29], 1'h0}
                | {25{booth_4bit_onehot_17[1]}} & {1'h1, ~(io_in_a[52:29])}
                | {25{booth_4bit_onehot_17[0]}} & {~(io_in_a[52:29]), 1'h1}}
           : {30'h1,
              ~sign_seq_17,
              {12{booth_4bit_onehot_17[3]}} & {1'h0, io_in_a[39:29]}
                | {12{booth_4bit_onehot_17[2]}} & {io_in_a[39:29], 1'h0}
                | {12{booth_4bit_onehot_17[1]}} & {1'h1, ~(io_in_a[39:29])}
                | {12{booth_4bit_onehot_17[0]}} & {~(io_in_a[39:29]), 1'h1}},
         1'h0,
         sign_seq_16,
         62'h0};
  assign io_out_pp_18 =
    io_is_fp64
      ? {16'h1,
         ~sign_seq_18,
         {54{booth_4bit_onehot_18[3]}} & _pp_seq_f64_26_T_2
           | {54{booth_4bit_onehot_18[2]}} & _pp_seq_f64_26_T_6
           | {54{booth_4bit_onehot_18[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_18[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_17,
         34'h0}
      : {io_is_fp32
           ? {15'h1,
              ~sign_seq_18,
              {25{booth_4bit_onehot_18[3]}} & {1'h0, io_in_a[52:29]}
                | {25{booth_4bit_onehot_18[2]}} & {io_in_a[52:29], 1'h0}
                | {25{booth_4bit_onehot_18[1]}} & {1'h1, ~(io_in_a[52:29])}
                | {25{booth_4bit_onehot_18[0]}} & {~(io_in_a[52:29]), 1'h1}}
           : {28'h1,
              ~sign_seq_18,
              {12{booth_4bit_onehot_18[3]}} & {1'h0, io_in_a[39:29]}
                | {12{booth_4bit_onehot_18[2]}} & {io_in_a[39:29], 1'h0}
                | {12{booth_4bit_onehot_18[1]}} & {1'h1, ~(io_in_a[39:29])}
                | {12{booth_4bit_onehot_18[0]}} & {~(io_in_a[39:29]), 1'h1}},
         1'h0,
         sign_seq_17,
         64'h0};
  assign io_out_pp_19 =
    io_is_fp64
      ? {14'h1,
         ~sign_seq_19,
         {54{booth_4bit_onehot_19[3]}} & _pp_seq_f64_26_T_2
           | {54{booth_4bit_onehot_19[2]}} & _pp_seq_f64_26_T_6
           | {54{booth_4bit_onehot_19[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_19[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_18,
         36'h0}
      : {io_is_fp32
           ? {13'h1,
              ~sign_seq_19,
              {25{booth_4bit_onehot_19[3]}} & {1'h0, io_in_a[52:29]}
                | {25{booth_4bit_onehot_19[2]}} & {io_in_a[52:29], 1'h0}
                | {25{booth_4bit_onehot_19[1]}} & {1'h1, ~(io_in_a[52:29])}
                | {25{booth_4bit_onehot_19[0]}} & {~(io_in_a[52:29]), 1'h1}}
           : {27'h1,
              {12{booth_4bit_onehot_19[3]}} & {1'h0, io_in_a[39:29]}
                | {12{booth_4bit_onehot_19[2]}} & {io_in_a[39:29], 1'h0}
                | {12{booth_4bit_onehot_19[1]}} & {1'h1, ~(io_in_a[39:29])}
                | {12{booth_4bit_onehot_19[0]}} & {~(io_in_a[39:29]), 1'h1}},
         1'h0,
         sign_seq_18,
         66'h0};
  assign io_out_pp_20 =
    io_is_fp64
      ? {12'h1,
         ~sign_seq_20,
         {54{booth_4bit_onehot_20[3]}} & _pp_seq_f64_26_T_2
           | {54{booth_4bit_onehot_20[2]}} & _pp_seq_f64_26_T_6
           | {54{booth_4bit_onehot_20[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_20[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_19,
         38'h0}
      : io_is_fp32
          ? {11'h1,
             ~sign_seq_20,
             {25{booth_4bit_onehot_20[3]}} & {1'h0, io_in_a[52:29]}
               | {25{booth_4bit_onehot_20[2]}} & {io_in_a[52:29], 1'h0}
               | {25{booth_4bit_onehot_20[1]}} & {1'h1, ~(io_in_a[52:29])}
               | {25{booth_4bit_onehot_20[0]}} & {~(io_in_a[52:29]), 1'h1},
             1'h0,
             sign_seq_19,
             68'h0}
          : 107'h0;
  assign io_out_pp_21 =
    io_is_fp64
      ? {10'h1,
         ~sign_seq_21,
         {54{booth_4bit_onehot_21[3]}} & _pp_seq_f64_26_T_2
           | {54{booth_4bit_onehot_21[2]}} & _pp_seq_f64_26_T_6
           | {54{booth_4bit_onehot_21[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_21[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_20,
         40'h0}
      : io_is_fp32
          ? {9'h1,
             ~sign_seq_21,
             {25{booth_4bit_onehot_21[3]}} & {1'h0, io_in_a[52:29]}
               | {25{booth_4bit_onehot_21[2]}} & {io_in_a[52:29], 1'h0}
               | {25{booth_4bit_onehot_21[1]}} & {1'h1, ~(io_in_a[52:29])}
               | {25{booth_4bit_onehot_21[0]}} & {~(io_in_a[52:29]), 1'h1},
             1'h0,
             sign_seq_20,
             70'h0}
          : {8'h0,
             ~sign_seq_21,
             {2{sign_seq_21}},
             {12{booth_4bit_onehot_21[3]}} & {1'h0, io_in_a[52:42]}
               | {12{booth_4bit_onehot_21[2]}} & {io_in_a[52:42], 1'h0}
               | {12{booth_4bit_onehot_21[1]}} & {1'h1, ~(io_in_a[52:42])}
               | {12{booth_4bit_onehot_21[0]}} & {~(io_in_a[52:42]), 1'h1},
             84'h0};
  assign io_out_pp_22 =
    io_is_fp64
      ? {8'h1,
         ~sign_seq_22,
         {54{booth_4bit_onehot_22[3]}} & _pp_seq_f64_26_T_2
           | {54{booth_4bit_onehot_22[2]}} & _pp_seq_f64_26_T_6
           | {54{booth_4bit_onehot_22[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_22[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_21,
         42'h0}
      : io_is_fp32
          ? {7'h1,
             ~sign_seq_22,
             {25{booth_4bit_onehot_22[3]}} & {1'h0, io_in_a[52:29]}
               | {25{booth_4bit_onehot_22[2]}} & {io_in_a[52:29], 1'h0}
               | {25{booth_4bit_onehot_22[1]}} & {1'h1, ~(io_in_a[52:29])}
               | {25{booth_4bit_onehot_22[0]}} & {~(io_in_a[52:29]), 1'h1},
             1'h0,
             sign_seq_21,
             72'h0}
          : {8'h1,
             ~sign_seq_22,
             {12{booth_4bit_onehot_22[3]}} & {1'h0, io_in_a[52:42]}
               | {12{booth_4bit_onehot_22[2]}} & {io_in_a[52:42], 1'h0}
               | {12{booth_4bit_onehot_22[1]}} & {1'h1, ~(io_in_a[52:42])}
               | {12{booth_4bit_onehot_22[0]}} & {~(io_in_a[52:42]), 1'h1},
             1'h0,
             sign_seq_21,
             84'h0};
  assign io_out_pp_23 =
    io_is_fp64
      ? {6'h1,
         ~sign_seq_23,
         {54{booth_4bit_onehot_23[3]}} & _pp_seq_f64_26_T_2
           | {54{booth_4bit_onehot_23[2]}} & _pp_seq_f64_26_T_6
           | {54{booth_4bit_onehot_23[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_23[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_22,
         44'h0}
      : io_is_fp32
          ? {5'h1,
             ~sign_seq_23,
             {25{booth_4bit_onehot_23[3]}} & {1'h0, io_in_a[52:29]}
               | {25{booth_4bit_onehot_23[2]}} & {io_in_a[52:29], 1'h0}
               | {25{booth_4bit_onehot_23[1]}} & {1'h1, ~(io_in_a[52:29])}
               | {25{booth_4bit_onehot_23[0]}} & {~(io_in_a[52:29]), 1'h1},
             1'h0,
             sign_seq_22,
             74'h0}
          : {6'h1,
             ~sign_seq_23,
             {12{booth_4bit_onehot_23[3]}} & {1'h0, io_in_a[52:42]}
               | {12{booth_4bit_onehot_23[2]}} & {io_in_a[52:42], 1'h0}
               | {12{booth_4bit_onehot_23[1]}} & {1'h1, ~(io_in_a[52:42])}
               | {12{booth_4bit_onehot_23[0]}} & {~(io_in_a[52:42]), 1'h1},
             1'h0,
             sign_seq_22,
             86'h0};
  assign io_out_pp_24 =
    io_is_fp64
      ? {4'h1,
         ~sign_seq_24,
         {54{booth_4bit_onehot_24[3]}} & _pp_seq_f64_26_T_2
           | {54{booth_4bit_onehot_24[2]}} & _pp_seq_f64_26_T_6
           | {54{booth_4bit_onehot_24[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_24[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_23,
         46'h0}
      : io_is_fp32
          ? {3'h1,
             ~sign_seq_24,
             {25{booth_4bit_onehot_24[3]}} & {1'h0, io_in_a[52:29]}
               | {25{booth_4bit_onehot_24[2]}} & {io_in_a[52:29], 1'h0}
               | {25{booth_4bit_onehot_24[1]}} & {1'h1, ~(io_in_a[52:29])}
               | {25{booth_4bit_onehot_24[0]}} & {~(io_in_a[52:29]), 1'h1},
             1'h0,
             sign_seq_23,
             76'h0}
          : {4'h1,
             ~sign_seq_24,
             {12{booth_4bit_onehot_24[3]}} & {1'h0, io_in_a[52:42]}
               | {12{booth_4bit_onehot_24[2]}} & {io_in_a[52:42], 1'h0}
               | {12{booth_4bit_onehot_24[1]}} & {1'h1, ~(io_in_a[52:42])}
               | {12{booth_4bit_onehot_24[0]}} & {~(io_in_a[52:42]), 1'h1},
             1'h0,
             sign_seq_23,
             88'h0};
  assign io_out_pp_25 =
    io_is_fp64
      ? {2'h1,
         ~sign_seq_25,
         {54{booth_4bit_onehot_25[3]}} & _pp_seq_f64_26_T_2
           | {54{booth_4bit_onehot_25[2]}} & _pp_seq_f64_26_T_6
           | {54{booth_4bit_onehot_25[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_25[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_24,
         48'h0}
      : io_is_fp32
          ? {1'h1,
             ~sign_seq_25,
             {25{booth_4bit_onehot_25[3]}} & {1'h0, io_in_a[52:29]}
               | {25{booth_4bit_onehot_25[2]}} & {io_in_a[52:29], 1'h0}
               | {25{booth_4bit_onehot_25[1]}} & {1'h1, ~(io_in_a[52:29])}
               | {25{booth_4bit_onehot_25[0]}} & {~(io_in_a[52:29]), 1'h1},
             1'h0,
             sign_seq_24,
             78'h0}
          : {2'h1,
             ~sign_seq_25,
             {12{booth_4bit_onehot_25[3]}} & {1'h0, io_in_a[52:42]}
               | {12{booth_4bit_onehot_25[2]}} & {io_in_a[52:42], 1'h0}
               | {12{booth_4bit_onehot_25[1]}} & {1'h1, ~(io_in_a[52:42])}
               | {12{booth_4bit_onehot_25[0]}} & {~(io_in_a[52:42]), 1'h1},
             1'h0,
             sign_seq_24,
             90'h0};
  assign io_out_pp_26 =
    io_is_fp64
      ? {1'h1,
         {54{booth_4bit_onehot_26[3]}} & _pp_seq_f64_26_T_2
           | {54{booth_4bit_onehot_26[2]}} & _pp_seq_f64_26_T_6
           | {54{booth_4bit_onehot_26[1]}} & {1'h1, ~io_in_a}
           | {54{booth_4bit_onehot_26[0]}} & {~io_in_a, 1'h1},
         1'h0,
         sign_seq_25,
         50'h0}
      : io_is_fp32
          ? {1'h0,
             {24{booth_4bit_onehot_26[3]}} & io_in_a[52:29]
               | {24{booth_4bit_onehot_26[2]}} & {io_in_a[51:29], 1'h0}
               | {24{booth_4bit_onehot_26[1]}} & ~(io_in_a[52:29])
               | {24{booth_4bit_onehot_26[0]}} & {~(io_in_a[51:29]), 1'h1},
             1'h0,
             sign_seq_25,
             80'h0}
          : {1'h1,
             {12{booth_4bit_onehot_26[3]}} & {1'h0, io_in_a[52:42]}
               | {12{booth_4bit_onehot_26[2]}} & {io_in_a[52:42], 1'h0}
               | {12{booth_4bit_onehot_26[1]}} & {1'h1, ~(io_in_a[52:42])}
               | {12{booth_4bit_onehot_26[0]}} & {~(io_in_a[52:42]), 1'h1},
             1'h0,
             sign_seq_25,
             92'h0};
endmodule

