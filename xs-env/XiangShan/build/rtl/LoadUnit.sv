// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module LoadUnit(
  input          clock,
  input          reset,
  input          io_redirect_valid,
  input          io_redirect_bits_robIdx_flag,
  input  [7:0]   io_redirect_bits_robIdx_value,
  input          io_redirect_bits_level,
  input          io_csrCtrl_ldld_vio_check_enable,
  input          io_csrCtrl_hd_misalign_ld_enable,
  output         io_ldin_ready,
  input          io_ldin_valid,
  input          io_ldin_bits_uop_preDecodeInfo_isRVC,
  input          io_ldin_bits_uop_ftqPtr_flag,
  input  [5:0]   io_ldin_bits_uop_ftqPtr_value,
  input  [3:0]   io_ldin_bits_uop_ftqOffset,
  input  [8:0]   io_ldin_bits_uop_fuOpType,
  input          io_ldin_bits_uop_rfWen,
  input          io_ldin_bits_uop_fpWen,
  input  [31:0]  io_ldin_bits_uop_imm,
  input  [7:0]   io_ldin_bits_uop_pdest,
  input          io_ldin_bits_uop_robIdx_flag,
  input  [7:0]   io_ldin_bits_uop_robIdx_value,
  input          io_ldin_bits_uop_storeSetHit,
  input          io_ldin_bits_uop_waitForRobIdx_flag,
  input  [7:0]   io_ldin_bits_uop_waitForRobIdx_value,
  input          io_ldin_bits_uop_loadWaitBit,
  input          io_ldin_bits_uop_loadWaitStrict,
  input          io_ldin_bits_uop_lqIdx_flag,
  input  [6:0]   io_ldin_bits_uop_lqIdx_value,
  input          io_ldin_bits_uop_sqIdx_flag,
  input  [5:0]   io_ldin_bits_uop_sqIdx_value,
  input  [63:0]  io_ldin_bits_src_0,
  input          io_ldout_ready,
  output         io_ldout_valid,
  output         io_ldout_bits_uop_exceptionVec_3,
  output         io_ldout_bits_uop_exceptionVec_4,
  output         io_ldout_bits_uop_exceptionVec_5,
  output         io_ldout_bits_uop_exceptionVec_13,
  output         io_ldout_bits_uop_exceptionVec_19,
  output         io_ldout_bits_uop_exceptionVec_21,
  output [3:0]   io_ldout_bits_uop_trigger,
  output         io_ldout_bits_uop_rfWen,
  output         io_ldout_bits_uop_fpWen,
  output         io_ldout_bits_uop_flushPipe,
  output [7:0]   io_ldout_bits_uop_pdest,
  output         io_ldout_bits_uop_robIdx_flag,
  output [7:0]   io_ldout_bits_uop_robIdx_value,
  output         io_ldout_bits_uop_replayInst,
  output [63:0]  io_ldout_bits_data,
  output         io_vecldin_ready,
  input          io_vecldin_valid,
  input  [63:0]  io_vecldin_bits_vaddr,
  input  [49:0]  io_vecldin_bits_basevaddr,
  input  [15:0]  io_vecldin_bits_mask,
  input  [3:0]   io_vecldin_bits_reg_offset,
  input  [2:0]   io_vecldin_bits_alignedType,
  input          io_vecldin_bits_vecActive,
  input          io_vecldin_bits_uop_exceptionVec_4,
  input          io_vecldin_bits_uop_preDecodeInfo_isRVC,
  input          io_vecldin_bits_uop_ftqPtr_flag,
  input  [5:0]   io_vecldin_bits_uop_ftqPtr_value,
  input  [3:0]   io_vecldin_bits_uop_ftqOffset,
  input  [8:0]   io_vecldin_bits_uop_fuOpType,
  input          io_vecldin_bits_uop_rfWen,
  input          io_vecldin_bits_uop_fpWen,
  input  [7:0]   io_vecldin_bits_uop_vpu_vstart,
  input  [1:0]   io_vecldin_bits_uop_vpu_veew,
  input  [6:0]   io_vecldin_bits_uop_uopIdx,
  input  [7:0]   io_vecldin_bits_uop_pdest,
  input          io_vecldin_bits_uop_robIdx_flag,
  input  [7:0]   io_vecldin_bits_uop_robIdx_value,
  input          io_vecldin_bits_uop_storeSetHit,
  input          io_vecldin_bits_uop_waitForRobIdx_flag,
  input  [7:0]   io_vecldin_bits_uop_waitForRobIdx_value,
  input          io_vecldin_bits_uop_loadWaitBit,
  input          io_vecldin_bits_uop_loadWaitStrict,
  input          io_vecldin_bits_uop_lqIdx_flag,
  input  [6:0]   io_vecldin_bits_uop_lqIdx_value,
  input          io_vecldin_bits_uop_sqIdx_flag,
  input  [5:0]   io_vecldin_bits_uop_sqIdx_value,
  input  [3:0]   io_vecldin_bits_mBIndex,
  input  [7:0]   io_vecldin_bits_elemIdx,
  input  [7:0]   io_vecldin_bits_elemIdxInsideVd,
  output         io_vecldout_valid,
  output [3:0]   io_vecldout_bits_mBIndex,
  output [3:0]   io_vecldout_bits_trigger,
  output         io_vecldout_bits_exceptionVec_3,
  output         io_vecldout_bits_exceptionVec_4,
  output         io_vecldout_bits_exceptionVec_5,
  output         io_vecldout_bits_exceptionVec_13,
  output         io_vecldout_bits_exceptionVec_21,
  output         io_vecldout_bits_hasException,
  output [63:0]  io_vecldout_bits_vaddr,
  output         io_vecldout_bits_vaNeedExt,
  output [63:0]  io_vecldout_bits_gpaddr,
  output [7:0]   io_vecldout_bits_vstart,
  output [15:0]  io_vecldout_bits_vecTriggerMask,
  output [7:0]   io_vecldout_bits_elemIdx,
  output [15:0]  io_vecldout_bits_mask,
  output [2:0]   io_vecldout_bits_alignedType,
  output [3:0]   io_vecldout_bits_reg_offset,
  output [7:0]   io_vecldout_bits_elemIdxInsideVd,
  output [127:0] io_vecldout_bits_vecdata,
  output         io_misalign_ldin_ready,
  input          io_misalign_ldin_valid,
  input          io_misalign_ldin_bits_uop_exceptionVec_4,
  input          io_misalign_ldin_bits_uop_exceptionVec_19,
  input          io_misalign_ldin_bits_uop_preDecodeInfo_isRVC,
  input          io_misalign_ldin_bits_uop_ftqPtr_flag,
  input  [5:0]   io_misalign_ldin_bits_uop_ftqPtr_value,
  input  [3:0]   io_misalign_ldin_bits_uop_ftqOffset,
  input  [8:0]   io_misalign_ldin_bits_uop_fuOpType,
  input          io_misalign_ldin_bits_uop_rfWen,
  input          io_misalign_ldin_bits_uop_fpWen,
  input  [7:0]   io_misalign_ldin_bits_uop_vpu_vstart,
  input  [1:0]   io_misalign_ldin_bits_uop_vpu_veew,
  input  [6:0]   io_misalign_ldin_bits_uop_uopIdx,
  input  [7:0]   io_misalign_ldin_bits_uop_pdest,
  input          io_misalign_ldin_bits_uop_robIdx_flag,
  input  [7:0]   io_misalign_ldin_bits_uop_robIdx_value,
  input          io_misalign_ldin_bits_uop_storeSetHit,
  input          io_misalign_ldin_bits_uop_waitForRobIdx_flag,
  input  [7:0]   io_misalign_ldin_bits_uop_waitForRobIdx_value,
  input          io_misalign_ldin_bits_uop_loadWaitBit,
  input          io_misalign_ldin_bits_uop_loadWaitStrict,
  input          io_misalign_ldin_bits_uop_lqIdx_flag,
  input  [6:0]   io_misalign_ldin_bits_uop_lqIdx_value,
  input          io_misalign_ldin_bits_uop_sqIdx_flag,
  input  [5:0]   io_misalign_ldin_bits_uop_sqIdx_value,
  input  [49:0]  io_misalign_ldin_bits_vaddr,
  input  [63:0]  io_misalign_ldin_bits_fullva,
  input  [15:0]  io_misalign_ldin_bits_mask,
  input          io_misalign_ldin_bits_isvec,
  input          io_misalign_ldin_bits_is128bit,
  input  [3:0]   io_misalign_ldin_bits_mshrid,
  input  [6:0]   io_misalign_ldin_bits_schedIndex,
  input          io_misalign_ldin_bits_isFinalSplit,
  input          io_misalign_ldin_bits_misalignNeedWakeUp,
  output         io_misalign_ldout_valid,
  output         io_misalign_ldout_bits_uop_exceptionVec_3,
  output         io_misalign_ldout_bits_uop_exceptionVec_4,
  output         io_misalign_ldout_bits_uop_exceptionVec_5,
  output         io_misalign_ldout_bits_uop_exceptionVec_13,
  output         io_misalign_ldout_bits_uop_exceptionVec_21,
  output [3:0]   io_misalign_ldout_bits_uop_trigger,
  output [128:0] io_misalign_ldout_bits_data,
  output         io_misalign_ldout_bits_mmio,
  output         io_misalign_ldout_bits_vecActive,
  output         io_misalign_ldout_bits_misalignNeedWakeUp,
  output         io_misalign_ldout_bits_rep_info_cause_0,
  output         io_misalign_ldout_bits_rep_info_cause_1,
  output         io_misalign_ldout_bits_rep_info_cause_2,
  output         io_misalign_ldout_bits_rep_info_cause_3,
  output         io_misalign_ldout_bits_rep_info_cause_4,
  output         io_misalign_ldout_bits_rep_info_cause_5,
  output         io_misalign_ldout_bits_rep_info_cause_6,
  output         io_misalign_ldout_bits_rep_info_cause_7,
  output         io_misalign_ldout_bits_rep_info_cause_8,
  output         io_misalign_ldout_bits_rep_info_cause_9,
  output         io_misalign_ldout_bits_rep_info_cause_10,
  output         io_tlb_req_valid,
  output [49:0]  io_tlb_req_bits_vaddr,
  output [63:0]  io_tlb_req_bits_fullva,
  output         io_tlb_req_bits_checkfullva,
  output [2:0]   io_tlb_req_bits_cmd,
  output         io_tlb_req_bits_hyperinst,
  output         io_tlb_req_bits_hlvx,
  output         io_tlb_req_bits_kill,
  output         io_tlb_req_bits_isPrefetch,
  output         io_tlb_req_bits_no_translate,
  output [47:0]  io_tlb_req_bits_pmp_addr,
  output         io_tlb_req_bits_debug_robIdx_flag,
  output [7:0]   io_tlb_req_bits_debug_robIdx_value,
  output         io_tlb_req_kill,
  input          io_tlb_resp_valid,
  input  [47:0]  io_tlb_resp_bits_paddr_0,
  input  [47:0]  io_tlb_resp_bits_paddr_1,
  input  [63:0]  io_tlb_resp_bits_gpaddr_0,
  input  [63:0]  io_tlb_resp_bits_fullva,
  input  [1:0]   io_tlb_resp_bits_pbmt_0,
  input          io_tlb_resp_bits_miss,
  input          io_tlb_resp_bits_isForVSnonLeafPTE,
  input          io_tlb_resp_bits_excp_0_vaNeedExt,
  input          io_tlb_resp_bits_excp_0_isHyper,
  input          io_tlb_resp_bits_excp_0_gpf_ld,
  input          io_tlb_resp_bits_excp_0_pf_ld,
  input          io_tlb_resp_bits_excp_0_af_ld,
  input          io_pmp_ld,
  input          io_pmp_st,
  input          io_pmp_mmio,
  input          io_dcache_req_ready,
  output         io_dcache_req_valid,
  output [4:0]   io_dcache_req_bits_cmd,
  output [49:0]  io_dcache_req_bits_vaddr,
  output [49:0]  io_dcache_req_bits_vaddr_dup,
  output [3:0]   io_dcache_req_bits_instrtype,
  output         io_dcache_req_bits_lqIdx_flag,
  output [6:0]   io_dcache_req_bits_lqIdx_value,
  input  [127:0] io_dcache_resp_bits_data,
  input          io_dcache_resp_bits_miss,
  input  [3:0]   io_dcache_resp_bits_mshr_id,
  input  [2:0]   io_dcache_resp_bits_meta_prefetch,
  input          io_dcache_resp_bits_handled,
  output         io_dcache_s1_kill,
  output         io_dcache_s2_kill,
  output         io_dcache_is128Req,
  output [2:0]   io_dcache_pf_source,
  output [47:0]  io_dcache_s1_paddr_dup_lsu,
  output [47:0]  io_dcache_s1_paddr_dup_dcache,
  input          io_dcache_s2_bank_conflict,
  input          io_dcache_s2_mq_nack,
  output [49:0]  io_sbuffer_vaddr,
  output [47:0]  io_sbuffer_paddr,
  output         io_sbuffer_valid,
  input          io_sbuffer_forwardMask_0,
  input          io_sbuffer_forwardMask_1,
  input          io_sbuffer_forwardMask_2,
  input          io_sbuffer_forwardMask_3,
  input          io_sbuffer_forwardMask_4,
  input          io_sbuffer_forwardMask_5,
  input          io_sbuffer_forwardMask_6,
  input          io_sbuffer_forwardMask_7,
  input          io_sbuffer_forwardMask_8,
  input          io_sbuffer_forwardMask_9,
  input          io_sbuffer_forwardMask_10,
  input          io_sbuffer_forwardMask_11,
  input          io_sbuffer_forwardMask_12,
  input          io_sbuffer_forwardMask_13,
  input          io_sbuffer_forwardMask_14,
  input          io_sbuffer_forwardMask_15,
  input  [7:0]   io_sbuffer_forwardData_0,
  input  [7:0]   io_sbuffer_forwardData_1,
  input  [7:0]   io_sbuffer_forwardData_2,
  input  [7:0]   io_sbuffer_forwardData_3,
  input  [7:0]   io_sbuffer_forwardData_4,
  input  [7:0]   io_sbuffer_forwardData_5,
  input  [7:0]   io_sbuffer_forwardData_6,
  input  [7:0]   io_sbuffer_forwardData_7,
  input  [7:0]   io_sbuffer_forwardData_8,
  input  [7:0]   io_sbuffer_forwardData_9,
  input  [7:0]   io_sbuffer_forwardData_10,
  input  [7:0]   io_sbuffer_forwardData_11,
  input  [7:0]   io_sbuffer_forwardData_12,
  input  [7:0]   io_sbuffer_forwardData_13,
  input  [7:0]   io_sbuffer_forwardData_14,
  input  [7:0]   io_sbuffer_forwardData_15,
  input          io_sbuffer_matchInvalid,
  output [49:0]  io_ubuffer_vaddr,
  output [47:0]  io_ubuffer_paddr,
  output         io_ubuffer_valid,
  input          io_ubuffer_forwardMask_0,
  input          io_ubuffer_forwardMask_1,
  input          io_ubuffer_forwardMask_2,
  input          io_ubuffer_forwardMask_3,
  input          io_ubuffer_forwardMask_4,
  input          io_ubuffer_forwardMask_5,
  input          io_ubuffer_forwardMask_6,
  input          io_ubuffer_forwardMask_7,
  input          io_ubuffer_forwardMask_8,
  input          io_ubuffer_forwardMask_9,
  input          io_ubuffer_forwardMask_10,
  input          io_ubuffer_forwardMask_11,
  input          io_ubuffer_forwardMask_12,
  input          io_ubuffer_forwardMask_13,
  input          io_ubuffer_forwardMask_14,
  input          io_ubuffer_forwardMask_15,
  input  [7:0]   io_ubuffer_forwardData_0,
  input  [7:0]   io_ubuffer_forwardData_1,
  input  [7:0]   io_ubuffer_forwardData_2,
  input  [7:0]   io_ubuffer_forwardData_3,
  input  [7:0]   io_ubuffer_forwardData_4,
  input  [7:0]   io_ubuffer_forwardData_5,
  input  [7:0]   io_ubuffer_forwardData_6,
  input  [7:0]   io_ubuffer_forwardData_7,
  input  [7:0]   io_ubuffer_forwardData_8,
  input  [7:0]   io_ubuffer_forwardData_9,
  input  [7:0]   io_ubuffer_forwardData_10,
  input  [7:0]   io_ubuffer_forwardData_11,
  input  [7:0]   io_ubuffer_forwardData_12,
  input  [7:0]   io_ubuffer_forwardData_13,
  input  [7:0]   io_ubuffer_forwardData_14,
  input  [7:0]   io_ubuffer_forwardData_15,
  input          io_ubuffer_matchInvalid,
  output         io_lsq_ldin_valid,
  output         io_lsq_ldin_bits_uop_exceptionVec_3,
  output         io_lsq_ldin_bits_uop_exceptionVec_4,
  output         io_lsq_ldin_bits_uop_exceptionVec_5,
  output         io_lsq_ldin_bits_uop_exceptionVec_13,
  output         io_lsq_ldin_bits_uop_exceptionVec_21,
  output [3:0]   io_lsq_ldin_bits_uop_trigger,
  output         io_lsq_ldin_bits_uop_preDecodeInfo_isRVC,
  output         io_lsq_ldin_bits_uop_ftqPtr_flag,
  output [5:0]   io_lsq_ldin_bits_uop_ftqPtr_value,
  output [3:0]   io_lsq_ldin_bits_uop_ftqOffset,
  output [8:0]   io_lsq_ldin_bits_uop_fuOpType,
  output         io_lsq_ldin_bits_uop_rfWen,
  output         io_lsq_ldin_bits_uop_fpWen,
  output [7:0]   io_lsq_ldin_bits_uop_vpu_vstart,
  output [1:0]   io_lsq_ldin_bits_uop_vpu_veew,
  output [6:0]   io_lsq_ldin_bits_uop_uopIdx,
  output [7:0]   io_lsq_ldin_bits_uop_pdest,
  output         io_lsq_ldin_bits_uop_robIdx_flag,
  output [7:0]   io_lsq_ldin_bits_uop_robIdx_value,
  output         io_lsq_ldin_bits_uop_storeSetHit,
  output         io_lsq_ldin_bits_uop_waitForRobIdx_flag,
  output [7:0]   io_lsq_ldin_bits_uop_waitForRobIdx_value,
  output         io_lsq_ldin_bits_uop_loadWaitBit,
  output         io_lsq_ldin_bits_uop_loadWaitStrict,
  output         io_lsq_ldin_bits_uop_lqIdx_flag,
  output [6:0]   io_lsq_ldin_bits_uop_lqIdx_value,
  output         io_lsq_ldin_bits_uop_sqIdx_flag,
  output [5:0]   io_lsq_ldin_bits_uop_sqIdx_value,
  output [49:0]  io_lsq_ldin_bits_vaddr,
  output [63:0]  io_lsq_ldin_bits_fullva,
  output         io_lsq_ldin_bits_vaNeedExt,
  output         io_lsq_ldin_bits_isHyper,
  output [47:0]  io_lsq_ldin_bits_paddr,
  output [63:0]  io_lsq_ldin_bits_gpaddr,
  output         io_lsq_ldin_bits_isForVSnonLeafPTE,
  output [15:0]  io_lsq_ldin_bits_mask,
  output         io_lsq_ldin_bits_tlbMiss,
  output         io_lsq_ldin_bits_nc,
  output         io_lsq_ldin_bits_mmio,
  output         io_lsq_ldin_bits_memBackTypeMM,
  output         io_lsq_ldin_bits_isvec,
  output         io_lsq_ldin_bits_is128bit,
  output [7:0]   io_lsq_ldin_bits_elemIdx,
  output [2:0]   io_lsq_ldin_bits_alignedType,
  output [3:0]   io_lsq_ldin_bits_mbIndex,
  output [3:0]   io_lsq_ldin_bits_reg_offset,
  output [7:0]   io_lsq_ldin_bits_elemIdxInsideVd,
  output         io_lsq_ldin_bits_vecActive,
  output         io_lsq_ldin_bits_isLoadReplay,
  output         io_lsq_ldin_bits_handledByMSHR,
  output [6:0]   io_lsq_ldin_bits_schedIndex,
  output         io_lsq_ldin_bits_updateAddrValid,
  output [3:0]   io_lsq_ldin_bits_rep_info_mshr_id,
  output         io_lsq_ldin_bits_rep_info_full_fwd,
  output         io_lsq_ldin_bits_rep_info_data_inv_sq_idx_flag,
  output [5:0]   io_lsq_ldin_bits_rep_info_data_inv_sq_idx_value,
  output         io_lsq_ldin_bits_rep_info_addr_inv_sq_idx_flag,
  output [5:0]   io_lsq_ldin_bits_rep_info_addr_inv_sq_idx_value,
  output         io_lsq_ldin_bits_rep_info_last_beat,
  output         io_lsq_ldin_bits_rep_info_cause_0,
  output         io_lsq_ldin_bits_rep_info_cause_1,
  output         io_lsq_ldin_bits_rep_info_cause_2,
  output         io_lsq_ldin_bits_rep_info_cause_3,
  output         io_lsq_ldin_bits_rep_info_cause_4,
  output         io_lsq_ldin_bits_rep_info_cause_5,
  output         io_lsq_ldin_bits_rep_info_cause_6,
  output         io_lsq_ldin_bits_rep_info_cause_7,
  output         io_lsq_ldin_bits_rep_info_cause_8,
  output         io_lsq_ldin_bits_rep_info_cause_9,
  output         io_lsq_ldin_bits_rep_info_cause_10,
  output [3:0]   io_lsq_ldin_bits_rep_info_tlb_id,
  output         io_lsq_ldin_bits_rep_info_tlb_full,
  output         io_lsq_uncache_ready,
  input          io_lsq_uncache_valid,
  input          io_lsq_uncache_bits_uop_exceptionVec_3,
  input          io_lsq_uncache_bits_uop_exceptionVec_4,
  input          io_lsq_uncache_bits_uop_exceptionVec_5,
  input          io_lsq_uncache_bits_uop_exceptionVec_13,
  input          io_lsq_uncache_bits_uop_exceptionVec_19,
  input          io_lsq_uncache_bits_uop_exceptionVec_21,
  input  [3:0]   io_lsq_uncache_bits_uop_trigger,
  input          io_lsq_uncache_bits_uop_preDecodeInfo_isRVC,
  input          io_lsq_uncache_bits_uop_ftqPtr_flag,
  input  [5:0]   io_lsq_uncache_bits_uop_ftqPtr_value,
  input  [3:0]   io_lsq_uncache_bits_uop_ftqOffset,
  input  [8:0]   io_lsq_uncache_bits_uop_fuOpType,
  input          io_lsq_uncache_bits_uop_rfWen,
  input          io_lsq_uncache_bits_uop_fpWen,
  input          io_lsq_uncache_bits_uop_flushPipe,
  input  [7:0]   io_lsq_uncache_bits_uop_vpu_vstart,
  input  [1:0]   io_lsq_uncache_bits_uop_vpu_veew,
  input  [6:0]   io_lsq_uncache_bits_uop_uopIdx,
  input  [7:0]   io_lsq_uncache_bits_uop_pdest,
  input          io_lsq_uncache_bits_uop_robIdx_flag,
  input  [7:0]   io_lsq_uncache_bits_uop_robIdx_value,
  input          io_lsq_uncache_bits_uop_storeSetHit,
  input          io_lsq_uncache_bits_uop_waitForRobIdx_flag,
  input  [7:0]   io_lsq_uncache_bits_uop_waitForRobIdx_value,
  input          io_lsq_uncache_bits_uop_loadWaitBit,
  input          io_lsq_uncache_bits_uop_loadWaitStrict,
  input          io_lsq_uncache_bits_uop_lqIdx_flag,
  input  [6:0]   io_lsq_uncache_bits_uop_lqIdx_value,
  input          io_lsq_uncache_bits_uop_sqIdx_flag,
  input  [5:0]   io_lsq_uncache_bits_uop_sqIdx_value,
  input          io_lsq_uncache_bits_uop_replayInst,
  input  [63:0]  io_lsq_ld_raw_data_lqData,
  input  [8:0]   io_lsq_ld_raw_data_uop_fuOpType,
  input          io_lsq_ld_raw_data_uop_fpWen,
  input  [2:0]   io_lsq_ld_raw_data_addrOffset,
  output         io_lsq_nc_ldin_ready,
  input          io_lsq_nc_ldin_valid,
  input          io_lsq_nc_ldin_bits_uop_exceptionVec_4,
  input          io_lsq_nc_ldin_bits_uop_exceptionVec_19,
  input          io_lsq_nc_ldin_bits_uop_preDecodeInfo_isRVC,
  input          io_lsq_nc_ldin_bits_uop_ftqPtr_flag,
  input  [5:0]   io_lsq_nc_ldin_bits_uop_ftqPtr_value,
  input  [3:0]   io_lsq_nc_ldin_bits_uop_ftqOffset,
  input  [8:0]   io_lsq_nc_ldin_bits_uop_fuOpType,
  input          io_lsq_nc_ldin_bits_uop_rfWen,
  input          io_lsq_nc_ldin_bits_uop_fpWen,
  input  [7:0]   io_lsq_nc_ldin_bits_uop_vpu_vstart,
  input  [1:0]   io_lsq_nc_ldin_bits_uop_vpu_veew,
  input  [6:0]   io_lsq_nc_ldin_bits_uop_uopIdx,
  input  [7:0]   io_lsq_nc_ldin_bits_uop_pdest,
  input          io_lsq_nc_ldin_bits_uop_robIdx_flag,
  input  [7:0]   io_lsq_nc_ldin_bits_uop_robIdx_value,
  input          io_lsq_nc_ldin_bits_uop_storeSetHit,
  input          io_lsq_nc_ldin_bits_uop_waitForRobIdx_flag,
  input  [7:0]   io_lsq_nc_ldin_bits_uop_waitForRobIdx_value,
  input          io_lsq_nc_ldin_bits_uop_loadWaitBit,
  input          io_lsq_nc_ldin_bits_uop_loadWaitStrict,
  input          io_lsq_nc_ldin_bits_uop_lqIdx_flag,
  input  [6:0]   io_lsq_nc_ldin_bits_uop_lqIdx_value,
  input          io_lsq_nc_ldin_bits_uop_sqIdx_flag,
  input  [5:0]   io_lsq_nc_ldin_bits_uop_sqIdx_value,
  input  [49:0]  io_lsq_nc_ldin_bits_vaddr,
  input  [47:0]  io_lsq_nc_ldin_bits_paddr,
  input  [128:0] io_lsq_nc_ldin_bits_data,
  input          io_lsq_nc_ldin_bits_isvec,
  input          io_lsq_nc_ldin_bits_is128bit,
  input          io_lsq_nc_ldin_bits_vecActive,
  input  [6:0]   io_lsq_nc_ldin_bits_schedIndex,
  output [49:0]  io_lsq_forward_vaddr,
  output [47:0]  io_lsq_forward_paddr,
  output [15:0]  io_lsq_forward_mask,
  output         io_lsq_forward_uop_waitForRobIdx_flag,
  output [7:0]   io_lsq_forward_uop_waitForRobIdx_value,
  output         io_lsq_forward_uop_loadWaitBit,
  output         io_lsq_forward_uop_loadWaitStrict,
  output         io_lsq_forward_uop_sqIdx_flag,
  output [5:0]   io_lsq_forward_uop_sqIdx_value,
  output         io_lsq_forward_valid,
  input          io_lsq_forward_forwardMask_0,
  input          io_lsq_forward_forwardMask_1,
  input          io_lsq_forward_forwardMask_2,
  input          io_lsq_forward_forwardMask_3,
  input          io_lsq_forward_forwardMask_4,
  input          io_lsq_forward_forwardMask_5,
  input          io_lsq_forward_forwardMask_6,
  input          io_lsq_forward_forwardMask_7,
  input          io_lsq_forward_forwardMask_8,
  input          io_lsq_forward_forwardMask_9,
  input          io_lsq_forward_forwardMask_10,
  input          io_lsq_forward_forwardMask_11,
  input          io_lsq_forward_forwardMask_12,
  input          io_lsq_forward_forwardMask_13,
  input          io_lsq_forward_forwardMask_14,
  input          io_lsq_forward_forwardMask_15,
  input  [7:0]   io_lsq_forward_forwardData_0,
  input  [7:0]   io_lsq_forward_forwardData_1,
  input  [7:0]   io_lsq_forward_forwardData_2,
  input  [7:0]   io_lsq_forward_forwardData_3,
  input  [7:0]   io_lsq_forward_forwardData_4,
  input  [7:0]   io_lsq_forward_forwardData_5,
  input  [7:0]   io_lsq_forward_forwardData_6,
  input  [7:0]   io_lsq_forward_forwardData_7,
  input  [7:0]   io_lsq_forward_forwardData_8,
  input  [7:0]   io_lsq_forward_forwardData_9,
  input  [7:0]   io_lsq_forward_forwardData_10,
  input  [7:0]   io_lsq_forward_forwardData_11,
  input  [7:0]   io_lsq_forward_forwardData_12,
  input  [7:0]   io_lsq_forward_forwardData_13,
  input  [7:0]   io_lsq_forward_forwardData_14,
  input  [7:0]   io_lsq_forward_forwardData_15,
  output         io_lsq_forward_sqIdx_flag,
  input          io_lsq_forward_dataInvalid,
  input          io_lsq_forward_matchInvalid,
  input          io_lsq_forward_addrInvalid,
  output [55:0]  io_lsq_forward_sqIdxMask,
  input          io_lsq_forward_dataInvalidSqIdx_flag,
  input  [5:0]   io_lsq_forward_dataInvalidSqIdx_value,
  input          io_lsq_forward_addrInvalidSqIdx_flag,
  input  [5:0]   io_lsq_forward_addrInvalidSqIdx_value,
  input          io_lsq_stld_nuke_query_req_ready,
  output         io_lsq_stld_nuke_query_req_valid,
  output         io_lsq_stld_nuke_query_req_bits_uop_preDecodeInfo_isRVC,
  output         io_lsq_stld_nuke_query_req_bits_uop_ftqPtr_flag,
  output [5:0]   io_lsq_stld_nuke_query_req_bits_uop_ftqPtr_value,
  output [3:0]   io_lsq_stld_nuke_query_req_bits_uop_ftqOffset,
  output         io_lsq_stld_nuke_query_req_bits_uop_robIdx_flag,
  output [7:0]   io_lsq_stld_nuke_query_req_bits_uop_robIdx_value,
  output         io_lsq_stld_nuke_query_req_bits_uop_sqIdx_flag,
  output [5:0]   io_lsq_stld_nuke_query_req_bits_uop_sqIdx_value,
  output [15:0]  io_lsq_stld_nuke_query_req_bits_mask,
  output [47:0]  io_lsq_stld_nuke_query_req_bits_paddr,
  output         io_lsq_stld_nuke_query_req_bits_data_valid,
  output         io_lsq_stld_nuke_query_revoke,
  input          io_lsq_ldld_nuke_query_req_ready,
  output         io_lsq_ldld_nuke_query_req_valid,
  output         io_lsq_ldld_nuke_query_req_bits_uop_robIdx_flag,
  output [7:0]   io_lsq_ldld_nuke_query_req_bits_uop_robIdx_value,
  output         io_lsq_ldld_nuke_query_req_bits_uop_lqIdx_flag,
  output [6:0]   io_lsq_ldld_nuke_query_req_bits_uop_lqIdx_value,
  output [47:0]  io_lsq_ldld_nuke_query_req_bits_paddr,
  output         io_lsq_ldld_nuke_query_req_bits_data_valid,
  output         io_lsq_ldld_nuke_query_req_bits_is_nc,
  input          io_lsq_ldld_nuke_query_resp_valid,
  input          io_lsq_ldld_nuke_query_resp_bits_rep_frm_fetch,
  output         io_lsq_ldld_nuke_query_revoke,
  input          io_tl_d_channel_valid,
  input  [255:0] io_tl_d_channel_data,
  input  [3:0]   io_tl_d_channel_mshrid,
  input          io_tl_d_channel_last,
  input          io_tl_d_channel_corrupt,
  output         io_forward_mshr_valid,
  output [3:0]   io_forward_mshr_mshrid,
  output [47:0]  io_forward_mshr_paddr,
  input          io_forward_mshr_forward_mshr,
  input  [7:0]   io_forward_mshr_forwardData_0,
  input  [7:0]   io_forward_mshr_forwardData_1,
  input  [7:0]   io_forward_mshr_forwardData_2,
  input  [7:0]   io_forward_mshr_forwardData_3,
  input  [7:0]   io_forward_mshr_forwardData_4,
  input  [7:0]   io_forward_mshr_forwardData_5,
  input  [7:0]   io_forward_mshr_forwardData_6,
  input  [7:0]   io_forward_mshr_forwardData_7,
  input  [7:0]   io_forward_mshr_forwardData_8,
  input  [7:0]   io_forward_mshr_forwardData_9,
  input  [7:0]   io_forward_mshr_forwardData_10,
  input  [7:0]   io_forward_mshr_forwardData_11,
  input  [7:0]   io_forward_mshr_forwardData_12,
  input  [7:0]   io_forward_mshr_forwardData_13,
  input  [7:0]   io_forward_mshr_forwardData_14,
  input  [7:0]   io_forward_mshr_forwardData_15,
  input          io_forward_mshr_forward_result_valid,
  input          io_forward_mshr_corrupt,
  input  [3:0]   io_tlb_hint_id,
  input          io_tlb_hint_full,
  input  [1:0]   io_fromCsrTrigger_tdataVec_0_matchType,
  input          io_fromCsrTrigger_tdataVec_0_select,
  input          io_fromCsrTrigger_tdataVec_0_timing,
  input  [3:0]   io_fromCsrTrigger_tdataVec_0_action,
  input          io_fromCsrTrigger_tdataVec_0_chain,
  input          io_fromCsrTrigger_tdataVec_0_load,
  input  [63:0]  io_fromCsrTrigger_tdataVec_0_tdata2,
  input  [1:0]   io_fromCsrTrigger_tdataVec_1_matchType,
  input          io_fromCsrTrigger_tdataVec_1_select,
  input          io_fromCsrTrigger_tdataVec_1_timing,
  input  [3:0]   io_fromCsrTrigger_tdataVec_1_action,
  input          io_fromCsrTrigger_tdataVec_1_chain,
  input          io_fromCsrTrigger_tdataVec_1_load,
  input  [63:0]  io_fromCsrTrigger_tdataVec_1_tdata2,
  input  [1:0]   io_fromCsrTrigger_tdataVec_2_matchType,
  input          io_fromCsrTrigger_tdataVec_2_select,
  input          io_fromCsrTrigger_tdataVec_2_timing,
  input  [3:0]   io_fromCsrTrigger_tdataVec_2_action,
  input          io_fromCsrTrigger_tdataVec_2_chain,
  input          io_fromCsrTrigger_tdataVec_2_load,
  input  [63:0]  io_fromCsrTrigger_tdataVec_2_tdata2,
  input  [1:0]   io_fromCsrTrigger_tdataVec_3_matchType,
  input          io_fromCsrTrigger_tdataVec_3_select,
  input          io_fromCsrTrigger_tdataVec_3_timing,
  input  [3:0]   io_fromCsrTrigger_tdataVec_3_action,
  input          io_fromCsrTrigger_tdataVec_3_chain,
  input          io_fromCsrTrigger_tdataVec_3_load,
  input  [63:0]  io_fromCsrTrigger_tdataVec_3_tdata2,
  input          io_fromCsrTrigger_tEnableVec_0,
  input          io_fromCsrTrigger_tEnableVec_1,
  input          io_fromCsrTrigger_tEnableVec_2,
  input          io_fromCsrTrigger_tEnableVec_3,
  input          io_fromCsrTrigger_debugMode,
  input          io_fromCsrTrigger_triggerCanRaiseBpExp,
  output         io_prefetch_train_valid,
  output         io_prefetch_train_bits_uop_robIdx_flag,
  output [7:0]   io_prefetch_train_bits_uop_robIdx_value,
  output [49:0]  io_prefetch_train_bits_vaddr,
  output [47:0]  io_prefetch_train_bits_paddr,
  output         io_prefetch_train_bits_miss,
  output         io_prefetch_train_bits_isFirstIssue,
  output         io_prefetch_train_l1_valid,
  output         io_prefetch_train_l1_bits_uop_robIdx_flag,
  output [7:0]   io_prefetch_train_l1_bits_uop_robIdx_value,
  output [49:0]  io_prefetch_train_l1_bits_vaddr,
  output         io_prefetch_train_l1_bits_miss,
  output         io_prefetch_train_l1_bits_isFirstIssue,
  output [2:0]   io_prefetch_train_l1_bits_meta_prefetch,
  output         io_s1_prefetch_spec,
  output         io_s2_prefetch_spec,
  input          io_prefetch_req_valid,
  input  [47:0]  io_prefetch_req_bits_paddr,
  input  [1:0]   io_prefetch_req_bits_alias,
  input          io_prefetch_req_bits_confidence,
  input          io_prefetch_req_bits_is_store,
  input  [2:0]   io_prefetch_req_bits_pf_source_value,
  output         io_canAcceptLowConfPrefetch,
  output         io_canAcceptHighConfPrefetch,
  output         io_ifetchPrefetch_valid,
  output [49:0]  io_ifetchPrefetch_bits_vaddr,
  output         io_wakeup_valid,
  output         io_wakeup_bits_rfWen,
  output         io_wakeup_bits_fpWen,
  output [7:0]   io_wakeup_bits_pdest,
  output         io_ldCancel_ld2Cancel,
  input          io_stld_nuke_query_0_valid,
  input          io_stld_nuke_query_0_bits_robIdx_flag,
  input  [7:0]   io_stld_nuke_query_0_bits_robIdx_value,
  input  [47:0]  io_stld_nuke_query_0_bits_paddr,
  input  [15:0]  io_stld_nuke_query_0_bits_mask,
  input          io_stld_nuke_query_0_bits_matchLine,
  input          io_stld_nuke_query_1_valid,
  input          io_stld_nuke_query_1_bits_robIdx_flag,
  input  [7:0]   io_stld_nuke_query_1_bits_robIdx_value,
  input  [47:0]  io_stld_nuke_query_1_bits_paddr,
  input  [15:0]  io_stld_nuke_query_1_bits_mask,
  input          io_stld_nuke_query_1_bits_matchLine,
  output         io_replay_ready,
  input          io_replay_valid,
  input          io_replay_bits_uop_preDecodeInfo_isRVC,
  input          io_replay_bits_uop_ftqPtr_flag,
  input  [5:0]   io_replay_bits_uop_ftqPtr_value,
  input  [3:0]   io_replay_bits_uop_ftqOffset,
  input  [8:0]   io_replay_bits_uop_fuOpType,
  input          io_replay_bits_uop_rfWen,
  input          io_replay_bits_uop_fpWen,
  input  [7:0]   io_replay_bits_uop_vpu_vstart,
  input  [1:0]   io_replay_bits_uop_vpu_veew,
  input  [6:0]   io_replay_bits_uop_uopIdx,
  input  [7:0]   io_replay_bits_uop_pdest,
  input          io_replay_bits_uop_robIdx_flag,
  input  [7:0]   io_replay_bits_uop_robIdx_value,
  input          io_replay_bits_uop_storeSetHit,
  input          io_replay_bits_uop_waitForRobIdx_flag,
  input  [7:0]   io_replay_bits_uop_waitForRobIdx_value,
  input          io_replay_bits_uop_loadWaitBit,
  input          io_replay_bits_uop_lqIdx_flag,
  input  [6:0]   io_replay_bits_uop_lqIdx_value,
  input          io_replay_bits_uop_sqIdx_flag,
  input  [5:0]   io_replay_bits_uop_sqIdx_value,
  input  [49:0]  io_replay_bits_vaddr,
  input  [15:0]  io_replay_bits_mask,
  input          io_replay_bits_isvec,
  input          io_replay_bits_is128bit,
  input  [7:0]   io_replay_bits_elemIdx,
  input  [2:0]   io_replay_bits_alignedType,
  input  [3:0]   io_replay_bits_mbIndex,
  input  [3:0]   io_replay_bits_reg_offset,
  input  [7:0]   io_replay_bits_elemIdxInsideVd,
  input          io_replay_bits_vecActive,
  input  [3:0]   io_replay_bits_mshrid,
  input          io_replay_bits_forward_tlDchannel,
  input  [6:0]   io_replay_bits_schedIndex,
  output         io_s2_ptr_chasing,
  input          io_fast_rep_in_valid,
  input          io_fast_rep_in_bits_uop_exceptionVec_4,
  input          io_fast_rep_in_bits_uop_exceptionVec_19,
  input          io_fast_rep_in_bits_uop_preDecodeInfo_isRVC,
  input          io_fast_rep_in_bits_uop_ftqPtr_flag,
  input  [5:0]   io_fast_rep_in_bits_uop_ftqPtr_value,
  input  [3:0]   io_fast_rep_in_bits_uop_ftqOffset,
  input  [8:0]   io_fast_rep_in_bits_uop_fuOpType,
  input          io_fast_rep_in_bits_uop_rfWen,
  input          io_fast_rep_in_bits_uop_fpWen,
  input  [7:0]   io_fast_rep_in_bits_uop_vpu_vstart,
  input  [1:0]   io_fast_rep_in_bits_uop_vpu_veew,
  input  [6:0]   io_fast_rep_in_bits_uop_uopIdx,
  input  [7:0]   io_fast_rep_in_bits_uop_pdest,
  input          io_fast_rep_in_bits_uop_robIdx_flag,
  input  [7:0]   io_fast_rep_in_bits_uop_robIdx_value,
  input          io_fast_rep_in_bits_uop_storeSetHit,
  input          io_fast_rep_in_bits_uop_waitForRobIdx_flag,
  input  [7:0]   io_fast_rep_in_bits_uop_waitForRobIdx_value,
  input          io_fast_rep_in_bits_uop_loadWaitBit,
  input          io_fast_rep_in_bits_uop_loadWaitStrict,
  input          io_fast_rep_in_bits_uop_lqIdx_flag,
  input  [6:0]   io_fast_rep_in_bits_uop_lqIdx_value,
  input          io_fast_rep_in_bits_uop_sqIdx_flag,
  input  [5:0]   io_fast_rep_in_bits_uop_sqIdx_value,
  input  [49:0]  io_fast_rep_in_bits_vaddr,
  input  [47:0]  io_fast_rep_in_bits_paddr,
  input  [15:0]  io_fast_rep_in_bits_mask,
  input  [128:0] io_fast_rep_in_bits_data,
  input          io_fast_rep_in_bits_nc,
  input          io_fast_rep_in_bits_isFrmMisAlignBuf,
  input          io_fast_rep_in_bits_isvec,
  input          io_fast_rep_in_bits_is128bit,
  input  [7:0]   io_fast_rep_in_bits_elemIdx,
  input  [2:0]   io_fast_rep_in_bits_alignedType,
  input  [3:0]   io_fast_rep_in_bits_mbIndex,
  input  [3:0]   io_fast_rep_in_bits_reg_offset,
  input  [7:0]   io_fast_rep_in_bits_elemIdxInsideVd,
  input          io_fast_rep_in_bits_vecActive,
  input          io_fast_rep_in_bits_isLoadReplay,
  input          io_fast_rep_in_bits_lateKill,
  input  [6:0]   io_fast_rep_in_bits_schedIndex,
  input  [3:0]   io_fast_rep_in_bits_rep_info_mshr_id,
  output         io_fast_rep_out_valid,
  output         io_fast_rep_out_bits_uop_exceptionVec_4,
  output         io_fast_rep_out_bits_uop_exceptionVec_19,
  output         io_fast_rep_out_bits_uop_preDecodeInfo_isRVC,
  output         io_fast_rep_out_bits_uop_ftqPtr_flag,
  output [5:0]   io_fast_rep_out_bits_uop_ftqPtr_value,
  output [3:0]   io_fast_rep_out_bits_uop_ftqOffset,
  output [8:0]   io_fast_rep_out_bits_uop_fuOpType,
  output         io_fast_rep_out_bits_uop_rfWen,
  output         io_fast_rep_out_bits_uop_fpWen,
  output [7:0]   io_fast_rep_out_bits_uop_vpu_vstart,
  output [1:0]   io_fast_rep_out_bits_uop_vpu_veew,
  output [6:0]   io_fast_rep_out_bits_uop_uopIdx,
  output [7:0]   io_fast_rep_out_bits_uop_pdest,
  output         io_fast_rep_out_bits_uop_robIdx_flag,
  output [7:0]   io_fast_rep_out_bits_uop_robIdx_value,
  output         io_fast_rep_out_bits_uop_storeSetHit,
  output         io_fast_rep_out_bits_uop_waitForRobIdx_flag,
  output [7:0]   io_fast_rep_out_bits_uop_waitForRobIdx_value,
  output         io_fast_rep_out_bits_uop_loadWaitBit,
  output         io_fast_rep_out_bits_uop_loadWaitStrict,
  output         io_fast_rep_out_bits_uop_lqIdx_flag,
  output [6:0]   io_fast_rep_out_bits_uop_lqIdx_value,
  output         io_fast_rep_out_bits_uop_sqIdx_flag,
  output [5:0]   io_fast_rep_out_bits_uop_sqIdx_value,
  output [49:0]  io_fast_rep_out_bits_vaddr,
  output [47:0]  io_fast_rep_out_bits_paddr,
  output [15:0]  io_fast_rep_out_bits_mask,
  output [128:0] io_fast_rep_out_bits_data,
  output         io_fast_rep_out_bits_nc,
  output         io_fast_rep_out_bits_isFrmMisAlignBuf,
  output         io_fast_rep_out_bits_isvec,
  output         io_fast_rep_out_bits_is128bit,
  output [7:0]   io_fast_rep_out_bits_elemIdx,
  output [2:0]   io_fast_rep_out_bits_alignedType,
  output [3:0]   io_fast_rep_out_bits_mbIndex,
  output [3:0]   io_fast_rep_out_bits_reg_offset,
  output [7:0]   io_fast_rep_out_bits_elemIdxInsideVd,
  output         io_fast_rep_out_bits_vecActive,
  output         io_fast_rep_out_bits_isLoadReplay,
  output         io_fast_rep_out_bits_lateKill,
  output [6:0]   io_fast_rep_out_bits_schedIndex,
  output [3:0]   io_fast_rep_out_bits_rep_info_mshr_id,
  input          io_misalign_buf_ready,
  output         io_misalign_buf_valid,
  output         io_misalign_buf_bits_uop_exceptionVec_19,
  output [3:0]   io_misalign_buf_bits_uop_trigger,
  output         io_misalign_buf_bits_uop_preDecodeInfo_isRVC,
  output         io_misalign_buf_bits_uop_ftqPtr_flag,
  output [5:0]   io_misalign_buf_bits_uop_ftqPtr_value,
  output [3:0]   io_misalign_buf_bits_uop_ftqOffset,
  output [8:0]   io_misalign_buf_bits_uop_fuOpType,
  output         io_misalign_buf_bits_uop_rfWen,
  output         io_misalign_buf_bits_uop_fpWen,
  output [7:0]   io_misalign_buf_bits_uop_vpu_vstart,
  output [1:0]   io_misalign_buf_bits_uop_vpu_veew,
  output [6:0]   io_misalign_buf_bits_uop_uopIdx,
  output [7:0]   io_misalign_buf_bits_uop_pdest,
  output         io_misalign_buf_bits_uop_robIdx_flag,
  output [7:0]   io_misalign_buf_bits_uop_robIdx_value,
  output         io_misalign_buf_bits_uop_storeSetHit,
  output         io_misalign_buf_bits_uop_waitForRobIdx_flag,
  output [7:0]   io_misalign_buf_bits_uop_waitForRobIdx_value,
  output         io_misalign_buf_bits_uop_loadWaitBit,
  output         io_misalign_buf_bits_uop_loadWaitStrict,
  output         io_misalign_buf_bits_uop_lqIdx_flag,
  output [6:0]   io_misalign_buf_bits_uop_lqIdx_value,
  output         io_misalign_buf_bits_uop_sqIdx_flag,
  output [5:0]   io_misalign_buf_bits_uop_sqIdx_value,
  output [49:0]  io_misalign_buf_bits_vaddr,
  output [63:0]  io_misalign_buf_bits_fullva,
  output         io_misalign_buf_bits_vaNeedExt,
  output [63:0]  io_misalign_buf_bits_gpaddr,
  output [15:0]  io_misalign_buf_bits_mask,
  output         io_misalign_buf_bits_isvec,
  output [7:0]   io_misalign_buf_bits_elemIdx,
  output [2:0]   io_misalign_buf_bits_alignedType,
  output [3:0]   io_misalign_buf_bits_mbIndex,
  output [7:0]   io_misalign_buf_bits_elemIdxInsideVd,
  output [15:0]  io_misalign_buf_bits_vecTriggerMask,
  output         io_rollback_valid,
  output         io_rollback_bits_isRVC,
  output         io_rollback_bits_robIdx_flag,
  output [7:0]   io_rollback_bits_robIdx_value,
  output         io_rollback_bits_ftqIdx_flag,
  output [5:0]   io_rollback_bits_ftqIdx_value,
  output [3:0]   io_rollback_bits_ftqOffset,
  output         io_rollback_bits_level,
  output [5:0]   io_perf_0_value,
  output [5:0]   io_perf_1_value,
  output [5:0]   io_perf_2_value,
  output [5:0]   io_perf_3_value,
  output [5:0]   io_perf_4_value,
  output [5:0]   io_perf_5_value,
  output [5:0]   io_perf_6_value
);

  reg              s3_fast_rep_REG;
  wire             s3_ready;
  wire             s2_fwd_mask_15;
  wire             s2_fwd_mask_14;
  wire             s2_fwd_mask_13;
  wire             s2_fwd_mask_12;
  wire             s2_fwd_mask_11;
  wire             s2_fwd_mask_10;
  wire             s2_fwd_mask_9;
  wire             s2_fwd_mask_8;
  wire             s2_fwd_mask_7;
  wire             s2_fwd_mask_6;
  wire             s2_fwd_mask_5;
  wire             s2_fwd_mask_4;
  wire             s2_fwd_mask_3;
  wire             s2_fwd_mask_2;
  wire             s2_fwd_mask_1;
  wire             s2_fwd_mask_0;
  wire             s2_full_fwd;
  reg  [7:0]       s2_in_r_uop_robIdx_value;
  reg              s2_in_r_uop_robIdx_flag;
  wire             s2_ready;
  wire             s2_kill;
  wire             s1_trigger_breakpoint;
  wire             s1_kill;
  wire             s1_exception_new_vec_4;
  wire             s1_exception_new_vec_5;
  wire             s1_exception_new_vec_21;
  wire             s1_exception_new_vec_13;
  wire             s1_ready;
  wire             s0_sel_src_isnc;
  wire             s0_sel_src_prf_i;
  wire             s0_sel_src_prf_wr;
  wire             s0_sel_src_prf_rd;
  wire             s0_sel_src_prf;
  wire [8:0]       s0_sel_src_uop_fuOpType;
  wire             s0_valid;
  wire             s0_src_select_vec_4;
  wire             s0_src_select_vec_3;
  wire [3:0]       _loadTrigger_tdataVec_io_toLoadStore_triggerAction;
  wire [49:0]      _loadTrigger_tdataVec_io_toLoadStore_triggerVaddr;
  wire [15:0]      _loadTrigger_tdataVec_io_toLoadStore_triggerMask;
  wire             s0_fire = s0_valid & s1_ready;
  wire             s0_mmio_fire = s0_src_select_vec_3 & s1_ready;
  wire             s0_nc_fire = s0_src_select_vec_4 & s1_ready;
  wire             s0_misalign_wakeup_fire =
    io_misalign_ldin_valid & s1_ready & io_misalign_ldin_bits_misalignNeedWakeUp;
  wire             s0_rep_stall =
    io_ldin_valid
    & (io_replay_bits_uop_lqIdx_flag ^ io_ldin_bits_uop_lqIdx_flag
       ^ io_replay_bits_uop_lqIdx_value > io_ldin_bits_uop_lqIdx_value) | io_vecldin_valid
    & (io_replay_bits_uop_lqIdx_flag ^ io_vecldin_bits_uop_lqIdx_flag
       ^ io_replay_bits_uop_lqIdx_value > io_vecldin_bits_uop_lqIdx_value);
  wire             s0_src_selector_1 =
    io_replay_valid & io_replay_bits_forward_tlDchannel;
  wire             s0_src_selector_5 =
    io_replay_valid & ~io_replay_bits_forward_tlDchannel & ~s0_rep_stall;
  wire             s0_src_selector_6 =
    io_prefetch_req_valid & io_prefetch_req_bits_confidence;
  wire             s0_src_valid_vec_10 =
    io_prefetch_req_valid & ~io_prefetch_req_bits_confidence;
  wire             _s0_tlb_valid_T = io_misalign_ldin_valid | s0_src_selector_1;
  wire             _s0_src_ready_vec_4_T_2 =
    _s0_tlb_valid_T | io_fast_rep_in_valid | io_lsq_uncache_valid;
  wire             _s0_src_ready_vec_6_T_4 =
    _s0_tlb_valid_T | io_fast_rep_in_valid | io_lsq_uncache_valid | io_lsq_nc_ldin_valid
    | s0_src_selector_5;
  wire             _s0_src_ready_vec_7_T_5 =
    _s0_tlb_valid_T | io_fast_rep_in_valid | io_lsq_uncache_valid | io_lsq_nc_ldin_valid
    | s0_src_selector_5 | s0_src_selector_6;
  wire             _s0_src_ready_vec_8_T_6 =
    _s0_tlb_valid_T | io_fast_rep_in_valid | io_lsq_uncache_valid | io_lsq_nc_ldin_valid
    | s0_src_selector_5 | s0_src_selector_6 | io_vecldin_valid;
  wire             _s0_src_ready_vec_10_T_7 =
    _s0_tlb_valid_T | io_fast_rep_in_valid | io_lsq_uncache_valid | io_lsq_nc_ldin_valid
    | s0_src_selector_5 | s0_src_selector_6 | io_vecldin_valid | io_ldin_valid;
  wire             s0_src_select_vec_1 = s0_src_selector_1 & ~io_misalign_ldin_valid;
  wire             s0_src_select_vec_2 = io_fast_rep_in_valid & ~_s0_tlb_valid_T;
  assign s0_src_select_vec_3 =
    io_lsq_uncache_valid & ~(_s0_tlb_valid_T | io_fast_rep_in_valid);
  assign s0_src_select_vec_4 = io_lsq_nc_ldin_valid & ~_s0_src_ready_vec_4_T_2;
  wire             s0_src_select_vec_7 = io_vecldin_valid & ~_s0_src_ready_vec_7_T_5;
  wire             s0_src_select_vec_8 = io_ldin_valid & ~_s0_src_ready_vec_8_T_6;
  wire             s0_out_isHWPrefetch =
    s0_src_selector_6 & ~_s0_src_ready_vec_6_T_4 | s0_src_valid_vec_10
    & ~_s0_src_ready_vec_10_T_7;
  wire             s0_out_tlbNoQuery =
    s0_out_isHWPrefetch | s0_sel_src_prf_i | s0_src_select_vec_2 | s0_src_select_vec_3
    | s0_src_select_vec_4;
  assign s0_valid =
    s0_src_select_vec_4
    | (_s0_tlb_valid_T | io_fast_rep_in_valid | s0_src_selector_5 | s0_src_selector_6
       | io_vecldin_valid | io_ldin_valid | s0_src_valid_vec_10) & ~s0_src_select_vec_3
    & io_dcache_req_ready;
  wire             io_tlb_req_bits_checkfullva_0 =
    s0_src_select_vec_7 | s0_src_select_vec_8;
  wire             s0_src_format_5_prf_rd = io_replay_bits_uop_fuOpType == 9'h9;
  wire             s0_src_format_5_prf_wr = io_replay_bits_uop_fuOpType == 9'hA;
  wire             _s0_sel_src_T = io_misalign_ldin_valid | s0_src_selector_1;
  wire             _s0_sel_src_T_6 =
    _s0_sel_src_T | io_fast_rep_in_valid | io_lsq_uncache_valid | io_lsq_nc_ldin_valid;
  wire             _s0_sel_src_T_10 =
    s0_src_selector_5 | s0_src_selector_6 | io_vecldin_valid;
  assign s0_sel_src_uop_fuOpType =
    _s0_sel_src_T_6
      ? (_s0_sel_src_T
           ? (io_misalign_ldin_valid
                ? io_misalign_ldin_bits_uop_fuOpType
                : io_replay_bits_uop_fuOpType)
           : io_fast_rep_in_valid
               ? io_fast_rep_in_bits_uop_fuOpType
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_fuOpType
                   : io_lsq_nc_ldin_bits_uop_fuOpType)
      : _s0_sel_src_T_10
          ? (s0_src_selector_5
               ? io_replay_bits_uop_fuOpType
               : s0_src_selector_6 ? 9'h0 : io_vecldin_bits_uop_fuOpType)
          : io_ldin_valid ? io_ldin_bits_uop_fuOpType : 9'h0;
  wire             s0_sel_src_uop_robIdx_flag =
    _s0_sel_src_T_6
      ? (_s0_sel_src_T
           ? (io_misalign_ldin_valid
                ? io_misalign_ldin_bits_uop_robIdx_flag
                : io_replay_bits_uop_robIdx_flag)
           : io_fast_rep_in_valid
               ? io_fast_rep_in_bits_uop_robIdx_flag
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_robIdx_flag
                   : io_lsq_nc_ldin_bits_uop_robIdx_flag)
      : _s0_sel_src_T_10
          ? (s0_src_selector_5
               ? io_replay_bits_uop_robIdx_flag
               : ~s0_src_selector_6 & io_vecldin_bits_uop_robIdx_flag)
          : io_ldin_valid & io_ldin_bits_uop_robIdx_flag;
  wire [7:0]       s0_sel_src_uop_robIdx_value =
    _s0_sel_src_T_6
      ? (_s0_sel_src_T
           ? (io_misalign_ldin_valid
                ? io_misalign_ldin_bits_uop_robIdx_value
                : io_replay_bits_uop_robIdx_value)
           : io_fast_rep_in_valid
               ? io_fast_rep_in_bits_uop_robIdx_value
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_robIdx_value
                   : io_lsq_nc_ldin_bits_uop_robIdx_value)
      : _s0_sel_src_T_10
          ? (s0_src_selector_5
               ? io_replay_bits_uop_robIdx_value
               : s0_src_selector_6 ? 8'h0 : io_vecldin_bits_uop_robIdx_value)
          : io_ldin_valid ? io_ldin_bits_uop_robIdx_value : 8'h0;
  wire             s0_sel_src_uop_lqIdx_flag =
    _s0_sel_src_T_6
      ? (_s0_sel_src_T
           ? (io_misalign_ldin_valid
                ? io_misalign_ldin_bits_uop_lqIdx_flag
                : io_replay_bits_uop_lqIdx_flag)
           : io_fast_rep_in_valid
               ? io_fast_rep_in_bits_uop_lqIdx_flag
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_lqIdx_flag
                   : io_lsq_nc_ldin_bits_uop_lqIdx_flag)
      : _s0_sel_src_T_10
          ? (s0_src_selector_5
               ? io_replay_bits_uop_lqIdx_flag
               : ~s0_src_selector_6 & io_vecldin_bits_uop_lqIdx_flag)
          : io_ldin_valid & io_ldin_bits_uop_lqIdx_flag;
  wire [6:0]       s0_sel_src_uop_lqIdx_value =
    _s0_sel_src_T_6
      ? (_s0_sel_src_T
           ? (io_misalign_ldin_valid
                ? io_misalign_ldin_bits_uop_lqIdx_value
                : io_replay_bits_uop_lqIdx_value)
           : io_fast_rep_in_valid
               ? io_fast_rep_in_bits_uop_lqIdx_value
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_lqIdx_value
                   : io_lsq_nc_ldin_bits_uop_lqIdx_value)
      : _s0_sel_src_T_10
          ? (s0_src_selector_5
               ? io_replay_bits_uop_lqIdx_value
               : s0_src_selector_6 ? 7'h0 : io_vecldin_bits_uop_lqIdx_value)
          : io_ldin_valid ? io_ldin_bits_uop_lqIdx_value : 7'h0;
  wire             _GEN = _s0_sel_src_T_6 | _s0_sel_src_T_10;
  assign s0_sel_src_prf =
    _s0_sel_src_T_6
      ? (_s0_sel_src_T
           ? ~io_misalign_ldin_valid & io_replay_bits_uop_fuOpType[3]
             & ~(|(io_replay_bits_uop_fuOpType[5:4]))
             & ~(|(io_replay_bits_uop_fuOpType[8:7])) & ~io_replay_bits_isvec
           : io_fast_rep_in_valid & io_fast_rep_in_bits_uop_fuOpType[3]
             & io_fast_rep_in_bits_uop_fuOpType[5:4] == 2'h0
             & io_fast_rep_in_bits_uop_fuOpType[8:7] == 2'h0 & ~io_fast_rep_in_bits_isvec)
      : _s0_sel_src_T_10
          ? (s0_src_selector_5
               ? io_replay_bits_uop_fuOpType[3] & ~(|(io_replay_bits_uop_fuOpType[5:4]))
                 & ~(|(io_replay_bits_uop_fuOpType[8:7])) & ~io_replay_bits_isvec
               : s0_src_selector_6)
          : ~io_ldin_valid | io_ldin_bits_uop_fuOpType[3]
            & io_ldin_bits_uop_fuOpType[5:4] == 2'h0
            & ~(|(io_ldin_bits_uop_fuOpType[8:7]));
  assign s0_sel_src_prf_rd =
    _s0_sel_src_T_6
      ? (_s0_sel_src_T
           ? ~io_misalign_ldin_valid & s0_src_format_5_prf_rd
           : io_fast_rep_in_valid & io_fast_rep_in_bits_uop_fuOpType == 9'h9)
      : _s0_sel_src_T_10
          ? (s0_src_selector_5
               ? s0_src_format_5_prf_rd
               : s0_src_selector_6 & ~io_prefetch_req_bits_is_store)
          : io_ldin_valid
              ? io_ldin_bits_uop_fuOpType == 9'h9
              : ~io_prefetch_req_bits_is_store;
  assign s0_sel_src_prf_wr =
    _s0_sel_src_T_6
      ? (_s0_sel_src_T
           ? ~io_misalign_ldin_valid & s0_src_format_5_prf_wr
           : io_fast_rep_in_valid & io_fast_rep_in_bits_uop_fuOpType == 9'hA)
      : _s0_sel_src_T_10
          ? (s0_src_selector_5
               ? s0_src_format_5_prf_wr
               : s0_src_selector_6 & io_prefetch_req_bits_is_store)
          : io_ldin_valid
              ? io_ldin_bits_uop_fuOpType == 9'hA
              : io_prefetch_req_bits_is_store;
  assign s0_sel_src_prf_i = ~_GEN & io_ldin_valid & io_ldin_bits_uop_fuOpType == 9'h8;
  wire             s0_sel_src_frm_mabuf =
    _s0_sel_src_T_6
    & (_s0_sel_src_T
         ? io_misalign_ldin_valid
         : io_fast_rep_in_valid & io_fast_rep_in_bits_isFrmMisAlignBuf);
  wire             s0_sel_src_isvec =
    _s0_sel_src_T_6
      ? (_s0_sel_src_T
           ? (io_misalign_ldin_valid ? io_misalign_ldin_bits_isvec : io_replay_bits_isvec)
           : io_fast_rep_in_valid
               ? io_fast_rep_in_bits_isvec
               : ~io_lsq_uncache_valid & io_lsq_nc_ldin_bits_isvec)
      : _s0_sel_src_T_10
        & (s0_src_selector_5 ? io_replay_bits_isvec : ~s0_src_selector_6);
  wire             s0_sel_src_vecActive =
    _s0_sel_src_T_6
      ? (_s0_sel_src_T
           ? io_misalign_ldin_valid | io_replay_bits_vecActive
           : io_fast_rep_in_valid
               ? io_fast_rep_in_bits_vecActive
               : io_lsq_uncache_valid | io_lsq_nc_ldin_bits_vecActive)
      : _s0_sel_src_T_10
          ? (s0_src_selector_5
               ? io_replay_bits_vecActive
               : ~s0_src_selector_6 & io_vecldin_bits_vecActive)
          : io_ldin_valid;
  wire [2:0]       s0_sel_src_alignedType =
    _s0_sel_src_T_6
      ? (_s0_sel_src_T
           ? (io_misalign_ldin_valid ? 3'h0 : io_replay_bits_alignedType)
           : io_fast_rep_in_valid ? io_fast_rep_in_bits_alignedType : 3'h0)
      : _s0_sel_src_T_10
          ? (s0_src_selector_5
               ? io_replay_bits_alignedType
               : s0_src_selector_6 ? 3'h0 : io_vecldin_bits_alignedType)
          : 3'h0;
  assign s0_sel_src_isnc =
    _s0_sel_src_T_6 & ~_s0_sel_src_T
    & (io_fast_rep_in_valid ? io_fast_rep_in_bits_nc : ~io_lsq_uncache_valid);
  wire             _s0_tlb_hlvx_T_9 = s0_src_selector_1 | s0_src_selector_5;
  wire [49:0]      _s0_tlb_vaddr_T_2 =
    io_misalign_ldin_valid
      ? io_misalign_ldin_bits_vaddr
      : _s0_tlb_hlvx_T_9
          ? io_replay_bits_vaddr
          : io_vecldin_valid
              ? io_vecldin_bits_vaddr[49:0]
              : 50'(io_ldin_bits_src_0[49:0]
                    + {{38{io_ldin_bits_uop_imm[11]}}, io_ldin_bits_uop_imm[11:0]});
  wire [49:0]      s0_dcache_vaddr =
    s0_src_select_vec_2
      ? io_fast_rep_in_bits_vaddr
      : s0_out_isHWPrefetch
          ? {36'h0, io_prefetch_req_bits_alias, io_prefetch_req_bits_paddr[11:0]}
          : s0_src_select_vec_4 ? io_lsq_nc_ldin_bits_vaddr : _s0_tlb_vaddr_T_2;
  wire [1:0]       s0_alignType =
    s0_sel_src_isvec ? s0_sel_src_alignedType[1:0] : s0_sel_src_uop_fuOpType[1:0];
  wire             _s0_check_vaddr_Up_low_T_8 = s0_alignType == 2'h1;
  wire             _s0_check_vaddr_Up_low_T_2 = s0_alignType == 2'h2;
  wire             s0_addr_aligned =
    s0_alignType == 2'h0 | _s0_check_vaddr_Up_low_T_8 & ~(s0_dcache_vaddr[0])
    | _s0_check_vaddr_Up_low_T_2 & s0_dcache_vaddr[1:0] == 2'h0 | (&s0_alignType)
    & s0_dcache_vaddr[2:0] == 3'h0;
  wire [4:0]       _s0_check_vaddr_Up_low_T_11 =
    5'({2'h0,
        {1'h0, {1'h0, _s0_check_vaddr_Up_low_T_8} | {2{_s0_check_vaddr_Up_low_T_2}}}
          | {3{&s0_alignType}}} + s0_dcache_vaddr[4:0]);
  wire             s0_misalignWith16Byte =
    _s0_check_vaddr_Up_low_T_11[4] == s0_dcache_vaddr[4] & ~s0_addr_aligned
    & ~s0_out_isHWPrefetch;
  wire             s0_is128bit =
    (_s0_sel_src_T_6
       ? (_s0_sel_src_T
            ? (io_misalign_ldin_valid
                 ? io_misalign_ldin_bits_is128bit
                 : io_replay_bits_is128bit)
            : io_fast_rep_in_valid
                ? io_fast_rep_in_bits_is128bit
                : ~io_lsq_uncache_valid & io_lsq_nc_ldin_bits_is128bit)
       : _s0_sel_src_T_10
         & (s0_src_selector_5
              ? io_replay_bits_is128bit
              : ~s0_src_selector_6 & io_vecldin_bits_alignedType[2]))
    | s0_misalignWith16Byte;
  wire [49:0]      s0_out_vaddr =
    s0_sel_src_isnc
      ? (_s0_sel_src_T_6
           ? (_s0_sel_src_T
                ? (io_misalign_ldin_valid ? io_misalign_ldin_bits_vaddr : 50'h0)
                : io_fast_rep_in_valid
                    ? io_fast_rep_in_bits_vaddr
                    : io_lsq_uncache_valid ? 50'h0 : io_lsq_nc_ldin_bits_vaddr)
           : 50'h0)
      : s0_dcache_vaddr;
  wire             _io_ifetchPrefetch_bits_vaddr_T =
    s0_src_select_vec_8 & s0_sel_src_prf_i;
  wire             io_misalign_ldin_ready_0 = s1_ready & io_dcache_req_ready;
  wire             _io_wakeup_valid_T_4 = s0_src_selector_1 | io_fast_rep_in_valid;
  wire             _s0_wakeup_uop_T_2 = s0_misalign_wakeup_fire | _io_wakeup_valid_T_4;
  wire             _s0_wakeup_uop_T_4 = s0_mmio_fire | s0_nc_fire;
  reg              io_ifetchPrefetch_valid_REG;
  reg  [49:0]      io_ifetchPrefetch_bits_vaddr_r;
  reg              s1_valid;
  wire             s1_fire = s1_valid & ~s1_kill & s2_ready;
  reg              s1_vecActive;
  reg              s1_nc_with_data;
  assign s1_ready = ~s1_valid | s1_kill | s2_ready;
  reg              s1_in_r_uop_exceptionVec_4;
  reg              s1_in_r_uop_exceptionVec_19;
  reg              s1_in_r_uop_preDecodeInfo_isRVC;
  reg              s1_in_r_uop_ftqPtr_flag;
  reg  [5:0]       s1_in_r_uop_ftqPtr_value;
  reg  [3:0]       s1_in_r_uop_ftqOffset;
  reg  [8:0]       s1_in_r_uop_fuOpType;
  reg              s1_in_r_uop_rfWen;
  reg              s1_in_r_uop_fpWen;
  reg  [7:0]       s1_in_r_uop_vpu_vstart;
  reg  [1:0]       s1_in_r_uop_vpu_veew;
  reg  [6:0]       s1_in_r_uop_uopIdx;
  reg  [7:0]       s1_in_r_uop_pdest;
  reg              s1_in_r_uop_robIdx_flag;
  reg  [7:0]       s1_in_r_uop_robIdx_value;
  reg              s1_in_r_uop_storeSetHit;
  reg              s1_in_r_uop_waitForRobIdx_flag;
  reg  [7:0]       s1_in_r_uop_waitForRobIdx_value;
  reg              s1_in_r_uop_loadWaitBit;
  reg              s1_in_r_uop_loadWaitStrict;
  reg              s1_in_r_uop_lqIdx_flag;
  reg  [6:0]       s1_in_r_uop_lqIdx_value;
  reg              s1_in_r_uop_sqIdx_flag;
  reg  [5:0]       s1_in_r_uop_sqIdx_value;
  reg  [49:0]      s1_in_r_vaddr;
  reg  [47:0]      s1_in_r_paddr;
  reg  [15:0]      s1_in_r_mask;
  reg  [128:0]     s1_in_r_data;
  reg              s1_in_r_nc;
  reg              s1_in_r_isPrefetch;
  reg              s1_in_r_isHWPrefetch;
  reg              s1_in_r_isFrmMisAlignBuf;
  reg              s1_in_r_isvec;
  reg              s1_in_r_is128bit;
  reg  [7:0]       s1_in_r_elemIdx;
  reg  [2:0]       s1_in_r_alignedType;
  reg  [3:0]       s1_in_r_mbIndex;
  reg  [3:0]       s1_in_r_reg_offset;
  reg  [7:0]       s1_in_r_elemIdxInsideVd;
  reg              s1_in_r_vecActive;
  reg  [49:0]      s1_in_r_vecBaseVaddr;
  reg              s1_in_r_isFirstIssue;
  reg              s1_in_r_isLoadReplay;
  reg              s1_in_r_isFastReplay;
  reg  [3:0]       s1_in_r_mshrid;
  reg              s1_in_r_forward_tlDchannel;
  reg  [6:0]       s1_in_r_schedIndex;
  reg              s1_in_r_tlbNoQuery;
  reg              s1_in_r_isMisalign;
  reg              s1_in_r_isFinalSplit;
  reg              s1_in_r_misalignWith16Byte;
  reg              s1_in_r_misalignNeedWakeUp;
  reg              s1_fast_rep_dly_kill_r;
  wire [5:0]       _GEN_0 =
    {s1_exception_new_vec_21,
     s1_in_r_uop_exceptionVec_19,
     s1_exception_new_vec_13,
     s1_exception_new_vec_5,
     s1_exception_new_vec_4,
     s1_trigger_breakpoint};
  wire             s1_tlb_miss = io_tlb_resp_bits_miss & io_tlb_resp_valid & s1_valid;
  wire [47:0]      s1_paddr_dup_lsu =
    s1_in_r_tlbNoQuery ? s1_in_r_paddr : io_tlb_resp_bits_paddr_0;
  wire             _io_lsq_forward_valid_T = (|_GEN_0) | s1_tlb_miss;
  wire             io_lsq_forward_valid_0 =
    s1_valid & ~(_io_lsq_forward_valid_T | s1_kill | s1_in_r_isPrefetch);
  assign s1_exception_new_vec_13 =
    io_tlb_resp_bits_excp_0_pf_ld & s1_vecActive & ~s1_tlb_miss & ~s1_in_r_tlbNoQuery;
  assign s1_exception_new_vec_21 =
    io_tlb_resp_bits_excp_0_gpf_ld & ~s1_tlb_miss & ~s1_in_r_tlbNoQuery;
  assign s1_exception_new_vec_5 =
    io_tlb_resp_bits_excp_0_af_ld & s1_vecActive & ~s1_tlb_miss & ~s1_in_r_tlbNoQuery;
  reg              REG;
  wire             _GEN_1 =
    REG & (s1_exception_new_vec_13 | s1_exception_new_vec_21 | s1_exception_new_vec_5);
  assign s1_exception_new_vec_4 = ~_GEN_1 & s1_in_r_uop_exceptionVec_4;
  reg              s1_redirect_reg_bits_r_robIdx_flag;
  reg  [7:0]       s1_redirect_reg_bits_r_robIdx_value;
  reg              s1_redirect_reg_bits_r_level;
  reg              s1_redirect_reg_valid_last_REG;
  wire [8:0]       _s1_kill_flushItself_T_5 =
    {s1_in_r_uop_robIdx_flag, s1_in_r_uop_robIdx_value};
  wire [8:0]       _io_vecldout_valid_flushItself_T_2 =
    {io_redirect_bits_robIdx_flag, io_redirect_bits_robIdx_value};
  assign s1_kill =
    s1_fast_rep_dly_kill_r & s1_in_r_isFastReplay | io_redirect_valid
    & (io_redirect_bits_level
       & _s1_kill_flushItself_T_5 == _io_vecldout_valid_flushItself_T_2
       | s1_in_r_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
       ^ s1_in_r_uop_robIdx_value > io_redirect_bits_robIdx_value)
    | s1_redirect_reg_valid_last_REG
    & (s1_redirect_reg_bits_r_level
       & _s1_kill_flushItself_T_5 == {s1_redirect_reg_bits_r_robIdx_flag,
                                      s1_redirect_reg_bits_r_robIdx_value}
       | s1_in_r_uop_robIdx_flag ^ s1_redirect_reg_bits_r_robIdx_flag
       ^ s1_in_r_uop_robIdx_value > s1_redirect_reg_bits_r_robIdx_value);
  reg  [55:0]      s1_sqIdx_mask;
  wire             io_forward_mshr_valid_0 = s1_valid & s1_in_r_forward_tlDchannel;
  wire             s1_trigger_debug_mode =
    _loadTrigger_tdataVec_io_toLoadStore_triggerAction == 4'h1;
  assign s1_trigger_breakpoint =
    _loadTrigger_tdataVec_io_toLoadStore_triggerAction == 4'h0;
  reg              s2_valid;
  wire             s2_fire = s2_valid & ~s2_kill & s3_ready;
  reg              s2_vecActive;
  reg              s2_isvec;
  reg  [1:0]       s2_pbmt;
  reg              s2_trigger_debug_mode;
  reg              s2_nc_with_data;
  reg              s2_mmio_req_valid_REG;
  reg              s2_mmio_req_valid_REG_1;
  reg              s2_mmio_req_bits_REG_uop_exceptionVec_3;
  reg              s2_mmio_req_bits_REG_uop_exceptionVec_4;
  reg              s2_mmio_req_bits_REG_uop_exceptionVec_5;
  reg              s2_mmio_req_bits_REG_uop_exceptionVec_13;
  reg              s2_mmio_req_bits_REG_uop_exceptionVec_19;
  reg              s2_mmio_req_bits_REG_uop_exceptionVec_21;
  reg  [3:0]       s2_mmio_req_bits_REG_uop_trigger;
  reg              s2_mmio_req_bits_REG_uop_rfWen;
  reg              s2_mmio_req_bits_REG_uop_fpWen;
  reg              s2_mmio_req_bits_REG_uop_flushPipe;
  reg  [7:0]       s2_mmio_req_bits_REG_uop_pdest;
  reg              s2_mmio_req_bits_REG_uop_robIdx_flag;
  reg  [7:0]       s2_mmio_req_bits_REG_uop_robIdx_value;
  reg              s2_mmio_req_bits_REG_uop_replayInst;
  reg              s2_mmio_req_bits_REG_1_uop_exceptionVec_3;
  reg              s2_mmio_req_bits_REG_1_uop_exceptionVec_4;
  reg              s2_mmio_req_bits_REG_1_uop_exceptionVec_5;
  reg              s2_mmio_req_bits_REG_1_uop_exceptionVec_13;
  reg              s2_mmio_req_bits_REG_1_uop_exceptionVec_19;
  reg              s2_mmio_req_bits_REG_1_uop_exceptionVec_21;
  reg  [3:0]       s2_mmio_req_bits_REG_1_uop_trigger;
  reg              s2_mmio_req_bits_REG_1_uop_rfWen;
  reg              s2_mmio_req_bits_REG_1_uop_fpWen;
  reg              s2_mmio_req_bits_REG_1_uop_flushPipe;
  reg  [7:0]       s2_mmio_req_bits_REG_1_uop_pdest;
  reg              s2_mmio_req_bits_REG_1_uop_robIdx_flag;
  reg  [7:0]       s2_mmio_req_bits_REG_1_uop_robIdx_value;
  reg              s2_mmio_req_bits_REG_1_uop_replayInst;
  assign s2_kill =
    io_redirect_valid
    & (io_redirect_bits_level
       & {s2_in_r_uop_robIdx_flag,
          s2_in_r_uop_robIdx_value} == _io_vecldout_valid_flushItself_T_2
       | s2_in_r_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
       ^ s2_in_r_uop_robIdx_value > io_redirect_bits_robIdx_value);
  assign s2_ready = ~s2_valid | s2_kill | s3_ready;
  reg              s2_in_r_uop_exceptionVec_3;
  reg              s2_in_r_uop_exceptionVec_4;
  reg              s2_in_r_uop_exceptionVec_5;
  reg              s2_in_r_uop_exceptionVec_13;
  reg              s2_in_r_uop_exceptionVec_19;
  reg              s2_in_r_uop_exceptionVec_21;
  reg  [3:0]       s2_in_r_uop_trigger;
  reg              s2_in_r_uop_preDecodeInfo_isRVC;
  reg              s2_in_r_uop_ftqPtr_flag;
  reg  [5:0]       s2_in_r_uop_ftqPtr_value;
  reg  [3:0]       s2_in_r_uop_ftqOffset;
  reg  [8:0]       s2_in_r_uop_fuOpType;
  reg              s2_in_r_uop_rfWen;
  reg              s2_in_r_uop_fpWen;
  reg  [7:0]       s2_in_r_uop_vpu_vstart;
  reg  [1:0]       s2_in_r_uop_vpu_veew;
  reg  [6:0]       s2_in_r_uop_uopIdx;
  reg  [7:0]       s2_in_r_uop_pdest;
  reg              s2_in_r_uop_storeSetHit;
  reg              s2_in_r_uop_waitForRobIdx_flag;
  reg  [7:0]       s2_in_r_uop_waitForRobIdx_value;
  reg              s2_in_r_uop_loadWaitBit;
  reg              s2_in_r_uop_loadWaitStrict;
  reg              s2_in_r_uop_lqIdx_flag;
  reg  [6:0]       s2_in_r_uop_lqIdx_value;
  reg              s2_in_r_uop_sqIdx_flag;
  reg  [5:0]       s2_in_r_uop_sqIdx_value;
  reg  [49:0]      s2_in_r_vaddr;
  reg  [63:0]      s2_in_r_fullva;
  reg              s2_in_r_vaNeedExt;
  reg              s2_in_r_isHyper;
  reg  [47:0]      s2_in_r_paddr;
  reg  [63:0]      s2_in_r_gpaddr;
  reg              s2_in_r_isForVSnonLeafPTE;
  reg  [15:0]      s2_in_r_mask;
  reg  [128:0]     s2_in_r_data;
  reg              s2_in_r_tlbMiss;
  reg              s2_in_r_nc;
  reg              s2_in_r_mmio;
  reg              s2_in_r_isPrefetch;
  reg              s2_in_r_isHWPrefetch;
  reg              s2_in_r_isFrmMisAlignBuf;
  reg              s2_in_r_isvec;
  reg              s2_in_r_is128bit;
  reg  [7:0]       s2_in_r_elemIdx;
  reg  [2:0]       s2_in_r_alignedType;
  reg  [3:0]       s2_in_r_mbIndex;
  reg  [3:0]       s2_in_r_reg_offset;
  reg  [7:0]       s2_in_r_elemIdxInsideVd;
  reg              s2_in_r_vecActive;
  reg  [49:0]      s2_in_r_vecVaddrOffset;
  reg  [15:0]      s2_in_r_vecTriggerMask;
  reg              s2_in_r_isFirstIssue;
  reg              s2_in_r_isLoadReplay;
  reg              s2_in_r_isFastReplay;
  reg  [6:0]       s2_in_r_schedIndex;
  reg              s2_in_r_isMisalign;
  reg              s2_in_r_isFinalSplit;
  reg              s2_in_r_misalignWith16Byte;
  reg              s2_in_r_misalignNeedWakeUp;
  reg              s2_in_r_rep_info_cause_9;
  wire             s2_actually_uncache =
    s2_pbmt == 2'h0 & io_pmp_mmio | s2_in_r_nc | s2_in_r_mmio;
  wire             _GEN_2 =
    s2_in_r_isPrefetch | s2_in_r_tlbMiss
    & ~(s2_in_r_uop_exceptionVec_4 | s2_in_r_uop_exceptionVec_3);
  wire             s2_exception_vec_3 = ~_GEN_2 & s2_in_r_uop_exceptionVec_3;
  wire             s2_exception_vec_5 =
    ~_GEN_2 & s2_vecActive
    & (s2_in_r_uop_exceptionVec_5 | io_pmp_ld | (s2_isvec | s2_in_r_isFrmMisAlignBuf)
       & s2_actually_uncache & ~s2_in_r_isPrefetch & ~s2_in_r_tlbMiss);
  wire             s2_exception_vec_13 = ~_GEN_2 & s2_in_r_uop_exceptionVec_13;
  wire             s2_exception_vec_19 = ~_GEN_2 & s2_in_r_uop_exceptionVec_19;
  wire             s2_exception_vec_21 = ~_GEN_2 & s2_in_r_uop_exceptionVec_21;
  wire             s2_exception =
    s2_vecActive
    & (s2_trigger_debug_mode
       | (|{s2_exception_vec_21,
            s2_exception_vec_19,
            s2_exception_vec_13,
            s2_exception_vec_5,
            ~_GEN_2 & s2_in_r_uop_exceptionVec_4,
            s2_exception_vec_3}));
  reg              s2_mis_align_last_REG;
  reg              s2_fwd_frm_d_chan;
  reg  [7:0]       s2_fwd_data_frm_d_chan_0;
  reg  [7:0]       s2_fwd_data_frm_d_chan_1;
  reg  [7:0]       s2_fwd_data_frm_d_chan_2;
  reg  [7:0]       s2_fwd_data_frm_d_chan_3;
  reg  [7:0]       s2_fwd_data_frm_d_chan_4;
  reg  [7:0]       s2_fwd_data_frm_d_chan_5;
  reg  [7:0]       s2_fwd_data_frm_d_chan_6;
  reg  [7:0]       s2_fwd_data_frm_d_chan_7;
  reg  [7:0]       s2_fwd_data_frm_d_chan_8;
  reg  [7:0]       s2_fwd_data_frm_d_chan_9;
  reg  [7:0]       s2_fwd_data_frm_d_chan_10;
  reg  [7:0]       s2_fwd_data_frm_d_chan_11;
  reg  [7:0]       s2_fwd_data_frm_d_chan_12;
  reg  [7:0]       s2_fwd_data_frm_d_chan_13;
  reg  [7:0]       s2_fwd_data_frm_d_chan_14;
  reg  [7:0]       s2_fwd_data_frm_d_chan_15;
  wire             s2_fwd_frm_d_chan_or_mshr =
    io_forward_mshr_forward_result_valid
    & (s2_fwd_frm_d_chan | io_forward_mshr_forward_mshr);
  reg              s2_tlb_hit;
  reg              s2_mem_amb_REG;
  wire             s2_mem_amb =
    s2_in_r_uop_storeSetHit & io_lsq_forward_addrInvalid & s2_mem_amb_REG;
  reg              s2_fwd_fail_REG;
  wire             s2_fwd_fail = io_lsq_forward_dataInvalid & s2_fwd_fail_REG;
  wire             s2_dcache_miss =
    io_dcache_resp_bits_miss & ~s2_fwd_frm_d_chan_or_mshr & ~s2_full_fwd & ~s2_in_r_nc;
  wire             s2_mq_nack =
    io_dcache_s2_mq_nack & ~s2_fwd_frm_d_chan_or_mshr & ~s2_full_fwd & ~s2_in_r_nc;
  wire             s2_bank_conflict =
    io_dcache_s2_bank_conflict & ~s2_fwd_frm_d_chan_or_mshr & ~s2_full_fwd & ~s2_in_r_nc;
  wire             _s2_isMatch128_T_2 = s2_in_r_isvec | s2_in_r_misalignWith16Byte;
  wire             s2_nuke =
    (|{io_stld_nuke_query_1_valid
         & (s2_in_r_uop_robIdx_flag ^ io_stld_nuke_query_1_bits_robIdx_flag
            ^ s2_in_r_uop_robIdx_value > io_stld_nuke_query_1_bits_robIdx_value)
         & (io_stld_nuke_query_1_bits_matchLine | _s2_isMatch128_T_2 & s2_in_r_is128bit
              ? s2_in_r_paddr[47:4] == io_stld_nuke_query_1_bits_paddr[47:4]
              : s2_in_r_paddr[47:3] == io_stld_nuke_query_1_bits_paddr[47:3])
         & (|(s2_in_r_mask & io_stld_nuke_query_1_bits_mask)),
       io_stld_nuke_query_0_valid
         & (s2_in_r_uop_robIdx_flag ^ io_stld_nuke_query_0_bits_robIdx_flag
            ^ s2_in_r_uop_robIdx_value > io_stld_nuke_query_0_bits_robIdx_value)
         & (io_stld_nuke_query_0_bits_matchLine | _s2_isMatch128_T_2 & s2_in_r_is128bit
              ? s2_in_r_paddr[47:4] == io_stld_nuke_query_0_bits_paddr[47:4]
              : s2_in_r_paddr[47:3] == io_stld_nuke_query_0_bits_paddr[47:3])
         & (|(s2_in_r_mask & io_stld_nuke_query_0_bits_mask))}) & ~s2_in_r_tlbMiss
    | s2_in_r_rep_info_cause_9;
  wire             _s2_troublem_T_5 =
    ~s2_exception
    & (~(~s2_in_r_isPrefetch & ~s2_exception & ~s2_in_r_tlbMiss & s2_actually_uncache)
       | s2_nc_with_data) & ~s2_in_r_isPrefetch;
  wire             s2_fast_rep =
    ~s2_in_r_isFastReplay & ~s2_mem_amb & ~s2_in_r_tlbMiss & ~s2_fwd_fail
    & (s2_mq_nack | ~s2_dcache_miss & s2_bank_conflict | ~s2_mq_nack & ~s2_dcache_miss
       & ~s2_bank_conflict & s2_nuke) & _s2_troublem_T_5 & ~s2_in_r_misalignNeedWakeUp;
  wire             s2_fwd_vp_match_invalid =
    io_lsq_forward_matchInvalid | io_sbuffer_matchInvalid | io_ubuffer_matchInvalid;
  wire             io_lsq_ldld_nuke_query_req_valid_0 =
    s2_valid & ~s2_mem_amb & ~s2_in_r_tlbMiss & ~s2_fwd_fail & ~s2_in_r_isFrmMisAlignBuf
    & ~s2_fast_rep & _s2_troublem_T_5;
  wire             _io_lsq_stld_nuke_query_req_bits_data_valid_T =
    s2_full_fwd | io_forward_mshr_forward_result_valid;
  assign s2_full_fwd =
    (~{s2_fwd_mask_15,
       s2_fwd_mask_14,
       s2_fwd_mask_13,
       s2_fwd_mask_12,
       s2_fwd_mask_11,
       s2_fwd_mask_10,
       s2_fwd_mask_9,
       s2_fwd_mask_8,
       s2_fwd_mask_7,
       s2_fwd_mask_6,
       s2_fwd_mask_5,
       s2_fwd_mask_4,
       s2_fwd_mask_3,
       s2_fwd_mask_2,
       s2_fwd_mask_1,
       s2_fwd_mask_0} & s2_in_r_mask) == 16'h0 & ~io_lsq_forward_dataInvalid;
  assign s2_fwd_mask_0 =
    io_lsq_forward_forwardMask_0 | io_sbuffer_forwardMask_0 | io_ubuffer_forwardMask_0;
  assign s2_fwd_mask_1 =
    io_lsq_forward_forwardMask_1 | io_sbuffer_forwardMask_1 | io_ubuffer_forwardMask_1;
  assign s2_fwd_mask_2 =
    io_lsq_forward_forwardMask_2 | io_sbuffer_forwardMask_2 | io_ubuffer_forwardMask_2;
  assign s2_fwd_mask_3 =
    io_lsq_forward_forwardMask_3 | io_sbuffer_forwardMask_3 | io_ubuffer_forwardMask_3;
  assign s2_fwd_mask_4 =
    io_lsq_forward_forwardMask_4 | io_sbuffer_forwardMask_4 | io_ubuffer_forwardMask_4;
  assign s2_fwd_mask_5 =
    io_lsq_forward_forwardMask_5 | io_sbuffer_forwardMask_5 | io_ubuffer_forwardMask_5;
  assign s2_fwd_mask_6 =
    io_lsq_forward_forwardMask_6 | io_sbuffer_forwardMask_6 | io_ubuffer_forwardMask_6;
  assign s2_fwd_mask_7 =
    io_lsq_forward_forwardMask_7 | io_sbuffer_forwardMask_7 | io_ubuffer_forwardMask_7;
  assign s2_fwd_mask_8 =
    io_lsq_forward_forwardMask_8 | io_sbuffer_forwardMask_8 | io_ubuffer_forwardMask_8;
  assign s2_fwd_mask_9 =
    io_lsq_forward_forwardMask_9 | io_sbuffer_forwardMask_9 | io_ubuffer_forwardMask_9;
  assign s2_fwd_mask_10 =
    io_lsq_forward_forwardMask_10 | io_sbuffer_forwardMask_10 | io_ubuffer_forwardMask_10;
  assign s2_fwd_mask_11 =
    io_lsq_forward_forwardMask_11 | io_sbuffer_forwardMask_11 | io_ubuffer_forwardMask_11;
  assign s2_fwd_mask_12 =
    io_lsq_forward_forwardMask_12 | io_sbuffer_forwardMask_12 | io_ubuffer_forwardMask_12;
  assign s2_fwd_mask_13 =
    io_lsq_forward_forwardMask_13 | io_sbuffer_forwardMask_13 | io_ubuffer_forwardMask_13;
  assign s2_fwd_mask_14 =
    io_lsq_forward_forwardMask_14 | io_sbuffer_forwardMask_14 | io_ubuffer_forwardMask_14;
  assign s2_fwd_mask_15 =
    io_lsq_forward_forwardMask_15 | io_sbuffer_forwardMask_15 | io_ubuffer_forwardMask_15;
  wire             s2_out_rep_info_cause_4 = s2_dcache_miss & _s2_troublem_T_5;
  wire             s2_out_rep_info_cause_0 = s2_mem_amb & _s2_troublem_T_5;
  wire             s2_out_rep_info_cause_1 = s2_in_r_tlbMiss & _s2_troublem_T_5;
  wire             s2_out_rep_info_cause_2 = s2_fwd_fail & _s2_troublem_T_5;
  wire             s2_out_rep_info_cause_3 = s2_mq_nack & _s2_troublem_T_5;
  wire             s2_out_rep_info_cause_6 = s2_bank_conflict & _s2_troublem_T_5;
  wire             s2_out_rep_info_cause_7 =
    io_lsq_ldld_nuke_query_req_valid_0 & ~io_lsq_ldld_nuke_query_req_ready
    & _s2_troublem_T_5;
  wire             s2_out_rep_info_cause_8 =
    io_lsq_ldld_nuke_query_req_valid_0 & ~io_lsq_stld_nuke_query_req_ready
    & _s2_troublem_T_5;
  wire             s2_out_rep_info_cause_9 = s2_nuke & _s2_troublem_T_5;
  reg              io_s2_ptr_chasing_r;
  wire             s2_prefetch_train_valid =
    s2_valid & ~s2_actually_uncache & (~s2_in_r_tlbMiss | s2_in_r_isHWPrefetch);
  reg              io_prefetch_train_valid_last_REG;
  reg  [49:0]      io_prefetch_train_bits_vaddr_r;
  reg  [47:0]      io_prefetch_train_bits_paddr_r;
  reg              io_prefetch_train_bits_uop_r_robIdx_flag;
  reg  [7:0]       io_prefetch_train_bits_uop_r_robIdx_value;
  reg              io_prefetch_train_bits_isFirstIssue_r;
  reg              io_prefetch_train_bits_miss_r_1;
  wire             s2_prefetch_train_l1_valid = s2_valid & ~s2_actually_uncache;
  reg              io_prefetch_train_l1_valid_last_REG;
  reg  [49:0]      io_prefetch_train_l1_bits_vaddr_r;
  reg              io_prefetch_train_l1_bits_uop_r_robIdx_flag;
  reg  [7:0]       io_prefetch_train_l1_bits_uop_r_robIdx_value;
  reg              io_prefetch_train_l1_bits_isFirstIssue_r;
  reg              io_prefetch_train_l1_bits_miss_r_1;
  reg  [2:0]       io_prefetch_train_l1_bits_meta_prefetch_r;
  reg              s3_valid_last_REG;
  reg              s3_in_uop_exceptionVec_3;
  reg              s3_in_uop_exceptionVec_4;
  reg              s3_in_uop_exceptionVec_5;
  reg              s3_in_uop_exceptionVec_13;
  reg              s3_in_uop_exceptionVec_19;
  reg              s3_in_uop_exceptionVec_21;
  reg  [3:0]       s3_in_uop_trigger;
  reg              s3_in_uop_preDecodeInfo_isRVC;
  reg              s3_in_uop_ftqPtr_flag;
  reg  [5:0]       s3_in_uop_ftqPtr_value;
  reg  [3:0]       s3_in_uop_ftqOffset;
  reg  [8:0]       s3_in_uop_fuOpType;
  reg              s3_in_uop_rfWen;
  reg              s3_in_uop_fpWen;
  reg  [7:0]       s3_in_uop_vpu_vstart;
  reg  [1:0]       s3_in_uop_vpu_veew;
  reg  [6:0]       s3_in_uop_uopIdx;
  reg  [7:0]       s3_in_uop_pdest;
  reg              s3_in_uop_robIdx_flag;
  reg  [7:0]       s3_in_uop_robIdx_value;
  reg              s3_in_uop_storeSetHit;
  reg              s3_in_uop_waitForRobIdx_flag;
  reg  [7:0]       s3_in_uop_waitForRobIdx_value;
  reg              s3_in_uop_loadWaitBit;
  reg              s3_in_uop_loadWaitStrict;
  reg              s3_in_uop_lqIdx_flag;
  reg  [6:0]       s3_in_uop_lqIdx_value;
  reg              s3_in_uop_sqIdx_flag;
  reg  [5:0]       s3_in_uop_sqIdx_value;
  reg  [49:0]      s3_in_vaddr;
  reg  [63:0]      s3_in_fullva;
  reg              s3_in_vaNeedExt;
  reg              s3_in_isHyper;
  reg  [47:0]      s3_in_paddr;
  reg  [63:0]      s3_in_gpaddr;
  reg              s3_in_isForVSnonLeafPTE;
  reg  [15:0]      s3_in_mask;
  reg  [128:0]     s3_in_data;
  reg              s3_in_tlbMiss;
  reg              s3_in_nc;
  reg              s3_in_mmio;
  reg              s3_in_memBackTypeMM;
  reg              s3_in_isFrmMisAlignBuf;
  reg              s3_in_isvec;
  reg              s3_in_is128bit;
  reg  [7:0]       s3_in_elemIdx;
  reg  [2:0]       s3_in_alignedType;
  reg  [3:0]       s3_in_mbIndex;
  reg  [3:0]       s3_in_reg_offset;
  reg  [7:0]       s3_in_elemIdxInsideVd;
  reg              s3_in_vecActive;
  reg  [15:0]      s3_in_vecTriggerMask;
  reg              s3_in_isLoadReplay;
  reg              s3_in_handledByMSHR;
  reg  [6:0]       s3_in_schedIndex;
  reg              s3_in_isFinalSplit;
  reg              s3_in_misalignWith16Byte;
  reg              s3_in_misalignNeedWakeUp;
  reg  [3:0]       s3_in_rep_info_mshr_id;
  reg              s3_in_rep_info_full_fwd;
  reg              s3_in_rep_info_data_inv_sq_idx_flag;
  reg  [5:0]       s3_in_rep_info_data_inv_sq_idx_value;
  reg              s3_in_rep_info_addr_inv_sq_idx_flag;
  reg  [5:0]       s3_in_rep_info_addr_inv_sq_idx_value;
  reg              s3_in_rep_info_last_beat;
  reg              s3_in_rep_info_cause_0;
  reg              s3_in_rep_info_cause_1;
  reg              s3_in_rep_info_cause_2;
  reg              s3_in_rep_info_cause_3;
  reg              s3_in_rep_info_cause_4;
  reg              s3_in_rep_info_cause_6;
  reg              s3_in_rep_info_cause_7;
  reg              s3_in_rep_info_cause_8;
  reg              s3_in_rep_info_cause_9;
  reg  [3:0]       s3_in_rep_info_tlb_id;
  reg              s3_in_rep_info_tlb_full;
  reg              s3_nc_with_data;
  reg              s3_troublem_last_REG;
  reg              s3_vecActive;
  reg              s3_isvec;
  reg  [2:0]       s3_vec_alignedType;
  reg  [3:0]       s3_vec_mBIndex;
  reg              s3_mmio_req_valid;
  reg              s3_mmio_req_bits_uop_exceptionVec_3;
  reg              s3_mmio_req_bits_uop_exceptionVec_4;
  reg              s3_mmio_req_bits_uop_exceptionVec_5;
  reg              s3_mmio_req_bits_uop_exceptionVec_13;
  reg              s3_mmio_req_bits_uop_exceptionVec_19;
  reg              s3_mmio_req_bits_uop_exceptionVec_21;
  reg  [3:0]       s3_mmio_req_bits_uop_trigger;
  reg              s3_mmio_req_bits_uop_flushPipe;
  reg              s3_mmio_req_bits_uop_robIdx_flag;
  reg  [7:0]       s3_mmio_req_bits_uop_robIdx_value;
  reg              s3_mmio_req_bits_uop_replayInst;
  reg  [7:0]       s3_pdest;
  reg              s3_rfWen;
  reg              s3_fpWen;
  reg  [8:0]       s3_data_select;
  reg              s3_data_select_by_offset_0;
  reg              s3_data_select_by_offset_1;
  reg              s3_data_select_by_offset_2;
  reg              s3_data_select_by_offset_3;
  reg              s3_data_select_by_offset_4;
  reg              s3_data_select_by_offset_5;
  reg              s3_data_select_by_offset_6;
  reg              s3_data_select_by_offset_7;
  reg              s3_data_select_by_offset_8;
  reg              s3_data_select_by_offset_9;
  reg              s3_data_select_by_offset_10;
  reg              s3_data_select_by_offset_11;
  reg              s3_data_select_by_offset_12;
  reg              s3_data_select_by_offset_13;
  reg              s3_data_select_by_offset_14;
  reg              s3_data_select_by_offset_15;
  reg              s3_safe_wakeup;
  reg              s3_safe_writeback;
  reg              s3_exception;
  reg              s3_mis_align;
  assign s3_ready =
    ~s3_valid_last_REG | io_redirect_valid
    & (io_redirect_bits_level
       & {s3_in_uop_robIdx_flag,
          s3_in_uop_robIdx_value} == _io_vecldout_valid_flushItself_T_2
       | s3_in_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
       ^ s3_in_uop_robIdx_value > io_redirect_bits_robIdx_value) | io_ldout_ready;
  wire             s3_fast_rep_canceled =
    s0_src_selector_1 | io_misalign_ldin_valid | ~io_dcache_req_ready;
  wire             io_lsq_ldin_valid_0 =
    s3_valid_last_REG & (~s3_fast_rep_REG | s3_fast_rep_canceled) & ~s3_nc_with_data
    & ~s3_in_misalignNeedWakeUp;
  wire             toMisalignBufferValid =
    io_lsq_ldin_valid_0 & s3_mis_align & ~s3_in_isFrmMisAlignBuf;
  reg              s3_vp_match_fail_last_REG;
  wire             s3_vp_match_fail = s3_vp_match_fail_last_REG & s3_troublem_last_REG;
  reg              s3_ldld_rep_inst_last_REG;
  wire [10:0]      s3_lrq_sel_rep_cause =
    s3_in_rep_info_cause_0
      ? 11'h1
      : s3_in_rep_info_cause_1
          ? 11'h2
          : s3_in_rep_info_cause_2
              ? 11'h4
              : s3_in_rep_info_cause_3
                  ? 11'h8
                  : s3_in_rep_info_cause_4
                      ? 11'h10
                      : s3_in_rep_info_cause_6
                          ? 11'h40
                          : s3_in_rep_info_cause_7
                              ? 11'h80
                              : s3_in_rep_info_cause_8
                                  ? 11'h100
                                  : s3_in_rep_info_cause_9
                                      ? 11'h200
                                      : {toMisalignBufferValid & ~io_misalign_buf_ready,
                                         10'h0};
  wire [10:0]      s3_mab_sel_rep_cause =
    s3_in_rep_info_cause_0
      ? 11'h1
      : s3_in_rep_info_cause_1
          ? 11'h2
          : s3_in_rep_info_cause_2
              ? 11'h4
              : s3_in_rep_info_cause_3
                  ? 11'h8
                  : s3_in_rep_info_cause_4
                      ? 11'h10
                      : s3_in_rep_info_cause_6
                          ? 11'h40
                          : s3_in_rep_info_cause_7
                              ? 11'h80
                              : s3_in_rep_info_cause_8
                                  ? 11'h100
                                  : {1'h0, s3_in_rep_info_cause_9, 9'h0};
  wire             s3_misalign_rep_cause_0 =
    ~s3_in_misalignNeedWakeUp & s3_mab_sel_rep_cause[0];
  wire             s3_misalign_rep_cause_2 =
    ~s3_in_misalignNeedWakeUp & s3_mab_sel_rep_cause[2];
  wire             s3_misalign_rep_cause_9 =
    ~s3_in_misalignNeedWakeUp & s3_mab_sel_rep_cause[9];
  wire             _GEN_3 = s3_exception | s3_vp_match_fail | s3_in_isFrmMisAlignBuf;
  wire             s3_replayqueue_rep_cause_0 = ~_GEN_3 & s3_lrq_sel_rep_cause[0];
  wire             s3_replayqueue_rep_cause_1 = ~_GEN_3 & s3_lrq_sel_rep_cause[1];
  wire             s3_replayqueue_rep_cause_2 = ~_GEN_3 & s3_lrq_sel_rep_cause[2];
  wire             s3_replayqueue_rep_cause_3 = ~_GEN_3 & s3_lrq_sel_rep_cause[3];
  wire             s3_replayqueue_rep_cause_4 = ~_GEN_3 & s3_lrq_sel_rep_cause[4];
  wire             s3_replayqueue_rep_cause_5 = ~_GEN_3 & s3_lrq_sel_rep_cause[5];
  wire             s3_replayqueue_rep_cause_6 = ~_GEN_3 & s3_lrq_sel_rep_cause[6];
  wire             s3_replayqueue_rep_cause_7 = ~_GEN_3 & s3_lrq_sel_rep_cause[7];
  wire             s3_replayqueue_rep_cause_8 = ~_GEN_3 & s3_lrq_sel_rep_cause[8];
  wire             s3_replayqueue_rep_cause_9 = ~_GEN_3 & s3_lrq_sel_rep_cause[9];
  wire             s3_replayqueue_rep_cause_10 = ~_GEN_3 & s3_lrq_sel_rep_cause[10];
  wire             s3_out_valid =
    s3_valid_last_REG & s3_safe_writeback & ~toMisalignBufferValid;
  wire             new_vec_1_5 = s3_in_uop_exceptionVec_5 & s3_vecActive;
  wire             s3_frm_mis_flush =
    s3_in_isFrmMisAlignBuf
    & (s3_misalign_rep_cause_2 | s3_misalign_rep_cause_0 | s3_misalign_rep_cause_9);
  wire             s3_revoke =
    s3_exception
    | (|{s3_replayqueue_rep_cause_10,
         s3_replayqueue_rep_cause_9,
         s3_replayqueue_rep_cause_8,
         s3_replayqueue_rep_cause_7,
         s3_replayqueue_rep_cause_6,
         s3_replayqueue_rep_cause_5,
         s3_replayqueue_rep_cause_4,
         s3_replayqueue_rep_cause_3,
         s3_replayqueue_rep_cause_2,
         s3_replayqueue_rep_cause_1,
         s3_replayqueue_rep_cause_0}) | s3_mis_align;
  reg  [63:0]      s3_ld_raw_data_frm_mmio_REG_lqData;
  reg  [8:0]       s3_ld_raw_data_frm_mmio_REG_uop_fuOpType;
  reg              s3_ld_raw_data_frm_mmio_REG_uop_fpWen;
  reg  [2:0]       s3_ld_raw_data_frm_mmio_REG_addrOffset;
  reg  [63:0]      s3_ld_raw_data_frm_mmio_REG_1_lqData;
  reg  [8:0]       s3_ld_raw_data_frm_mmio_REG_1_uop_fuOpType;
  reg              s3_ld_raw_data_frm_mmio_REG_1_uop_fpWen;
  reg  [2:0]       s3_ld_raw_data_frm_mmio_REG_1_addrOffset;
  reg  [63:0]      s3_ld_raw_data_frm_mmio_lqData;
  reg  [8:0]       s3_ld_raw_data_frm_mmio_uop_fuOpType;
  reg              s3_ld_raw_data_frm_mmio_uop_fpWen;
  reg  [2:0]       s3_ld_raw_data_frm_mmio_addrOffset;
  wire [63:0]      _s3_picked_data_frm_mmio_T_16 =
    s3_ld_raw_data_frm_mmio_addrOffset == 3'h0 ? s3_ld_raw_data_frm_mmio_lqData : 64'h0;
  wire [55:0]      _GEN_4 =
    _s3_picked_data_frm_mmio_T_16[55:0]
    | (s3_ld_raw_data_frm_mmio_addrOffset == 3'h1
         ? s3_ld_raw_data_frm_mmio_lqData[63:8]
         : 56'h0);
  wire [47:0]      _GEN_5 =
    _GEN_4[47:0]
    | (s3_ld_raw_data_frm_mmio_addrOffset == 3'h2
         ? s3_ld_raw_data_frm_mmio_lqData[63:16]
         : 48'h0);
  wire [39:0]      _GEN_6 =
    _GEN_5[39:0]
    | (s3_ld_raw_data_frm_mmio_addrOffset == 3'h3
         ? s3_ld_raw_data_frm_mmio_lqData[63:24]
         : 40'h0);
  wire [31:0]      _GEN_7 =
    _GEN_6[31:0]
    | (s3_ld_raw_data_frm_mmio_addrOffset == 3'h4
         ? s3_ld_raw_data_frm_mmio_lqData[63:32]
         : 32'h0);
  wire [23:0]      _GEN_8 =
    _GEN_7[23:0]
    | (s3_ld_raw_data_frm_mmio_addrOffset == 3'h5
         ? s3_ld_raw_data_frm_mmio_lqData[63:40]
         : 24'h0);
  wire [15:0]      _GEN_9 =
    _GEN_8[15:0]
    | (s3_ld_raw_data_frm_mmio_addrOffset == 3'h6
         ? s3_ld_raw_data_frm_mmio_lqData[63:48]
         : 16'h0);
  wire [7:0]       _s3_ld_data_frm_mmio_T_58 =
    _GEN_9[7:0]
    | ((&s3_ld_raw_data_frm_mmio_addrOffset)
         ? s3_ld_raw_data_frm_mmio_lqData[63:56]
         : 8'h0);
  wire [63:0]      s3_picked_data_frm_mmio =
    {_s3_picked_data_frm_mmio_T_16[63:56],
     _GEN_4[55:48],
     _GEN_5[47:40],
     _GEN_6[39:32],
     _GEN_7[31:24],
     _GEN_8[23:16],
     _GEN_9[15:8],
     _s3_ld_data_frm_mmio_T_58};
  reg  [127:0]     s3_merged_data_frm_pipe;
  wire [63:0]      s3_data_frm_pipe_2_9 = {8'h0, s3_merged_data_frm_pipe[127:72]};
  wire [63:0]      s3_data_frm_pipe_2_10 = {16'h0, s3_merged_data_frm_pipe[127:80]};
  wire [63:0]      s3_data_frm_pipe_2_11 = {24'h0, s3_merged_data_frm_pipe[127:88]};
  wire [63:0]      s3_data_frm_pipe_2_12 = {32'h0, s3_merged_data_frm_pipe[127:96]};
  wire [63:0]      s3_data_frm_pipe_2_13 = {40'h0, s3_merged_data_frm_pipe[127:104]};
  wire [63:0]      s3_data_frm_pipe_2_14 = {48'h0, s3_merged_data_frm_pipe[127:112]};
  wire [63:0]      s3_data_frm_pipe_2_15 = {56'h0, s3_merged_data_frm_pipe[127:120]};
  wire [63:0]      s3_picked_data_frm_pipe_0 =
    (s3_data_select_by_offset_0 ? s3_merged_data_frm_pipe[63:0] : 64'h0)
    | (s3_data_select_by_offset_1 ? s3_merged_data_frm_pipe[71:8] : 64'h0)
    | (s3_data_select_by_offset_2 ? s3_merged_data_frm_pipe[79:16] : 64'h0)
    | (s3_data_select_by_offset_3 ? s3_merged_data_frm_pipe[87:24] : 64'h0)
    | (s3_data_select_by_offset_4 ? s3_merged_data_frm_pipe[95:32] : 64'h0)
    | (s3_data_select_by_offset_5 ? s3_merged_data_frm_pipe[103:40] : 64'h0)
    | (s3_data_select_by_offset_6 ? s3_merged_data_frm_pipe[111:48] : 64'h0)
    | (s3_data_select_by_offset_7 ? s3_merged_data_frm_pipe[119:56] : 64'h0)
    | (s3_data_select_by_offset_8 ? s3_merged_data_frm_pipe[127:64] : 64'h0)
    | (s3_data_select_by_offset_9 ? s3_data_frm_pipe_2_9 : 64'h0)
    | (s3_data_select_by_offset_10 ? s3_data_frm_pipe_2_10 : 64'h0)
    | (s3_data_select_by_offset_11 ? s3_data_frm_pipe_2_11 : 64'h0)
    | (s3_data_select_by_offset_12 ? s3_data_frm_pipe_2_12 : 64'h0)
    | (s3_data_select_by_offset_13 ? s3_data_frm_pipe_2_13 : 64'h0)
    | (s3_data_select_by_offset_14 ? s3_data_frm_pipe_2_14 : 64'h0)
    | (s3_data_select_by_offset_15 ? s3_data_frm_pipe_2_15 : 64'h0);
  wire [63:0]      s3_picked_data_frm_pipe_1 =
    (s3_data_select_by_offset_0 ? s3_merged_data_frm_pipe[63:0] : 64'h0)
    | (s3_data_select_by_offset_1 ? s3_merged_data_frm_pipe[71:8] : 64'h0)
    | (s3_data_select_by_offset_2 ? s3_merged_data_frm_pipe[79:16] : 64'h0)
    | (s3_data_select_by_offset_3 ? s3_merged_data_frm_pipe[87:24] : 64'h0)
    | (s3_data_select_by_offset_4 ? s3_merged_data_frm_pipe[95:32] : 64'h0)
    | (s3_data_select_by_offset_5 ? s3_merged_data_frm_pipe[103:40] : 64'h0)
    | (s3_data_select_by_offset_6 ? s3_merged_data_frm_pipe[111:48] : 64'h0)
    | (s3_data_select_by_offset_7 ? s3_merged_data_frm_pipe[119:56] : 64'h0)
    | (s3_data_select_by_offset_8 ? s3_merged_data_frm_pipe[127:64] : 64'h0)
    | (s3_data_select_by_offset_9 ? s3_data_frm_pipe_2_9 : 64'h0)
    | (s3_data_select_by_offset_10 ? s3_data_frm_pipe_2_10 : 64'h0)
    | (s3_data_select_by_offset_11 ? s3_data_frm_pipe_2_11 : 64'h0)
    | (s3_data_select_by_offset_12 ? s3_data_frm_pipe_2_12 : 64'h0)
    | (s3_data_select_by_offset_13 ? s3_data_frm_pipe_2_13 : 64'h0)
    | (s3_data_select_by_offset_14 ? s3_data_frm_pipe_2_14 : 64'h0)
    | (s3_data_select_by_offset_15 ? s3_data_frm_pipe_2_15 : 64'h0);
  reg              s3_ldout_valid_REG;
  reg              io_perf_0_value_REG;
  reg              io_perf_0_value_REG_1;
  reg              io_perf_1_value_REG;
  reg              io_perf_1_value_REG_1;
  reg              io_perf_2_value_REG;
  reg              io_perf_2_value_REG_1;
  reg              io_perf_3_value_REG;
  reg              io_perf_3_value_REG_1;
  reg              io_perf_4_value_REG;
  reg              io_perf_4_value_REG_1;
  reg              io_perf_5_value_REG;
  reg              io_perf_5_value_REG_1;
  reg              io_perf_6_value_REG;
  reg              io_perf_6_value_REG_1;
  wire [22:0]      _GEN_10 = {19'h0, io_replay_bits_vaddr[3:0]};
  wire             _GEN_11 = s0_src_selector_5 | s0_src_selector_6;
  wire             _GEN_12 = _s0_sel_src_T_10 & s0_src_selector_5;
  wire             s0_sel_src_uop_exceptionVec_4 =
    _s0_sel_src_T_6
      ? (_s0_sel_src_T
           ? io_misalign_ldin_valid & io_misalign_ldin_bits_uop_exceptionVec_4
           : io_fast_rep_in_valid
               ? io_fast_rep_in_bits_uop_exceptionVec_4
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_exceptionVec_4
                   : io_lsq_nc_ldin_bits_uop_exceptionVec_4)
      : _s0_sel_src_T_10 & ~_GEN_11 & io_vecldin_bits_uop_exceptionVec_4;
  wire [5:0]       s0_sel_src_uop_sqIdx_value =
    _s0_sel_src_T_6
      ? (_s0_sel_src_T
           ? (io_misalign_ldin_valid
                ? io_misalign_ldin_bits_uop_sqIdx_value
                : io_replay_bits_uop_sqIdx_value)
           : io_fast_rep_in_valid
               ? io_fast_rep_in_bits_uop_sqIdx_value
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_sqIdx_value
                   : io_lsq_nc_ldin_bits_uop_sqIdx_value)
      : _s0_sel_src_T_10
          ? (s0_src_selector_5
               ? io_replay_bits_uop_sqIdx_value
               : s0_src_selector_6 ? 6'h0 : io_vecldin_bits_uop_sqIdx_value)
          : io_ldin_valid ? io_ldin_bits_uop_sqIdx_value : 6'h0;
  wire [22:0]      _s0_src_format_out_mask_T_57 =
    {15'h0,
     {4'h0,
      {2'h0,
       {1'h0, io_ldin_bits_uop_fuOpType[1:0] == 2'h0}
         | {2{io_ldin_bits_uop_fuOpType[1:0] == 2'h1}}}
        | {4{io_ldin_bits_uop_fuOpType[1:0] == 2'h2}}}
       | {8{&(io_ldin_bits_uop_fuOpType[1:0])}}}
    << 4'(io_ldin_bits_src_0[3:0] + io_ldin_bits_uop_imm[3:0]);
  wire [22:0]      _s0_src_format_out_mask_T_42 =
    {15'h0,
     {4'h0,
      {2'h0,
       {1'h0, ~(|(io_replay_bits_uop_fuOpType[1:0]))}
         | {2{io_replay_bits_uop_fuOpType[1:0] == 2'h1}}}
        | {4{io_replay_bits_uop_fuOpType[1:0] == 2'h2}}}
       | {8{&(io_replay_bits_uop_fuOpType[1:0])}}} << _GEN_10;
  wire [22:0]      _s0_src_format_out_mask_T_28 =
    {15'h0,
     {4'h0,
      {2'h0,
       {1'h0, io_lsq_nc_ldin_bits_uop_fuOpType[1:0] == 2'h0}
         | {2{io_lsq_nc_ldin_bits_uop_fuOpType[1:0] == 2'h1}}}
        | {4{io_lsq_nc_ldin_bits_uop_fuOpType[1:0] == 2'h2}}}
       | {8{&(io_lsq_nc_ldin_bits_uop_fuOpType[1:0])}}} << io_lsq_nc_ldin_bits_vaddr[3:0];
  wire [22:0]      _s0_src_format_out_mask_T_13 =
    {15'h0,
     {4'h0,
      {2'h0,
       {1'h0, ~(|(io_replay_bits_uop_fuOpType[1:0]))}
         | {2{io_replay_bits_uop_fuOpType[1:0] == 2'h1}}}
        | {4{io_replay_bits_uop_fuOpType[1:0] == 2'h2}}}
       | {8{&(io_replay_bits_uop_fuOpType[1:0])}}} << _GEN_10;
  wire [63:0]      _s1_sqIdx_mask_T = 64'h1 << s0_sel_src_uop_sqIdx_value;
  wire [1:0]       s1_pbmt = s1_tlb_miss ? 2'h0 : io_tlb_resp_bits_pbmt_0;
  wire             _s1_isMatch128_T_2 = s1_in_r_isvec | s1_in_r_misalignWith16Byte;
  wire             _s1_out_vecTriggerMask_T =
    s1_trigger_debug_mode | s1_trigger_breakpoint;
  wire             _s2_mmio_T_5 = s2_pbmt == 2'h1;
  wire             _s2_mmio_T_6 = s2_pbmt == 2'h2;
  wire             s2_check_mmio =
    ~s2_in_r_isPrefetch & ~s2_in_r_tlbMiss
    & (_s2_mmio_T_5 | _s2_mmio_T_6 ? s2_in_r_mmio : io_pmp_mmio)
    & ~(s2_vecActive
        & (s2_trigger_debug_mode
           | (|{s2_exception_vec_21,
                s2_exception_vec_19,
                s2_exception_vec_13,
                s2_exception_vec_5,
                s2_exception_vec_3})));
  wire             s2_isMisalign = ~_GEN_2 & s2_in_r_isMisalign;
  wire             s2_mis_align =
    s2_valid & s2_mis_align_last_REG & s2_isMisalign & ~s2_in_r_misalignWith16Byte
    & ~s2_exception_vec_3 & ~s2_trigger_debug_mode & ~s2_check_mmio;
  wire             s2_mmio =
    ~s2_in_r_isPrefetch & ~s2_exception & ~s2_in_r_tlbMiss
    & (_s2_mmio_T_5 | _s2_mmio_T_6 ? s2_in_r_mmio : s2_tlb_hit & io_pmp_mmio);
  wire             s2_real_exceptionVec_4 = s2_isMisalign & s2_check_mmio;
  wire             s2_real_exceptionVec_5 =
    s2_exception_vec_5 | s2_fwd_frm_d_chan & io_tl_d_channel_corrupt
    | io_forward_mshr_forward_mshr & io_forward_mshr_corrupt;
  wire             s2_real_exception =
    s2_vecActive
    & (s2_trigger_debug_mode
       | (|{s2_exception_vec_21,
            s2_exception_vec_19,
            s2_exception_vec_13,
            s2_real_exceptionVec_5,
            s2_real_exceptionVec_4,
            s2_exception_vec_3}));
  wire             s2_safe_wakeup =
    {s2_out_rep_info_cause_9,
     s2_out_rep_info_cause_8,
     s2_out_rep_info_cause_7,
     s2_out_rep_info_cause_6,
     s2_out_rep_info_cause_4,
     s2_out_rep_info_cause_3,
     s2_out_rep_info_cause_2,
     s2_out_rep_info_cause_1,
     s2_out_rep_info_cause_0} == 9'h0 & ~s2_mmio & (~s2_in_r_nc | s2_nc_with_data)
    & ~s2_mis_align & ~s2_real_exception | s2_in_r_misalignNeedWakeUp;
  wire             s2_ld_raw_data_frm_tlD_use_D =
    s2_fwd_frm_d_chan & ~s2_nc_with_data & io_forward_mshr_forward_result_valid;
  wire [127:0]     s2_ld_raw_data_frm_tlD =
    s2_ld_raw_data_frm_tlD_use_D | io_forward_mshr_forward_mshr & ~s2_nc_with_data
    & io_forward_mshr_forward_result_valid
      ? (s2_ld_raw_data_frm_tlD_use_D
           ? {s2_fwd_data_frm_d_chan_15,
              s2_fwd_data_frm_d_chan_14,
              s2_fwd_data_frm_d_chan_13,
              s2_fwd_data_frm_d_chan_12,
              s2_fwd_data_frm_d_chan_11,
              s2_fwd_data_frm_d_chan_10,
              s2_fwd_data_frm_d_chan_9,
              s2_fwd_data_frm_d_chan_8,
              s2_fwd_data_frm_d_chan_7,
              s2_fwd_data_frm_d_chan_6,
              s2_fwd_data_frm_d_chan_5,
              s2_fwd_data_frm_d_chan_4,
              s2_fwd_data_frm_d_chan_3,
              s2_fwd_data_frm_d_chan_2,
              s2_fwd_data_frm_d_chan_1,
              s2_fwd_data_frm_d_chan_0}
           : {io_forward_mshr_forwardData_15,
              io_forward_mshr_forwardData_14,
              io_forward_mshr_forwardData_13,
              io_forward_mshr_forwardData_12,
              io_forward_mshr_forwardData_11,
              io_forward_mshr_forwardData_10,
              io_forward_mshr_forwardData_9,
              io_forward_mshr_forwardData_8,
              io_forward_mshr_forwardData_7,
              io_forward_mshr_forwardData_6,
              io_forward_mshr_forwardData_5,
              io_forward_mshr_forwardData_4,
              io_forward_mshr_forwardData_3,
              io_forward_mshr_forwardData_2,
              io_forward_mshr_forwardData_1,
              io_forward_mshr_forwardData_0})
      : s2_nc_with_data
          ? (s2_in_r_paddr[3] ? {s2_in_r_data[63:0], 64'h0} : s2_in_r_data[127:0])
          : io_dcache_resp_bits_data;
  wire [49:0]      _s2_out_uop_vpu_vstart_T_1 =
    s2_in_r_vecVaddrOffset >> s2_in_r_uop_vpu_veew;
  always @(posedge clock) begin
    io_ifetchPrefetch_valid_REG <= _io_ifetchPrefetch_bits_vaddr_T;
    s1_nc_with_data <= s0_sel_src_isnc;
    if (s0_fire) begin
      s1_in_r_uop_exceptionVec_4 <=
        (~s0_addr_aligned | s0_sel_src_uop_exceptionVec_4) & s0_sel_src_vecActive
        & ~s0_misalignWith16Byte;
      s1_in_r_uop_exceptionVec_19 <=
        _s0_sel_src_T_6
        & (_s0_sel_src_T
             ? io_misalign_ldin_valid & io_misalign_ldin_bits_uop_exceptionVec_19
             : io_fast_rep_in_valid
                 ? io_fast_rep_in_bits_uop_exceptionVec_19
                 : io_lsq_uncache_valid
                     ? io_lsq_uncache_bits_uop_exceptionVec_19
                     : io_lsq_nc_ldin_bits_uop_exceptionVec_19);
      s1_in_r_uop_preDecodeInfo_isRVC <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid
                    ? io_misalign_ldin_bits_uop_preDecodeInfo_isRVC
                    : io_replay_bits_uop_preDecodeInfo_isRVC)
               : io_fast_rep_in_valid
                   ? io_fast_rep_in_bits_uop_preDecodeInfo_isRVC
                   : io_lsq_uncache_valid
                       ? io_lsq_uncache_bits_uop_preDecodeInfo_isRVC
                       : io_lsq_nc_ldin_bits_uop_preDecodeInfo_isRVC)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_uop_preDecodeInfo_isRVC
                   : ~s0_src_selector_6 & io_vecldin_bits_uop_preDecodeInfo_isRVC)
              : io_ldin_valid & io_ldin_bits_uop_preDecodeInfo_isRVC;
      s1_in_r_uop_ftqPtr_flag <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid
                    ? io_misalign_ldin_bits_uop_ftqPtr_flag
                    : io_replay_bits_uop_ftqPtr_flag)
               : io_fast_rep_in_valid
                   ? io_fast_rep_in_bits_uop_ftqPtr_flag
                   : io_lsq_uncache_valid
                       ? io_lsq_uncache_bits_uop_ftqPtr_flag
                       : io_lsq_nc_ldin_bits_uop_ftqPtr_flag)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_uop_ftqPtr_flag
                   : ~s0_src_selector_6 & io_vecldin_bits_uop_ftqPtr_flag)
              : io_ldin_valid & io_ldin_bits_uop_ftqPtr_flag;
      s1_in_r_uop_ftqPtr_value <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid
                    ? io_misalign_ldin_bits_uop_ftqPtr_value
                    : io_replay_bits_uop_ftqPtr_value)
               : io_fast_rep_in_valid
                   ? io_fast_rep_in_bits_uop_ftqPtr_value
                   : io_lsq_uncache_valid
                       ? io_lsq_uncache_bits_uop_ftqPtr_value
                       : io_lsq_nc_ldin_bits_uop_ftqPtr_value)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_uop_ftqPtr_value
                   : s0_src_selector_6 ? 6'h0 : io_vecldin_bits_uop_ftqPtr_value)
              : io_ldin_valid ? io_ldin_bits_uop_ftqPtr_value : 6'h0;
      s1_in_r_uop_ftqOffset <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid
                    ? io_misalign_ldin_bits_uop_ftqOffset
                    : io_replay_bits_uop_ftqOffset)
               : io_fast_rep_in_valid
                   ? io_fast_rep_in_bits_uop_ftqOffset
                   : io_lsq_uncache_valid
                       ? io_lsq_uncache_bits_uop_ftqOffset
                       : io_lsq_nc_ldin_bits_uop_ftqOffset)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_uop_ftqOffset
                   : s0_src_selector_6 ? 4'h0 : io_vecldin_bits_uop_ftqOffset)
              : io_ldin_valid ? io_ldin_bits_uop_ftqOffset : 4'h0;
      s1_in_r_uop_fuOpType <= s0_sel_src_uop_fuOpType;
      s1_in_r_uop_rfWen <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid
                    ? io_misalign_ldin_bits_uop_rfWen
                    : io_replay_bits_uop_rfWen)
               : io_fast_rep_in_valid
                   ? io_fast_rep_in_bits_uop_rfWen
                   : io_lsq_uncache_valid
                       ? io_lsq_uncache_bits_uop_rfWen
                       : io_lsq_nc_ldin_bits_uop_rfWen)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_uop_rfWen
                   : ~s0_src_selector_6 & io_vecldin_bits_uop_rfWen)
              : io_ldin_valid & io_ldin_bits_uop_rfWen;
      s1_in_r_uop_fpWen <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid
                    ? io_misalign_ldin_bits_uop_fpWen
                    : io_replay_bits_uop_fpWen)
               : io_fast_rep_in_valid
                   ? io_fast_rep_in_bits_uop_fpWen
                   : io_lsq_uncache_valid
                       ? io_lsq_uncache_bits_uop_fpWen
                       : io_lsq_nc_ldin_bits_uop_fpWen)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_uop_fpWen
                   : ~s0_src_selector_6 & io_vecldin_bits_uop_fpWen)
              : io_ldin_valid & io_ldin_bits_uop_fpWen;
      s1_in_r_uop_vpu_vstart <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid
                    ? io_misalign_ldin_bits_uop_vpu_vstart
                    : io_replay_bits_uop_vpu_vstart)
               : io_fast_rep_in_valid
                   ? io_fast_rep_in_bits_uop_vpu_vstart
                   : io_lsq_uncache_valid
                       ? io_lsq_uncache_bits_uop_vpu_vstart
                       : io_lsq_nc_ldin_bits_uop_vpu_vstart)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_uop_vpu_vstart
                   : s0_src_selector_6 ? 8'h0 : io_vecldin_bits_uop_vpu_vstart)
              : 8'h0;
      s1_in_r_uop_vpu_veew <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid
                    ? io_misalign_ldin_bits_uop_vpu_veew
                    : io_replay_bits_uop_vpu_veew)
               : io_fast_rep_in_valid
                   ? io_fast_rep_in_bits_uop_vpu_veew
                   : io_lsq_uncache_valid
                       ? io_lsq_uncache_bits_uop_vpu_veew
                       : io_lsq_nc_ldin_bits_uop_vpu_veew)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_uop_vpu_veew
                   : s0_src_selector_6 ? 2'h0 : io_vecldin_bits_uop_vpu_veew)
              : 2'h0;
      s1_in_r_uop_uopIdx <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid
                    ? io_misalign_ldin_bits_uop_uopIdx
                    : io_replay_bits_uop_uopIdx)
               : io_fast_rep_in_valid
                   ? io_fast_rep_in_bits_uop_uopIdx
                   : io_lsq_uncache_valid
                       ? io_lsq_uncache_bits_uop_uopIdx
                       : io_lsq_nc_ldin_bits_uop_uopIdx)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_uop_uopIdx
                   : s0_src_selector_6 ? 7'h0 : io_vecldin_bits_uop_uopIdx)
              : 7'h0;
      s1_in_r_uop_pdest <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid
                    ? io_misalign_ldin_bits_uop_pdest
                    : io_replay_bits_uop_pdest)
               : io_fast_rep_in_valid
                   ? io_fast_rep_in_bits_uop_pdest
                   : io_lsq_uncache_valid
                       ? io_lsq_uncache_bits_uop_pdest
                       : io_lsq_nc_ldin_bits_uop_pdest)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_uop_pdest
                   : s0_src_selector_6 ? 8'h0 : io_vecldin_bits_uop_pdest)
              : io_ldin_valid ? io_ldin_bits_uop_pdest : 8'h0;
      s1_in_r_uop_robIdx_flag <= s0_sel_src_uop_robIdx_flag;
      s1_in_r_uop_robIdx_value <= s0_sel_src_uop_robIdx_value;
      s1_in_r_uop_storeSetHit <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid
                    ? io_misalign_ldin_bits_uop_storeSetHit
                    : io_replay_bits_uop_storeSetHit)
               : io_fast_rep_in_valid
                   ? io_fast_rep_in_bits_uop_storeSetHit
                   : io_lsq_uncache_valid
                       ? io_lsq_uncache_bits_uop_storeSetHit
                       : io_lsq_nc_ldin_bits_uop_storeSetHit)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_uop_storeSetHit
                   : ~s0_src_selector_6 & io_vecldin_bits_uop_storeSetHit)
              : io_ldin_valid & io_ldin_bits_uop_storeSetHit;
      s1_in_r_uop_waitForRobIdx_flag <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid
                    ? io_misalign_ldin_bits_uop_waitForRobIdx_flag
                    : io_replay_bits_uop_waitForRobIdx_flag)
               : io_fast_rep_in_valid
                   ? io_fast_rep_in_bits_uop_waitForRobIdx_flag
                   : io_lsq_uncache_valid
                       ? io_lsq_uncache_bits_uop_waitForRobIdx_flag
                       : io_lsq_nc_ldin_bits_uop_waitForRobIdx_flag)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_uop_waitForRobIdx_flag
                   : ~s0_src_selector_6 & io_vecldin_bits_uop_waitForRobIdx_flag)
              : io_ldin_valid & io_ldin_bits_uop_waitForRobIdx_flag;
      s1_in_r_uop_waitForRobIdx_value <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid
                    ? io_misalign_ldin_bits_uop_waitForRobIdx_value
                    : io_replay_bits_uop_waitForRobIdx_value)
               : io_fast_rep_in_valid
                   ? io_fast_rep_in_bits_uop_waitForRobIdx_value
                   : io_lsq_uncache_valid
                       ? io_lsq_uncache_bits_uop_waitForRobIdx_value
                       : io_lsq_nc_ldin_bits_uop_waitForRobIdx_value)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_uop_waitForRobIdx_value
                   : s0_src_selector_6 ? 8'h0 : io_vecldin_bits_uop_waitForRobIdx_value)
              : io_ldin_valid ? io_ldin_bits_uop_waitForRobIdx_value : 8'h0;
      s1_in_r_uop_loadWaitBit <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid
                    ? io_misalign_ldin_bits_uop_loadWaitBit
                    : io_replay_bits_uop_loadWaitBit)
               : io_fast_rep_in_valid
                   ? io_fast_rep_in_bits_uop_loadWaitBit
                   : io_lsq_uncache_valid
                       ? io_lsq_uncache_bits_uop_loadWaitBit
                       : io_lsq_nc_ldin_bits_uop_loadWaitBit)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_uop_loadWaitBit
                   : ~s0_src_selector_6 & io_vecldin_bits_uop_loadWaitBit)
              : io_ldin_valid & io_ldin_bits_uop_loadWaitBit;
      s1_in_r_uop_loadWaitStrict <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? io_misalign_ldin_valid & io_misalign_ldin_bits_uop_loadWaitStrict
               : io_fast_rep_in_valid
                   ? io_fast_rep_in_bits_uop_loadWaitStrict
                   : io_lsq_uncache_valid
                       ? io_lsq_uncache_bits_uop_loadWaitStrict
                       : io_lsq_nc_ldin_bits_uop_loadWaitStrict)
          : _s0_sel_src_T_10
              ? ~_GEN_11 & io_vecldin_bits_uop_loadWaitStrict
              : io_ldin_valid & io_ldin_bits_uop_loadWaitStrict;
      s1_in_r_uop_lqIdx_flag <= s0_sel_src_uop_lqIdx_flag;
      s1_in_r_uop_lqIdx_value <= s0_sel_src_uop_lqIdx_value;
      s1_in_r_uop_sqIdx_flag <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid
                    ? io_misalign_ldin_bits_uop_sqIdx_flag
                    : io_replay_bits_uop_sqIdx_flag)
               : io_fast_rep_in_valid
                   ? io_fast_rep_in_bits_uop_sqIdx_flag
                   : io_lsq_uncache_valid
                       ? io_lsq_uncache_bits_uop_sqIdx_flag
                       : io_lsq_nc_ldin_bits_uop_sqIdx_flag)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_uop_sqIdx_flag
                   : ~s0_src_selector_6 & io_vecldin_bits_uop_sqIdx_flag)
              : io_ldin_valid & io_ldin_bits_uop_sqIdx_flag;
      s1_in_r_uop_sqIdx_value <= s0_sel_src_uop_sqIdx_value;
      s1_in_r_vaddr <= s0_out_vaddr;
      s1_in_r_paddr <=
        io_lsq_nc_ldin_valid
          ? io_lsq_nc_ldin_bits_paddr
          : io_fast_rep_in_valid
              ? io_fast_rep_in_bits_paddr
              : _io_ifetchPrefetch_bits_vaddr_T ? 48'h0 : io_prefetch_req_bits_paddr;
      s1_in_r_mask <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid
                    ? io_misalign_ldin_bits_mask
                    : io_replay_bits_isvec
                        ? io_replay_bits_mask
                        : _s0_src_format_out_mask_T_13[15:0])
               : io_fast_rep_in_valid
                   ? io_fast_rep_in_bits_mask
                   : io_lsq_uncache_valid ? 16'h0 : _s0_src_format_out_mask_T_28[15:0])
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? (io_replay_bits_isvec
                        ? io_replay_bits_mask
                        : _s0_src_format_out_mask_T_42[15:0])
                   : s0_src_selector_6 ? 16'h0 : io_vecldin_bits_mask)
              : io_ldin_valid ? _s0_src_format_out_mask_T_57[15:0] : 16'h0;
      s1_in_r_data <=
        ~_s0_sel_src_T_6 | _s0_sel_src_T
          ? 129'h0
          : io_fast_rep_in_valid
              ? io_fast_rep_in_bits_data
              : io_lsq_uncache_valid ? 129'h0 : io_lsq_nc_ldin_bits_data;
      s1_in_r_nc <= s0_sel_src_isnc;
      s1_in_r_isPrefetch <= s0_sel_src_prf;
      s1_in_r_isHWPrefetch <= s0_out_isHWPrefetch;
      s1_in_r_isFrmMisAlignBuf <= s0_sel_src_frm_mabuf;
      s1_in_r_isvec <= s0_sel_src_isvec;
      s1_in_r_is128bit <= s0_is128bit;
      s1_in_r_elemIdx <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid ? 8'h0 : io_replay_bits_elemIdx)
               : io_fast_rep_in_valid ? io_fast_rep_in_bits_elemIdx : 8'h0)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_elemIdx
                   : s0_src_selector_6 ? 8'h0 : io_vecldin_bits_elemIdx)
              : 8'h0;
      s1_in_r_alignedType <= s0_sel_src_alignedType;
      s1_in_r_mbIndex <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid ? 4'h0 : io_replay_bits_mbIndex)
               : io_fast_rep_in_valid ? io_fast_rep_in_bits_mbIndex : 4'h0)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_mbIndex
                   : s0_src_selector_6 ? 4'h0 : io_vecldin_bits_mBIndex)
              : 4'h0;
      s1_in_r_reg_offset <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid ? 4'h0 : io_replay_bits_reg_offset)
               : io_fast_rep_in_valid ? io_fast_rep_in_bits_reg_offset : 4'h0)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_reg_offset
                   : s0_src_selector_6 ? 4'h0 : io_vecldin_bits_reg_offset)
              : 4'h0;
      s1_in_r_elemIdxInsideVd <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid ? 8'h0 : io_replay_bits_elemIdxInsideVd)
               : io_fast_rep_in_valid ? io_fast_rep_in_bits_elemIdxInsideVd : 8'h0)
          : _s0_sel_src_T_10
              ? (s0_src_selector_5
                   ? io_replay_bits_elemIdxInsideVd
                   : s0_src_selector_6 ? 8'h0 : io_vecldin_bits_elemIdxInsideVd)
              : 8'h0;
      s1_in_r_vecActive <= s0_sel_src_vecActive;
      s1_in_r_vecBaseVaddr <=
        _s0_sel_src_T_6 | ~_s0_sel_src_T_10 | _GEN_11 ? 50'h0 : io_vecldin_bits_basevaddr;
      s1_in_r_isFirstIssue <= ~_GEN & io_ldin_valid;
      s1_in_r_isLoadReplay <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? ~io_misalign_ldin_valid
               : io_fast_rep_in_valid & io_fast_rep_in_bits_isLoadReplay)
          : _s0_sel_src_T_10 & s0_src_selector_5;
      s1_in_r_isFastReplay <= _s0_sel_src_T_6 & ~_s0_sel_src_T & io_fast_rep_in_valid;
      s1_in_r_mshrid <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid
                    ? io_misalign_ldin_bits_mshrid
                    : io_replay_bits_mshrid)
               : io_fast_rep_in_valid ? io_fast_rep_in_bits_rep_info_mshr_id : 4'h0)
          : _GEN_12 ? io_replay_bits_mshrid : 4'h0;
      s1_in_r_forward_tlDchannel <= s0_src_select_vec_1;
      s1_in_r_schedIndex <=
        _s0_sel_src_T_6
          ? (_s0_sel_src_T
               ? (io_misalign_ldin_valid
                    ? io_misalign_ldin_bits_schedIndex
                    : io_replay_bits_schedIndex)
               : io_fast_rep_in_valid
                   ? io_fast_rep_in_bits_schedIndex
                   : io_lsq_uncache_valid ? 7'h0 : io_lsq_nc_ldin_bits_schedIndex)
          : _GEN_12 ? io_replay_bits_schedIndex : 7'h0;
      s1_in_r_tlbNoQuery <= s0_out_tlbNoQuery;
      s1_in_r_isMisalign <=
        (~s0_addr_aligned | s0_sel_src_uop_exceptionVec_4) & s0_sel_src_vecActive;
      s1_in_r_isFinalSplit <= s0_sel_src_frm_mabuf & io_misalign_ldin_bits_isFinalSplit;
      s1_in_r_misalignWith16Byte <= s0_misalignWith16Byte;
      s1_in_r_misalignNeedWakeUp <=
        s0_sel_src_frm_mabuf & io_misalign_ldin_bits_misalignNeedWakeUp;
      s1_sqIdx_mask <= 56'(_s1_sqIdx_mask_T[55:0] - 56'h1);
    end
    if (io_fast_rep_in_valid)
      s1_fast_rep_dly_kill_r <= io_fast_rep_in_bits_lateKill;
    REG <= io_tlb_req_bits_checkfullva_0;
    if (io_redirect_valid) begin
      s1_redirect_reg_bits_r_robIdx_flag <= io_redirect_bits_robIdx_flag;
      s1_redirect_reg_bits_r_robIdx_value <= io_redirect_bits_robIdx_value;
      s1_redirect_reg_bits_r_level <= io_redirect_bits_level;
    end
    if (s1_fire) begin
      s2_pbmt <= s1_pbmt;
      s2_in_r_uop_exceptionVec_3 <= s1_trigger_breakpoint;
      s2_in_r_uop_exceptionVec_4 <= s1_exception_new_vec_4;
      s2_in_r_uop_exceptionVec_5 <= s1_exception_new_vec_5;
      s2_in_r_uop_exceptionVec_13 <= s1_exception_new_vec_13;
      s2_in_r_uop_exceptionVec_19 <= s1_in_r_uop_exceptionVec_19;
      s2_in_r_uop_exceptionVec_21 <= s1_exception_new_vec_21;
      s2_in_r_uop_trigger <= _loadTrigger_tdataVec_io_toLoadStore_triggerAction;
      s2_in_r_uop_preDecodeInfo_isRVC <= s1_in_r_uop_preDecodeInfo_isRVC;
      s2_in_r_uop_ftqPtr_flag <= s1_in_r_uop_ftqPtr_flag;
      s2_in_r_uop_ftqPtr_value <= s1_in_r_uop_ftqPtr_value;
      s2_in_r_uop_ftqOffset <= s1_in_r_uop_ftqOffset;
      s2_in_r_uop_fuOpType <= s1_in_r_uop_fuOpType;
      s2_in_r_uop_rfWen <= s1_in_r_uop_rfWen;
      s2_in_r_uop_fpWen <= s1_in_r_uop_fpWen;
      s2_in_r_uop_vpu_vstart <= s1_in_r_uop_vpu_vstart;
      s2_in_r_uop_vpu_veew <= s1_in_r_uop_vpu_veew;
      s2_in_r_uop_uopIdx <= s1_in_r_uop_uopIdx;
      s2_in_r_uop_pdest <= s1_in_r_uop_pdest;
      s2_in_r_uop_robIdx_flag <= s1_in_r_uop_robIdx_flag;
      s2_in_r_uop_robIdx_value <= s1_in_r_uop_robIdx_value;
      s2_in_r_uop_storeSetHit <= s1_in_r_uop_storeSetHit;
      s2_in_r_uop_waitForRobIdx_flag <= s1_in_r_uop_waitForRobIdx_flag;
      s2_in_r_uop_waitForRobIdx_value <= s1_in_r_uop_waitForRobIdx_value;
      s2_in_r_uop_loadWaitBit <= s1_in_r_uop_loadWaitBit;
      s2_in_r_uop_loadWaitStrict <= s1_in_r_uop_loadWaitStrict;
      s2_in_r_uop_lqIdx_flag <= s1_in_r_uop_lqIdx_flag;
      s2_in_r_uop_lqIdx_value <= s1_in_r_uop_lqIdx_value;
      s2_in_r_uop_sqIdx_flag <= s1_in_r_uop_sqIdx_flag;
      s2_in_r_uop_sqIdx_value <= s1_in_r_uop_sqIdx_value;
      s2_in_r_vaddr <= s1_in_r_vaddr;
      s2_in_r_fullva <= io_tlb_resp_bits_fullva;
      s2_in_r_vaNeedExt <= io_tlb_resp_bits_excp_0_vaNeedExt;
      s2_in_r_isHyper <= io_tlb_resp_bits_excp_0_isHyper;
      s2_in_r_paddr <= s1_paddr_dup_lsu;
      s2_in_r_gpaddr <=
        s1_in_r_isFastReplay ? {16'h0, s1_in_r_paddr} : io_tlb_resp_bits_gpaddr_0;
      s2_in_r_isForVSnonLeafPTE <= io_tlb_resp_bits_isForVSnonLeafPTE;
      s2_in_r_mask <= s1_in_r_mask;
      s2_in_r_data <= s1_in_r_data;
      s2_in_r_tlbMiss <= s1_tlb_miss;
      s2_in_r_nc <= s1_in_r_nc | s1_pbmt == 2'h1;
      s2_in_r_mmio <= s1_pbmt == 2'h2;
      s2_in_r_isPrefetch <= s1_in_r_isPrefetch;
      s2_in_r_isHWPrefetch <= s1_in_r_isHWPrefetch;
      s2_in_r_isFrmMisAlignBuf <= s1_in_r_isFrmMisAlignBuf;
      s2_in_r_isvec <= s1_in_r_isvec;
      s2_in_r_is128bit <= s1_in_r_is128bit;
      s2_in_r_elemIdx <= s1_in_r_elemIdx;
      s2_in_r_alignedType <= s1_in_r_alignedType;
      s2_in_r_mbIndex <= s1_in_r_mbIndex;
      s2_in_r_reg_offset <= s1_in_r_reg_offset;
      s2_in_r_elemIdxInsideVd <= s1_in_r_elemIdxInsideVd;
      s2_in_r_vecActive <= s1_in_r_vecActive;
      s2_in_r_vecVaddrOffset <=
        _s1_out_vecTriggerMask_T
          ? 50'(_loadTrigger_tdataVec_io_toLoadStore_triggerVaddr - s1_in_r_vecBaseVaddr)
          : 50'(50'(s1_in_r_vaddr
                    + {46'h0,
                       s1_in_r_mask[0]
                         ? 4'h0
                         : s1_in_r_mask[1]
                             ? 4'h1
                             : s1_in_r_mask[2]
                                 ? 4'h2
                                 : s1_in_r_mask[3]
                                     ? 4'h3
                                     : s1_in_r_mask[4]
                                         ? 4'h4
                                         : s1_in_r_mask[5]
                                             ? 4'h5
                                             : s1_in_r_mask[6]
                                                 ? 4'h6
                                                 : s1_in_r_mask[7]
                                                     ? 4'h7
                                                     : s1_in_r_mask[8]
                                                         ? 4'h8
                                                         : s1_in_r_mask[9]
                                                             ? 4'h9
                                                             : s1_in_r_mask[10]
                                                                 ? 4'hA
                                                                 : s1_in_r_mask[11]
                                                                     ? 4'hB
                                                                     : s1_in_r_mask[12]
                                                                         ? 4'hC
                                                                         : s1_in_r_mask[13]
                                                                             ? 4'hD
                                                                             : s1_in_r_mask[14]
                                                                                 ? 4'hE
                                                                                 : {4{s1_in_r_mask[15]}}})
                - s1_in_r_vecBaseVaddr);
      s2_in_r_vecTriggerMask <=
        _s1_out_vecTriggerMask_T
          ? _loadTrigger_tdataVec_io_toLoadStore_triggerMask
          : 16'h0;
      s2_in_r_isFirstIssue <= s1_in_r_isFirstIssue;
      s2_in_r_isLoadReplay <= s1_in_r_isLoadReplay;
      s2_in_r_isFastReplay <= s1_in_r_isFastReplay;
      s2_in_r_schedIndex <= s1_in_r_schedIndex;
      s2_in_r_isMisalign <= ~_GEN_1 & s1_in_r_isMisalign;
      s2_in_r_isFinalSplit <= s1_in_r_isFinalSplit;
      s2_in_r_misalignWith16Byte <= s1_in_r_misalignWith16Byte;
      s2_in_r_misalignNeedWakeUp <= s1_in_r_misalignNeedWakeUp;
      s2_in_r_rep_info_cause_9 <=
        (|{io_stld_nuke_query_1_valid
             & (s1_in_r_uop_robIdx_flag ^ io_stld_nuke_query_1_bits_robIdx_flag
                ^ s1_in_r_uop_robIdx_value > io_stld_nuke_query_1_bits_robIdx_value)
             & (io_stld_nuke_query_1_bits_matchLine | _s1_isMatch128_T_2
                & s1_in_r_is128bit
                  ? s1_paddr_dup_lsu[47:4] == io_stld_nuke_query_1_bits_paddr[47:4]
                  : s1_paddr_dup_lsu[47:3] == io_stld_nuke_query_1_bits_paddr[47:3])
             & (|(s1_in_r_mask & io_stld_nuke_query_1_bits_mask)),
           io_stld_nuke_query_0_valid
             & (s1_in_r_uop_robIdx_flag ^ io_stld_nuke_query_0_bits_robIdx_flag
                ^ s1_in_r_uop_robIdx_value > io_stld_nuke_query_0_bits_robIdx_value)
             & (io_stld_nuke_query_0_bits_matchLine | _s1_isMatch128_T_2
                & s1_in_r_is128bit
                  ? s1_paddr_dup_lsu[47:4] == io_stld_nuke_query_0_bits_paddr[47:4]
                  : s1_paddr_dup_lsu[47:3] == io_stld_nuke_query_0_bits_paddr[47:3])
             & (|(s1_in_r_mask & io_stld_nuke_query_0_bits_mask))}) & ~s1_tlb_miss
        & ~(s1_in_r_isPrefetch & ~s1_in_r_isHWPrefetch);
    end
    s2_nc_with_data <= s1_nc_with_data;
    s2_mmio_req_bits_REG_uop_exceptionVec_3 <= io_lsq_uncache_bits_uop_exceptionVec_3;
    s2_mmio_req_bits_REG_uop_exceptionVec_4 <= io_lsq_uncache_bits_uop_exceptionVec_4;
    s2_mmio_req_bits_REG_uop_exceptionVec_5 <= io_lsq_uncache_bits_uop_exceptionVec_5;
    s2_mmio_req_bits_REG_uop_exceptionVec_13 <= io_lsq_uncache_bits_uop_exceptionVec_13;
    s2_mmio_req_bits_REG_uop_exceptionVec_19 <= io_lsq_uncache_bits_uop_exceptionVec_19;
    s2_mmio_req_bits_REG_uop_exceptionVec_21 <= io_lsq_uncache_bits_uop_exceptionVec_21;
    s2_mmio_req_bits_REG_uop_trigger <= io_lsq_uncache_bits_uop_trigger;
    s2_mmio_req_bits_REG_uop_rfWen <= io_lsq_uncache_bits_uop_rfWen;
    s2_mmio_req_bits_REG_uop_fpWen <= io_lsq_uncache_bits_uop_fpWen;
    s2_mmio_req_bits_REG_uop_flushPipe <= io_lsq_uncache_bits_uop_flushPipe;
    s2_mmio_req_bits_REG_uop_pdest <= io_lsq_uncache_bits_uop_pdest;
    s2_mmio_req_bits_REG_uop_robIdx_flag <= io_lsq_uncache_bits_uop_robIdx_flag;
    s2_mmio_req_bits_REG_uop_robIdx_value <= io_lsq_uncache_bits_uop_robIdx_value;
    s2_mmio_req_bits_REG_uop_replayInst <= io_lsq_uncache_bits_uop_replayInst;
    s2_mmio_req_bits_REG_1_uop_exceptionVec_3 <= s2_mmio_req_bits_REG_uop_exceptionVec_3;
    s2_mmio_req_bits_REG_1_uop_exceptionVec_4 <= s2_mmio_req_bits_REG_uop_exceptionVec_4;
    s2_mmio_req_bits_REG_1_uop_exceptionVec_5 <= s2_mmio_req_bits_REG_uop_exceptionVec_5;
    s2_mmio_req_bits_REG_1_uop_exceptionVec_13 <=
      s2_mmio_req_bits_REG_uop_exceptionVec_13;
    s2_mmio_req_bits_REG_1_uop_exceptionVec_19 <=
      s2_mmio_req_bits_REG_uop_exceptionVec_19;
    s2_mmio_req_bits_REG_1_uop_exceptionVec_21 <=
      s2_mmio_req_bits_REG_uop_exceptionVec_21;
    s2_mmio_req_bits_REG_1_uop_trigger <= s2_mmio_req_bits_REG_uop_trigger;
    s2_mmio_req_bits_REG_1_uop_rfWen <= s2_mmio_req_bits_REG_uop_rfWen;
    s2_mmio_req_bits_REG_1_uop_fpWen <= s2_mmio_req_bits_REG_uop_fpWen;
    s2_mmio_req_bits_REG_1_uop_flushPipe <= s2_mmio_req_bits_REG_uop_flushPipe;
    s2_mmio_req_bits_REG_1_uop_pdest <= s2_mmio_req_bits_REG_uop_pdest;
    s2_mmio_req_bits_REG_1_uop_robIdx_flag <= s2_mmio_req_bits_REG_uop_robIdx_flag;
    s2_mmio_req_bits_REG_1_uop_robIdx_value <= s2_mmio_req_bits_REG_uop_robIdx_value;
    s2_mmio_req_bits_REG_1_uop_replayInst <= s2_mmio_req_bits_REG_uop_replayInst;
    s2_tlb_hit <= ~io_tlb_resp_bits_miss & io_tlb_resp_valid & s1_valid;
    s2_mem_amb_REG <= io_lsq_forward_valid_0;
    s2_fwd_fail_REG <= io_lsq_forward_valid_0;
    if (s2_prefetch_train_valid) begin
      io_prefetch_train_bits_vaddr_r <= s2_in_r_vaddr;
      io_prefetch_train_bits_paddr_r <= s2_in_r_paddr;
      io_prefetch_train_bits_uop_r_robIdx_flag <= s2_in_r_uop_robIdx_flag;
      io_prefetch_train_bits_uop_r_robIdx_value <= s2_in_r_uop_robIdx_value;
      io_prefetch_train_bits_isFirstIssue_r <= s2_in_r_isFirstIssue;
      io_prefetch_train_bits_miss_r_1 <= io_dcache_resp_bits_miss;
    end
    if (s2_prefetch_train_l1_valid) begin
      io_prefetch_train_l1_bits_vaddr_r <= s2_in_r_vaddr;
      io_prefetch_train_l1_bits_uop_r_robIdx_flag <= s2_in_r_uop_robIdx_flag;
      io_prefetch_train_l1_bits_uop_r_robIdx_value <= s2_in_r_uop_robIdx_value;
      io_prefetch_train_l1_bits_isFirstIssue_r <= s2_in_r_isFirstIssue;
      io_prefetch_train_l1_bits_miss_r_1 <= io_dcache_resp_bits_miss;
      io_prefetch_train_l1_bits_meta_prefetch_r <= io_dcache_resp_bits_meta_prefetch;
    end
    if (s2_fire) begin
      s3_in_uop_exceptionVec_3 <= s2_exception_vec_3;
      s3_in_uop_exceptionVec_4 <= s2_real_exceptionVec_4;
      s3_in_uop_exceptionVec_5 <= s2_real_exceptionVec_5;
      s3_in_uop_exceptionVec_13 <= s2_exception_vec_13;
      s3_in_uop_exceptionVec_19 <= s2_exception_vec_19;
      s3_in_uop_exceptionVec_21 <= s2_exception_vec_21;
      s3_in_uop_trigger <= s2_in_r_uop_trigger;
      s3_in_uop_preDecodeInfo_isRVC <= s2_in_r_uop_preDecodeInfo_isRVC;
      s3_in_uop_ftqPtr_flag <= s2_in_r_uop_ftqPtr_flag;
      s3_in_uop_ftqPtr_value <= s2_in_r_uop_ftqPtr_value;
      s3_in_uop_ftqOffset <= s2_in_r_uop_ftqOffset;
      s3_in_uop_fuOpType <= s2_in_r_uop_fuOpType;
      s3_in_uop_rfWen <= s2_in_r_uop_rfWen;
      s3_in_uop_fpWen <= s2_in_r_uop_fpWen;
      s3_in_uop_vpu_vstart <=
        s2_in_r_isLoadReplay | s2_in_r_isFastReplay
          ? s2_in_r_uop_vpu_vstart
          : _s2_out_uop_vpu_vstart_T_1[7:0];
      s3_in_uop_vpu_veew <= s2_in_r_uop_vpu_veew;
      s3_in_uop_uopIdx <= s2_in_r_uop_uopIdx;
      s3_in_uop_pdest <= s2_in_r_uop_pdest;
      s3_in_uop_robIdx_flag <= s2_in_r_uop_robIdx_flag;
      s3_in_uop_robIdx_value <= s2_in_r_uop_robIdx_value;
      s3_in_uop_storeSetHit <= s2_in_r_uop_storeSetHit;
      s3_in_uop_waitForRobIdx_flag <= s2_in_r_uop_waitForRobIdx_flag;
      s3_in_uop_waitForRobIdx_value <= s2_in_r_uop_waitForRobIdx_value;
      s3_in_uop_loadWaitBit <= s2_in_r_uop_loadWaitBit;
      s3_in_uop_loadWaitStrict <= s2_in_r_uop_loadWaitStrict;
      s3_in_uop_lqIdx_flag <= s2_in_r_uop_lqIdx_flag;
      s3_in_uop_lqIdx_value <= s2_in_r_uop_lqIdx_value;
      s3_in_uop_sqIdx_flag <= s2_in_r_uop_sqIdx_flag;
      s3_in_uop_sqIdx_value <= s2_in_r_uop_sqIdx_value;
      s3_in_vaddr <= s2_in_r_vaddr;
      s3_in_fullva <= s2_in_r_fullva;
      s3_in_vaNeedExt <= s2_in_r_vaNeedExt;
      s3_in_isHyper <= s2_in_r_isHyper;
      s3_in_paddr <= s2_in_r_paddr;
      s3_in_gpaddr <= s2_in_r_gpaddr;
      s3_in_isForVSnonLeafPTE <= s2_in_r_isForVSnonLeafPTE;
      s3_in_mask <= s2_in_r_mask;
      s3_in_data <= s2_in_r_data;
      s3_in_tlbMiss <= s2_in_r_tlbMiss;
      s3_in_nc <= s2_in_r_nc;
      s3_in_mmio <= s2_mmio;
      s3_in_memBackTypeMM <= ~io_pmp_mmio;
      s3_in_isFrmMisAlignBuf <= s2_in_r_isFrmMisAlignBuf;
      s3_in_isvec <= s2_in_r_isvec;
      s3_in_is128bit <= s2_in_r_is128bit;
      s3_in_elemIdx <= s2_in_r_elemIdx;
      s3_in_alignedType <= s2_in_r_alignedType;
      s3_in_mbIndex <= s2_in_r_mbIndex;
      s3_in_reg_offset <= s2_in_r_reg_offset;
      s3_in_elemIdxInsideVd <= s2_in_r_elemIdxInsideVd;
      s3_in_vecActive <= s2_in_r_vecActive;
      s3_in_vecTriggerMask <= s2_in_r_vecTriggerMask;
      s3_in_isLoadReplay <= s2_in_r_isLoadReplay;
      s3_in_handledByMSHR <= io_dcache_resp_bits_handled;
      s3_in_schedIndex <= s2_in_r_schedIndex;
      s3_in_isFinalSplit <= s2_in_r_isFinalSplit;
      s3_in_misalignWith16Byte <= s2_in_r_misalignWith16Byte;
      s3_in_misalignNeedWakeUp <= s2_in_r_misalignNeedWakeUp;
      s3_in_rep_info_mshr_id <= io_dcache_resp_bits_mshr_id;
      s3_in_rep_info_full_fwd <= s2_dcache_miss & s2_full_fwd;
      s3_in_rep_info_data_inv_sq_idx_flag <= io_lsq_forward_dataInvalidSqIdx_flag;
      s3_in_rep_info_data_inv_sq_idx_value <= io_lsq_forward_dataInvalidSqIdx_value;
      s3_in_rep_info_addr_inv_sq_idx_flag <= io_lsq_forward_addrInvalidSqIdx_flag;
      s3_in_rep_info_addr_inv_sq_idx_value <= io_lsq_forward_addrInvalidSqIdx_value;
      s3_in_rep_info_last_beat <= s2_in_r_paddr[5];
      s3_in_rep_info_cause_0 <= s2_out_rep_info_cause_0;
      s3_in_rep_info_cause_1 <= s2_out_rep_info_cause_1;
      s3_in_rep_info_cause_2 <= s2_out_rep_info_cause_2;
      s3_in_rep_info_cause_3 <= s2_out_rep_info_cause_3;
      s3_in_rep_info_cause_4 <= s2_out_rep_info_cause_4;
      s3_in_rep_info_cause_6 <= s2_out_rep_info_cause_6;
      s3_in_rep_info_cause_7 <= s2_out_rep_info_cause_7;
      s3_in_rep_info_cause_8 <= s2_out_rep_info_cause_8;
      s3_in_rep_info_cause_9 <= s2_out_rep_info_cause_9;
      s3_in_rep_info_tlb_id <= io_tlb_hint_id;
      s3_in_rep_info_tlb_full <= io_tlb_hint_full;
      s3_vec_alignedType <= s2_in_r_alignedType;
      s3_vec_mBIndex <= s2_in_r_mbIndex;
      s3_safe_wakeup <= s2_safe_wakeup;
      s3_safe_writeback <=
        s2_real_exception | s2_safe_wakeup | s2_fwd_vp_match_invalid & _s2_troublem_T_5
        | s2_in_r_misalignNeedWakeUp;
      s3_exception <= s2_real_exception;
      s3_mis_align <= s2_mis_align;
      s3_merged_data_frm_pipe <=
        {s2_fwd_mask_15
           ? (io_lsq_forward_forwardMask_15
                ? io_lsq_forward_forwardData_15
                : s2_nc_with_data ? io_ubuffer_forwardData_15 : io_sbuffer_forwardData_15)
           : s2_ld_raw_data_frm_tlD[127:120],
         s2_fwd_mask_14
           ? (io_lsq_forward_forwardMask_14
                ? io_lsq_forward_forwardData_14
                : s2_nc_with_data ? io_ubuffer_forwardData_14 : io_sbuffer_forwardData_14)
           : s2_ld_raw_data_frm_tlD[119:112],
         s2_fwd_mask_13
           ? (io_lsq_forward_forwardMask_13
                ? io_lsq_forward_forwardData_13
                : s2_nc_with_data ? io_ubuffer_forwardData_13 : io_sbuffer_forwardData_13)
           : s2_ld_raw_data_frm_tlD[111:104],
         s2_fwd_mask_12
           ? (io_lsq_forward_forwardMask_12
                ? io_lsq_forward_forwardData_12
                : s2_nc_with_data ? io_ubuffer_forwardData_12 : io_sbuffer_forwardData_12)
           : s2_ld_raw_data_frm_tlD[103:96],
         s2_fwd_mask_11
           ? (io_lsq_forward_forwardMask_11
                ? io_lsq_forward_forwardData_11
                : s2_nc_with_data ? io_ubuffer_forwardData_11 : io_sbuffer_forwardData_11)
           : s2_ld_raw_data_frm_tlD[95:88],
         s2_fwd_mask_10
           ? (io_lsq_forward_forwardMask_10
                ? io_lsq_forward_forwardData_10
                : s2_nc_with_data ? io_ubuffer_forwardData_10 : io_sbuffer_forwardData_10)
           : s2_ld_raw_data_frm_tlD[87:80],
         s2_fwd_mask_9
           ? (io_lsq_forward_forwardMask_9
                ? io_lsq_forward_forwardData_9
                : s2_nc_with_data ? io_ubuffer_forwardData_9 : io_sbuffer_forwardData_9)
           : s2_ld_raw_data_frm_tlD[79:72],
         s2_fwd_mask_8
           ? (io_lsq_forward_forwardMask_8
                ? io_lsq_forward_forwardData_8
                : s2_nc_with_data ? io_ubuffer_forwardData_8 : io_sbuffer_forwardData_8)
           : s2_ld_raw_data_frm_tlD[71:64],
         s2_fwd_mask_7
           ? (io_lsq_forward_forwardMask_7
                ? io_lsq_forward_forwardData_7
                : s2_nc_with_data ? io_ubuffer_forwardData_7 : io_sbuffer_forwardData_7)
           : s2_ld_raw_data_frm_tlD[63:56],
         s2_fwd_mask_6
           ? (io_lsq_forward_forwardMask_6
                ? io_lsq_forward_forwardData_6
                : s2_nc_with_data ? io_ubuffer_forwardData_6 : io_sbuffer_forwardData_6)
           : s2_ld_raw_data_frm_tlD[55:48],
         s2_fwd_mask_5
           ? (io_lsq_forward_forwardMask_5
                ? io_lsq_forward_forwardData_5
                : s2_nc_with_data ? io_ubuffer_forwardData_5 : io_sbuffer_forwardData_5)
           : s2_ld_raw_data_frm_tlD[47:40],
         s2_fwd_mask_4
           ? (io_lsq_forward_forwardMask_4
                ? io_lsq_forward_forwardData_4
                : s2_nc_with_data ? io_ubuffer_forwardData_4 : io_sbuffer_forwardData_4)
           : s2_ld_raw_data_frm_tlD[39:32],
         s2_fwd_mask_3
           ? (io_lsq_forward_forwardMask_3
                ? io_lsq_forward_forwardData_3
                : s2_nc_with_data ? io_ubuffer_forwardData_3 : io_sbuffer_forwardData_3)
           : s2_ld_raw_data_frm_tlD[31:24],
         s2_fwd_mask_2
           ? (io_lsq_forward_forwardMask_2
                ? io_lsq_forward_forwardData_2
                : s2_nc_with_data ? io_ubuffer_forwardData_2 : io_sbuffer_forwardData_2)
           : s2_ld_raw_data_frm_tlD[23:16],
         s2_fwd_mask_1
           ? (io_lsq_forward_forwardMask_1
                ? io_lsq_forward_forwardData_1
                : s2_nc_with_data ? io_ubuffer_forwardData_1 : io_sbuffer_forwardData_1)
           : s2_ld_raw_data_frm_tlD[15:8],
         s2_fwd_mask_0
           ? (io_lsq_forward_forwardMask_0
                ? io_lsq_forward_forwardData_0
                : s2_nc_with_data ? io_ubuffer_forwardData_0 : io_sbuffer_forwardData_0)
           : s2_ld_raw_data_frm_tlD[7:0]};
    end
    s3_nc_with_data <= s2_nc_with_data;
    s3_mmio_req_valid <= s2_mmio_req_valid_REG_1;
    s3_mmio_req_bits_uop_exceptionVec_3 <= s2_mmio_req_bits_REG_1_uop_exceptionVec_3;
    s3_mmio_req_bits_uop_exceptionVec_4 <= s2_mmio_req_bits_REG_1_uop_exceptionVec_4;
    s3_mmio_req_bits_uop_exceptionVec_5 <= s2_mmio_req_bits_REG_1_uop_exceptionVec_5;
    s3_mmio_req_bits_uop_exceptionVec_13 <= s2_mmio_req_bits_REG_1_uop_exceptionVec_13;
    s3_mmio_req_bits_uop_exceptionVec_19 <= s2_mmio_req_bits_REG_1_uop_exceptionVec_19;
    s3_mmio_req_bits_uop_exceptionVec_21 <= s2_mmio_req_bits_REG_1_uop_exceptionVec_21;
    s3_mmio_req_bits_uop_trigger <= s2_mmio_req_bits_REG_1_uop_trigger;
    s3_mmio_req_bits_uop_flushPipe <= s2_mmio_req_bits_REG_1_uop_flushPipe;
    s3_mmio_req_bits_uop_robIdx_flag <= s2_mmio_req_bits_REG_1_uop_robIdx_flag;
    s3_mmio_req_bits_uop_robIdx_value <= s2_mmio_req_bits_REG_1_uop_robIdx_value;
    s3_mmio_req_bits_uop_replayInst <= s2_mmio_req_bits_REG_1_uop_replayInst;
    s3_pdest <= s2_valid ? s2_in_r_uop_pdest : s2_mmio_req_bits_REG_1_uop_pdest;
    if (s2_valid | s2_mmio_req_valid_REG_1) begin
      s3_rfWen <= s2_valid ? s2_in_r_uop_rfWen : s2_mmio_req_bits_REG_1_uop_rfWen;
      s3_fpWen <= s2_valid ? s2_in_r_uop_fpWen : s2_mmio_req_bits_REG_1_uop_fpWen;
    end
    s3_fast_rep_REG <= s2_fast_rep;
    s3_ld_raw_data_frm_mmio_REG_lqData <= io_lsq_ld_raw_data_lqData;
    s3_ld_raw_data_frm_mmio_REG_uop_fuOpType <= io_lsq_ld_raw_data_uop_fuOpType;
    s3_ld_raw_data_frm_mmio_REG_uop_fpWen <= io_lsq_ld_raw_data_uop_fpWen;
    s3_ld_raw_data_frm_mmio_REG_addrOffset <= io_lsq_ld_raw_data_addrOffset;
    s3_ld_raw_data_frm_mmio_REG_1_lqData <= s3_ld_raw_data_frm_mmio_REG_lqData;
    s3_ld_raw_data_frm_mmio_REG_1_uop_fuOpType <=
      s3_ld_raw_data_frm_mmio_REG_uop_fuOpType;
    s3_ld_raw_data_frm_mmio_REG_1_uop_fpWen <= s3_ld_raw_data_frm_mmio_REG_uop_fpWen;
    s3_ld_raw_data_frm_mmio_REG_1_addrOffset <= s3_ld_raw_data_frm_mmio_REG_addrOffset;
    s3_ld_raw_data_frm_mmio_lqData <= s3_ld_raw_data_frm_mmio_REG_1_lqData;
    s3_ld_raw_data_frm_mmio_uop_fuOpType <= s3_ld_raw_data_frm_mmio_REG_1_uop_fuOpType;
    s3_ld_raw_data_frm_mmio_uop_fpWen <= s3_ld_raw_data_frm_mmio_REG_1_uop_fpWen;
    s3_ld_raw_data_frm_mmio_addrOffset <= s3_ld_raw_data_frm_mmio_REG_1_addrOffset;
    s3_ldout_valid_REG <= ~s2_in_r_isvec & ~s2_in_r_isFrmMisAlignBuf;
    io_perf_0_value_REG <= s0_fire;
    io_perf_0_value_REG_1 <= io_perf_0_value_REG;
    io_perf_1_value_REG <= 1'h0;
    io_perf_1_value_REG_1 <= io_perf_1_value_REG;
    io_perf_2_value_REG <= s0_fire & ~io_dcache_req_ready;
    io_perf_2_value_REG_1 <= io_perf_2_value_REG;
    io_perf_3_value_REG <= s0_fire;
    io_perf_3_value_REG_1 <= io_perf_3_value_REG;
    io_perf_4_value_REG <= s1_fire & io_tlb_resp_bits_miss;
    io_perf_4_value_REG_1 <= io_perf_4_value_REG;
    io_perf_5_value_REG <= s1_fire;
    io_perf_5_value_REG_1 <= io_perf_5_value_REG;
    io_perf_6_value_REG <= s2_fire & io_dcache_resp_bits_miss;
    io_perf_6_value_REG_1 <= io_perf_6_value_REG;
  end // always @(posedge)
  wire [3:0][63:0] _GEN_13 =
    {{io_tl_d_channel_data[255:192]},
     {io_tl_d_channel_data[191:128]},
     {io_tl_d_channel_data[127:64]},
     {io_tl_d_channel_data[63:0]}};
  wire [63:0]      _GEN_14 = _GEN_13[s1_paddr_dup_lsu[4:3]];
  wire [63:0]      _GEN_15 =
    s1_paddr_dup_lsu[3] ? _GEN_14 : _GEN_13[2'(s1_paddr_dup_lsu[4:3] + 2'h1)];
  wire             _s2_data_select_result_T_4 = s2_in_r_uop_fuOpType == 9'h2;
  wire             _s2_data_select_result_T_9 = s2_in_r_uop_fuOpType == 9'h1;
  wire             all_match =
    io_forward_mshr_valid_0 & io_tl_d_channel_valid
    & s1_in_r_mshrid == io_tl_d_channel_mshrid
    & s1_paddr_dup_lsu[5] == io_tl_d_channel_last;
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      io_ifetchPrefetch_bits_vaddr_r <= 50'h0;
      s1_valid <= 1'h0;
      s1_vecActive <= 1'h1;
      s1_redirect_reg_valid_last_REG <= 1'h0;
      s2_valid <= 1'h0;
      s2_vecActive <= 1'h1;
      s2_isvec <= 1'h0;
      s2_trigger_debug_mode <= 1'h0;
      s2_mmio_req_valid_REG <= 1'h0;
      s2_mmio_req_valid_REG_1 <= 1'h0;
      s2_mis_align_last_REG <= 1'h0;
      s2_fwd_frm_d_chan <= 1'h0;
      s2_fwd_data_frm_d_chan_0 <= 8'h0;
      s2_fwd_data_frm_d_chan_1 <= 8'h0;
      s2_fwd_data_frm_d_chan_2 <= 8'h0;
      s2_fwd_data_frm_d_chan_3 <= 8'h0;
      s2_fwd_data_frm_d_chan_4 <= 8'h0;
      s2_fwd_data_frm_d_chan_5 <= 8'h0;
      s2_fwd_data_frm_d_chan_6 <= 8'h0;
      s2_fwd_data_frm_d_chan_7 <= 8'h0;
      s2_fwd_data_frm_d_chan_8 <= 8'h0;
      s2_fwd_data_frm_d_chan_9 <= 8'h0;
      s2_fwd_data_frm_d_chan_10 <= 8'h0;
      s2_fwd_data_frm_d_chan_11 <= 8'h0;
      s2_fwd_data_frm_d_chan_12 <= 8'h0;
      s2_fwd_data_frm_d_chan_13 <= 8'h0;
      s2_fwd_data_frm_d_chan_14 <= 8'h0;
      s2_fwd_data_frm_d_chan_15 <= 8'h0;
      io_s2_ptr_chasing_r <= 1'h0;
      io_prefetch_train_valid_last_REG <= 1'h0;
      io_prefetch_train_l1_valid_last_REG <= 1'h0;
      s3_valid_last_REG <= 1'h0;
      s3_troublem_last_REG <= 1'h0;
      s3_vecActive <= 1'h1;
      s3_isvec <= 1'h0;
      s3_data_select <= 9'h0;
      s3_data_select_by_offset_0 <= 1'h0;
      s3_data_select_by_offset_1 <= 1'h0;
      s3_data_select_by_offset_2 <= 1'h0;
      s3_data_select_by_offset_3 <= 1'h0;
      s3_data_select_by_offset_4 <= 1'h0;
      s3_data_select_by_offset_5 <= 1'h0;
      s3_data_select_by_offset_6 <= 1'h0;
      s3_data_select_by_offset_7 <= 1'h0;
      s3_data_select_by_offset_8 <= 1'h0;
      s3_data_select_by_offset_9 <= 1'h0;
      s3_data_select_by_offset_10 <= 1'h0;
      s3_data_select_by_offset_11 <= 1'h0;
      s3_data_select_by_offset_12 <= 1'h0;
      s3_data_select_by_offset_13 <= 1'h0;
      s3_data_select_by_offset_14 <= 1'h0;
      s3_data_select_by_offset_15 <= 1'h0;
      s3_vp_match_fail_last_REG <= 1'h0;
      s3_ldld_rep_inst_last_REG <= 1'h0;
    end
    else begin
      if (_io_ifetchPrefetch_bits_vaddr_T)
        io_ifetchPrefetch_bits_vaddr_r <= s0_out_vaddr;
      s1_valid <= s0_fire | ~(s1_fire | s1_kill) & s1_valid;
      if (s0_fire)
        s1_vecActive <= s0_sel_src_vecActive;
      s1_redirect_reg_valid_last_REG <= io_redirect_valid;
      s2_valid <= s1_fire | ~(s2_fire | s2_kill) & s2_valid;
      if (s1_fire) begin
        s2_vecActive <= s1_in_r_vecActive;
        s2_isvec <= s1_in_r_isvec;
        s2_trigger_debug_mode <= s1_trigger_debug_mode;
      end
      s2_mmio_req_valid_REG <= s0_mmio_fire & io_lsq_uncache_valid;
      s2_mmio_req_valid_REG_1 <= s2_mmio_req_valid_REG;
      s2_mis_align_last_REG <= io_csrCtrl_hd_misalign_ld_enable;
      s2_fwd_frm_d_chan <= all_match;
      if (all_match) begin
        s2_fwd_data_frm_d_chan_0 <= _GEN_14[7:0];
        s2_fwd_data_frm_d_chan_1 <= _GEN_14[15:8];
        s2_fwd_data_frm_d_chan_2 <= _GEN_14[23:16];
        s2_fwd_data_frm_d_chan_3 <= _GEN_14[31:24];
        s2_fwd_data_frm_d_chan_4 <= _GEN_14[39:32];
        s2_fwd_data_frm_d_chan_5 <= _GEN_14[47:40];
        s2_fwd_data_frm_d_chan_6 <= _GEN_14[55:48];
        s2_fwd_data_frm_d_chan_7 <= _GEN_14[63:56];
        s2_fwd_data_frm_d_chan_8 <= _GEN_15[7:0];
        s2_fwd_data_frm_d_chan_9 <= _GEN_15[15:8];
        s2_fwd_data_frm_d_chan_10 <= _GEN_15[23:16];
        s2_fwd_data_frm_d_chan_11 <= _GEN_15[31:24];
        s2_fwd_data_frm_d_chan_12 <= _GEN_15[39:32];
        s2_fwd_data_frm_d_chan_13 <= _GEN_15[47:40];
        s2_fwd_data_frm_d_chan_14 <= _GEN_15[55:48];
        s2_fwd_data_frm_d_chan_15 <= _GEN_15[63:56];
      end
      io_s2_ptr_chasing_r <= ~s1_fire & io_s2_ptr_chasing_r;
      io_prefetch_train_valid_last_REG <= s2_prefetch_train_valid;
      io_prefetch_train_l1_valid_last_REG <= s2_prefetch_train_l1_valid;
      s3_valid_last_REG <=
        s2_valid & ~s2_in_r_isHWPrefetch
        & ~(io_redirect_valid
            & (io_redirect_bits_level
               & {s2_in_r_uop_robIdx_flag,
                  s2_in_r_uop_robIdx_value} == _io_vecldout_valid_flushItself_T_2
               | s2_in_r_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
               ^ s2_in_r_uop_robIdx_value > io_redirect_bits_robIdx_value));
      s3_troublem_last_REG <= _s2_troublem_T_5;
      if (s2_fire) begin
        s3_vecActive <= s2_in_r_vecActive;
        s3_isvec <= s2_in_r_isvec;
        s3_data_select <=
          {_s2_data_select_result_T_4 & s2_in_r_uop_fpWen,
           _s2_data_select_result_T_9 & s2_in_r_uop_fpWen,
           _s2_data_select_result_T_4 & ~s2_in_r_uop_fpWen
             | s2_in_r_uop_fuOpType == 9'h12,
           _s2_data_select_result_T_9 & ~s2_in_r_uop_fpWen
             | s2_in_r_uop_fuOpType == 9'h11,
           s2_in_r_uop_fuOpType == 9'h0 | s2_in_r_uop_fuOpType == 9'h10,
           s2_in_r_uop_fuOpType == 9'h3 | s2_in_r_uop_fuOpType == 9'h13,
           s2_in_r_uop_fuOpType == 9'h6 | s2_in_r_uop_fuOpType == 9'h16
             | s2_in_r_uop_fuOpType == 9'h1E,
           s2_in_r_uop_fuOpType == 9'h5 | s2_in_r_uop_fuOpType == 9'h15
             | s2_in_r_uop_fuOpType == 9'h1D,
           s2_in_r_uop_fuOpType == 9'h4 | s2_in_r_uop_fuOpType == 9'h14};
        s3_data_select_by_offset_0 <= s2_in_r_paddr[3:0] == 4'h0;
        s3_data_select_by_offset_1 <= s2_in_r_paddr[3:0] == 4'h1;
        s3_data_select_by_offset_2 <= s2_in_r_paddr[3:0] == 4'h2;
        s3_data_select_by_offset_3 <= s2_in_r_paddr[3:0] == 4'h3;
        s3_data_select_by_offset_4 <= s2_in_r_paddr[3:0] == 4'h4;
        s3_data_select_by_offset_5 <= s2_in_r_paddr[3:0] == 4'h5;
        s3_data_select_by_offset_6 <= s2_in_r_paddr[3:0] == 4'h6;
        s3_data_select_by_offset_7 <= s2_in_r_paddr[3:0] == 4'h7;
        s3_data_select_by_offset_8 <= s2_in_r_paddr[3:0] == 4'h8;
        s3_data_select_by_offset_9 <= s2_in_r_paddr[3:0] == 4'h9;
        s3_data_select_by_offset_10 <= s2_in_r_paddr[3:0] == 4'hA;
        s3_data_select_by_offset_11 <= s2_in_r_paddr[3:0] == 4'hB;
        s3_data_select_by_offset_12 <= s2_in_r_paddr[3:0] == 4'hC;
        s3_data_select_by_offset_13 <= s2_in_r_paddr[3:0] == 4'hD;
        s3_data_select_by_offset_14 <= s2_in_r_paddr[3:0] == 4'hE;
        s3_data_select_by_offset_15 <= &(s2_in_r_paddr[3:0]);
      end
      s3_vp_match_fail_last_REG <= s2_fwd_vp_match_invalid;
      s3_ldld_rep_inst_last_REG <= io_csrCtrl_ldld_vio_check_enable;
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:689];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [9:0] i = 10'h0; i < 10'h2B2; i += 10'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        io_ifetchPrefetch_valid_REG = _RANDOM[10'h2][0];
        io_ifetchPrefetch_bits_vaddr_r = {_RANDOM[10'h2][31:1], _RANDOM[10'h3][18:0]};
        s1_valid = _RANDOM[10'h3][19];
        s1_vecActive = _RANDOM[10'h3][20];
        s1_nc_with_data = _RANDOM[10'h3][21];
        s1_in_r_uop_exceptionVec_4 = _RANDOM[10'h6][22];
        s1_in_r_uop_exceptionVec_19 = _RANDOM[10'h7][5];
        s1_in_r_uop_preDecodeInfo_isRVC = _RANDOM[10'h7][17];
        s1_in_r_uop_ftqPtr_flag = _RANDOM[10'h7][24];
        s1_in_r_uop_ftqPtr_value = _RANDOM[10'h7][30:25];
        s1_in_r_uop_ftqOffset = {_RANDOM[10'h7][31], _RANDOM[10'h8][2:0]};
        s1_in_r_uop_fuOpType = _RANDOM[10'hA][8:0];
        s1_in_r_uop_rfWen = _RANDOM[10'hA][9];
        s1_in_r_uop_fpWen = _RANDOM[10'hA][10];
        s1_in_r_uop_vpu_vstart = _RANDOM[10'hC][25:18];
        s1_in_r_uop_vpu_veew = _RANDOM[10'h11][26:25];
        s1_in_r_uop_uopIdx = _RANDOM[10'h12][14:8];
        s1_in_r_uop_pdest = _RANDOM[10'h15][21:14];
        s1_in_r_uop_robIdx_flag = _RANDOM[10'h16][2];
        s1_in_r_uop_robIdx_value = _RANDOM[10'h16][10:3];
        s1_in_r_uop_storeSetHit = _RANDOM[10'h28][28];
        s1_in_r_uop_waitForRobIdx_flag = _RANDOM[10'h28][29];
        s1_in_r_uop_waitForRobIdx_value = {_RANDOM[10'h28][31:30], _RANDOM[10'h29][5:0]};
        s1_in_r_uop_loadWaitBit = _RANDOM[10'h29][6];
        s1_in_r_uop_loadWaitStrict = _RANDOM[10'h29][7];
        s1_in_r_uop_lqIdx_flag = _RANDOM[10'h29][13];
        s1_in_r_uop_lqIdx_value = _RANDOM[10'h29][20:14];
        s1_in_r_uop_sqIdx_flag = _RANDOM[10'h29][21];
        s1_in_r_uop_sqIdx_value = _RANDOM[10'h29][27:22];
        s1_in_r_vaddr = {_RANDOM[10'h2A][31:3], _RANDOM[10'h2B][20:0]};
        s1_in_r_paddr = {_RANDOM[10'h2D][31:23], _RANDOM[10'h2E], _RANDOM[10'h2F][6:0]};
        s1_in_r_mask = _RANDOM[10'h31][23:8];
        s1_in_r_data =
          {_RANDOM[10'h31][31:24],
           _RANDOM[10'h32],
           _RANDOM[10'h33],
           _RANDOM[10'h34],
           _RANDOM[10'h35][24:0]};
        s1_in_r_nc = _RANDOM[10'h35][30];
        s1_in_r_isPrefetch = _RANDOM[10'h3A][19];
        s1_in_r_isHWPrefetch = _RANDOM[10'h3A][20];
        s1_in_r_isFrmMisAlignBuf = _RANDOM[10'h3A][21];
        s1_in_r_isvec = _RANDOM[10'h3A][22];
        s1_in_r_is128bit = _RANDOM[10'h3A][24];
        s1_in_r_elemIdx = {_RANDOM[10'h3A][31:27], _RANDOM[10'h3B][2:0]};
        s1_in_r_alignedType = _RANDOM[10'h3B][5:3];
        s1_in_r_mbIndex = _RANDOM[10'h3B][9:6];
        s1_in_r_reg_offset = _RANDOM[10'h3B][13:10];
        s1_in_r_elemIdxInsideVd = _RANDOM[10'h3B][21:14];
        s1_in_r_vecActive = _RANDOM[10'h3B][22];
        s1_in_r_vecBaseVaddr =
          {_RANDOM[10'h3B][31:24], _RANDOM[10'h3C], _RANDOM[10'h3D][9:0]};
        s1_in_r_isFirstIssue = _RANDOM[10'h3F][12];
        s1_in_r_isLoadReplay = _RANDOM[10'h3F][14];
        s1_in_r_isFastReplay = _RANDOM[10'h3F][16];
        s1_in_r_mshrid = _RANDOM[10'h3F][25:22];
        s1_in_r_forward_tlDchannel = _RANDOM[10'h3F][29];
        s1_in_r_schedIndex = _RANDOM[10'h40][11:5];
        s1_in_r_tlbNoQuery = _RANDOM[10'h40][12];
        s1_in_r_isMisalign = _RANDOM[10'h40][13];
        s1_in_r_isFinalSplit = _RANDOM[10'h40][14];
        s1_in_r_misalignWith16Byte = _RANDOM[10'h40][15];
        s1_in_r_misalignNeedWakeUp = _RANDOM[10'h40][16];
        s1_fast_rep_dly_kill_r = _RANDOM[10'h54][2];
        REG = _RANDOM[10'h56][5];
        s1_redirect_reg_bits_r_robIdx_flag = _RANDOM[10'h56][15];
        s1_redirect_reg_bits_r_robIdx_value = _RANDOM[10'h56][23:16];
        s1_redirect_reg_bits_r_level = _RANDOM[10'h57][3];
        s1_redirect_reg_valid_last_REG = _RANDOM[10'h68][3];
        s1_sqIdx_mask = {_RANDOM[10'h68][31:6], _RANDOM[10'h69][29:0]};
        s2_valid = _RANDOM[10'h69][30];
        s2_vecActive = _RANDOM[10'h69][31];
        s2_isvec = _RANDOM[10'h6A][0];
        s2_pbmt = _RANDOM[10'h6A][2:1];
        s2_trigger_debug_mode = _RANDOM[10'h6A][3];
        s2_nc_with_data = _RANDOM[10'h6A][4];
        s2_mmio_req_valid_REG = _RANDOM[10'h6A][5];
        s2_mmio_req_valid_REG_1 = _RANDOM[10'h6A][6];
        s2_mmio_req_bits_REG_uop_exceptionVec_3 = _RANDOM[10'h6D][6];
        s2_mmio_req_bits_REG_uop_exceptionVec_4 = _RANDOM[10'h6D][7];
        s2_mmio_req_bits_REG_uop_exceptionVec_5 = _RANDOM[10'h6D][8];
        s2_mmio_req_bits_REG_uop_exceptionVec_13 = _RANDOM[10'h6D][16];
        s2_mmio_req_bits_REG_uop_exceptionVec_19 = _RANDOM[10'h6D][22];
        s2_mmio_req_bits_REG_uop_exceptionVec_21 = _RANDOM[10'h6D][24];
        s2_mmio_req_bits_REG_uop_trigger = {_RANDOM[10'h6D][31:29], _RANDOM[10'h6E][0]};
        s2_mmio_req_bits_REG_uop_rfWen = _RANDOM[10'h70][26];
        s2_mmio_req_bits_REG_uop_fpWen = _RANDOM[10'h70][27];
        s2_mmio_req_bits_REG_uop_flushPipe = _RANDOM[10'h71][2];
        s2_mmio_req_bits_REG_uop_pdest = {_RANDOM[10'h7B][31], _RANDOM[10'h7C][6:0]};
        s2_mmio_req_bits_REG_uop_robIdx_flag = _RANDOM[10'h7C][19];
        s2_mmio_req_bits_REG_uop_robIdx_value = _RANDOM[10'h7C][27:20];
        s2_mmio_req_bits_REG_uop_replayInst = _RANDOM[10'h90][14];
        s2_mmio_req_bits_REG_1_uop_exceptionVec_3 = _RANDOM[10'h98][25];
        s2_mmio_req_bits_REG_1_uop_exceptionVec_4 = _RANDOM[10'h98][26];
        s2_mmio_req_bits_REG_1_uop_exceptionVec_5 = _RANDOM[10'h98][27];
        s2_mmio_req_bits_REG_1_uop_exceptionVec_13 = _RANDOM[10'h99][3];
        s2_mmio_req_bits_REG_1_uop_exceptionVec_19 = _RANDOM[10'h99][9];
        s2_mmio_req_bits_REG_1_uop_exceptionVec_21 = _RANDOM[10'h99][11];
        s2_mmio_req_bits_REG_1_uop_trigger = _RANDOM[10'h99][19:16];
        s2_mmio_req_bits_REG_1_uop_rfWen = _RANDOM[10'h9C][13];
        s2_mmio_req_bits_REG_1_uop_fpWen = _RANDOM[10'h9C][14];
        s2_mmio_req_bits_REG_1_uop_flushPipe = _RANDOM[10'h9C][21];
        s2_mmio_req_bits_REG_1_uop_pdest = _RANDOM[10'hA7][25:18];
        s2_mmio_req_bits_REG_1_uop_robIdx_flag = _RANDOM[10'hA8][6];
        s2_mmio_req_bits_REG_1_uop_robIdx_value = _RANDOM[10'hA8][14:7];
        s2_mmio_req_bits_REG_1_uop_replayInst = _RANDOM[10'hBC][1];
        s2_in_r_uop_exceptionVec_3 = _RANDOM[10'hC4][12];
        s2_in_r_uop_exceptionVec_4 = _RANDOM[10'hC4][13];
        s2_in_r_uop_exceptionVec_5 = _RANDOM[10'hC4][14];
        s2_in_r_uop_exceptionVec_13 = _RANDOM[10'hC4][22];
        s2_in_r_uop_exceptionVec_19 = _RANDOM[10'hC4][28];
        s2_in_r_uop_exceptionVec_21 = _RANDOM[10'hC4][30];
        s2_in_r_uop_trigger = _RANDOM[10'hC5][6:3];
        s2_in_r_uop_preDecodeInfo_isRVC = _RANDOM[10'hC5][8];
        s2_in_r_uop_ftqPtr_flag = _RANDOM[10'hC5][15];
        s2_in_r_uop_ftqPtr_value = _RANDOM[10'hC5][21:16];
        s2_in_r_uop_ftqOffset = _RANDOM[10'hC5][25:22];
        s2_in_r_uop_fuOpType = _RANDOM[10'hC7][31:23];
        s2_in_r_uop_rfWen = _RANDOM[10'hC8][0];
        s2_in_r_uop_fpWen = _RANDOM[10'hC8][1];
        s2_in_r_uop_vpu_vstart = _RANDOM[10'hCA][16:9];
        s2_in_r_uop_vpu_veew = _RANDOM[10'hCF][17:16];
        s2_in_r_uop_uopIdx = {_RANDOM[10'hCF][31], _RANDOM[10'hD0][5:0]};
        s2_in_r_uop_pdest = _RANDOM[10'hD3][12:5];
        s2_in_r_uop_robIdx_flag = _RANDOM[10'hD3][25];
        s2_in_r_uop_robIdx_value = {_RANDOM[10'hD3][31:26], _RANDOM[10'hD4][1:0]};
        s2_in_r_uop_storeSetHit = _RANDOM[10'hE6][19];
        s2_in_r_uop_waitForRobIdx_flag = _RANDOM[10'hE6][20];
        s2_in_r_uop_waitForRobIdx_value = _RANDOM[10'hE6][28:21];
        s2_in_r_uop_loadWaitBit = _RANDOM[10'hE6][29];
        s2_in_r_uop_loadWaitStrict = _RANDOM[10'hE6][30];
        s2_in_r_uop_lqIdx_flag = _RANDOM[10'hE7][4];
        s2_in_r_uop_lqIdx_value = _RANDOM[10'hE7][11:5];
        s2_in_r_uop_sqIdx_flag = _RANDOM[10'hE7][12];
        s2_in_r_uop_sqIdx_value = _RANDOM[10'hE7][18:13];
        s2_in_r_vaddr = {_RANDOM[10'hE7][31:26], _RANDOM[10'hE8], _RANDOM[10'hE9][11:0]};
        s2_in_r_fullva = {_RANDOM[10'hE9][31:12], _RANDOM[10'hEA], _RANDOM[10'hEB][11:0]};
        s2_in_r_vaNeedExt = _RANDOM[10'hEB][12];
        s2_in_r_isHyper = _RANDOM[10'hEB][13];
        s2_in_r_paddr = {_RANDOM[10'hEB][31:14], _RANDOM[10'hEC][29:0]};
        s2_in_r_gpaddr = {_RANDOM[10'hEC][31:30], _RANDOM[10'hED], _RANDOM[10'hEE][29:0]};
        s2_in_r_isForVSnonLeafPTE = _RANDOM[10'hEE][30];
        s2_in_r_mask = {_RANDOM[10'hEE][31], _RANDOM[10'hEF][14:0]};
        s2_in_r_data =
          {_RANDOM[10'hEF][31:15],
           _RANDOM[10'hF0],
           _RANDOM[10'hF1],
           _RANDOM[10'hF2],
           _RANDOM[10'hF3][15:0]};
        s2_in_r_tlbMiss = _RANDOM[10'hF3][18];
        s2_in_r_nc = _RANDOM[10'hF3][21];
        s2_in_r_mmio = _RANDOM[10'hF3][22];
        s2_in_r_isPrefetch = _RANDOM[10'hF8][10];
        s2_in_r_isHWPrefetch = _RANDOM[10'hF8][11];
        s2_in_r_isFrmMisAlignBuf = _RANDOM[10'hF8][12];
        s2_in_r_isvec = _RANDOM[10'hF8][13];
        s2_in_r_is128bit = _RANDOM[10'hF8][15];
        s2_in_r_elemIdx = _RANDOM[10'hF8][25:18];
        s2_in_r_alignedType = _RANDOM[10'hF8][28:26];
        s2_in_r_mbIndex = {_RANDOM[10'hF8][31:29], _RANDOM[10'hF9][0]};
        s2_in_r_reg_offset = _RANDOM[10'hF9][4:1];
        s2_in_r_elemIdxInsideVd = _RANDOM[10'hF9][12:5];
        s2_in_r_vecActive = _RANDOM[10'hF9][13];
        s2_in_r_vecVaddrOffset = {_RANDOM[10'hFB][31:1], _RANDOM[10'hFC][18:0]};
        s2_in_r_vecTriggerMask = {_RANDOM[10'hFC][31:19], _RANDOM[10'hFD][2:0]};
        s2_in_r_isFirstIssue = _RANDOM[10'hFD][3];
        s2_in_r_isLoadReplay = _RANDOM[10'hFD][5];
        s2_in_r_isFastReplay = _RANDOM[10'hFD][7];
        s2_in_r_schedIndex = {_RANDOM[10'hFD][31:28], _RANDOM[10'hFE][2:0]};
        s2_in_r_isMisalign = _RANDOM[10'hFE][4];
        s2_in_r_isFinalSplit = _RANDOM[10'hFE][5];
        s2_in_r_misalignWith16Byte = _RANDOM[10'hFE][6];
        s2_in_r_misalignNeedWakeUp = _RANDOM[10'hFE][7];
        s2_in_r_rep_info_cause_9 = _RANDOM[10'hFF][11];
        s2_mis_align_last_REG = _RANDOM[10'h111][26];
        s2_fwd_frm_d_chan = _RANDOM[10'h111][27];
        s2_fwd_data_frm_d_chan_0 = {_RANDOM[10'h111][31:28], _RANDOM[10'h112][3:0]};
        s2_fwd_data_frm_d_chan_1 = _RANDOM[10'h112][11:4];
        s2_fwd_data_frm_d_chan_2 = _RANDOM[10'h112][19:12];
        s2_fwd_data_frm_d_chan_3 = _RANDOM[10'h112][27:20];
        s2_fwd_data_frm_d_chan_4 = {_RANDOM[10'h112][31:28], _RANDOM[10'h113][3:0]};
        s2_fwd_data_frm_d_chan_5 = _RANDOM[10'h113][11:4];
        s2_fwd_data_frm_d_chan_6 = _RANDOM[10'h113][19:12];
        s2_fwd_data_frm_d_chan_7 = _RANDOM[10'h113][27:20];
        s2_fwd_data_frm_d_chan_8 = {_RANDOM[10'h113][31:28], _RANDOM[10'h114][3:0]};
        s2_fwd_data_frm_d_chan_9 = _RANDOM[10'h114][11:4];
        s2_fwd_data_frm_d_chan_10 = _RANDOM[10'h114][19:12];
        s2_fwd_data_frm_d_chan_11 = _RANDOM[10'h114][27:20];
        s2_fwd_data_frm_d_chan_12 = {_RANDOM[10'h114][31:28], _RANDOM[10'h115][3:0]};
        s2_fwd_data_frm_d_chan_13 = _RANDOM[10'h115][11:4];
        s2_fwd_data_frm_d_chan_14 = _RANDOM[10'h115][19:12];
        s2_fwd_data_frm_d_chan_15 = _RANDOM[10'h115][27:20];
        s2_tlb_hit = _RANDOM[10'h115][28];
        s2_mem_amb_REG = _RANDOM[10'h115][29];
        s2_fwd_fail_REG = _RANDOM[10'h115][30];
        io_s2_ptr_chasing_r = _RANDOM[10'h13C][13];
        io_prefetch_train_valid_last_REG = _RANDOM[10'h13C][14];
        io_prefetch_train_bits_vaddr_r =
          {_RANDOM[10'h13C][31:15], _RANDOM[10'h13D], _RANDOM[10'h13E][0]};
        io_prefetch_train_bits_paddr_r = {_RANDOM[10'h140][31:3], _RANDOM[10'h141][18:0]};
        io_prefetch_train_bits_uop_r_robIdx_flag = _RANDOM[10'h15A][17];
        io_prefetch_train_bits_uop_r_robIdx_value = _RANDOM[10'h15A][25:18];
        io_prefetch_train_bits_isFirstIssue_r = _RANDOM[10'h173][13];
        io_prefetch_train_bits_miss_r_1 = _RANDOM[10'h178][14];
        io_prefetch_train_l1_valid_last_REG = _RANDOM[10'h178][19];
        io_prefetch_train_l1_bits_vaddr_r =
          {_RANDOM[10'h178][31:20], _RANDOM[10'h179], _RANDOM[10'h17A][5:0]};
        io_prefetch_train_l1_bits_uop_r_robIdx_flag = _RANDOM[10'h196][22];
        io_prefetch_train_l1_bits_uop_r_robIdx_value = _RANDOM[10'h196][30:23];
        io_prefetch_train_l1_bits_isFirstIssue_r = _RANDOM[10'h1AF][18];
        io_prefetch_train_l1_bits_miss_r_1 = _RANDOM[10'h1B4][19];
        io_prefetch_train_l1_bits_meta_prefetch_r = _RANDOM[10'h1B4][22:20];
        s3_valid_last_REG = _RANDOM[10'h1B5][0];
        s3_in_uop_exceptionVec_3 = _RANDOM[10'h1B8][0];
        s3_in_uop_exceptionVec_4 = _RANDOM[10'h1B8][1];
        s3_in_uop_exceptionVec_5 = _RANDOM[10'h1B8][2];
        s3_in_uop_exceptionVec_13 = _RANDOM[10'h1B8][10];
        s3_in_uop_exceptionVec_19 = _RANDOM[10'h1B8][16];
        s3_in_uop_exceptionVec_21 = _RANDOM[10'h1B8][18];
        s3_in_uop_trigger = _RANDOM[10'h1B8][26:23];
        s3_in_uop_preDecodeInfo_isRVC = _RANDOM[10'h1B8][28];
        s3_in_uop_ftqPtr_flag = _RANDOM[10'h1B9][3];
        s3_in_uop_ftqPtr_value = _RANDOM[10'h1B9][9:4];
        s3_in_uop_ftqOffset = _RANDOM[10'h1B9][13:10];
        s3_in_uop_fuOpType = _RANDOM[10'h1BB][19:11];
        s3_in_uop_rfWen = _RANDOM[10'h1BB][20];
        s3_in_uop_fpWen = _RANDOM[10'h1BB][21];
        s3_in_uop_vpu_vstart = {_RANDOM[10'h1BD][31:29], _RANDOM[10'h1BE][4:0]};
        s3_in_uop_vpu_veew = _RANDOM[10'h1C3][5:4];
        s3_in_uop_uopIdx = _RANDOM[10'h1C3][25:19];
        s3_in_uop_pdest = {_RANDOM[10'h1C6][31:25], _RANDOM[10'h1C7][0]};
        s3_in_uop_robIdx_flag = _RANDOM[10'h1C7][13];
        s3_in_uop_robIdx_value = _RANDOM[10'h1C7][21:14];
        s3_in_uop_storeSetHit = _RANDOM[10'h1DA][7];
        s3_in_uop_waitForRobIdx_flag = _RANDOM[10'h1DA][8];
        s3_in_uop_waitForRobIdx_value = _RANDOM[10'h1DA][16:9];
        s3_in_uop_loadWaitBit = _RANDOM[10'h1DA][17];
        s3_in_uop_loadWaitStrict = _RANDOM[10'h1DA][18];
        s3_in_uop_lqIdx_flag = _RANDOM[10'h1DA][24];
        s3_in_uop_lqIdx_value = _RANDOM[10'h1DA][31:25];
        s3_in_uop_sqIdx_flag = _RANDOM[10'h1DB][0];
        s3_in_uop_sqIdx_value = _RANDOM[10'h1DB][6:1];
        s3_in_vaddr = {_RANDOM[10'h1DB][31:14], _RANDOM[10'h1DC]};
        s3_in_fullva = {_RANDOM[10'h1DD], _RANDOM[10'h1DE]};
        s3_in_vaNeedExt = _RANDOM[10'h1DF][0];
        s3_in_isHyper = _RANDOM[10'h1DF][1];
        s3_in_paddr = {_RANDOM[10'h1DF][31:2], _RANDOM[10'h1E0][17:0]};
        s3_in_gpaddr =
          {_RANDOM[10'h1E0][31:18], _RANDOM[10'h1E1], _RANDOM[10'h1E2][17:0]};
        s3_in_isForVSnonLeafPTE = _RANDOM[10'h1E2][18];
        s3_in_mask = {_RANDOM[10'h1E2][31:19], _RANDOM[10'h1E3][2:0]};
        s3_in_data =
          {_RANDOM[10'h1E3][31:3],
           _RANDOM[10'h1E4],
           _RANDOM[10'h1E5],
           _RANDOM[10'h1E6],
           _RANDOM[10'h1E7][3:0]};
        s3_in_tlbMiss = _RANDOM[10'h1E7][6];
        s3_in_nc = _RANDOM[10'h1E7][9];
        s3_in_mmio = _RANDOM[10'h1E7][10];
        s3_in_memBackTypeMM = _RANDOM[10'h1E7][11];
        s3_in_isFrmMisAlignBuf = _RANDOM[10'h1EC][0];
        s3_in_isvec = _RANDOM[10'h1EC][1];
        s3_in_is128bit = _RANDOM[10'h1EC][3];
        s3_in_elemIdx = _RANDOM[10'h1EC][13:6];
        s3_in_alignedType = _RANDOM[10'h1EC][16:14];
        s3_in_mbIndex = _RANDOM[10'h1EC][20:17];
        s3_in_reg_offset = _RANDOM[10'h1EC][24:21];
        s3_in_elemIdxInsideVd = {_RANDOM[10'h1EC][31:25], _RANDOM[10'h1ED][0]};
        s3_in_vecActive = _RANDOM[10'h1ED][1];
        s3_in_vecTriggerMask = _RANDOM[10'h1F0][22:7];
        s3_in_isLoadReplay = _RANDOM[10'h1F0][25];
        s3_in_handledByMSHR = _RANDOM[10'h1F1][5];
        s3_in_schedIndex = _RANDOM[10'h1F1][22:16];
        s3_in_isFinalSplit = _RANDOM[10'h1F1][25];
        s3_in_misalignWith16Byte = _RANDOM[10'h1F1][26];
        s3_in_misalignNeedWakeUp = _RANDOM[10'h1F1][27];
        s3_in_rep_info_mshr_id = {_RANDOM[10'h1F1][31:29], _RANDOM[10'h1F2][0]};
        s3_in_rep_info_full_fwd = _RANDOM[10'h1F2][1];
        s3_in_rep_info_data_inv_sq_idx_flag = _RANDOM[10'h1F2][2];
        s3_in_rep_info_data_inv_sq_idx_value = _RANDOM[10'h1F2][8:3];
        s3_in_rep_info_addr_inv_sq_idx_flag = _RANDOM[10'h1F2][9];
        s3_in_rep_info_addr_inv_sq_idx_value = _RANDOM[10'h1F2][15:10];
        s3_in_rep_info_last_beat = _RANDOM[10'h1F2][21];
        s3_in_rep_info_cause_0 = _RANDOM[10'h1F2][22];
        s3_in_rep_info_cause_1 = _RANDOM[10'h1F2][23];
        s3_in_rep_info_cause_2 = _RANDOM[10'h1F2][24];
        s3_in_rep_info_cause_3 = _RANDOM[10'h1F2][25];
        s3_in_rep_info_cause_4 = _RANDOM[10'h1F2][26];
        s3_in_rep_info_cause_6 = _RANDOM[10'h1F2][28];
        s3_in_rep_info_cause_7 = _RANDOM[10'h1F2][29];
        s3_in_rep_info_cause_8 = _RANDOM[10'h1F2][30];
        s3_in_rep_info_cause_9 = _RANDOM[10'h1F2][31];
        s3_in_rep_info_tlb_id = _RANDOM[10'h205][5:2];
        s3_in_rep_info_tlb_full = _RANDOM[10'h205][6];
        s3_nc_with_data = _RANDOM[10'h205][20];
        s3_troublem_last_REG = _RANDOM[10'h205][21];
        s3_vecActive = _RANDOM[10'h205][22];
        s3_isvec = _RANDOM[10'h205][23];
        s3_vec_alignedType = _RANDOM[10'h205][26:24];
        s3_vec_mBIndex = _RANDOM[10'h205][30:27];
        s3_mmio_req_valid = _RANDOM[10'h205][31];
        s3_mmio_req_bits_uop_exceptionVec_3 = _RANDOM[10'h208][31];
        s3_mmio_req_bits_uop_exceptionVec_4 = _RANDOM[10'h209][0];
        s3_mmio_req_bits_uop_exceptionVec_5 = _RANDOM[10'h209][1];
        s3_mmio_req_bits_uop_exceptionVec_13 = _RANDOM[10'h209][9];
        s3_mmio_req_bits_uop_exceptionVec_19 = _RANDOM[10'h209][15];
        s3_mmio_req_bits_uop_exceptionVec_21 = _RANDOM[10'h209][17];
        s3_mmio_req_bits_uop_trigger = _RANDOM[10'h209][25:22];
        s3_mmio_req_bits_uop_flushPipe = _RANDOM[10'h20C][27];
        s3_mmio_req_bits_uop_robIdx_flag = _RANDOM[10'h218][12];
        s3_mmio_req_bits_uop_robIdx_value = _RANDOM[10'h218][20:13];
        s3_mmio_req_bits_uop_replayInst = _RANDOM[10'h22C][7];
        s3_pdest = _RANDOM[10'h231][26:19];
        s3_rfWen = _RANDOM[10'h231][27];
        s3_fpWen = _RANDOM[10'h231][28];
        s3_data_select = {_RANDOM[10'h231][31:29], _RANDOM[10'h232][5:0]};
        s3_data_select_by_offset_0 = _RANDOM[10'h232][6];
        s3_data_select_by_offset_1 = _RANDOM[10'h232][7];
        s3_data_select_by_offset_2 = _RANDOM[10'h232][8];
        s3_data_select_by_offset_3 = _RANDOM[10'h232][9];
        s3_data_select_by_offset_4 = _RANDOM[10'h232][10];
        s3_data_select_by_offset_5 = _RANDOM[10'h232][11];
        s3_data_select_by_offset_6 = _RANDOM[10'h232][12];
        s3_data_select_by_offset_7 = _RANDOM[10'h232][13];
        s3_data_select_by_offset_8 = _RANDOM[10'h232][14];
        s3_data_select_by_offset_9 = _RANDOM[10'h232][15];
        s3_data_select_by_offset_10 = _RANDOM[10'h232][16];
        s3_data_select_by_offset_11 = _RANDOM[10'h232][17];
        s3_data_select_by_offset_12 = _RANDOM[10'h232][18];
        s3_data_select_by_offset_13 = _RANDOM[10'h232][19];
        s3_data_select_by_offset_14 = _RANDOM[10'h232][20];
        s3_data_select_by_offset_15 = _RANDOM[10'h232][21];
        s3_safe_wakeup = _RANDOM[10'h232][22];
        s3_safe_writeback = _RANDOM[10'h232][23];
        s3_exception = _RANDOM[10'h232][24];
        s3_mis_align = _RANDOM[10'h232][25];
        s3_vp_match_fail_last_REG = _RANDOM[10'h232][28];
        s3_ldld_rep_inst_last_REG = _RANDOM[10'h232][29];
        s3_fast_rep_REG = _RANDOM[10'h232][30];
        s3_ld_raw_data_frm_mmio_REG_lqData =
          {_RANDOM[10'h232][31], _RANDOM[10'h233], _RANDOM[10'h234][30:0]};
        s3_ld_raw_data_frm_mmio_REG_uop_fuOpType = _RANDOM[10'h23B][17:9];
        s3_ld_raw_data_frm_mmio_REG_uop_fpWen = _RANDOM[10'h23B][19];
        s3_ld_raw_data_frm_mmio_REG_addrOffset = _RANDOM[10'h25B][14:12];
        s3_ld_raw_data_frm_mmio_REG_1_lqData =
          {_RANDOM[10'h25B][31:15], _RANDOM[10'h25C], _RANDOM[10'h25D][14:0]};
        s3_ld_raw_data_frm_mmio_REG_1_uop_fuOpType =
          {_RANDOM[10'h263][31:25], _RANDOM[10'h264][1:0]};
        s3_ld_raw_data_frm_mmio_REG_1_uop_fpWen = _RANDOM[10'h264][3];
        s3_ld_raw_data_frm_mmio_REG_1_addrOffset = _RANDOM[10'h283][30:28];
        s3_ld_raw_data_frm_mmio_lqData =
          {_RANDOM[10'h283][31], _RANDOM[10'h284], _RANDOM[10'h285][30:0]};
        s3_ld_raw_data_frm_mmio_uop_fuOpType = _RANDOM[10'h28C][17:9];
        s3_ld_raw_data_frm_mmio_uop_fpWen = _RANDOM[10'h28C][19];
        s3_ld_raw_data_frm_mmio_addrOffset = _RANDOM[10'h2AC][14:12];
        s3_merged_data_frm_pipe =
          {_RANDOM[10'h2AC][31:15],
           _RANDOM[10'h2AD],
           _RANDOM[10'h2AE],
           _RANDOM[10'h2AF],
           _RANDOM[10'h2B0][14:0]};
        s3_ldout_valid_REG = _RANDOM[10'h2B0][15];
        io_perf_0_value_REG = _RANDOM[10'h2B0][19];
        io_perf_0_value_REG_1 = _RANDOM[10'h2B0][20];
        io_perf_1_value_REG = _RANDOM[10'h2B0][21];
        io_perf_1_value_REG_1 = _RANDOM[10'h2B0][22];
        io_perf_2_value_REG = _RANDOM[10'h2B0][23];
        io_perf_2_value_REG_1 = _RANDOM[10'h2B0][24];
        io_perf_3_value_REG = _RANDOM[10'h2B0][25];
        io_perf_3_value_REG_1 = _RANDOM[10'h2B0][26];
        io_perf_4_value_REG = _RANDOM[10'h2B0][27];
        io_perf_4_value_REG_1 = _RANDOM[10'h2B0][28];
        io_perf_5_value_REG = _RANDOM[10'h2B0][29];
        io_perf_5_value_REG_1 = _RANDOM[10'h2B0][30];
        io_perf_6_value_REG = _RANDOM[10'h2B0][31];
        io_perf_6_value_REG_1 = _RANDOM[10'h2B1][0];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        io_ifetchPrefetch_bits_vaddr_r = 50'h0;
        s1_valid = 1'h0;
        s1_vecActive = 1'h1;
        s1_redirect_reg_valid_last_REG = 1'h0;
        s2_valid = 1'h0;
        s2_vecActive = 1'h1;
        s2_isvec = 1'h0;
        s2_trigger_debug_mode = 1'h0;
        s2_mmio_req_valid_REG = 1'h0;
        s2_mmio_req_valid_REG_1 = 1'h0;
        s2_mis_align_last_REG = 1'h0;
        s2_fwd_frm_d_chan = 1'h0;
        s2_fwd_data_frm_d_chan_0 = 8'h0;
        s2_fwd_data_frm_d_chan_1 = 8'h0;
        s2_fwd_data_frm_d_chan_2 = 8'h0;
        s2_fwd_data_frm_d_chan_3 = 8'h0;
        s2_fwd_data_frm_d_chan_4 = 8'h0;
        s2_fwd_data_frm_d_chan_5 = 8'h0;
        s2_fwd_data_frm_d_chan_6 = 8'h0;
        s2_fwd_data_frm_d_chan_7 = 8'h0;
        s2_fwd_data_frm_d_chan_8 = 8'h0;
        s2_fwd_data_frm_d_chan_9 = 8'h0;
        s2_fwd_data_frm_d_chan_10 = 8'h0;
        s2_fwd_data_frm_d_chan_11 = 8'h0;
        s2_fwd_data_frm_d_chan_12 = 8'h0;
        s2_fwd_data_frm_d_chan_13 = 8'h0;
        s2_fwd_data_frm_d_chan_14 = 8'h0;
        s2_fwd_data_frm_d_chan_15 = 8'h0;
        io_s2_ptr_chasing_r = 1'h0;
        io_prefetch_train_valid_last_REG = 1'h0;
        io_prefetch_train_l1_valid_last_REG = 1'h0;
        s3_valid_last_REG = 1'h0;
        s3_troublem_last_REG = 1'h0;
        s3_vecActive = 1'h1;
        s3_isvec = 1'h0;
        s3_data_select = 9'h0;
        s3_data_select_by_offset_0 = 1'h0;
        s3_data_select_by_offset_1 = 1'h0;
        s3_data_select_by_offset_2 = 1'h0;
        s3_data_select_by_offset_3 = 1'h0;
        s3_data_select_by_offset_4 = 1'h0;
        s3_data_select_by_offset_5 = 1'h0;
        s3_data_select_by_offset_6 = 1'h0;
        s3_data_select_by_offset_7 = 1'h0;
        s3_data_select_by_offset_8 = 1'h0;
        s3_data_select_by_offset_9 = 1'h0;
        s3_data_select_by_offset_10 = 1'h0;
        s3_data_select_by_offset_11 = 1'h0;
        s3_data_select_by_offset_12 = 1'h0;
        s3_data_select_by_offset_13 = 1'h0;
        s3_data_select_by_offset_14 = 1'h0;
        s3_data_select_by_offset_15 = 1'h0;
        s3_vp_match_fail_last_REG = 1'h0;
        s3_ldld_rep_inst_last_REG = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  MemTrigger loadTrigger (
    .tdataVec_io_fromCsrTrigger_tdataVec_0_matchType
      (io_fromCsrTrigger_tdataVec_0_matchType),
    .tdataVec_io_fromCsrTrigger_tdataVec_0_select
      (io_fromCsrTrigger_tdataVec_0_select),
    .tdataVec_io_fromCsrTrigger_tdataVec_0_timing
      (io_fromCsrTrigger_tdataVec_0_timing),
    .tdataVec_io_fromCsrTrigger_tdataVec_0_action
      (io_fromCsrTrigger_tdataVec_0_action),
    .tdataVec_io_fromCsrTrigger_tdataVec_0_chain     (io_fromCsrTrigger_tdataVec_0_chain),
    .tdataVec_io_fromCsrTrigger_tdataVec_0_load      (io_fromCsrTrigger_tdataVec_0_load),
    .tdataVec_io_fromCsrTrigger_tdataVec_0_tdata2
      (io_fromCsrTrigger_tdataVec_0_tdata2),
    .tdataVec_io_fromCsrTrigger_tdataVec_1_matchType
      (io_fromCsrTrigger_tdataVec_1_matchType),
    .tdataVec_io_fromCsrTrigger_tdataVec_1_select
      (io_fromCsrTrigger_tdataVec_1_select),
    .tdataVec_io_fromCsrTrigger_tdataVec_1_timing
      (io_fromCsrTrigger_tdataVec_1_timing),
    .tdataVec_io_fromCsrTrigger_tdataVec_1_action
      (io_fromCsrTrigger_tdataVec_1_action),
    .tdataVec_io_fromCsrTrigger_tdataVec_1_chain     (io_fromCsrTrigger_tdataVec_1_chain),
    .tdataVec_io_fromCsrTrigger_tdataVec_1_load      (io_fromCsrTrigger_tdataVec_1_load),
    .tdataVec_io_fromCsrTrigger_tdataVec_1_tdata2
      (io_fromCsrTrigger_tdataVec_1_tdata2),
    .tdataVec_io_fromCsrTrigger_tdataVec_2_matchType
      (io_fromCsrTrigger_tdataVec_2_matchType),
    .tdataVec_io_fromCsrTrigger_tdataVec_2_select
      (io_fromCsrTrigger_tdataVec_2_select),
    .tdataVec_io_fromCsrTrigger_tdataVec_2_timing
      (io_fromCsrTrigger_tdataVec_2_timing),
    .tdataVec_io_fromCsrTrigger_tdataVec_2_action
      (io_fromCsrTrigger_tdataVec_2_action),
    .tdataVec_io_fromCsrTrigger_tdataVec_2_chain     (io_fromCsrTrigger_tdataVec_2_chain),
    .tdataVec_io_fromCsrTrigger_tdataVec_2_load      (io_fromCsrTrigger_tdataVec_2_load),
    .tdataVec_io_fromCsrTrigger_tdataVec_2_tdata2
      (io_fromCsrTrigger_tdataVec_2_tdata2),
    .tdataVec_io_fromCsrTrigger_tdataVec_3_matchType
      (io_fromCsrTrigger_tdataVec_3_matchType),
    .tdataVec_io_fromCsrTrigger_tdataVec_3_select
      (io_fromCsrTrigger_tdataVec_3_select),
    .tdataVec_io_fromCsrTrigger_tdataVec_3_timing
      (io_fromCsrTrigger_tdataVec_3_timing),
    .tdataVec_io_fromCsrTrigger_tdataVec_3_action
      (io_fromCsrTrigger_tdataVec_3_action),
    .tdataVec_io_fromCsrTrigger_tdataVec_3_chain     (io_fromCsrTrigger_tdataVec_3_chain),
    .tdataVec_io_fromCsrTrigger_tdataVec_3_load      (io_fromCsrTrigger_tdataVec_3_load),
    .tdataVec_io_fromCsrTrigger_tdataVec_3_tdata2
      (io_fromCsrTrigger_tdataVec_3_tdata2),
    .tdataVec_io_fromCsrTrigger_tEnableVec_0         (io_fromCsrTrigger_tEnableVec_0),
    .tdataVec_io_fromCsrTrigger_tEnableVec_1         (io_fromCsrTrigger_tEnableVec_1),
    .tdataVec_io_fromCsrTrigger_tEnableVec_2         (io_fromCsrTrigger_tEnableVec_2),
    .tdataVec_io_fromCsrTrigger_tEnableVec_3         (io_fromCsrTrigger_tEnableVec_3),
    .tdataVec_io_fromCsrTrigger_debugMode            (io_fromCsrTrigger_debugMode),
    .tdataVec_io_fromCsrTrigger_triggerCanRaiseBpExp
      (io_fromCsrTrigger_triggerCanRaiseBpExp),
    .tdataVec_io_fromLoadStore_vaddr                 (s1_in_r_vaddr),
    .tdataVec_io_fromLoadStore_isVectorUnitStride    (s1_in_r_isvec & s1_in_r_is128bit),
    .tdataVec_io_fromLoadStore_mask                  (s1_in_r_mask),
    .tdataVec_io_toLoadStore_triggerAction
      (_loadTrigger_tdataVec_io_toLoadStore_triggerAction),
    .tdataVec_io_toLoadStore_triggerVaddr
      (_loadTrigger_tdataVec_io_toLoadStore_triggerVaddr),
    .tdataVec_io_toLoadStore_triggerMask
      (_loadTrigger_tdataVec_io_toLoadStore_triggerMask)
  );
  assign io_ldin_ready = io_misalign_ldin_ready_0 & ~_s0_src_ready_vec_8_T_6;
  assign io_ldout_valid = s3_mmio_req_valid | s3_out_valid & s3_ldout_valid_REG;
  assign io_ldout_bits_uop_exceptionVec_3 =
    s3_valid_last_REG ? s3_in_uop_exceptionVec_3 : s3_mmio_req_bits_uop_exceptionVec_3;
  assign io_ldout_bits_uop_exceptionVec_4 =
    s3_valid_last_REG ? s3_in_uop_exceptionVec_4 : s3_mmio_req_bits_uop_exceptionVec_4;
  assign io_ldout_bits_uop_exceptionVec_5 =
    s3_valid_last_REG ? new_vec_1_5 : s3_mmio_req_bits_uop_exceptionVec_5;
  assign io_ldout_bits_uop_exceptionVec_13 =
    s3_valid_last_REG ? s3_in_uop_exceptionVec_13 : s3_mmio_req_bits_uop_exceptionVec_13;
  assign io_ldout_bits_uop_exceptionVec_19 =
    ~s3_valid_last_REG & s3_mmio_req_bits_uop_exceptionVec_19;
  assign io_ldout_bits_uop_exceptionVec_21 =
    s3_valid_last_REG ? s3_in_uop_exceptionVec_21 : s3_mmio_req_bits_uop_exceptionVec_21;
  assign io_ldout_bits_uop_trigger =
    s3_valid_last_REG ? s3_in_uop_trigger : s3_mmio_req_bits_uop_trigger;
  assign io_ldout_bits_uop_rfWen = s3_rfWen;
  assign io_ldout_bits_uop_fpWen = s3_fpWen;
  assign io_ldout_bits_uop_flushPipe =
    ~s3_valid_last_REG & s3_mmio_req_bits_uop_flushPipe;
  assign io_ldout_bits_uop_pdest = s3_pdest;
  assign io_ldout_bits_uop_robIdx_flag =
    s3_valid_last_REG ? s3_in_uop_robIdx_flag : s3_mmio_req_bits_uop_robIdx_flag;
  assign io_ldout_bits_uop_robIdx_value =
    s3_valid_last_REG ? s3_in_uop_robIdx_value : s3_mmio_req_bits_uop_robIdx_value;
  assign io_ldout_bits_uop_replayInst =
    ~s3_valid_last_REG & s3_mmio_req_bits_uop_replayInst;
  assign io_ldout_bits_data =
    s3_valid_last_REG
      ? (s3_data_select[0] ? {56'h0, s3_picked_data_frm_pipe_0[7:0]} : 64'h0)
        | (s3_data_select[1] ? {48'h0, s3_picked_data_frm_pipe_0[15:0]} : 64'h0)
        | (s3_data_select[2] ? {32'h0, s3_picked_data_frm_pipe_0[31:0]} : 64'h0)
        | (s3_data_select[3] ? s3_picked_data_frm_pipe_0 : 64'h0)
        | (s3_data_select[4]
             ? {{56{s3_picked_data_frm_pipe_0[7]}}, s3_picked_data_frm_pipe_0[7:0]}
             : 64'h0)
        | (s3_data_select[5]
             ? {{48{s3_picked_data_frm_pipe_0[15]}}, s3_picked_data_frm_pipe_0[15:0]}
             : 64'h0)
        | (s3_data_select[6]
             ? {{32{s3_picked_data_frm_pipe_0[31]}}, s3_picked_data_frm_pipe_0[31:0]}
             : 64'h0)
        | (s3_data_select[7]
             ? {48'hFFFFFFFFFFFF, s3_picked_data_frm_pipe_0[15:0]}
             : 64'h0)
        | (s3_data_select[8] ? {32'hFFFFFFFF, s3_picked_data_frm_pipe_0[31:0]} : 64'h0)
      : (s3_ld_raw_data_frm_mmio_uop_fuOpType == 9'h0
           ? {{56{_s3_ld_data_frm_mmio_T_58[7]}}, _s3_ld_data_frm_mmio_T_58}
           : 64'h0)
        | (s3_ld_raw_data_frm_mmio_uop_fuOpType == 9'h1
             ? {{48{_GEN_9[15]}}, _GEN_9[15:8], _s3_ld_data_frm_mmio_T_58}
             : 64'h0)
        | (s3_ld_raw_data_frm_mmio_uop_fuOpType == 9'h2
             ? {s3_ld_raw_data_frm_mmio_uop_fpWen ? 32'hFFFFFFFF : {32{_GEN_7[31]}},
                _GEN_7[31:24],
                _GEN_8[23:16],
                _GEN_9[15:8],
                _s3_ld_data_frm_mmio_T_58}
             : 64'h0)
        | (s3_ld_raw_data_frm_mmio_uop_fuOpType == 9'h3 ? s3_picked_data_frm_mmio : 64'h0)
        | (s3_ld_raw_data_frm_mmio_uop_fuOpType == 9'h4
             ? {56'h0, _s3_ld_data_frm_mmio_T_58}
             : 64'h0)
        | (s3_ld_raw_data_frm_mmio_uop_fuOpType == 9'h5
             ? {48'h0, _GEN_9[15:8], _s3_ld_data_frm_mmio_T_58}
             : 64'h0)
        | (s3_ld_raw_data_frm_mmio_uop_fuOpType == 9'h6
             ? {32'h0,
                _GEN_7[31:24],
                _GEN_8[23:16],
                _GEN_9[15:8],
                _s3_ld_data_frm_mmio_T_58}
             : 64'h0)
        | (s3_ld_raw_data_frm_mmio_uop_fuOpType == 9'h10
             ? {{56{_s3_ld_data_frm_mmio_T_58[7]}}, _s3_ld_data_frm_mmio_T_58}
             : 64'h0)
        | (s3_ld_raw_data_frm_mmio_uop_fuOpType == 9'h11
             ? {{48{_GEN_9[15]}}, _GEN_9[15:8], _s3_ld_data_frm_mmio_T_58}
             : 64'h0)
        | (s3_ld_raw_data_frm_mmio_uop_fuOpType == 9'h12
             ? {{32{_GEN_7[31]}},
                _GEN_7[31:24],
                _GEN_8[23:16],
                _GEN_9[15:8],
                _s3_ld_data_frm_mmio_T_58}
             : 64'h0)
        | (s3_ld_raw_data_frm_mmio_uop_fuOpType == 9'h13
             ? s3_picked_data_frm_mmio
             : 64'h0)
        | (s3_ld_raw_data_frm_mmio_uop_fuOpType == 9'h14
             ? {56'h0, _s3_ld_data_frm_mmio_T_58}
             : 64'h0)
        | (s3_ld_raw_data_frm_mmio_uop_fuOpType == 9'h15
             ? {48'h0, _GEN_9[15:8], _s3_ld_data_frm_mmio_T_58}
             : 64'h0)
        | (s3_ld_raw_data_frm_mmio_uop_fuOpType == 9'h16
             ? {32'h0,
                _GEN_7[31:24],
                _GEN_8[23:16],
                _GEN_9[15:8],
                _s3_ld_data_frm_mmio_T_58}
             : 64'h0)
        | (s3_ld_raw_data_frm_mmio_uop_fuOpType == 9'h1D
             ? {48'h0, _GEN_9[15:8], _s3_ld_data_frm_mmio_T_58}
             : 64'h0)
        | (s3_ld_raw_data_frm_mmio_uop_fuOpType == 9'h1E
             ? {32'h0,
                _GEN_7[31:24],
                _GEN_8[23:16],
                _GEN_9[15:8],
                _s3_ld_data_frm_mmio_T_58}
             : 64'h0);
  assign io_vecldin_ready = io_misalign_ldin_ready_0 & ~_s0_src_ready_vec_7_T_5;
  assign io_vecldout_valid =
    s3_out_valid
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {s3_in_uop_robIdx_flag,
              s3_in_uop_robIdx_value} == _io_vecldout_valid_flushItself_T_2
           | s3_in_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ s3_in_uop_robIdx_value > io_redirect_bits_robIdx_value)) & s3_isvec
    & ~s3_mis_align & ~s3_in_isFrmMisAlignBuf;
  assign io_vecldout_bits_mBIndex = s3_vec_mBIndex;
  assign io_vecldout_bits_trigger = s3_in_uop_trigger;
  assign io_vecldout_bits_exceptionVec_3 = s3_in_uop_exceptionVec_3;
  assign io_vecldout_bits_exceptionVec_4 = s3_in_uop_exceptionVec_4;
  assign io_vecldout_bits_exceptionVec_5 = new_vec_1_5;
  assign io_vecldout_bits_exceptionVec_13 = s3_in_uop_exceptionVec_13;
  assign io_vecldout_bits_exceptionVec_21 = s3_in_uop_exceptionVec_21;
  assign io_vecldout_bits_hasException = s3_exception;
  assign io_vecldout_bits_vaddr = s3_in_fullva;
  assign io_vecldout_bits_vaNeedExt = s3_in_vaNeedExt;
  assign io_vecldout_bits_gpaddr = s3_in_gpaddr;
  assign io_vecldout_bits_vstart = s3_in_uop_vpu_vstart;
  assign io_vecldout_bits_vecTriggerMask = s3_in_vecTriggerMask;
  assign io_vecldout_bits_elemIdx = s3_in_elemIdx;
  assign io_vecldout_bits_mask = s3_in_mask;
  assign io_vecldout_bits_alignedType = s3_vec_alignedType;
  assign io_vecldout_bits_reg_offset = s3_in_reg_offset;
  assign io_vecldout_bits_elemIdxInsideVd = s3_in_elemIdxInsideVd;
  assign io_vecldout_bits_vecdata =
    s3_in_misalignWith16Byte
      ? {64'h0, s3_picked_data_frm_pipe_1}
      : s3_in_is128bit
          ? s3_merged_data_frm_pipe
          : (s3_vec_alignedType[1:0] == 2'h0
               ? {120'h0, s3_picked_data_frm_pipe_1[7:0]}
               : 128'h0)
            | (s3_vec_alignedType[1:0] == 2'h1
                 ? {112'h0, s3_picked_data_frm_pipe_1[15:0]}
                 : 128'h0)
            | (s3_vec_alignedType[1:0] == 2'h2
                 ? {96'h0, s3_picked_data_frm_pipe_1[31:0]}
                 : 128'h0)
            | ((&(s3_vec_alignedType[1:0]))
                 ? {64'h0, s3_picked_data_frm_pipe_1}
                 : 128'h0);
  assign io_misalign_ldin_ready = io_misalign_ldin_ready_0;
  assign io_misalign_ldout_valid =
    s3_valid_last_REG & (~s3_fast_rep_REG | s3_fast_rep_canceled)
    & s3_in_isFrmMisAlignBuf;
  assign io_misalign_ldout_bits_uop_exceptionVec_3 = s3_in_uop_exceptionVec_3;
  assign io_misalign_ldout_bits_uop_exceptionVec_4 = s3_in_uop_exceptionVec_4;
  assign io_misalign_ldout_bits_uop_exceptionVec_5 = new_vec_1_5;
  assign io_misalign_ldout_bits_uop_exceptionVec_13 = s3_in_uop_exceptionVec_13;
  assign io_misalign_ldout_bits_uop_exceptionVec_21 = s3_in_uop_exceptionVec_21;
  assign io_misalign_ldout_bits_uop_trigger = s3_in_uop_trigger;
  assign io_misalign_ldout_bits_data =
    {1'h0,
     s3_in_misalignWith16Byte
       ? s3_merged_data_frm_pipe
       : {64'h0,
          (s3_data_select_by_offset_0 ? s3_merged_data_frm_pipe[63:0] : 64'h0)
            | (s3_data_select_by_offset_1 ? s3_merged_data_frm_pipe[71:8] : 64'h0)
            | (s3_data_select_by_offset_2 ? s3_merged_data_frm_pipe[79:16] : 64'h0)
            | (s3_data_select_by_offset_3 ? s3_merged_data_frm_pipe[87:24] : 64'h0)
            | (s3_data_select_by_offset_4 ? s3_merged_data_frm_pipe[95:32] : 64'h0)
            | (s3_data_select_by_offset_5 ? s3_merged_data_frm_pipe[103:40] : 64'h0)
            | (s3_data_select_by_offset_6 ? s3_merged_data_frm_pipe[111:48] : 64'h0)
            | (s3_data_select_by_offset_7 ? s3_merged_data_frm_pipe[119:56] : 64'h0)
            | (s3_data_select_by_offset_8 ? s3_merged_data_frm_pipe[127:64] : 64'h0)
            | (s3_data_select_by_offset_9 ? s3_data_frm_pipe_2_9 : 64'h0)
            | (s3_data_select_by_offset_10 ? s3_data_frm_pipe_2_10 : 64'h0)
            | (s3_data_select_by_offset_11 ? s3_data_frm_pipe_2_11 : 64'h0)
            | (s3_data_select_by_offset_12 ? s3_data_frm_pipe_2_12 : 64'h0)
            | (s3_data_select_by_offset_13 ? s3_data_frm_pipe_2_13 : 64'h0)
            | (s3_data_select_by_offset_14 ? s3_data_frm_pipe_2_14 : 64'h0)
            | (s3_data_select_by_offset_15 ? s3_data_frm_pipe_2_15 : 64'h0)}};
  assign io_misalign_ldout_bits_mmio = s3_in_mmio;
  assign io_misalign_ldout_bits_vecActive = s3_in_vecActive;
  assign io_misalign_ldout_bits_misalignNeedWakeUp = s3_in_misalignNeedWakeUp;
  assign io_misalign_ldout_bits_rep_info_cause_0 = s3_misalign_rep_cause_0;
  assign io_misalign_ldout_bits_rep_info_cause_1 =
    ~s3_in_misalignNeedWakeUp & s3_mab_sel_rep_cause[1];
  assign io_misalign_ldout_bits_rep_info_cause_2 = s3_misalign_rep_cause_2;
  assign io_misalign_ldout_bits_rep_info_cause_3 =
    ~s3_in_misalignNeedWakeUp & s3_mab_sel_rep_cause[3];
  assign io_misalign_ldout_bits_rep_info_cause_4 =
    ~s3_in_misalignNeedWakeUp & s3_mab_sel_rep_cause[4];
  assign io_misalign_ldout_bits_rep_info_cause_5 =
    ~s3_in_misalignNeedWakeUp & s3_mab_sel_rep_cause[5];
  assign io_misalign_ldout_bits_rep_info_cause_6 =
    ~s3_in_misalignNeedWakeUp & s3_mab_sel_rep_cause[6];
  assign io_misalign_ldout_bits_rep_info_cause_7 =
    ~s3_in_misalignNeedWakeUp & s3_mab_sel_rep_cause[7];
  assign io_misalign_ldout_bits_rep_info_cause_8 =
    ~s3_in_misalignNeedWakeUp & s3_mab_sel_rep_cause[8];
  assign io_misalign_ldout_bits_rep_info_cause_9 = s3_misalign_rep_cause_9;
  assign io_misalign_ldout_bits_rep_info_cause_10 =
    ~s3_in_misalignNeedWakeUp & s3_mab_sel_rep_cause[10];
  assign io_tlb_req_valid =
    (_s0_tlb_valid_T | s0_src_selector_5 | io_vecldin_valid | io_ldin_valid)
    & io_dcache_req_ready;
  assign io_tlb_req_bits_vaddr = _s0_tlb_vaddr_T_2;
  assign io_tlb_req_bits_fullva =
    io_misalign_ldin_valid
      ? io_misalign_ldin_bits_fullva
      : s0_src_select_vec_7
          ? io_vecldin_bits_vaddr
          : s0_src_select_vec_8
              ? 64'(io_ldin_bits_src_0
                    + {{52{io_ldin_bits_uop_imm[11]}}, io_ldin_bits_uop_imm[11:0]})
              : {14'h0, s0_dcache_vaddr};
  assign io_tlb_req_bits_checkfullva = io_tlb_req_bits_checkfullva_0;
  assign io_tlb_req_bits_cmd = {2'h0, s0_sel_src_prf & s0_sel_src_prf_wr};
  assign io_tlb_req_bits_hyperinst =
    io_misalign_ldin_valid
      ? io_misalign_ldin_bits_uop_fuOpType[4] & ~(io_misalign_ldin_bits_uop_fuOpType[5])
        & ~(|(io_misalign_ldin_bits_uop_fuOpType[8:7]))
      : _s0_tlb_hlvx_T_9
          ? io_replay_bits_uop_fuOpType[4] & ~(io_replay_bits_uop_fuOpType[5])
            & ~(|(io_replay_bits_uop_fuOpType[8:7]))
          : io_ldin_valid & io_ldin_bits_uop_fuOpType[4] & ~(io_ldin_bits_uop_fuOpType[5])
            & ~(|(io_ldin_bits_uop_fuOpType[8:7]));
  assign io_tlb_req_bits_hlvx =
    io_misalign_ldin_valid
      ? io_misalign_ldin_bits_uop_fuOpType[4] & io_misalign_ldin_bits_uop_fuOpType[3]
        & ~(io_misalign_ldin_bits_uop_fuOpType[5])
        & ~(|(io_misalign_ldin_bits_uop_fuOpType[8:7]))
      : _s0_tlb_hlvx_T_9
          ? io_replay_bits_uop_fuOpType[4] & io_replay_bits_uop_fuOpType[3]
            & ~(io_replay_bits_uop_fuOpType[5]) & ~(|(io_replay_bits_uop_fuOpType[8:7]))
          : io_ldin_valid & io_ldin_bits_uop_fuOpType[4] & io_ldin_bits_uop_fuOpType[3]
            & ~(io_ldin_bits_uop_fuOpType[5]) & ~(|(io_ldin_bits_uop_fuOpType[8:7]));
  assign io_tlb_req_bits_kill = s0_out_tlbNoQuery;
  assign io_tlb_req_bits_isPrefetch = s0_sel_src_prf;
  assign io_tlb_req_bits_no_translate = s0_out_tlbNoQuery;
  assign io_tlb_req_bits_pmp_addr = s1_in_r_paddr;
  assign io_tlb_req_bits_debug_robIdx_flag = s0_sel_src_uop_robIdx_flag;
  assign io_tlb_req_bits_debug_robIdx_value = s0_sel_src_uop_robIdx_value;
  assign io_tlb_req_kill = s1_kill;
  assign io_dcache_req_valid = s0_valid & ~s0_sel_src_prf_i & ~s0_sel_src_isnc;
  assign io_dcache_req_bits_cmd =
    {3'h0, s0_sel_src_prf_rd ? 2'h2 : {2{s0_sel_src_prf_wr}}};
  assign io_dcache_req_bits_vaddr = s0_dcache_vaddr;
  assign io_dcache_req_bits_vaddr_dup = s0_dcache_vaddr;
  assign io_dcache_req_bits_instrtype = {2'h0, {2{s0_sel_src_prf}}};
  assign io_dcache_req_bits_lqIdx_flag = s0_sel_src_uop_lqIdx_flag;
  assign io_dcache_req_bits_lqIdx_value = s0_sel_src_uop_lqIdx_value;
  assign io_dcache_s1_kill = s1_kill | s1_tlb_miss | (|_GEN_0);
  assign io_dcache_s2_kill = io_pmp_ld | io_pmp_st | s2_actually_uncache | s2_kill;
  assign io_dcache_is128Req = s0_is128bit;
  assign io_dcache_pf_source =
    s0_out_isHWPrefetch ? io_prefetch_req_bits_pf_source_value : 3'h0;
  assign io_dcache_s1_paddr_dup_lsu = s1_paddr_dup_lsu;
  assign io_dcache_s1_paddr_dup_dcache =
    s1_in_r_tlbNoQuery ? s1_in_r_paddr : io_tlb_resp_bits_paddr_1;
  assign io_sbuffer_vaddr = s1_in_r_vaddr;
  assign io_sbuffer_paddr = s1_paddr_dup_lsu;
  assign io_sbuffer_valid =
    s1_valid & ~(_io_lsq_forward_valid_T | s1_kill | s1_in_r_isPrefetch);
  assign io_ubuffer_vaddr = s1_in_r_vaddr;
  assign io_ubuffer_paddr = s1_paddr_dup_lsu;
  assign io_ubuffer_valid =
    s1_valid & s1_nc_with_data
    & ~(_io_lsq_forward_valid_T | s1_kill | s1_in_r_isPrefetch);
  assign io_lsq_ldin_valid = io_lsq_ldin_valid_0;
  assign io_lsq_ldin_bits_uop_exceptionVec_3 = s3_in_uop_exceptionVec_3;
  assign io_lsq_ldin_bits_uop_exceptionVec_4 = s3_in_uop_exceptionVec_4;
  assign io_lsq_ldin_bits_uop_exceptionVec_5 = new_vec_1_5;
  assign io_lsq_ldin_bits_uop_exceptionVec_13 = s3_in_uop_exceptionVec_13;
  assign io_lsq_ldin_bits_uop_exceptionVec_21 = s3_in_uop_exceptionVec_21;
  assign io_lsq_ldin_bits_uop_trigger = s3_in_uop_trigger;
  assign io_lsq_ldin_bits_uop_preDecodeInfo_isRVC = s3_in_uop_preDecodeInfo_isRVC;
  assign io_lsq_ldin_bits_uop_ftqPtr_flag = s3_in_uop_ftqPtr_flag;
  assign io_lsq_ldin_bits_uop_ftqPtr_value = s3_in_uop_ftqPtr_value;
  assign io_lsq_ldin_bits_uop_ftqOffset = s3_in_uop_ftqOffset;
  assign io_lsq_ldin_bits_uop_fuOpType = s3_in_uop_fuOpType;
  assign io_lsq_ldin_bits_uop_rfWen = s3_in_uop_rfWen;
  assign io_lsq_ldin_bits_uop_fpWen = s3_in_uop_fpWen;
  assign io_lsq_ldin_bits_uop_vpu_vstart = s3_in_uop_vpu_vstart;
  assign io_lsq_ldin_bits_uop_vpu_veew = s3_in_uop_vpu_veew;
  assign io_lsq_ldin_bits_uop_uopIdx = s3_in_uop_uopIdx;
  assign io_lsq_ldin_bits_uop_pdest = s3_in_uop_pdest;
  assign io_lsq_ldin_bits_uop_robIdx_flag = s3_in_uop_robIdx_flag;
  assign io_lsq_ldin_bits_uop_robIdx_value = s3_in_uop_robIdx_value;
  assign io_lsq_ldin_bits_uop_storeSetHit = s3_in_uop_storeSetHit;
  assign io_lsq_ldin_bits_uop_waitForRobIdx_flag = s3_in_uop_waitForRobIdx_flag;
  assign io_lsq_ldin_bits_uop_waitForRobIdx_value = s3_in_uop_waitForRobIdx_value;
  assign io_lsq_ldin_bits_uop_loadWaitBit = s3_in_uop_loadWaitBit;
  assign io_lsq_ldin_bits_uop_loadWaitStrict = s3_in_uop_loadWaitStrict;
  assign io_lsq_ldin_bits_uop_lqIdx_flag = s3_in_uop_lqIdx_flag;
  assign io_lsq_ldin_bits_uop_lqIdx_value = s3_in_uop_lqIdx_value;
  assign io_lsq_ldin_bits_uop_sqIdx_flag = s3_in_uop_sqIdx_flag;
  assign io_lsq_ldin_bits_uop_sqIdx_value = s3_in_uop_sqIdx_value;
  assign io_lsq_ldin_bits_vaddr = s3_in_vaddr;
  assign io_lsq_ldin_bits_fullva = s3_in_fullva;
  assign io_lsq_ldin_bits_vaNeedExt = s3_in_vaNeedExt;
  assign io_lsq_ldin_bits_isHyper = s3_in_isHyper;
  assign io_lsq_ldin_bits_paddr = s3_in_paddr;
  assign io_lsq_ldin_bits_gpaddr = s3_in_gpaddr;
  assign io_lsq_ldin_bits_isForVSnonLeafPTE = s3_in_isForVSnonLeafPTE;
  assign io_lsq_ldin_bits_mask = s3_in_mask;
  assign io_lsq_ldin_bits_tlbMiss = s3_in_tlbMiss;
  assign io_lsq_ldin_bits_nc = s3_in_nc;
  assign io_lsq_ldin_bits_mmio = s3_in_mmio;
  assign io_lsq_ldin_bits_memBackTypeMM = s3_in_memBackTypeMM;
  assign io_lsq_ldin_bits_isvec = s3_in_isvec;
  assign io_lsq_ldin_bits_is128bit = s3_in_is128bit;
  assign io_lsq_ldin_bits_elemIdx = s3_in_elemIdx;
  assign io_lsq_ldin_bits_alignedType = s3_in_alignedType;
  assign io_lsq_ldin_bits_mbIndex = s3_in_mbIndex;
  assign io_lsq_ldin_bits_reg_offset = s3_in_reg_offset;
  assign io_lsq_ldin_bits_elemIdxInsideVd = s3_in_elemIdxInsideVd;
  assign io_lsq_ldin_bits_vecActive = s3_in_vecActive;
  assign io_lsq_ldin_bits_isLoadReplay = s3_in_isLoadReplay;
  assign io_lsq_ldin_bits_handledByMSHR = s3_in_handledByMSHR;
  assign io_lsq_ldin_bits_schedIndex = s3_in_schedIndex;
  assign io_lsq_ldin_bits_updateAddrValid =
    ~s3_mis_align & (~s3_in_isFrmMisAlignBuf | s3_in_isFinalSplit) | s3_exception;
  assign io_lsq_ldin_bits_rep_info_mshr_id = s3_in_rep_info_mshr_id;
  assign io_lsq_ldin_bits_rep_info_full_fwd = s3_in_rep_info_full_fwd;
  assign io_lsq_ldin_bits_rep_info_data_inv_sq_idx_flag =
    s3_in_rep_info_data_inv_sq_idx_flag;
  assign io_lsq_ldin_bits_rep_info_data_inv_sq_idx_value =
    s3_in_rep_info_data_inv_sq_idx_value;
  assign io_lsq_ldin_bits_rep_info_addr_inv_sq_idx_flag =
    s3_in_rep_info_addr_inv_sq_idx_flag;
  assign io_lsq_ldin_bits_rep_info_addr_inv_sq_idx_value =
    s3_in_rep_info_addr_inv_sq_idx_value;
  assign io_lsq_ldin_bits_rep_info_last_beat = s3_in_rep_info_last_beat;
  assign io_lsq_ldin_bits_rep_info_cause_0 = s3_replayqueue_rep_cause_0;
  assign io_lsq_ldin_bits_rep_info_cause_1 = s3_replayqueue_rep_cause_1;
  assign io_lsq_ldin_bits_rep_info_cause_2 = s3_replayqueue_rep_cause_2;
  assign io_lsq_ldin_bits_rep_info_cause_3 = s3_replayqueue_rep_cause_3;
  assign io_lsq_ldin_bits_rep_info_cause_4 = s3_replayqueue_rep_cause_4;
  assign io_lsq_ldin_bits_rep_info_cause_5 = s3_replayqueue_rep_cause_5;
  assign io_lsq_ldin_bits_rep_info_cause_6 = s3_replayqueue_rep_cause_6;
  assign io_lsq_ldin_bits_rep_info_cause_7 = s3_replayqueue_rep_cause_7;
  assign io_lsq_ldin_bits_rep_info_cause_8 = s3_replayqueue_rep_cause_8;
  assign io_lsq_ldin_bits_rep_info_cause_9 = s3_replayqueue_rep_cause_9;
  assign io_lsq_ldin_bits_rep_info_cause_10 = s3_replayqueue_rep_cause_10;
  assign io_lsq_ldin_bits_rep_info_tlb_id = s3_in_rep_info_tlb_id;
  assign io_lsq_ldin_bits_rep_info_tlb_full = s3_in_rep_info_tlb_full;
  assign io_lsq_uncache_ready = s0_mmio_fire;
  assign io_lsq_nc_ldin_ready = ~_s0_src_ready_vec_4_T_2 & s1_ready;
  assign io_lsq_forward_vaddr = s1_in_r_vaddr;
  assign io_lsq_forward_paddr = s1_paddr_dup_lsu;
  assign io_lsq_forward_mask = s1_in_r_mask;
  assign io_lsq_forward_uop_waitForRobIdx_flag = s1_in_r_uop_waitForRobIdx_flag;
  assign io_lsq_forward_uop_waitForRobIdx_value = s1_in_r_uop_waitForRobIdx_value;
  assign io_lsq_forward_uop_loadWaitBit = s1_in_r_uop_loadWaitBit;
  assign io_lsq_forward_uop_loadWaitStrict = s1_in_r_uop_loadWaitStrict;
  assign io_lsq_forward_uop_sqIdx_flag = s1_in_r_uop_sqIdx_flag;
  assign io_lsq_forward_uop_sqIdx_value = s1_in_r_uop_sqIdx_value;
  assign io_lsq_forward_valid = io_lsq_forward_valid_0;
  assign io_lsq_forward_sqIdx_flag = s1_in_r_uop_sqIdx_flag;
  assign io_lsq_forward_sqIdxMask = s1_sqIdx_mask;
  assign io_lsq_stld_nuke_query_req_valid = io_lsq_ldld_nuke_query_req_valid_0;
  assign io_lsq_stld_nuke_query_req_bits_uop_preDecodeInfo_isRVC =
    s2_in_r_uop_preDecodeInfo_isRVC;
  assign io_lsq_stld_nuke_query_req_bits_uop_ftqPtr_flag = s2_in_r_uop_ftqPtr_flag;
  assign io_lsq_stld_nuke_query_req_bits_uop_ftqPtr_value = s2_in_r_uop_ftqPtr_value;
  assign io_lsq_stld_nuke_query_req_bits_uop_ftqOffset = s2_in_r_uop_ftqOffset;
  assign io_lsq_stld_nuke_query_req_bits_uop_robIdx_flag = s2_in_r_uop_robIdx_flag;
  assign io_lsq_stld_nuke_query_req_bits_uop_robIdx_value = s2_in_r_uop_robIdx_value;
  assign io_lsq_stld_nuke_query_req_bits_uop_sqIdx_flag = s2_in_r_uop_sqIdx_flag;
  assign io_lsq_stld_nuke_query_req_bits_uop_sqIdx_value = s2_in_r_uop_sqIdx_value;
  assign io_lsq_stld_nuke_query_req_bits_mask = s2_in_r_mask;
  assign io_lsq_stld_nuke_query_req_bits_paddr = s2_in_r_paddr;
  assign io_lsq_stld_nuke_query_req_bits_data_valid =
    _io_lsq_stld_nuke_query_req_bits_data_valid_T | s2_nc_with_data | ~s2_dcache_miss;
  assign io_lsq_stld_nuke_query_revoke = s3_revoke;
  assign io_lsq_ldld_nuke_query_req_valid = io_lsq_ldld_nuke_query_req_valid_0;
  assign io_lsq_ldld_nuke_query_req_bits_uop_robIdx_flag = s2_in_r_uop_robIdx_flag;
  assign io_lsq_ldld_nuke_query_req_bits_uop_robIdx_value = s2_in_r_uop_robIdx_value;
  assign io_lsq_ldld_nuke_query_req_bits_uop_lqIdx_flag = s2_in_r_uop_lqIdx_flag;
  assign io_lsq_ldld_nuke_query_req_bits_uop_lqIdx_value = s2_in_r_uop_lqIdx_value;
  assign io_lsq_ldld_nuke_query_req_bits_paddr = s2_in_r_paddr;
  assign io_lsq_ldld_nuke_query_req_bits_data_valid =
    _io_lsq_stld_nuke_query_req_bits_data_valid_T | s2_nc_with_data | ~s2_dcache_miss;
  assign io_lsq_ldld_nuke_query_req_bits_is_nc = s2_nc_with_data;
  assign io_lsq_ldld_nuke_query_revoke = s3_revoke;
  assign io_forward_mshr_valid = io_forward_mshr_valid_0;
  assign io_forward_mshr_mshrid = s1_in_r_mshrid;
  assign io_forward_mshr_paddr = s1_paddr_dup_lsu;
  assign io_prefetch_train_valid = io_prefetch_train_valid_last_REG;
  assign io_prefetch_train_bits_uop_robIdx_flag =
    io_prefetch_train_bits_uop_r_robIdx_flag;
  assign io_prefetch_train_bits_uop_robIdx_value =
    io_prefetch_train_bits_uop_r_robIdx_value;
  assign io_prefetch_train_bits_vaddr = io_prefetch_train_bits_vaddr_r;
  assign io_prefetch_train_bits_paddr = io_prefetch_train_bits_paddr_r;
  assign io_prefetch_train_bits_miss = io_prefetch_train_bits_miss_r_1;
  assign io_prefetch_train_bits_isFirstIssue = io_prefetch_train_bits_isFirstIssue_r;
  assign io_prefetch_train_l1_valid = io_prefetch_train_l1_valid_last_REG;
  assign io_prefetch_train_l1_bits_uop_robIdx_flag =
    io_prefetch_train_l1_bits_uop_r_robIdx_flag;
  assign io_prefetch_train_l1_bits_uop_robIdx_value =
    io_prefetch_train_l1_bits_uop_r_robIdx_value;
  assign io_prefetch_train_l1_bits_vaddr = io_prefetch_train_l1_bits_vaddr_r;
  assign io_prefetch_train_l1_bits_miss = io_prefetch_train_l1_bits_miss_r_1;
  assign io_prefetch_train_l1_bits_isFirstIssue =
    io_prefetch_train_l1_bits_isFirstIssue_r;
  assign io_prefetch_train_l1_bits_meta_prefetch =
    io_prefetch_train_l1_bits_meta_prefetch_r;
  assign io_s1_prefetch_spec = s1_fire;
  assign io_s2_prefetch_spec = s2_prefetch_train_valid;
  assign io_canAcceptLowConfPrefetch = ~_s0_src_ready_vec_10_T_7 & io_dcache_req_ready;
  assign io_canAcceptHighConfPrefetch = ~_s0_src_ready_vec_6_T_4 & io_dcache_req_ready;
  assign io_ifetchPrefetch_valid = io_ifetchPrefetch_valid_REG;
  assign io_ifetchPrefetch_bits_vaddr = io_ifetchPrefetch_bits_vaddr_r;
  assign io_wakeup_valid =
    s0_fire & ~s0_sel_src_isvec & ~s0_sel_src_frm_mabuf
    & (_io_wakeup_valid_T_4 | s0_src_selector_5 | io_ldin_valid & ~s0_sel_src_prf
       & ~io_vecldin_valid & ~s0_src_selector_6) | s0_mmio_fire | s0_nc_fire
    | s0_misalign_wakeup_fire;
  assign io_wakeup_bits_rfWen =
    _s0_wakeup_uop_T_2
      ? (s0_misalign_wakeup_fire
           ? io_misalign_ldin_bits_uop_rfWen
           : s0_src_selector_1 ? io_replay_bits_uop_rfWen : io_fast_rep_in_bits_uop_rfWen)
      : _s0_wakeup_uop_T_4
          ? (s0_mmio_fire ? io_lsq_uncache_bits_uop_rfWen : io_lsq_nc_ldin_bits_uop_rfWen)
          : s0_src_selector_5 ? io_replay_bits_uop_rfWen : io_ldin_bits_uop_rfWen;
  assign io_wakeup_bits_fpWen =
    _s0_wakeup_uop_T_2
      ? (s0_misalign_wakeup_fire
           ? io_misalign_ldin_bits_uop_fpWen
           : s0_src_selector_1 ? io_replay_bits_uop_fpWen : io_fast_rep_in_bits_uop_fpWen)
      : _s0_wakeup_uop_T_4
          ? (s0_mmio_fire ? io_lsq_uncache_bits_uop_fpWen : io_lsq_nc_ldin_bits_uop_fpWen)
          : s0_src_selector_5 ? io_replay_bits_uop_fpWen : io_ldin_bits_uop_fpWen;
  assign io_wakeup_bits_pdest =
    _s0_wakeup_uop_T_2
      ? (s0_misalign_wakeup_fire
           ? io_misalign_ldin_bits_uop_pdest
           : s0_src_selector_1 ? io_replay_bits_uop_pdest : io_fast_rep_in_bits_uop_pdest)
      : _s0_wakeup_uop_T_4
          ? (s0_mmio_fire ? io_lsq_uncache_bits_uop_pdest : io_lsq_nc_ldin_bits_uop_pdest)
          : s0_src_selector_5 ? io_replay_bits_uop_pdest : io_ldin_bits_uop_pdest;
  assign io_ldCancel_ld2Cancel =
    s3_valid_last_REG & ~s3_safe_wakeup & ~s3_isvec
    & (~s3_in_isFrmMisAlignBuf | s3_in_misalignNeedWakeUp);
  assign io_replay_ready =
    io_misalign_ldin_ready_0
    & (~(_s0_tlb_valid_T | io_fast_rep_in_valid | io_lsq_uncache_valid
         | io_lsq_nc_ldin_valid) & ~s0_rep_stall | s0_src_select_vec_1);
  assign io_s2_ptr_chasing = io_s2_ptr_chasing_r;
  assign io_fast_rep_out_valid = s3_valid_last_REG & s3_fast_rep_REG;
  assign io_fast_rep_out_bits_uop_exceptionVec_4 = s3_in_uop_exceptionVec_4;
  assign io_fast_rep_out_bits_uop_exceptionVec_19 = s3_in_uop_exceptionVec_19;
  assign io_fast_rep_out_bits_uop_preDecodeInfo_isRVC = s3_in_uop_preDecodeInfo_isRVC;
  assign io_fast_rep_out_bits_uop_ftqPtr_flag = s3_in_uop_ftqPtr_flag;
  assign io_fast_rep_out_bits_uop_ftqPtr_value = s3_in_uop_ftqPtr_value;
  assign io_fast_rep_out_bits_uop_ftqOffset = s3_in_uop_ftqOffset;
  assign io_fast_rep_out_bits_uop_fuOpType = s3_in_uop_fuOpType;
  assign io_fast_rep_out_bits_uop_rfWen = s3_in_uop_rfWen;
  assign io_fast_rep_out_bits_uop_fpWen = s3_in_uop_fpWen;
  assign io_fast_rep_out_bits_uop_vpu_vstart = s3_in_uop_vpu_vstart;
  assign io_fast_rep_out_bits_uop_vpu_veew = s3_in_uop_vpu_veew;
  assign io_fast_rep_out_bits_uop_uopIdx = s3_in_uop_uopIdx;
  assign io_fast_rep_out_bits_uop_pdest = s3_in_uop_pdest;
  assign io_fast_rep_out_bits_uop_robIdx_flag = s3_in_uop_robIdx_flag;
  assign io_fast_rep_out_bits_uop_robIdx_value = s3_in_uop_robIdx_value;
  assign io_fast_rep_out_bits_uop_storeSetHit = s3_in_uop_storeSetHit;
  assign io_fast_rep_out_bits_uop_waitForRobIdx_flag = s3_in_uop_waitForRobIdx_flag;
  assign io_fast_rep_out_bits_uop_waitForRobIdx_value = s3_in_uop_waitForRobIdx_value;
  assign io_fast_rep_out_bits_uop_loadWaitBit = s3_in_uop_loadWaitBit;
  assign io_fast_rep_out_bits_uop_loadWaitStrict = s3_in_uop_loadWaitStrict;
  assign io_fast_rep_out_bits_uop_lqIdx_flag = s3_in_uop_lqIdx_flag;
  assign io_fast_rep_out_bits_uop_lqIdx_value = s3_in_uop_lqIdx_value;
  assign io_fast_rep_out_bits_uop_sqIdx_flag = s3_in_uop_sqIdx_flag;
  assign io_fast_rep_out_bits_uop_sqIdx_value = s3_in_uop_sqIdx_value;
  assign io_fast_rep_out_bits_vaddr = s3_in_vaddr;
  assign io_fast_rep_out_bits_paddr = s3_in_paddr;
  assign io_fast_rep_out_bits_mask = s3_in_mask;
  assign io_fast_rep_out_bits_data = s3_in_data;
  assign io_fast_rep_out_bits_nc = s3_in_nc;
  assign io_fast_rep_out_bits_isFrmMisAlignBuf = s3_in_isFrmMisAlignBuf;
  assign io_fast_rep_out_bits_isvec = s3_in_isvec;
  assign io_fast_rep_out_bits_is128bit = s3_in_is128bit;
  assign io_fast_rep_out_bits_elemIdx = s3_in_elemIdx;
  assign io_fast_rep_out_bits_alignedType = s3_in_alignedType;
  assign io_fast_rep_out_bits_mbIndex = s3_in_mbIndex;
  assign io_fast_rep_out_bits_reg_offset = s3_in_reg_offset;
  assign io_fast_rep_out_bits_elemIdxInsideVd = s3_in_elemIdxInsideVd;
  assign io_fast_rep_out_bits_vecActive = s3_in_vecActive;
  assign io_fast_rep_out_bits_isLoadReplay = s3_in_isLoadReplay;
  assign io_fast_rep_out_bits_lateKill = s3_vp_match_fail;
  assign io_fast_rep_out_bits_schedIndex = s3_in_schedIndex;
  assign io_fast_rep_out_bits_rep_info_mshr_id = s3_in_rep_info_mshr_id;
  assign io_misalign_buf_valid = toMisalignBufferValid;
  assign io_misalign_buf_bits_uop_exceptionVec_19 = s3_in_uop_exceptionVec_19;
  assign io_misalign_buf_bits_uop_trigger = s3_in_uop_trigger;
  assign io_misalign_buf_bits_uop_preDecodeInfo_isRVC = s3_in_uop_preDecodeInfo_isRVC;
  assign io_misalign_buf_bits_uop_ftqPtr_flag = s3_in_uop_ftqPtr_flag;
  assign io_misalign_buf_bits_uop_ftqPtr_value = s3_in_uop_ftqPtr_value;
  assign io_misalign_buf_bits_uop_ftqOffset = s3_in_uop_ftqOffset;
  assign io_misalign_buf_bits_uop_fuOpType = s3_in_uop_fuOpType;
  assign io_misalign_buf_bits_uop_rfWen = s3_in_uop_rfWen;
  assign io_misalign_buf_bits_uop_fpWen = s3_in_uop_fpWen;
  assign io_misalign_buf_bits_uop_vpu_vstart = s3_in_uop_vpu_vstart;
  assign io_misalign_buf_bits_uop_vpu_veew = s3_in_uop_vpu_veew;
  assign io_misalign_buf_bits_uop_uopIdx = s3_in_uop_uopIdx;
  assign io_misalign_buf_bits_uop_pdest = s3_in_uop_pdest;
  assign io_misalign_buf_bits_uop_robIdx_flag = s3_in_uop_robIdx_flag;
  assign io_misalign_buf_bits_uop_robIdx_value = s3_in_uop_robIdx_value;
  assign io_misalign_buf_bits_uop_storeSetHit = s3_in_uop_storeSetHit;
  assign io_misalign_buf_bits_uop_waitForRobIdx_flag = s3_in_uop_waitForRobIdx_flag;
  assign io_misalign_buf_bits_uop_waitForRobIdx_value = s3_in_uop_waitForRobIdx_value;
  assign io_misalign_buf_bits_uop_loadWaitBit = s3_in_uop_loadWaitBit;
  assign io_misalign_buf_bits_uop_loadWaitStrict = s3_in_uop_loadWaitStrict;
  assign io_misalign_buf_bits_uop_lqIdx_flag = s3_in_uop_lqIdx_flag;
  assign io_misalign_buf_bits_uop_lqIdx_value = s3_in_uop_lqIdx_value;
  assign io_misalign_buf_bits_uop_sqIdx_flag = s3_in_uop_sqIdx_flag;
  assign io_misalign_buf_bits_uop_sqIdx_value = s3_in_uop_sqIdx_value;
  assign io_misalign_buf_bits_vaddr = s3_in_vaddr;
  assign io_misalign_buf_bits_fullva = s3_in_fullva;
  assign io_misalign_buf_bits_vaNeedExt = s3_in_vaNeedExt;
  assign io_misalign_buf_bits_gpaddr = s3_in_gpaddr;
  assign io_misalign_buf_bits_mask = s3_in_mask;
  assign io_misalign_buf_bits_isvec = s3_in_isvec;
  assign io_misalign_buf_bits_elemIdx = s3_in_elemIdx;
  assign io_misalign_buf_bits_alignedType = s3_in_alignedType;
  assign io_misalign_buf_bits_mbIndex = s3_in_mbIndex;
  assign io_misalign_buf_bits_elemIdxInsideVd = s3_in_elemIdxInsideVd;
  assign io_misalign_buf_bits_vecTriggerMask = s3_in_vecTriggerMask;
  assign io_rollback_valid =
    s3_valid_last_REG
    & (s3_vp_match_fail | io_lsq_ldld_nuke_query_resp_valid
       & io_lsq_ldld_nuke_query_resp_bits_rep_frm_fetch & s3_ldld_rep_inst_last_REG
       | s3_frm_mis_flush) & ~s3_exception;
  assign io_rollback_bits_isRVC = s3_in_uop_preDecodeInfo_isRVC;
  assign io_rollback_bits_robIdx_flag = s3_in_uop_robIdx_flag;
  assign io_rollback_bits_robIdx_value = s3_in_uop_robIdx_value;
  assign io_rollback_bits_ftqIdx_flag = s3_in_uop_ftqPtr_flag;
  assign io_rollback_bits_ftqIdx_value = s3_in_uop_ftqPtr_value;
  assign io_rollback_bits_ftqOffset = s3_in_uop_ftqOffset;
  assign io_rollback_bits_level = s3_vp_match_fail | s3_frm_mis_flush;
  assign io_perf_0_value = {5'h0, io_perf_0_value_REG_1};
  assign io_perf_1_value = {5'h0, io_perf_1_value_REG_1};
  assign io_perf_2_value = {5'h0, io_perf_2_value_REG_1};
  assign io_perf_3_value = {5'h0, io_perf_3_value_REG_1};
  assign io_perf_4_value = {5'h0, io_perf_4_value_REG_1};
  assign io_perf_5_value = {5'h0, io_perf_5_value_REG_1};
  assign io_perf_6_value = {5'h0, io_perf_6_value_REG_1};
endmodule

