// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module VIntAdder64b(
  input  [5:0]  io_opcode_op,
  input         io_info_vm,
  input         io_info_ma,
  input  [5:0]  io_info_uopIdx,
  input  [3:0]  io_srcType_1,
  input  [3:0]  io_vdType,
  input  [63:0] io_vs1,
  input  [63:0] io_vs2,
  input  [7:0]  io_vmask,
  input  [7:0]  io_oldVd,
  input         io_isSub,
  input         io_widen,
  input         io_widen_vs2,
  output [63:0] io_vd,
  output [7:0]  io_cmpOut,
  output        io_toFixP_cout_0,
  output        io_toFixP_cout_1,
  output        io_toFixP_cout_2,
  output        io_toFixP_cout_3,
  output        io_toFixP_cout_4,
  output        io_toFixP_cout_5,
  output        io_toFixP_cout_6,
  output        io_toFixP_cout_7,
  output [7:0]  io_toFixP_vd_0,
  output [7:0]  io_toFixP_vd_1,
  output [7:0]  io_toFixP_vd_2,
  output [7:0]  io_toFixP_vd_3,
  output [7:0]  io_toFixP_vd_4,
  output [7:0]  io_toFixP_vd_5,
  output [7:0]  io_toFixP_vd_6,
  output [7:0]  io_toFixP_vd_7,
  output        io_toFixP_vs2H_0,
  output        io_toFixP_vs2H_1,
  output        io_toFixP_vs2H_2,
  output        io_toFixP_vs2H_3,
  output        io_toFixP_vs2H_4,
  output        io_toFixP_vs2H_5,
  output        io_toFixP_vs2H_6,
  output        io_toFixP_vs2H_7,
  output        io_toFixP_vs1H_0,
  output        io_toFixP_vs1H_1,
  output        io_toFixP_vs1H_2,
  output        io_toFixP_vs1H_3,
  output        io_toFixP_vs1H_4,
  output        io_toFixP_vs1H_5,
  output        io_toFixP_vs1H_6,
  output        io_toFixP_vs1H_7
);

  wire        cin_7;
  wire        cin_6;
  wire        cin_5;
  wire        cin_4;
  wire        cin_3;
  wire        cin_2;
  wire        cin_1;
  wire        carryIn_0;
  wire        _eewVs1_sew_oneHot_T = io_srcType_1[1:0] == 2'h0;
  wire        _eewVs1_sew_oneHot_T_1 = io_srcType_1[1:0] == 2'h1;
  wire        _eewVs1_sew_oneHot_T_2 = io_srcType_1[1:0] == 2'h2;
  wire        _eewVd_sew_oneHot_T = io_vdType[1:0] == 2'h0;
  wire        signed_0 = io_srcType_1[3:2] == 2'h1;
  wire        _cmpOut_T = io_opcode_op == 6'h6;
  wire        addWithCarry =
    io_opcode_op == 6'h3 | io_opcode_op == 6'h4 | io_opcode_op == 6'h5 | _cmpOut_T;
  wire [31:0] vs2_32b = io_info_uopIdx[0] ? io_vs2[63:32] : io_vs2[31:0];
  wire [31:0] vs1_32b = io_info_uopIdx[0] ? io_vs1[63:32] : io_vs1[31:0];
  wire [63:0] vs2_adjust =
    io_widen_vs2
      ? (_eewVs1_sew_oneHot_T
           ? {{8{vs2_32b[31] & signed_0}},
              vs2_32b[31:24],
              {8{vs2_32b[23] & signed_0}},
              vs2_32b[23:16],
              {8{vs2_32b[15] & signed_0}},
              vs2_32b[15:8],
              {8{vs2_32b[7] & signed_0}},
              vs2_32b[7:0]}
           : 64'h0)
        | (_eewVs1_sew_oneHot_T_1
             ? {{16{vs2_32b[31] & signed_0}},
                vs2_32b[31:16],
                {16{vs2_32b[15] & signed_0}},
                vs2_32b[15:0]}
             : 64'h0)
        | (_eewVs1_sew_oneHot_T_2 ? {{32{vs2_32b[31] & signed_0}}, vs2_32b} : 64'h0)
      : io_vs2;
  wire [63:0] vs1_adjust =
    (io_widen
       ? (_eewVs1_sew_oneHot_T
            ? {{8{vs1_32b[31] & signed_0}},
               vs1_32b[31:24],
               {8{vs1_32b[23] & signed_0}},
               vs1_32b[23:16],
               {8{vs1_32b[15] & signed_0}},
               vs1_32b[15:8],
               {8{vs1_32b[7] & signed_0}},
               vs1_32b[7:0]}
            : 64'h0)
         | (_eewVs1_sew_oneHot_T_1
              ? {{16{vs1_32b[31] & signed_0}},
                 vs1_32b[31:16],
                 {16{vs1_32b[15] & signed_0}},
                 vs1_32b[15:0]}
              : 64'h0)
         | (_eewVs1_sew_oneHot_T_2 ? {{32{vs1_32b[31] & signed_0}}, vs1_32b} : 64'h0)
       : io_vs1) ^ {64{io_isSub}};
  wire [7:0]  vmask_adjust =
    _eewVs1_sew_oneHot_T_1
      ? {1'h0, io_vmask[3], 1'h0, io_vmask[2], 1'h0, io_vmask[1], 1'h0, io_vmask[0]}
      : _eewVs1_sew_oneHot_T_2 ? {3'h0, io_vmask[1], 3'h0, io_vmask[0]} : io_vmask;
  wire [9:0]  _bits_T_2 =
    10'({1'h0, vs1_adjust[7:0], carryIn_0} + {1'h0, vs2_adjust[7:0], carryIn_0});
  assign carryIn_0 = addWithCarry & ~io_info_vm & vmask_adjust[0] ^ io_isSub;
  wire        _eewCin_oneHot_T_28 = io_opcode_op == 6'h0;
  wire        _eewCin_oneHot_T_29 = io_opcode_op == 6'h1;
  wire [9:0]  _bits_T_5 =
    10'({1'h0, vs1_adjust[15:8], cin_1} + {1'h0, vs2_adjust[15:8], cin_1});
  assign cin_1 =
    (_eewCin_oneHot_T_28 | _eewCin_oneHot_T_29
       ? _eewVd_sew_oneHot_T
       : _eewVs1_sew_oneHot_T)
      ? addWithCarry & ~io_info_vm & vmask_adjust[1] ^ io_isSub
      : _bits_T_2[9];
  wire [9:0]  _bits_T_8 =
    10'({1'h0, vs1_adjust[23:16], cin_2} + {1'h0, vs2_adjust[23:16], cin_2});
  wire [1:0]  _GEN = {&(io_vdType[1:0]), io_vdType[1:0] == 2'h2};
  wire [1:0]  _GEN_0 = {&(io_srcType_1[1:0]), _eewVs1_sew_oneHot_T_2};
  assign cin_2 =
    (|(_eewCin_oneHot_T_28 | _eewCin_oneHot_T_29 ? _GEN : _GEN_0))
      ? _bits_T_5[9]
      : addWithCarry & ~io_info_vm & vmask_adjust[2] ^ io_isSub;
  wire [9:0]  _bits_T_11 =
    10'({1'h0, vs1_adjust[31:24], cin_3} + {1'h0, vs2_adjust[31:24], cin_3});
  assign cin_3 =
    (_eewCin_oneHot_T_28 | _eewCin_oneHot_T_29
       ? _eewVd_sew_oneHot_T
       : _eewVs1_sew_oneHot_T)
      ? addWithCarry & ~io_info_vm & vmask_adjust[3] ^ io_isSub
      : _bits_T_8[9];
  wire [9:0]  _bits_T_14 =
    10'({1'h0, vs1_adjust[39:32], cin_4} + {1'h0, vs2_adjust[39:32], cin_4});
  assign cin_4 =
    (_eewCin_oneHot_T_28 | _eewCin_oneHot_T_29
       ? (&(io_vdType[1:0]))
       : (&(io_srcType_1[1:0])))
      ? _bits_T_11[9]
      : addWithCarry & ~io_info_vm & vmask_adjust[4] ^ io_isSub;
  wire [9:0]  _bits_T_17 =
    10'({1'h0, vs1_adjust[47:40], cin_5} + {1'h0, vs2_adjust[47:40], cin_5});
  assign cin_5 =
    (_eewCin_oneHot_T_28 | _eewCin_oneHot_T_29
       ? _eewVd_sew_oneHot_T
       : _eewVs1_sew_oneHot_T)
      ? addWithCarry & ~io_info_vm & vmask_adjust[5] ^ io_isSub
      : _bits_T_14[9];
  wire [9:0]  _bits_T_20 =
    10'({1'h0, vs1_adjust[55:48], cin_6} + {1'h0, vs2_adjust[55:48], cin_6});
  assign cin_6 =
    (|(_eewCin_oneHot_T_28 | _eewCin_oneHot_T_29 ? _GEN : _GEN_0))
      ? _bits_T_17[9]
      : addWithCarry & ~io_info_vm & vmask_adjust[6] ^ io_isSub;
  wire [9:0]  _bits_T_23 =
    10'({1'h0, vs1_adjust[63:56], cin_7} + {1'h0, vs2_adjust[63:56], cin_7});
  assign cin_7 =
    (_eewCin_oneHot_T_28 | _eewCin_oneHot_T_29
       ? _eewVd_sew_oneHot_T
       : _eewVs1_sew_oneHot_T)
      ? addWithCarry & ~io_info_vm & vmask_adjust[7] ^ io_isSub
      : _bits_T_20[9];
  wire        lessThan_vec_0 =
    signed_0 ? io_vs2[7] ^ vs1_adjust[7] ^ _bits_T_2[9] : ~(_bits_T_2[9]);
  wire        equal_vec_0 = io_vs2[7:0] == io_vs1[7:0];
  wire        lessThan_vec_1 =
    signed_0 ? io_vs2[15] ^ vs1_adjust[15] ^ _bits_T_5[9] : ~(_bits_T_5[9]);
  wire        equal_vec_1 = io_vs2[15:8] == io_vs1[15:8];
  wire        lessThan_vec_2 =
    signed_0 ? io_vs2[23] ^ vs1_adjust[23] ^ _bits_T_8[9] : ~(_bits_T_8[9]);
  wire        equal_vec_2 = io_vs2[23:16] == io_vs1[23:16];
  wire        lessThan_vec_3 =
    signed_0 ? io_vs2[31] ^ vs1_adjust[31] ^ _bits_T_11[9] : ~(_bits_T_11[9]);
  wire        equal_vec_3 = io_vs2[31:24] == io_vs1[31:24];
  wire        lessThan_vec_4 =
    signed_0 ? io_vs2[39] ^ vs1_adjust[39] ^ _bits_T_14[9] : ~(_bits_T_14[9]);
  wire        equal_vec_4 = io_vs2[39:32] == io_vs1[39:32];
  wire        lessThan_vec_5 =
    signed_0 ? io_vs2[47] ^ vs1_adjust[47] ^ _bits_T_17[9] : ~(_bits_T_17[9]);
  wire        equal_vec_5 = io_vs2[47:40] == io_vs1[47:40];
  wire        lessThan_vec_6 =
    signed_0 ? io_vs2[55] ^ vs1_adjust[55] ^ _bits_T_20[9] : ~(_bits_T_20[9]);
  wire        equal_vec_6 = io_vs2[55:48] == io_vs1[55:48];
  wire        lessThan_vec_7 =
    signed_0 ? io_vs2[63] ^ vs1_adjust[63] ^ _bits_T_23[9] : ~(_bits_T_23[9]);
  wire        equal_vec_7 = io_vs2[63:56] == io_vs1[63:56];
  wire [7:0]  equal =
    {equal_vec_7,
     equal_vec_6,
     equal_vec_5,
     equal_vec_4,
     equal_vec_3,
     equal_vec_2,
     equal_vec_1,
     equal_vec_0};
  wire [7:0]  cmpEq =
    (_eewVs1_sew_oneHot_T ? equal : 8'h0)
    | (_eewVs1_sew_oneHot_T_1
         ? {{2{&{equal_vec_7, equal_vec_6}}},
            {2{&{equal_vec_5, equal_vec_4}}},
            {2{&{equal_vec_3, equal_vec_2}}},
            {2{&{equal_vec_1, equal_vec_0}}}}
         : 8'h0)
    | (_eewVs1_sew_oneHot_T_2
         ? {{4{&{equal_vec_7, equal_vec_6, equal_vec_5, equal_vec_4}}},
            {4{&{equal_vec_3, equal_vec_2, equal_vec_1, equal_vec_0}}}}
         : 8'h0) | {8{(&(io_srcType_1[1:0])) & (&equal)}};
  wire [7:0]  lessThan =
    {lessThan_vec_7,
     lessThan_vec_6,
     lessThan_vec_5,
     lessThan_vec_4,
     lessThan_vec_3,
     lessThan_vec_2,
     lessThan_vec_1,
     lessThan_vec_0};
  wire [7:0]  _cmpResult_T_6 = lessThan | cmpEq;
  wire        _io_vd_T_1 = io_opcode_op == 6'h18;
  wire        selectVs1_1 = lessThan_vec_1 == _io_vd_T_1;
  wire        selectVs1_3 = lessThan_vec_3 == _io_vd_T_1;
  wire        selectVs1_5 = lessThan_vec_5 == _io_vd_T_1;
  wire        selectVs1_7 = lessThan_vec_7 == _io_vd_T_1;
  wire [7:0]  cmpOut =
    addWithCarry
      ? (_cmpOut_T
           ? ~{_bits_T_23[9],
               _bits_T_20[9],
               _bits_T_17[9],
               _bits_T_14[9],
               _bits_T_11[9],
               _bits_T_8[9],
               _bits_T_5[9],
               _bits_T_2[9]}
           : {_bits_T_23[9],
              _bits_T_20[9],
              _bits_T_17[9],
              _bits_T_14[9],
              _bits_T_11[9],
              _bits_T_8[9],
              _bits_T_5[9],
              _bits_T_2[9]})
      : (io_opcode_op == 6'h12 ? cmpEq : 8'h0) | (io_opcode_op == 6'h13 ? ~cmpEq : 8'h0)
        | (io_opcode_op == 6'h14 ? lessThan : 8'h0)
        | (io_opcode_op == 6'h15 ? _cmpResult_T_6 : 8'h0)
        | (io_opcode_op == 6'h16 ? ~_cmpResult_T_6 : 8'h0);
  wire [7:0]  cmpOutAdjust =
    (_eewVs1_sew_oneHot_T ? cmpOut : 8'h0)
    | (_eewVs1_sew_oneHot_T_1 ? {4'hF, cmpOut[7], cmpOut[5], cmpOut[3], cmpOut[1]} : 8'h0)
    | (_eewVs1_sew_oneHot_T_2 ? {6'h3F, cmpOut[7], cmpOut[3]} : 8'h0)
    | ((&(io_srcType_1[1:0])) ? {7'h7F, cmpOut[7]} : 8'h0);
  assign io_vd =
    io_opcode_op == 6'h17 | _io_vd_T_1
      ? {_eewVs1_sew_oneHot_T & selectVs1_7 | _eewVs1_sew_oneHot_T_1 & selectVs1_7
         | _eewVs1_sew_oneHot_T_2 & selectVs1_7 | (&(io_srcType_1[1:0])) & selectVs1_7
           ? io_vs1[63:56]
           : io_vs2[63:56],
         _eewVs1_sew_oneHot_T & lessThan_vec_6 == _io_vd_T_1 | _eewVs1_sew_oneHot_T_1
         & selectVs1_7 | _eewVs1_sew_oneHot_T_2 & selectVs1_7 | (&(io_srcType_1[1:0]))
         & selectVs1_7
           ? io_vs1[55:48]
           : io_vs2[55:48],
         _eewVs1_sew_oneHot_T & selectVs1_5 | _eewVs1_sew_oneHot_T_1 & selectVs1_5
         | _eewVs1_sew_oneHot_T_2 & selectVs1_7 | (&(io_srcType_1[1:0])) & selectVs1_7
           ? io_vs1[47:40]
           : io_vs2[47:40],
         _eewVs1_sew_oneHot_T & lessThan_vec_4 == _io_vd_T_1 | _eewVs1_sew_oneHot_T_1
         & selectVs1_5 | _eewVs1_sew_oneHot_T_2 & selectVs1_7 | (&(io_srcType_1[1:0]))
         & selectVs1_7
           ? io_vs1[39:32]
           : io_vs2[39:32],
         _eewVs1_sew_oneHot_T & selectVs1_3 | _eewVs1_sew_oneHot_T_1 & selectVs1_3
         | _eewVs1_sew_oneHot_T_2 & selectVs1_3 | (&(io_srcType_1[1:0])) & selectVs1_7
           ? io_vs1[31:24]
           : io_vs2[31:24],
         _eewVs1_sew_oneHot_T & lessThan_vec_2 == _io_vd_T_1 | _eewVs1_sew_oneHot_T_1
         & selectVs1_3 | _eewVs1_sew_oneHot_T_2 & selectVs1_3 | (&(io_srcType_1[1:0]))
         & selectVs1_7
           ? io_vs1[23:16]
           : io_vs2[23:16],
         _eewVs1_sew_oneHot_T & selectVs1_1 | _eewVs1_sew_oneHot_T_1 & selectVs1_1
         | _eewVs1_sew_oneHot_T_2 & selectVs1_3 | (&(io_srcType_1[1:0])) & selectVs1_7
           ? io_vs1[15:8]
           : io_vs2[15:8],
         _eewVs1_sew_oneHot_T & lessThan_vec_0 == _io_vd_T_1 | _eewVs1_sew_oneHot_T_1
         & selectVs1_1 | _eewVs1_sew_oneHot_T_2 & selectVs1_3 | (&(io_srcType_1[1:0]))
         & selectVs1_7
           ? io_vs1[7:0]
           : io_vs2[7:0]}
      : {_bits_T_23[8:1],
         _bits_T_20[8:1],
         _bits_T_17[8:1],
         _bits_T_14[8:1],
         _bits_T_11[8:1],
         _bits_T_8[8:1],
         _bits_T_5[8:1],
         _bits_T_2[8:1]};
  assign io_cmpOut =
    addWithCarry
      ? cmpOutAdjust
      : {io_info_vm | io_vmask[7] ? cmpOutAdjust[7] : io_info_ma | io_oldVd[7],
         io_info_vm | io_vmask[6] ? cmpOutAdjust[6] : io_info_ma | io_oldVd[6],
         io_info_vm | io_vmask[5] ? cmpOutAdjust[5] : io_info_ma | io_oldVd[5],
         io_info_vm | io_vmask[4] ? cmpOutAdjust[4] : io_info_ma | io_oldVd[4],
         io_info_vm | io_vmask[3] ? cmpOutAdjust[3] : io_info_ma | io_oldVd[3],
         io_info_vm | io_vmask[2] ? cmpOutAdjust[2] : io_info_ma | io_oldVd[2],
         io_info_vm | io_vmask[1] ? cmpOutAdjust[1] : io_info_ma | io_oldVd[1],
         io_info_vm | io_vmask[0] ? cmpOutAdjust[0] : io_info_ma | io_oldVd[0]};
  assign io_toFixP_cout_0 = _bits_T_2[9];
  assign io_toFixP_cout_1 = _bits_T_5[9];
  assign io_toFixP_cout_2 = _bits_T_8[9];
  assign io_toFixP_cout_3 = _bits_T_11[9];
  assign io_toFixP_cout_4 = _bits_T_14[9];
  assign io_toFixP_cout_5 = _bits_T_17[9];
  assign io_toFixP_cout_6 = _bits_T_20[9];
  assign io_toFixP_cout_7 = _bits_T_23[9];
  assign io_toFixP_vd_0 = _bits_T_2[8:1];
  assign io_toFixP_vd_1 = _bits_T_5[8:1];
  assign io_toFixP_vd_2 = _bits_T_8[8:1];
  assign io_toFixP_vd_3 = _bits_T_11[8:1];
  assign io_toFixP_vd_4 = _bits_T_14[8:1];
  assign io_toFixP_vd_5 = _bits_T_17[8:1];
  assign io_toFixP_vd_6 = _bits_T_20[8:1];
  assign io_toFixP_vd_7 = _bits_T_23[8:1];
  assign io_toFixP_vs2H_0 = io_vs2[7];
  assign io_toFixP_vs2H_1 = io_vs2[15];
  assign io_toFixP_vs2H_2 = io_vs2[23];
  assign io_toFixP_vs2H_3 = io_vs2[31];
  assign io_toFixP_vs2H_4 = io_vs2[39];
  assign io_toFixP_vs2H_5 = io_vs2[47];
  assign io_toFixP_vs2H_6 = io_vs2[55];
  assign io_toFixP_vs2H_7 = io_vs2[63];
  assign io_toFixP_vs1H_0 = io_vs1[7];
  assign io_toFixP_vs1H_1 = io_vs1[15];
  assign io_toFixP_vs1H_2 = io_vs1[23];
  assign io_toFixP_vs1H_3 = io_vs1[31];
  assign io_toFixP_vs1H_4 = io_vs1[39];
  assign io_toFixP_vs1H_5 = io_vs1[47];
  assign io_toFixP_vs1H_6 = io_vs1[55];
  assign io_toFixP_vs1H_7 = io_vs1[63];
endmodule

