// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module Permutation(
  input          clock,
  input          reset,
  input          io_in_valid,
  input  [5:0]   io_in_bits_opcode_op,
  input          io_in_bits_info_vm,
  input          io_in_bits_info_ma,
  input          io_in_bits_info_ta,
  input  [2:0]   io_in_bits_info_vlmul,
  input  [7:0]   io_in_bits_info_vl,
  input  [6:0]   io_in_bits_info_vstart,
  input  [5:0]   io_in_bits_info_uopIdx,
  input  [3:0]   io_in_bits_srcType_0,
  input  [3:0]   io_in_bits_srcType_1,
  input  [127:0] io_in_bits_vs1,
  input  [127:0] io_in_bits_vs2,
  input  [127:0] io_in_bits_old_vd,
  input  [127:0] io_in_bits_mask,
  output [127:0] io_out_vd
);

  wire [2:0]        _vslidednOffset_outOffsetVs2;
  wire [2:0]        _vslidednOffset_outOffsetVd;
  wire              _vslidednOffset_outIsFirst;
  wire [2:0]        _vslideupOffset_outOffsetVs2;
  wire [2:0]        _vslideupOffset_outOffsetVd;
  reg               fire_reg0_last_r;
  wire [2:0]        _vsew_plus1_T_2 = 3'({1'h0, ~(io_in_bits_srcType_0[1:0])} + 3'h1);
  wire [4:0]        ele_cnt = 5'h10 >> io_in_bits_srcType_0[1:0];
  wire              vslideup = io_in_bits_opcode_op == 6'h0;
  wire              vslidedn = io_in_bits_opcode_op == 6'h1;
  wire              vslide1up = io_in_bits_opcode_op == 6'h2;
  wire              vslide1dn = io_in_bits_opcode_op == 6'h3;
  wire              vrgather = io_in_bits_opcode_op == 6'h4;
  wire              vrgather_vx = io_in_bits_opcode_op == 6'h5;
  wire              vrgather16_sew8 =
    vrgather & io_in_bits_srcType_1 == 4'h1 & io_in_bits_srcType_0 == 4'h0;
  wire              _load_rs1_T_3 = io_in_bits_info_uopIdx == 6'h0;
  wire              _in_previous_ones_sum_T_1 = io_in_bits_info_uopIdx == 6'h1;
  wire              _load_rs1_T_6 = io_in_bits_info_uopIdx == 6'h2;
  wire              _baseUopIdx1H_T_14 = io_in_bits_info_uopIdx == 6'h3;
  wire              _load_rs1_T_10 = io_in_bits_info_uopIdx == 6'h6;
  wire              _baseUopIdx1H_T_26 = io_in_bits_info_uopIdx == 6'h7;
  wire              _baseUopIdx1H_T_17 = io_in_bits_info_uopIdx == 6'hA;
  wire              _baseUopIdx1H_T_27 = io_in_bits_info_uopIdx == 6'hB;
  wire              _baseUopIdx1H_T_36 = io_in_bits_info_uopIdx == 6'hC;
  wire              _load_rs1_T_13 = io_in_bits_info_uopIdx == 6'hE;
  wire              _baseUopIdx1H_T_19 = io_in_bits_info_uopIdx == 6'hF;
  wire              _baseUopIdx1H_T_29 = io_in_bits_info_uopIdx == 6'h10;
  wire              _baseUopIdx1H_T_37 = io_in_bits_info_uopIdx == 6'h11;
  wire              _baseUopIdx1H_T_44 = io_in_bits_info_uopIdx == 6'h12;
  wire              _baseUopIdx1H_T_21 = io_in_bits_info_uopIdx == 6'h15;
  wire              _baseUopIdx1H_T_31 = io_in_bits_info_uopIdx == 6'h16;
  wire              _baseUopIdx1H_T_39 = io_in_bits_info_uopIdx == 6'h17;
  wire              _baseUopIdx1H_T_45 = io_in_bits_info_uopIdx == 6'h18;
  wire              _baseUopIdx1H_T_50 = io_in_bits_info_uopIdx == 6'h19;
  wire              _baseUopIdx1H_T_23 = io_in_bits_info_uopIdx == 6'h1C;
  wire              _baseUopIdx1H_T_33 = io_in_bits_info_uopIdx == 6'h1D;
  wire              _baseUopIdx1H_T_41 = io_in_bits_info_uopIdx == 6'h1E;
  wire              _baseUopIdx1H_T_47 = io_in_bits_info_uopIdx == 6'h1F;
  wire              _baseUopIdx1H_T_51 = io_in_bits_info_uopIdx == 6'h20;
  wire              _baseUopIdx1H_T_54 = io_in_bits_info_uopIdx == 6'h21;
  wire              _baseUopIdx1H_T_25 = io_in_bits_info_uopIdx == 6'h24;
  wire              _baseUopIdx1H_T_35 = io_in_bits_info_uopIdx == 6'h25;
  wire              _baseUopIdx1H_T_43 = io_in_bits_info_uopIdx == 6'h26;
  wire              _baseUopIdx1H_T_49 = io_in_bits_info_uopIdx == 6'h27;
  wire              _baseUopIdx1H_T_53 = io_in_bits_info_uopIdx == 6'h28;
  wire              _baseUopIdx1H_T_55 = io_in_bits_info_uopIdx == 6'h29;
  wire              baseUopIdx1H_7 = io_in_bits_info_uopIdx == 6'h2A;
  wire [7:0]        _GEN = {3'h0, ele_cnt};
  wire              _vlRemainOut_T_3 = io_in_bits_info_vl > _GEN;
  wire [7:0]        _GEN_0 = {2'h0, ele_cnt, 1'h0};
  wire [6:0]        _vstartRemain_T_32 = 7'({2'h0, ele_cnt} * 7'h3);
  wire [7:0]        _GEN_1 = {1'h0, _vstartRemain_T_32};
  wire [7:0]        _GEN_2 = {1'h0, ele_cnt, 2'h0};
  wire [7:0]        _vstartRemain_T_46 = 8'(_GEN * 8'h5);
  wire [7:0]        _vstartRemain_T_53 = 8'(_GEN * 8'h6);
  wire [7:0]        _vstartRemain_T_60 = 8'(_GEN * 8'h7);
  wire [4:0]        _vlRemain_vcompress_T_22 =
    (_load_rs1_T_3 | _in_previous_ones_sum_T_1
       ? (_vlRemainOut_T_3 ? ele_cnt : io_in_bits_info_vl[4:0])
       : 5'h0)
    | (_load_rs1_T_6 | _baseUopIdx1H_T_14 | io_in_bits_info_uopIdx == 6'h4
         ? (io_in_bits_info_vl > _GEN_0
              ? ele_cnt
              : _vlRemainOut_T_3 ? 5'(io_in_bits_info_vl[4:0] - ele_cnt) : 5'h0)
         : 5'h0)
    | (io_in_bits_info_uopIdx == 6'h5 | _load_rs1_T_10 | _baseUopIdx1H_T_26
       | io_in_bits_info_uopIdx == 6'h8
         ? (io_in_bits_info_vl > _GEN_1
              ? ele_cnt
              : io_in_bits_info_vl > _GEN_0
                  ? 5'(io_in_bits_info_vl[4:0] - {ele_cnt[3:0], 1'h0})
                  : 5'h0)
         : 5'h0)
    | (io_in_bits_info_uopIdx == 6'h9 | _baseUopIdx1H_T_17 | _baseUopIdx1H_T_27
       | _baseUopIdx1H_T_36 | io_in_bits_info_uopIdx == 6'hD
         ? (io_in_bits_info_vl > _GEN_2
              ? ele_cnt
              : io_in_bits_info_vl > _GEN_1
                  ? 5'(io_in_bits_info_vl[4:0] - _vstartRemain_T_32[4:0])
                  : 5'h0)
         : 5'h0)
    | (_load_rs1_T_13 | _baseUopIdx1H_T_19 | _baseUopIdx1H_T_29 | _baseUopIdx1H_T_37
       | _baseUopIdx1H_T_44 | io_in_bits_info_uopIdx == 6'h13
         ? (io_in_bits_info_vl > _vstartRemain_T_46
              ? ele_cnt
              : io_in_bits_info_vl > _GEN_2
                  ? 5'(io_in_bits_info_vl[4:0] - {ele_cnt[2:0], 2'h0})
                  : 5'h0)
         : 5'h0)
    | (io_in_bits_info_uopIdx == 6'h14 | _baseUopIdx1H_T_21 | _baseUopIdx1H_T_31
       | _baseUopIdx1H_T_39 | _baseUopIdx1H_T_45 | _baseUopIdx1H_T_50
       | io_in_bits_info_uopIdx == 6'h1A
         ? (io_in_bits_info_vl > _vstartRemain_T_53
              ? ele_cnt
              : io_in_bits_info_vl > _vstartRemain_T_46
                  ? 5'(io_in_bits_info_vl[4:0] - _vstartRemain_T_46[4:0])
                  : 5'h0)
         : 5'h0)
    | (io_in_bits_info_uopIdx == 6'h1B | _baseUopIdx1H_T_23 | _baseUopIdx1H_T_33
       | _baseUopIdx1H_T_41 | _baseUopIdx1H_T_47 | _baseUopIdx1H_T_51 | _baseUopIdx1H_T_54
       | io_in_bits_info_uopIdx == 6'h22
         ? (io_in_bits_info_vl > _vstartRemain_T_60
              ? ele_cnt
              : io_in_bits_info_vl > _vstartRemain_T_53
                  ? 5'(io_in_bits_info_vl[4:0] - _vstartRemain_T_53[4:0])
                  : 5'h0)
         : 5'h0)
    | ((io_in_bits_info_uopIdx == 6'h23 | _baseUopIdx1H_T_25 | _baseUopIdx1H_T_35
        | _baseUopIdx1H_T_43 | _baseUopIdx1H_T_49 | _baseUopIdx1H_T_53
        | _baseUopIdx1H_T_55 | baseUopIdx1H_7) & io_in_bits_info_vl > _vstartRemain_T_60
         ? 5'(io_in_bits_info_vl[4:0] - _vstartRemain_T_60[4:0])
         : 5'h0);
  wire              _GEN_3 = io_in_bits_info_vlmul == 3'h5;
  wire [4:0]        _GEN_4 = {3'h0, ele_cnt[4:3]};
  wire              _GEN_5 = io_in_bits_info_vlmul == 3'h6;
  wire [4:0]        _GEN_6 = {2'h0, ele_cnt[4:2]};
  wire [4:0]        _GEN_7 = {1'h0, ele_cnt[4:1]};
  wire [4:0]        _elements_T_22 =
    io_in_bits_info_vl < _GEN ? io_in_bits_info_vl[4:0] : ele_cnt;
  wire [7:0][4:0]   _GEN_8 =
    {{io_in_bits_info_vl < {4'h0, ele_cnt[4:1]} ? io_in_bits_info_vl[4:0] : _GEN_7},
     {io_in_bits_info_vl < {5'h0, ele_cnt[4:2]} ? io_in_bits_info_vl[4:0] : _GEN_6},
     {io_in_bits_info_vl < {6'h0, ele_cnt[4:3]} ? io_in_bits_info_vl[4:0] : _GEN_4},
     {_elements_T_22},
     {io_in_bits_info_vl < {ele_cnt, 3'h0} ? _vlRemain_vcompress_T_22 : ele_cnt},
     {io_in_bits_info_vl < _GEN_2 ? _vlRemain_vcompress_T_22 : ele_cnt},
     {io_in_bits_info_vl < _GEN_0 ? _vlRemain_vcompress_T_22 : ele_cnt},
     {_elements_T_22}};
  wire [4:0]        current_uop_ones_sum_0 =
    (|_GEN_8[io_in_bits_info_vlmul]) ? {4'h0, io_in_bits_vs1[0]} : 5'h0;
  wire [4:0]        current_uop_ones_sum_1 =
    (|(_GEN_8[io_in_bits_info_vlmul][4:1]))
      ? {3'h0, 2'({1'h0, io_in_bits_vs1[0]} + {1'h0, io_in_bits_vs1[1]})}
      : 5'h0;
  wire [4:0]        current_uop_ones_sum_2 =
    _GEN_8[io_in_bits_info_vlmul] > 5'h2
      ? {3'h0,
         2'({1'h0, io_in_bits_vs1[0]}
            + 2'({1'h0, io_in_bits_vs1[1]} + {1'h0, io_in_bits_vs1[2]}))}
      : 5'h0;
  wire [4:0]        current_uop_ones_sum_3 =
    (|(_GEN_8[io_in_bits_info_vlmul][4:2]))
      ? {2'h0,
         3'({1'h0, 2'({1'h0, io_in_bits_vs1[0]} + {1'h0, io_in_bits_vs1[1]})}
            + {1'h0, 2'({1'h0, io_in_bits_vs1[2]} + {1'h0, io_in_bits_vs1[3]})})}
      : 5'h0;
  wire [4:0]        current_uop_ones_sum_4 =
    _GEN_8[io_in_bits_info_vlmul] > 5'h4
      ? {2'h0,
         3'({1'h0, 2'({1'h0, io_in_bits_vs1[0]} + {1'h0, io_in_bits_vs1[1]})}
            + {1'h0,
               2'({1'h0, io_in_bits_vs1[2]}
                  + 2'({1'h0, io_in_bits_vs1[3]} + {1'h0, io_in_bits_vs1[4]}))})}
      : 5'h0;
  wire [4:0]        current_uop_ones_sum_5 =
    _GEN_8[io_in_bits_info_vlmul] > 5'h5
      ? {2'h0,
         3'({1'h0,
             2'({1'h0, io_in_bits_vs1[0]}
                + 2'({1'h0, io_in_bits_vs1[1]} + {1'h0, io_in_bits_vs1[2]}))}
            + {1'h0,
               2'({1'h0, io_in_bits_vs1[3]}
                  + 2'({1'h0, io_in_bits_vs1[4]} + {1'h0, io_in_bits_vs1[5]}))})}
      : 5'h0;
  wire [4:0]        current_uop_ones_sum_6 =
    _GEN_8[io_in_bits_info_vlmul] > 5'h6
      ? {2'h0,
         3'({1'h0,
             2'({1'h0, io_in_bits_vs1[0]}
                + 2'({1'h0, io_in_bits_vs1[1]} + {1'h0, io_in_bits_vs1[2]}))}
            + 3'({1'h0, 2'({1'h0, io_in_bits_vs1[3]} + {1'h0, io_in_bits_vs1[4]})}
                 + {1'h0, 2'({1'h0, io_in_bits_vs1[5]} + {1'h0, io_in_bits_vs1[6]})}))}
      : 5'h0;
  wire [4:0]        current_uop_ones_sum_7 =
    (|(_GEN_8[io_in_bits_info_vlmul][4:3]))
      ? {1'h0,
         4'({1'h0,
             3'({1'h0, 2'({1'h0, io_in_bits_vs1[0]} + {1'h0, io_in_bits_vs1[1]})}
                + {1'h0, 2'({1'h0, io_in_bits_vs1[2]} + {1'h0, io_in_bits_vs1[3]})})}
            + {1'h0,
               3'({1'h0, 2'({1'h0, io_in_bits_vs1[4]} + {1'h0, io_in_bits_vs1[5]})}
                  + {1'h0, 2'({1'h0, io_in_bits_vs1[6]} + {1'h0, io_in_bits_vs1[7]})})})}
      : 5'h0;
  wire [4:0]        current_uop_ones_sum_8 =
    _GEN_8[io_in_bits_info_vlmul] > 5'h8
      ? {1'h0,
         4'({1'h0,
             3'({1'h0, 2'({1'h0, io_in_bits_vs1[0]} + {1'h0, io_in_bits_vs1[1]})}
                + {1'h0, 2'({1'h0, io_in_bits_vs1[2]} + {1'h0, io_in_bits_vs1[3]})})}
            + {1'h0,
               3'({1'h0, 2'({1'h0, io_in_bits_vs1[4]} + {1'h0, io_in_bits_vs1[5]})}
                  + {1'h0,
                     2'({1'h0, io_in_bits_vs1[6]}
                        + 2'({1'h0, io_in_bits_vs1[7]} + {1'h0, io_in_bits_vs1[8]}))})})}
      : 5'h0;
  wire [4:0]        current_uop_ones_sum_9 =
    _GEN_8[io_in_bits_info_vlmul] > 5'h9
      ? {1'h0,
         4'({1'h0,
             3'({1'h0, 2'({1'h0, io_in_bits_vs1[0]} + {1'h0, io_in_bits_vs1[1]})}
                + {1'h0,
                   2'({1'h0, io_in_bits_vs1[2]}
                      + 2'({1'h0, io_in_bits_vs1[3]} + {1'h0, io_in_bits_vs1[4]}))})}
            + {1'h0,
               3'({1'h0, 2'({1'h0, io_in_bits_vs1[5]} + {1'h0, io_in_bits_vs1[6]})}
                  + {1'h0,
                     2'({1'h0, io_in_bits_vs1[7]}
                        + 2'({1'h0, io_in_bits_vs1[8]} + {1'h0, io_in_bits_vs1[9]}))})})}
      : 5'h0;
  wire [4:0]        current_uop_ones_sum_10 =
    _GEN_8[io_in_bits_info_vlmul] > 5'hA
      ? {1'h0,
         4'({1'h0,
             3'({1'h0, 2'({1'h0, io_in_bits_vs1[0]} + {1'h0, io_in_bits_vs1[1]})}
                + {1'h0,
                   2'({1'h0, io_in_bits_vs1[2]}
                      + 2'({1'h0, io_in_bits_vs1[3]} + {1'h0, io_in_bits_vs1[4]}))})}
            + {1'h0,
               3'({1'h0,
                   2'({1'h0, io_in_bits_vs1[5]}
                      + 2'({1'h0, io_in_bits_vs1[6]} + {1'h0, io_in_bits_vs1[7]}))}
                  + {1'h0,
                     2'({1'h0, io_in_bits_vs1[8]}
                        + 2'({1'h0, io_in_bits_vs1[9]} + {1'h0, io_in_bits_vs1[10]}))})})}
      : 5'h0;
  wire [4:0]        current_uop_ones_sum_11 =
    _GEN_8[io_in_bits_info_vlmul] > 5'hB
      ? {1'h0,
         4'({1'h0,
             3'({1'h0,
                 2'({1'h0, io_in_bits_vs1[0]}
                    + 2'({1'h0, io_in_bits_vs1[1]} + {1'h0, io_in_bits_vs1[2]}))}
                + {1'h0,
                   2'({1'h0, io_in_bits_vs1[3]}
                      + 2'({1'h0, io_in_bits_vs1[4]} + {1'h0, io_in_bits_vs1[5]}))})}
            + {1'h0,
               3'({1'h0,
                   2'({1'h0, io_in_bits_vs1[6]}
                      + 2'({1'h0, io_in_bits_vs1[7]} + {1'h0, io_in_bits_vs1[8]}))}
                  + {1'h0,
                     2'({1'h0, io_in_bits_vs1[9]}
                        + 2'({1'h0, io_in_bits_vs1[10]}
                             + {1'h0, io_in_bits_vs1[11]}))})})}
      : 5'h0;
  wire [4:0]        current_uop_ones_sum_12 =
    _GEN_8[io_in_bits_info_vlmul] > 5'hC
      ? {1'h0,
         4'({1'h0,
             3'({1'h0,
                 2'({1'h0, io_in_bits_vs1[0]}
                    + 2'({1'h0, io_in_bits_vs1[1]} + {1'h0, io_in_bits_vs1[2]}))}
                + {1'h0,
                   2'({1'h0, io_in_bits_vs1[3]}
                      + 2'({1'h0, io_in_bits_vs1[4]} + {1'h0, io_in_bits_vs1[5]}))})}
            + {1'h0,
               3'({1'h0,
                   2'({1'h0, io_in_bits_vs1[6]}
                      + 2'({1'h0, io_in_bits_vs1[7]} + {1'h0, io_in_bits_vs1[8]}))}
                  + 3'({1'h0, 2'({1'h0, io_in_bits_vs1[9]} + {1'h0, io_in_bits_vs1[10]})}
                       + {1'h0,
                          2'({1'h0, io_in_bits_vs1[11]}
                             + {1'h0, io_in_bits_vs1[12]})}))})}
      : 5'h0;
  wire [4:0]        current_uop_ones_sum_13 =
    _GEN_8[io_in_bits_info_vlmul] > 5'hD
      ? {1'h0,
         4'({1'h0,
             3'({1'h0,
                 2'({1'h0, io_in_bits_vs1[0]}
                    + 2'({1'h0, io_in_bits_vs1[1]} + {1'h0, io_in_bits_vs1[2]}))}
                + 3'({1'h0, 2'({1'h0, io_in_bits_vs1[3]} + {1'h0, io_in_bits_vs1[4]})}
                     + {1'h0,
                        2'({1'h0, io_in_bits_vs1[5]} + {1'h0, io_in_bits_vs1[6]})}))}
            + {1'h0,
               3'({1'h0,
                   2'({1'h0, io_in_bits_vs1[7]}
                      + 2'({1'h0, io_in_bits_vs1[8]} + {1'h0, io_in_bits_vs1[9]}))}
                  + 3'({1'h0, 2'({1'h0, io_in_bits_vs1[10]} + {1'h0, io_in_bits_vs1[11]})}
                       + {1'h0,
                          2'({1'h0, io_in_bits_vs1[12]}
                             + {1'h0, io_in_bits_vs1[13]})}))})}
      : 5'h0;
  wire [4:0]        current_uop_ones_sum_14 =
    _GEN_8[io_in_bits_info_vlmul] > 5'hE
      ? {1'h0,
         4'({1'h0,
             3'({1'h0,
                 2'({1'h0, io_in_bits_vs1[0]}
                    + 2'({1'h0, io_in_bits_vs1[1]} + {1'h0, io_in_bits_vs1[2]}))}
                + 3'({1'h0, 2'({1'h0, io_in_bits_vs1[3]} + {1'h0, io_in_bits_vs1[4]})}
                     + {1'h0,
                        2'({1'h0, io_in_bits_vs1[5]} + {1'h0, io_in_bits_vs1[6]})}))}
            + 4'({1'h0,
                  3'({1'h0, 2'({1'h0, io_in_bits_vs1[7]} + {1'h0, io_in_bits_vs1[8]})}
                     + {1'h0,
                        2'({1'h0, io_in_bits_vs1[9]} + {1'h0, io_in_bits_vs1[10]})})}
                 + {1'h0,
                    3'({1'h0, 2'({1'h0, io_in_bits_vs1[11]} + {1'h0, io_in_bits_vs1[12]})}
                       + {1'h0,
                          2'({1'h0, io_in_bits_vs1[13]}
                             + {1'h0, io_in_bits_vs1[14]})})}))}
      : 5'h0;
  reg  [1:0]        vsew_reg0;
  reg  [4:0]        elements_reg0;
  reg  [127:0]      vs1_reg0;
  reg  [127:0]      vs1_next_reg0;
  reg  [127:0]      vs2_reg0;
  reg  [127:0]      old_vd_reg0;
  reg  [7:0]        current_ones_sum_reg0_0;
  reg  [7:0]        current_ones_sum_reg0_1;
  reg  [7:0]        current_ones_sum_reg0_2;
  reg  [7:0]        current_ones_sum_reg0_3;
  reg  [7:0]        current_ones_sum_reg0_4;
  reg  [7:0]        current_ones_sum_reg0_5;
  reg  [7:0]        current_ones_sum_reg0_6;
  reg  [7:0]        current_ones_sum_reg0_7;
  reg  [7:0]        current_ones_sum_reg0_8;
  reg  [7:0]        current_ones_sum_reg0_9;
  reg  [7:0]        current_ones_sum_reg0_10;
  reg  [7:0]        current_ones_sum_reg0_11;
  reg  [7:0]        current_ones_sum_reg0_12;
  reg  [7:0]        current_ones_sum_reg0_13;
  reg  [7:0]        current_ones_sum_reg0_14;
  reg  [7:0]        in_previous_ones_sum_reg0;
  reg  [7:0]        out_previous_ones_sum_reg0;
  reg  [7:0]        ones_sum_base_reg0;
  reg  [4:0]        ele_cnt_reg0;
  wire [7:0]        ones_sum_reg0_1 =
    (|(elements_reg0[4:1])) ? current_ones_sum_reg0_0 : 8'h0;
  wire              _GEN_9 = elements_reg0 > 5'h2;
  wire [7:0]        ones_sum_reg0_2 = _GEN_9 ? current_ones_sum_reg0_1 : 8'h0;
  wire [7:0]        ones_sum_reg0_3 =
    (|(elements_reg0[4:2])) ? current_ones_sum_reg0_2 : 8'h0;
  wire              _GEN_10 = elements_reg0 > 5'h4;
  wire [7:0]        ones_sum_reg0_4 = _GEN_10 ? current_ones_sum_reg0_3 : 8'h0;
  wire              _GEN_11 = elements_reg0 > 5'h5;
  wire [7:0]        ones_sum_reg0_5 = _GEN_11 ? current_ones_sum_reg0_4 : 8'h0;
  wire              _GEN_12 = elements_reg0 > 5'h6;
  wire [7:0]        ones_sum_reg0_6 = _GEN_12 ? current_ones_sum_reg0_5 : 8'h0;
  wire [7:0]        ones_sum_reg0_7 =
    (|(elements_reg0[4:3])) ? current_ones_sum_reg0_6 : 8'h0;
  wire              _GEN_13 = vsew_reg0 == 2'h0;
  wire [7:0]        _compressed_vs2_masked_reg0_0_T_5 =
    8'(in_previous_ones_sum_reg0 - ones_sum_base_reg0);
  wire [134:0]      _compressed_vs2_reg0_0_T_5 =
    {127'h0, vs2_reg0[7:0]} << {128'h0, _compressed_vs2_masked_reg0_0_T_5[3:0], 3'h0};
  wire [7:0]        _compressed_vs2_masked_reg0_1_T_5 =
    8'(ones_sum_reg0_1 - ones_sum_base_reg0);
  wire [134:0]      _compressed_vs2_reg0_1_T_5 =
    {127'h0, vs2_reg0[15:8]} << {128'h0, _compressed_vs2_masked_reg0_1_T_5[3:0], 3'h0};
  wire [7:0]        _compressed_vs2_masked_reg0_2_T_5 =
    8'(ones_sum_reg0_2 - ones_sum_base_reg0);
  wire [134:0]      _compressed_vs2_reg0_2_T_5 =
    {127'h0, vs2_reg0[23:16]} << {128'h0, _compressed_vs2_masked_reg0_2_T_5[3:0], 3'h0};
  wire [7:0]        _compressed_vs2_masked_reg0_3_T_5 =
    8'(ones_sum_reg0_3 - ones_sum_base_reg0);
  wire [134:0]      _compressed_vs2_reg0_3_T_5 =
    {127'h0, vs2_reg0[31:24]} << {128'h0, _compressed_vs2_masked_reg0_3_T_5[3:0], 3'h0};
  wire [7:0]        _compressed_vs2_masked_reg0_4_T_5 =
    8'(ones_sum_reg0_4 - ones_sum_base_reg0);
  wire [134:0]      _compressed_vs2_reg0_4_T_5 =
    {127'h0, vs2_reg0[39:32]} << {128'h0, _compressed_vs2_masked_reg0_4_T_5[3:0], 3'h0};
  wire [7:0]        _compressed_vs2_masked_reg0_5_T_5 =
    8'(ones_sum_reg0_5 - ones_sum_base_reg0);
  wire [134:0]      _compressed_vs2_reg0_5_T_5 =
    {127'h0, vs2_reg0[47:40]} << {128'h0, _compressed_vs2_masked_reg0_5_T_5[3:0], 3'h0};
  wire [7:0]        _compressed_vs2_masked_reg0_6_T_5 =
    8'(ones_sum_reg0_6 - ones_sum_base_reg0);
  wire [134:0]      _compressed_vs2_reg0_6_T_5 =
    {127'h0, vs2_reg0[55:48]} << {128'h0, _compressed_vs2_masked_reg0_6_T_5[3:0], 3'h0};
  wire [7:0]        _compressed_vs2_masked_reg0_7_T_5 =
    8'(ones_sum_reg0_7 - ones_sum_base_reg0);
  wire [134:0]      _compressed_vs2_reg0_7_T_5 =
    {127'h0, vs2_reg0[63:56]} << {128'h0, _compressed_vs2_masked_reg0_7_T_5[3:0], 3'h0};
  wire              _GEN_14 = vsew_reg0 == 2'h1;
  wire [7:0]        _compressed_vs2_masked_reg0_0_T_16 =
    8'(in_previous_ones_sum_reg0 - ones_sum_base_reg0);
  wire [2062:0]     _compressed_vs2_reg0_0_T_11 =
    {2047'h0, vs2_reg0[15:0]} << {2055'h0, _compressed_vs2_masked_reg0_0_T_16[3:0], 4'h0};
  wire [7:0]        _compressed_vs2_masked_reg0_1_T_16 =
    8'(ones_sum_reg0_1 - ones_sum_base_reg0);
  wire [2062:0]     _compressed_vs2_reg0_1_T_11 =
    {2047'h0, vs2_reg0[31:16]}
    << {2055'h0, _compressed_vs2_masked_reg0_1_T_16[3:0], 4'h0};
  wire [7:0]        _compressed_vs2_masked_reg0_2_T_16 =
    8'(ones_sum_reg0_2 - ones_sum_base_reg0);
  wire [2062:0]     _compressed_vs2_reg0_2_T_11 =
    {2047'h0, vs2_reg0[47:32]}
    << {2055'h0, _compressed_vs2_masked_reg0_2_T_16[3:0], 4'h0};
  wire [7:0]        _compressed_vs2_masked_reg0_3_T_16 =
    8'(ones_sum_reg0_3 - ones_sum_base_reg0);
  wire [2062:0]     _compressed_vs2_reg0_3_T_11 =
    {2047'h0, vs2_reg0[63:48]}
    << {2055'h0, _compressed_vs2_masked_reg0_3_T_16[3:0], 4'h0};
  wire [7:0]        _compressed_vs2_masked_reg0_4_T_16 =
    8'(ones_sum_reg0_4 - ones_sum_base_reg0);
  wire              _GEN_15 = _GEN_14 & _GEN_10;
  wire [2062:0]     _compressed_vs2_reg0_4_T_11 =
    {2047'h0, vs2_reg0[79:64]}
    << {2055'h0, _compressed_vs2_masked_reg0_4_T_16[3:0], 4'h0};
  wire [127:0]      compressed_vs2_reg0_4 =
    _GEN_13
      ? (_GEN_10 ? _compressed_vs2_reg0_4_T_5[127:0] : 128'h0)
      : _GEN_15 ? _compressed_vs2_reg0_4_T_11[127:0] : 128'h0;
  wire [7:0]        _compressed_vs2_masked_reg0_5_T_16 =
    8'(ones_sum_reg0_5 - ones_sum_base_reg0);
  wire              _GEN_16 = _GEN_14 & _GEN_11;
  wire [2062:0]     _compressed_vs2_reg0_5_T_11 =
    {2047'h0, vs2_reg0[95:80]}
    << {2055'h0, _compressed_vs2_masked_reg0_5_T_16[3:0], 4'h0};
  wire [127:0]      compressed_vs2_reg0_5 =
    _GEN_13
      ? (_GEN_11 ? _compressed_vs2_reg0_5_T_5[127:0] : 128'h0)
      : _GEN_16 ? _compressed_vs2_reg0_5_T_11[127:0] : 128'h0;
  wire [7:0]        _compressed_vs2_masked_reg0_6_T_16 =
    8'(ones_sum_reg0_6 - ones_sum_base_reg0);
  wire              _GEN_17 = _GEN_14 & _GEN_12;
  wire [2062:0]     _compressed_vs2_reg0_6_T_11 =
    {2047'h0, vs2_reg0[111:96]}
    << {2055'h0, _compressed_vs2_masked_reg0_6_T_16[3:0], 4'h0};
  wire [127:0]      compressed_vs2_reg0_6 =
    _GEN_13
      ? (_GEN_12 ? _compressed_vs2_reg0_6_T_5[127:0] : 128'h0)
      : _GEN_17 ? _compressed_vs2_reg0_6_T_11[127:0] : 128'h0;
  wire [7:0]        _compressed_vs2_masked_reg0_7_T_16 =
    8'(ones_sum_reg0_7 - ones_sum_base_reg0);
  wire              _GEN_18 = _GEN_14 & (|(elements_reg0[4:3]));
  wire [2062:0]     _compressed_vs2_reg0_7_T_11 =
    {2047'h0, vs2_reg0[127:112]}
    << {2055'h0, _compressed_vs2_masked_reg0_7_T_16[3:0], 4'h0};
  wire [127:0]      compressed_vs2_reg0_7 =
    _GEN_13
      ? ((|(elements_reg0[4:3])) ? _compressed_vs2_reg0_7_T_5[127:0] : 128'h0)
      : _GEN_18 ? _compressed_vs2_reg0_7_T_11[127:0] : 128'h0;
  wire              _GEN_19 = vsew_reg0 == 2'h2;
  wire [7:0]        _compressed_vs2_masked_reg0_0_T_27 =
    8'(in_previous_ones_sum_reg0 - ones_sum_base_reg0);
  wire [2078:0]     _compressed_vs2_reg0_0_T_17 =
    {2047'h0, vs2_reg0[31:0]} << {2070'h0, _compressed_vs2_masked_reg0_0_T_27[3:0], 5'h0};
  wire [7:0]        _compressed_vs2_masked_reg0_1_T_27 =
    8'(ones_sum_reg0_1 - ones_sum_base_reg0);
  wire [2078:0]     _compressed_vs2_reg0_1_T_17 =
    {2047'h0, vs2_reg0[63:32]}
    << {2070'h0, _compressed_vs2_masked_reg0_1_T_27[3:0], 5'h0};
  wire [7:0]        _compressed_vs2_masked_reg0_2_T_27 =
    8'(ones_sum_reg0_2 - ones_sum_base_reg0);
  wire              _GEN_20 = _GEN_19 & _GEN_9;
  wire [2078:0]     _compressed_vs2_reg0_2_T_17 =
    {2047'h0, vs2_reg0[95:64]}
    << {2070'h0, _compressed_vs2_masked_reg0_2_T_27[3:0], 5'h0};
  wire [127:0]      compressed_vs2_reg0_2 =
    _GEN_13
      ? (_GEN_9 ? _compressed_vs2_reg0_2_T_5[127:0] : 128'h0)
      : _GEN_14
          ? (_GEN_9 ? _compressed_vs2_reg0_2_T_11[127:0] : 128'h0)
          : _GEN_20 ? _compressed_vs2_reg0_2_T_17[127:0] : 128'h0;
  wire [7:0]        _compressed_vs2_masked_reg0_3_T_27 =
    8'(ones_sum_reg0_3 - ones_sum_base_reg0);
  wire              _GEN_21 = _GEN_19 & (|(elements_reg0[4:2]));
  wire [2078:0]     _compressed_vs2_reg0_3_T_17 =
    {2047'h0, vs2_reg0[127:96]}
    << {2070'h0, _compressed_vs2_masked_reg0_3_T_27[3:0], 5'h0};
  wire [127:0]      compressed_vs2_reg0_3 =
    _GEN_13
      ? ((|(elements_reg0[4:2])) ? _compressed_vs2_reg0_3_T_5[127:0] : 128'h0)
      : _GEN_14
          ? ((|(elements_reg0[4:2])) ? _compressed_vs2_reg0_3_T_11[127:0] : 128'h0)
          : _GEN_21 ? _compressed_vs2_reg0_3_T_17[127:0] : 128'h0;
  wire [7:0]        _compressed_vs2_masked_reg0_0_T_38 =
    8'(in_previous_ones_sum_reg0 - ones_sum_base_reg0);
  wire [2110:0]     _compressed_vs2_reg0_0_T_23 =
    {2047'h0, vs2_reg0[63:0]} << {2101'h0, _compressed_vs2_masked_reg0_0_T_38[3:0], 6'h0};
  wire [3:0][127:0] _GEN_22 =
    {{_compressed_vs2_reg0_0_T_23[127:0]},
     {_compressed_vs2_reg0_0_T_17[127:0]},
     {_compressed_vs2_reg0_0_T_11[127:0]},
     {_compressed_vs2_reg0_0_T_5[127:0]}};
  wire [127:0]      compressed_vs2_reg0_0 =
    (|elements_reg0) ? _GEN_22[vsew_reg0] : 128'h0;
  wire [7:0]        _compressed_vs2_masked_reg0_1_T_38 =
    8'(ones_sum_reg0_1 - ones_sum_base_reg0);
  wire [2110:0]     _compressed_vs2_reg0_1_T_23 =
    {2047'h0, vs2_reg0[127:64]}
    << {2101'h0, _compressed_vs2_masked_reg0_1_T_38[3:0], 6'h0};
  wire [3:0][127:0] _GEN_23 =
    {{_compressed_vs2_reg0_1_T_23[127:0]},
     {_compressed_vs2_reg0_1_T_17[127:0]},
     {_compressed_vs2_reg0_1_T_11[127:0]},
     {_compressed_vs2_reg0_1_T_5[127:0]}};
  wire [127:0]      compressed_vs2_reg0_1 =
    (|(elements_reg0[4:1])) ? _GEN_23[vsew_reg0] : 128'h0;
  wire [7:0]        _GEN_24 =
    {io_in_bits_info_vlmul > 3'h4 ? 2'h0 : io_in_bits_info_vlmul[1:0],
     io_in_bits_info_uopIdx};
  wire              _load_rs1_T_5 = io_in_bits_info_vlmul == 3'h1;
  wire              _load_rs1_T_9 = io_in_bits_info_vlmul == 3'h2;
  wire              _vrgatherVs2Id_T_5 = io_in_bits_info_vlmul == 3'h3;
  wire [2:0]        _vdId_T_3 =
    vrgather & ~vrgather16_sew8 | vrgather_vx
      ? {1'h0,
         {1'h0, _load_rs1_T_5 & io_in_bits_info_uopIdx[1]}
           | (_load_rs1_T_9 ? io_in_bits_info_uopIdx[3:2] : 2'h0)}
        | (_vrgatherVs2Id_T_5 ? io_in_bits_info_uopIdx[5:3] : 3'h0)
      : 3'h0;
  wire [2:0]        vdId =
    {_vdId_T_3[2],
     _vdId_T_3[1:0]
       | (vrgather16_sew8
            ? {1'h0, _load_rs1_T_5 & io_in_bits_info_uopIdx[2]}
              | (_load_rs1_T_9 ? io_in_bits_info_uopIdx[4:3] : 2'h0)
            : 2'h0)} | (vslideup ? _vslideupOffset_outOffsetVd : 3'h0)
    | (vslidedn ? _vslidednOffset_outOffsetVd : 3'h0);
  wire [12:0]       _GEN_25 = {7'h0, io_in_bits_info_uopIdx};
  wire [12:0]       _GEN_26 = {10'h0, _vsew_plus1_T_2};
  wire [11:0]       _GEN_27 = {9'h0, _vsew_plus1_T_2};
  reg  [7:0]        vlRemain_reg0;
  reg  [127:0]      vmask_uop_reg0;
  reg               vm_reg0;
  wire [10:0]       _GEN_28 = {9'h0, vsew_reg0};
  wire [10:0]       vlRemainBytes_reg0 = {3'h0, vlRemain_reg0} << _GEN_28;
  wire [4:0]        vlmax_bytes =
    _GEN_3 ? 5'h2 : _GEN_5 ? 5'h4 : (&io_in_bits_info_vlmul) ? 5'h8 : 5'h10;
  reg  [6:0]        base_reg0;
  reg  [66:0]       vrgather_byte_sel_reg0_0;
  reg  [66:0]       vrgather_byte_sel_reg0_1;
  reg  [66:0]       vrgather_byte_sel_reg0_2;
  reg  [66:0]       vrgather_byte_sel_reg0_3;
  reg  [66:0]       vrgather_byte_sel_reg0_4;
  reg  [66:0]       vrgather_byte_sel_reg0_5;
  reg  [66:0]       vrgather_byte_sel_reg0_6;
  reg  [66:0]       vrgather_byte_sel_reg0_7;
  reg  [66:0]       vrgather_byte_sel_reg0_8;
  reg  [66:0]       vrgather_byte_sel_reg0_9;
  reg  [66:0]       vrgather_byte_sel_reg0_10;
  reg  [66:0]       vrgather_byte_sel_reg0_11;
  reg  [66:0]       vrgather_byte_sel_reg0_12;
  reg  [66:0]       vrgather_byte_sel_reg0_13;
  reg  [66:0]       vrgather_byte_sel_reg0_14;
  reg  [66:0]       vrgather_byte_sel_reg0_15;
  reg               is_vrgather_reg0;
  reg               is_vrgather_vx_reg0;
  reg               ma_reg0;
  reg  [6:0]        vs2_bytes_min_reg0;
  reg  [7:0]        vs2_bytes_max_reg0;
  reg  [7:0]        vs2_bytes_reg0_0;
  reg  [7:0]        vs2_bytes_reg0_1;
  reg  [7:0]        vs2_bytes_reg0_2;
  reg  [7:0]        vs2_bytes_reg0_3;
  reg  [7:0]        vs2_bytes_reg0_4;
  reg  [7:0]        vs2_bytes_reg0_5;
  reg  [7:0]        vs2_bytes_reg0_6;
  reg  [7:0]        vs2_bytes_reg0_7;
  reg  [7:0]        vs2_bytes_reg0_8;
  reg  [7:0]        vs2_bytes_reg0_9;
  reg  [7:0]        vs2_bytes_reg0_10;
  reg  [7:0]        vs2_bytes_reg0_11;
  reg  [7:0]        vs2_bytes_reg0_12;
  reg  [7:0]        vs2_bytes_reg0_13;
  reg  [7:0]        vs2_bytes_reg0_14;
  reg  [7:0]        vs2_bytes_reg0_15;
  reg               first_gather_reg0;
  wire [63:0]       slide_ele = vslide1up | vslide1dn ? 64'h1 : io_in_bits_vs1[63:0];
  reg  [5:0]        uopIdx_reg0;
  reg               load_rs1_reg0;
  reg  [66:0]       slide_bytes_reg0;
  reg  [4:0]        vlmax_bytes_reg0;
  reg               first_slidedn_reg0;
  reg               is_vslide1up_reg0;
  reg               is_vslide1dn_reg0;
  reg  [3:0]        vsew_bytes_reg0;
  reg  [7:0]        vs1_bytes_reg0_0;
  reg  [7:0]        vs1_bytes_reg0_1;
  reg  [7:0]        vs1_bytes_reg0_2;
  reg  [7:0]        vs1_bytes_reg0_3;
  reg  [7:0]        vs1_bytes_reg0_4;
  reg  [7:0]        vs1_bytes_reg0_5;
  reg  [7:0]        vs1_bytes_reg0_6;
  reg  [7:0]        vs1_bytes_reg0_7;
  reg  [7:0]        vs1_bytes_reg0_8;
  reg  [7:0]        vs1_bytes_reg0_9;
  reg  [7:0]        vs1_bytes_reg0_10;
  reg  [7:0]        vs1_bytes_reg0_11;
  reg  [7:0]        vs1_bytes_reg0_12;
  reg  [7:0]        vs1_bytes_reg0_13;
  reg  [7:0]        vs1_bytes_reg0_14;
  reg  [7:0]        vs1_bytes_reg0_15;
  reg               is_vcompress_reg0;
  reg               is_vslideup_reg0;
  reg               is_vslidedn_reg0;
  reg               is_vrgather16_sew8_reg0;
  reg               is_vmvnr_reg0;
  reg               is_vslide_reg0;
  reg               ta_reg0;
  reg  [7:0]        vstartRemain_reg0;
  reg  [6:0]        vstart_reg0;
  reg  [7:0]        vl_reg0;
  reg  [127:0]      vd_reg;
  reg               is_vcompress_reg1;
  reg               is_vrgather_reg1;
  reg               is_vrgather_vx_reg1;
  reg               is_vslide_reg1;
  reg  [5:0]        uopIdx_reg1;
  reg  [127:0]      old_vd_reg1;
  reg               ta_reg1;
  reg  [6:0]        vstart_reg1;
  reg  [7:0]        vl_reg1;
  reg  [1:0]        vsew_reg1;
  reg  [7:0]        ones_sum_eles_reg1;
  reg  [7:0]        ones_sum_base_reg1;
  reg  [127:0]      compressed_res_reg1;
  reg  [127:0]      vs1_next_reg1;
  reg  [127:0]      vmask_tail_bits_reg1;
  reg  [127:0]      vmask_vstart_bits_reg1;
  reg  [127:0]      tail_vd_reg1;
  reg  [127:0]      vstart_old_vd_reg1;
  wire              _GEN_29 = vsew_reg1 == 2'h0;
  wire              _GEN_30 = vsew_reg1 == 2'h1;
  wire              _GEN_31 = _GEN_29 | ~_GEN_30;
  wire              _GEN_32 = vsew_reg1 == 2'h2;
  wire              _GEN_33 = _GEN_29 | _GEN_30;
  wire              _GEN_34 = _GEN_33 | ~_GEN_32;
  wire              _GEN_35 = _GEN_29 | _GEN_30 | _GEN_32;
  wire [3:0][127:0] _GEN_36 =
    {{{_GEN_35
         ? 64'h0
         : ~_GEN_35 & 8'(ones_sum_base_reg1 + 8'h1) >= ones_sum_eles_reg1 & ta_reg1
             ? 64'hFFFFFFFFFFFFFFFF
             : compressed_res_reg1[127:64],
       _GEN_35
         ? 64'h0
         : ~_GEN_35 & ones_sum_base_reg1 >= ones_sum_eles_reg1 & ta_reg1
             ? 64'hFFFFFFFFFFFFFFFF
             : compressed_res_reg1[63:0]}},
     {{_GEN_34
         ? 32'h0
         : ~_GEN_33 & _GEN_32 & 8'(ones_sum_base_reg1 + 8'h3) >= ones_sum_eles_reg1
           & ta_reg1
             ? 32'hFFFFFFFF
             : compressed_res_reg1[127:96],
       _GEN_34
         ? 32'h0
         : ~_GEN_33 & _GEN_32 & 8'(ones_sum_base_reg1 + 8'h2) >= ones_sum_eles_reg1
           & ta_reg1
             ? 32'hFFFFFFFF
             : compressed_res_reg1[95:64],
       _GEN_34
         ? 32'h0
         : ~_GEN_33 & _GEN_32 & 8'(ones_sum_base_reg1 + 8'h1) >= ones_sum_eles_reg1
           & ta_reg1
             ? 32'hFFFFFFFF
             : compressed_res_reg1[63:32],
       _GEN_34
         ? 32'h0
         : ~_GEN_33 & _GEN_32 & ones_sum_base_reg1 >= ones_sum_eles_reg1 & ta_reg1
             ? 32'hFFFFFFFF
             : compressed_res_reg1[31:0]}},
     {{_GEN_31
         ? 16'h0
         : ~_GEN_29 & _GEN_30 & 8'(ones_sum_base_reg1 + 8'h7) >= ones_sum_eles_reg1
           & ta_reg1
             ? 16'hFFFF
             : compressed_res_reg1[127:112],
       _GEN_31
         ? 16'h0
         : ~_GEN_29 & _GEN_30 & 8'(ones_sum_base_reg1 + 8'h6) >= ones_sum_eles_reg1
           & ta_reg1
             ? 16'hFFFF
             : compressed_res_reg1[111:96],
       _GEN_31
         ? 16'h0
         : ~_GEN_29 & _GEN_30 & 8'(ones_sum_base_reg1 + 8'h5) >= ones_sum_eles_reg1
           & ta_reg1
             ? 16'hFFFF
             : compressed_res_reg1[95:80],
       _GEN_31
         ? 16'h0
         : ~_GEN_29 & _GEN_30 & 8'(ones_sum_base_reg1 + 8'h4) >= ones_sum_eles_reg1
           & ta_reg1
             ? 16'hFFFF
             : compressed_res_reg1[79:64],
       _GEN_31
         ? 16'h0
         : ~_GEN_29 & _GEN_30 & 8'(ones_sum_base_reg1 + 8'h3) >= ones_sum_eles_reg1
           & ta_reg1
             ? 16'hFFFF
             : compressed_res_reg1[63:48],
       _GEN_31
         ? 16'h0
         : ~_GEN_29 & _GEN_30 & 8'(ones_sum_base_reg1 + 8'h2) >= ones_sum_eles_reg1
           & ta_reg1
             ? 16'hFFFF
             : compressed_res_reg1[47:32],
       _GEN_31
         ? 16'h0
         : ~_GEN_29 & _GEN_30 & 8'(ones_sum_base_reg1 + 8'h1) >= ones_sum_eles_reg1
           & ta_reg1
             ? 16'hFFFF
             : compressed_res_reg1[31:16],
       _GEN_31
         ? 16'h0
         : ~_GEN_29 & _GEN_30 & ones_sum_base_reg1 >= ones_sum_eles_reg1 & ta_reg1
             ? 16'hFFFF
             : compressed_res_reg1[15:0]}},
     {{_GEN_29
         ? (_GEN_29 & 8'(ones_sum_base_reg1 + 8'hF) >= ones_sum_eles_reg1 & ta_reg1
              ? 8'hFF
              : compressed_res_reg1[127:120])
         : 8'h0,
       _GEN_29
         ? (_GEN_29 & 8'(ones_sum_base_reg1 + 8'hE) >= ones_sum_eles_reg1 & ta_reg1
              ? 8'hFF
              : compressed_res_reg1[119:112])
         : 8'h0,
       _GEN_29
         ? (_GEN_29 & 8'(ones_sum_base_reg1 + 8'hD) >= ones_sum_eles_reg1 & ta_reg1
              ? 8'hFF
              : compressed_res_reg1[111:104])
         : 8'h0,
       _GEN_29
         ? (_GEN_29 & 8'(ones_sum_base_reg1 + 8'hC) >= ones_sum_eles_reg1 & ta_reg1
              ? 8'hFF
              : compressed_res_reg1[103:96])
         : 8'h0,
       _GEN_29
         ? (_GEN_29 & 8'(ones_sum_base_reg1 + 8'hB) >= ones_sum_eles_reg1 & ta_reg1
              ? 8'hFF
              : compressed_res_reg1[95:88])
         : 8'h0,
       _GEN_29
         ? (_GEN_29 & 8'(ones_sum_base_reg1 + 8'hA) >= ones_sum_eles_reg1 & ta_reg1
              ? 8'hFF
              : compressed_res_reg1[87:80])
         : 8'h0,
       _GEN_29
         ? (_GEN_29 & 8'(ones_sum_base_reg1 + 8'h9) >= ones_sum_eles_reg1 & ta_reg1
              ? 8'hFF
              : compressed_res_reg1[79:72])
         : 8'h0,
       _GEN_29
         ? (_GEN_29 & 8'(ones_sum_base_reg1 + 8'h8) >= ones_sum_eles_reg1 & ta_reg1
              ? 8'hFF
              : compressed_res_reg1[71:64])
         : 8'h0,
       _GEN_29
         ? (_GEN_29 & 8'(ones_sum_base_reg1 + 8'h7) >= ones_sum_eles_reg1 & ta_reg1
              ? 8'hFF
              : compressed_res_reg1[63:56])
         : 8'h0,
       _GEN_29
         ? (_GEN_29 & 8'(ones_sum_base_reg1 + 8'h6) >= ones_sum_eles_reg1 & ta_reg1
              ? 8'hFF
              : compressed_res_reg1[55:48])
         : 8'h0,
       _GEN_29
         ? (_GEN_29 & 8'(ones_sum_base_reg1 + 8'h5) >= ones_sum_eles_reg1 & ta_reg1
              ? 8'hFF
              : compressed_res_reg1[47:40])
         : 8'h0,
       _GEN_29
         ? (_GEN_29 & 8'(ones_sum_base_reg1 + 8'h4) >= ones_sum_eles_reg1 & ta_reg1
              ? 8'hFF
              : compressed_res_reg1[39:32])
         : 8'h0,
       _GEN_29
         ? (_GEN_29 & 8'(ones_sum_base_reg1 + 8'h3) >= ones_sum_eles_reg1 & ta_reg1
              ? 8'hFF
              : compressed_res_reg1[31:24])
         : 8'h0,
       _GEN_29
         ? (_GEN_29 & 8'(ones_sum_base_reg1 + 8'h2) >= ones_sum_eles_reg1 & ta_reg1
              ? 8'hFF
              : compressed_res_reg1[23:16])
         : 8'h0,
       _GEN_29
         ? (_GEN_29 & 8'(ones_sum_base_reg1 + 8'h1) >= ones_sum_eles_reg1 & ta_reg1
              ? 8'hFF
              : compressed_res_reg1[15:8])
         : 8'h0,
       _GEN_29
         ? (_GEN_29 & ones_sum_base_reg1 >= ones_sum_eles_reg1 & ta_reg1
              ? 8'hFF
              : compressed_res_reg1[7:0])
         : 8'h0}}};
  wire              vmvnr = io_in_bits_opcode_op == 6'h7;
  wire [1:0]        _GEN_37 =
    {2{io_in_bits_srcType_0[1:0] == 2'h1}} | {io_in_bits_srcType_0[1:0] == 2'h2, 1'h0};
  wire [12:0]       _vlRemain_T_2 = _GEN_25 << _GEN_26;
  wire [11:0]       _GEN_38 = {7'h0, io_in_bits_info_uopIdx[5:1]};
  wire [63:0]       _GEN_39 = {57'h0, io_in_bits_info_vstart};
  wire [63:0]       vslideup_vstart =
    vslideup & slide_ele > _GEN_39 ? (slide_ele > 64'h80 ? 64'h80 : slide_ele) : _GEN_39;
  wire [12:0]       _vstartRemain_T_2 = _GEN_25 << _GEN_26;
  wire [7:0]        _GEN_40 = {1'h0, io_in_bits_info_vstart};
  wire [11:0]       _GEN_41 = {7'h0, io_in_bits_info_uopIdx[5:1]};
  wire [7:0]        _mask_start_idx_T =
    8'h1
    << {5'h0,
        io_in_bits_srcType_0[1:0] == 2'h0,
        _GEN_37[1],
        _GEN_37[0] | (&(io_in_bits_srcType_0[1:0]))};
  wire [11:0]       _vlRemain_T_10 = _GEN_38 << _GEN_27;
  wire [11:0]       _vstartRemain_T_10 = _GEN_41 << _GEN_27;
  wire [7:0]        _GEN_42 = {1'h0, base_reg0};
  wire [66:0]       _GEN_43 = {60'h0, base_reg0};
  wire [66:0]       _GEN_44 = {62'h0, vlmax_bytes_reg0};
  wire [7:0]        _vslideup_vd_reg0_1_T_2 = 8'(_GEN_42 + 8'h1);
  wire [66:0]       _GEN_45 = {59'h0, _vslideup_vd_reg0_1_T_2};
  wire [7:0]        _vslideup_vd_reg0_2_T_2 = 8'(_GEN_42 + 8'h2);
  wire [66:0]       _GEN_46 = {59'h0, _vslideup_vd_reg0_2_T_2};
  wire [7:0]        _vslideup_vd_reg0_3_T_2 = 8'(_GEN_42 + 8'h3);
  wire [66:0]       _GEN_47 = {59'h0, _vslideup_vd_reg0_3_T_2};
  wire [7:0]        _vslideup_vd_reg0_4_T_2 = 8'(_GEN_42 + 8'h4);
  wire [66:0]       _GEN_48 = {59'h0, _vslideup_vd_reg0_4_T_2};
  wire [7:0]        _vslideup_vd_reg0_5_T_2 = 8'(_GEN_42 + 8'h5);
  wire [66:0]       _GEN_49 = {59'h0, _vslideup_vd_reg0_5_T_2};
  wire [7:0]        _vslideup_vd_reg0_6_T_2 = 8'(_GEN_42 + 8'h6);
  wire [66:0]       _GEN_50 = {59'h0, _vslideup_vd_reg0_6_T_2};
  wire [7:0]        _vslideup_vd_reg0_7_T_2 = 8'(_GEN_42 + 8'h7);
  wire [66:0]       _GEN_51 = {59'h0, _vslideup_vd_reg0_7_T_2};
  wire [7:0]        _vslideup_vd_reg0_8_T_2 = 8'(_GEN_42 + 8'h8);
  wire [66:0]       _GEN_52 = {59'h0, _vslideup_vd_reg0_8_T_2};
  wire [7:0]        _vslideup_vd_reg0_9_T_2 = 8'(_GEN_42 + 8'h9);
  wire [66:0]       _GEN_53 = {59'h0, _vslideup_vd_reg0_9_T_2};
  wire [7:0]        _vslideup_vd_reg0_10_T_2 = 8'(_GEN_42 + 8'hA);
  wire [66:0]       _GEN_54 = {59'h0, _vslideup_vd_reg0_10_T_2};
  wire [7:0]        _vslideup_vd_reg0_11_T_2 = 8'(_GEN_42 + 8'hB);
  wire [66:0]       _GEN_55 = {59'h0, _vslideup_vd_reg0_11_T_2};
  wire [7:0]        _vslideup_vd_reg0_12_T_2 = 8'(_GEN_42 + 8'hC);
  wire [66:0]       _GEN_56 = {59'h0, _vslideup_vd_reg0_12_T_2};
  wire [7:0]        _vslideup_vd_reg0_13_T_2 = 8'(_GEN_42 + 8'hD);
  wire [66:0]       _GEN_57 = {59'h0, _vslideup_vd_reg0_13_T_2};
  wire [7:0]        _vslideup_vd_reg0_14_T_2 = 8'(_GEN_42 + 8'hE);
  wire [66:0]       _GEN_58 = {59'h0, _vslideup_vd_reg0_14_T_2};
  wire [7:0]        _vslideup_vd_reg0_15_T_2 = 8'(_GEN_42 + 8'hF);
  wire [66:0]       _GEN_59 = {59'h0, _vslideup_vd_reg0_15_T_2};
  wire [67:0]       _GEN_60 = {61'h0, base_reg0};
  wire [67:0]       _GEN_61 = {1'h0, slide_bytes_reg0};
  wire [67:0]       _GEN_62 = {63'h0, vlmax_bytes_reg0};
  wire [67:0]       _vslidedn_vd_reg0_1_T_2 = 68'(_GEN_61 + 68'h1);
  wire [67:0]       _vslidedn_vd_reg0_2_T_2 = 68'(_GEN_61 + 68'h2);
  wire [67:0]       _vslidedn_vd_reg0_3_T_2 = 68'(_GEN_61 + 68'h3);
  wire [67:0]       _vslidedn_vd_reg0_4_T_2 = 68'(_GEN_61 + 68'h4);
  wire [67:0]       _vslidedn_vd_reg0_5_T_2 = 68'(_GEN_61 + 68'h5);
  wire [67:0]       _vslidedn_vd_reg0_6_T_2 = 68'(_GEN_61 + 68'h6);
  wire [67:0]       _vslidedn_vd_reg0_7_T_2 = 68'(_GEN_61 + 68'h7);
  wire [67:0]       _vslidedn_vd_reg0_8_T_2 = 68'(_GEN_61 + 68'h8);
  wire [67:0]       _vslidedn_vd_reg0_9_T_2 = 68'(_GEN_61 + 68'h9);
  wire [67:0]       _vslidedn_vd_reg0_10_T_2 = 68'(_GEN_61 + 68'hA);
  wire [67:0]       _vslidedn_vd_reg0_11_T_2 = 68'(_GEN_61 + 68'hB);
  wire [67:0]       _vslidedn_vd_reg0_12_T_2 = 68'(_GEN_61 + 68'hC);
  wire [67:0]       _vslidedn_vd_reg0_13_T_2 = 68'(_GEN_61 + 68'hD);
  wire [67:0]       _vslidedn_vd_reg0_14_T_2 = 68'(_GEN_61 + 68'hE);
  wire [67:0]       _vslidedn_vd_reg0_15_T_2 = 68'(_GEN_61 + 68'hF);
  wire [4:0]        _GEN_63 = 5'(5'h10 - {1'h0, vsew_bytes_reg0});
  wire [10:0]       _vslide1dn_vd_rs1_reg0_T_9 =
    11'(vlRemainBytes_reg0 - {7'h0, vsew_bytes_reg0});
  wire [16510:0]    _vslide1dn_vd_rs1_reg0_T_12 =
    16511'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    << {16497'h0, _vslide1dn_vd_rs1_reg0_T_9, 3'h0};
  wire              _GEN_64 = is_vrgather_reg0 | is_vrgather_vx_reg0;
  wire              _GEN_65 = _GEN_64 & fire_reg0_last_r;
  wire [66:0]       _GEN_66 = {60'h0, vs2_bytes_min_reg0};
  wire [66:0]       _GEN_67 = {59'h0, vs2_bytes_max_reg0};
  wire              _GEN_68 = is_vslide1dn_reg0 & ~(uopIdx_reg0[0]);
  wire              _vslide1dn_vd_reg0_T_1 = load_rs1_reg0 | uopIdx_reg0[0];
  wire [15:0][7:0]  _GEN_69 =
    {{vs1_bytes_reg0_15},
     {vs1_bytes_reg0_14},
     {vs1_bytes_reg0_13},
     {vs1_bytes_reg0_12},
     {vs1_bytes_reg0_11},
     {vs1_bytes_reg0_10},
     {vs1_bytes_reg0_9},
     {vs1_bytes_reg0_8},
     {vs1_bytes_reg0_7},
     {vs1_bytes_reg0_6},
     {vs1_bytes_reg0_5},
     {vs1_bytes_reg0_4},
     {vs1_bytes_reg0_3},
     {vs1_bytes_reg0_2},
     {vs1_bytes_reg0_1},
     {vs1_bytes_reg0_0}};
  wire [3:0]        _GEN_70 =
    {{vmask_uop_reg0[0] | vm_reg0},
     {vmask_uop_reg0[0] | vm_reg0},
     {vmask_uop_reg0[0] | vm_reg0},
     {vmask_uop_reg0[0] | vm_reg0}};
  wire              vmask_byte_strb_reg0_0 = (|vlRemainBytes_reg0) & _GEN_70[vsew_reg0];
  wire [3:0]        _GEN_71 =
    {{vmask_uop_reg0[0] | vm_reg0},
     {vmask_uop_reg0[0] | vm_reg0},
     {vmask_uop_reg0[0] | vm_reg0},
     {vmask_uop_reg0[1] | vm_reg0}};
  wire              vmask_byte_strb_reg0_1 =
    (|(vlRemainBytes_reg0[10:1])) & _GEN_71[vsew_reg0];
  wire [3:0]        _GEN_72 =
    {{vmask_uop_reg0[0] | vm_reg0},
     {vmask_uop_reg0[0] | vm_reg0},
     {vmask_uop_reg0[1] | vm_reg0},
     {vmask_uop_reg0[2] | vm_reg0}};
  wire              vmask_byte_strb_reg0_2 =
    vlRemainBytes_reg0 > 11'h2 & _GEN_72[vsew_reg0];
  wire [3:0]        _GEN_73 =
    {{vmask_uop_reg0[0] | vm_reg0},
     {vmask_uop_reg0[0] | vm_reg0},
     {vmask_uop_reg0[1] | vm_reg0},
     {vmask_uop_reg0[3] | vm_reg0}};
  wire              vmask_byte_strb_reg0_3 =
    (|(vlRemainBytes_reg0[10:2])) & _GEN_73[vsew_reg0];
  wire [3:0]        _GEN_74 =
    {{vmask_uop_reg0[0] | vm_reg0},
     {vmask_uop_reg0[1] | vm_reg0},
     {vmask_uop_reg0[2] | vm_reg0},
     {vmask_uop_reg0[4] | vm_reg0}};
  wire              vmask_byte_strb_reg0_4 =
    vlRemainBytes_reg0 > 11'h4 & _GEN_74[vsew_reg0];
  wire [3:0]        _GEN_75 =
    {{vmask_uop_reg0[0] | vm_reg0},
     {vmask_uop_reg0[1] | vm_reg0},
     {vmask_uop_reg0[2] | vm_reg0},
     {vmask_uop_reg0[5] | vm_reg0}};
  wire              vmask_byte_strb_reg0_5 =
    vlRemainBytes_reg0 > 11'h5 & _GEN_75[vsew_reg0];
  wire [3:0]        _GEN_76 =
    {{vmask_uop_reg0[0] | vm_reg0},
     {vmask_uop_reg0[1] | vm_reg0},
     {vmask_uop_reg0[3] | vm_reg0},
     {vmask_uop_reg0[6] | vm_reg0}};
  wire              vmask_byte_strb_reg0_6 =
    vlRemainBytes_reg0 > 11'h6 & _GEN_76[vsew_reg0];
  wire [3:0]        _GEN_77 =
    {{vmask_uop_reg0[0] | vm_reg0},
     {vmask_uop_reg0[1] | vm_reg0},
     {vmask_uop_reg0[3] | vm_reg0},
     {vmask_uop_reg0[7] | vm_reg0}};
  wire              vmask_byte_strb_reg0_7 =
    (|(vlRemainBytes_reg0[10:3])) & _GEN_77[vsew_reg0];
  wire [3:0]        _GEN_78 =
    {{vmask_uop_reg0[1] | vm_reg0},
     {vmask_uop_reg0[2] | vm_reg0},
     {vmask_uop_reg0[4] | vm_reg0},
     {vmask_uop_reg0[8] | vm_reg0}};
  wire              vmask_byte_strb_reg0_8 =
    vlRemainBytes_reg0 > 11'h8 & _GEN_78[vsew_reg0];
  wire [3:0]        _GEN_79 =
    {{vmask_uop_reg0[1] | vm_reg0},
     {vmask_uop_reg0[2] | vm_reg0},
     {vmask_uop_reg0[4] | vm_reg0},
     {vmask_uop_reg0[9] | vm_reg0}};
  wire              vmask_byte_strb_reg0_9 =
    vlRemainBytes_reg0 > 11'h9 & _GEN_79[vsew_reg0];
  wire [3:0]        _GEN_80 =
    {{vmask_uop_reg0[1] | vm_reg0},
     {vmask_uop_reg0[2] | vm_reg0},
     {vmask_uop_reg0[5] | vm_reg0},
     {vmask_uop_reg0[10] | vm_reg0}};
  wire              vmask_byte_strb_reg0_10 =
    vlRemainBytes_reg0 > 11'hA & _GEN_80[vsew_reg0];
  wire [3:0]        _GEN_81 =
    {{vmask_uop_reg0[1] | vm_reg0},
     {vmask_uop_reg0[2] | vm_reg0},
     {vmask_uop_reg0[5] | vm_reg0},
     {vmask_uop_reg0[11] | vm_reg0}};
  wire              vmask_byte_strb_reg0_11 =
    vlRemainBytes_reg0 > 11'hB & _GEN_81[vsew_reg0];
  wire [3:0]        _GEN_82 =
    {{vmask_uop_reg0[1] | vm_reg0},
     {vmask_uop_reg0[3] | vm_reg0},
     {vmask_uop_reg0[6] | vm_reg0},
     {vmask_uop_reg0[12] | vm_reg0}};
  wire              vmask_byte_strb_reg0_12 =
    vlRemainBytes_reg0 > 11'hC & _GEN_82[vsew_reg0];
  wire [3:0]        _GEN_83 =
    {{vmask_uop_reg0[1] | vm_reg0},
     {vmask_uop_reg0[3] | vm_reg0},
     {vmask_uop_reg0[6] | vm_reg0},
     {vmask_uop_reg0[13] | vm_reg0}};
  wire              vmask_byte_strb_reg0_13 =
    vlRemainBytes_reg0 > 11'hD & _GEN_83[vsew_reg0];
  wire [3:0]        _GEN_84 =
    {{vmask_uop_reg0[1] | vm_reg0},
     {vmask_uop_reg0[3] | vm_reg0},
     {vmask_uop_reg0[7] | vm_reg0},
     {vmask_uop_reg0[14] | vm_reg0}};
  wire              vmask_byte_strb_reg0_14 =
    vlRemainBytes_reg0 > 11'hE & _GEN_84[vsew_reg0];
  wire [3:0]        _GEN_85 =
    {{vmask_uop_reg0[1] | vm_reg0},
     {vmask_uop_reg0[3] | vm_reg0},
     {vmask_uop_reg0[7] | vm_reg0},
     {vmask_uop_reg0[15] | vm_reg0}};
  wire              vmask_byte_strb_reg0_15 =
    (|(vlRemainBytes_reg0[10:4])) & _GEN_85[vsew_reg0];
  wire [15:0][7:0]  _GEN_86 =
    {{vs2_bytes_reg0_15},
     {vs2_bytes_reg0_14},
     {vs2_bytes_reg0_13},
     {vs2_bytes_reg0_12},
     {vs2_bytes_reg0_11},
     {vs2_bytes_reg0_10},
     {vs2_bytes_reg0_9},
     {vs2_bytes_reg0_8},
     {vs2_bytes_reg0_7},
     {vs2_bytes_reg0_6},
     {vs2_bytes_reg0_5},
     {vs2_bytes_reg0_4},
     {vs2_bytes_reg0_3},
     {vs2_bytes_reg0_2},
     {vs2_bytes_reg0_1},
     {vs2_bytes_reg0_0}};
  wire [7:0]        vslide1dn_vd_wo_rs1_reg0_0 =
    _GEN_68 & vmask_byte_strb_reg0_0
      ? ((|_GEN_63) ? _GEN_86[vsew_bytes_reg0] : _GEN_69[vsew_bytes_reg0])
      : ma_reg0 ? 8'hFF : old_vd_reg0[7:0];
  wire [7:0]        vslide1dn_vd_wo_rs1_reg0_1 =
    _GEN_68 & vmask_byte_strb_reg0_1
      ? ((|(_GEN_63[4:1]))
           ? _GEN_86[4'(vsew_bytes_reg0 + 4'h1)]
           : _GEN_69[4'(vsew_bytes_reg0 + 4'h1)])
      : ma_reg0 ? 8'hFF : old_vd_reg0[15:8];
  wire [7:0]        vslide1dn_vd_wo_rs1_reg0_2 =
    _GEN_68 & vmask_byte_strb_reg0_2
      ? (_GEN_63 > 5'h2
           ? _GEN_86[4'(vsew_bytes_reg0 + 4'h2)]
           : _GEN_69[4'(vsew_bytes_reg0 + 4'h2)])
      : ma_reg0 ? 8'hFF : old_vd_reg0[23:16];
  wire [7:0]        vslide1dn_vd_wo_rs1_reg0_3 =
    _GEN_68 & vmask_byte_strb_reg0_3
      ? ((|(_GEN_63[4:2]))
           ? _GEN_86[4'(vsew_bytes_reg0 + 4'h3)]
           : _GEN_69[4'(vsew_bytes_reg0 + 4'h3)])
      : ma_reg0 ? 8'hFF : old_vd_reg0[31:24];
  wire [7:0]        vslide1dn_vd_wo_rs1_reg0_4 =
    _GEN_68 & vmask_byte_strb_reg0_4
      ? (_GEN_63 > 5'h4
           ? _GEN_86[4'(vsew_bytes_reg0 + 4'h4)]
           : _GEN_69[4'(vsew_bytes_reg0 + 4'h4)])
      : ma_reg0 ? 8'hFF : old_vd_reg0[39:32];
  wire [7:0]        vslide1dn_vd_wo_rs1_reg0_5 =
    _GEN_68 & vmask_byte_strb_reg0_5
      ? (_GEN_63 > 5'h5
           ? _GEN_86[4'(vsew_bytes_reg0 + 4'h5)]
           : _GEN_69[4'(vsew_bytes_reg0 + 4'h5)])
      : ma_reg0 ? 8'hFF : old_vd_reg0[47:40];
  wire [7:0]        vslide1dn_vd_wo_rs1_reg0_6 =
    _GEN_68 & vmask_byte_strb_reg0_6
      ? (_GEN_63 > 5'h6
           ? _GEN_86[4'(vsew_bytes_reg0 + 4'h6)]
           : _GEN_69[4'(vsew_bytes_reg0 + 4'h6)])
      : ma_reg0 ? 8'hFF : old_vd_reg0[55:48];
  wire [7:0]        vslide1dn_vd_wo_rs1_reg0_7 =
    _GEN_68 & vmask_byte_strb_reg0_7
      ? ((|(_GEN_63[4:3]))
           ? _GEN_86[4'(vsew_bytes_reg0 + 4'h7)]
           : _GEN_69[4'(vsew_bytes_reg0 + 4'h7)])
      : ma_reg0 ? 8'hFF : old_vd_reg0[63:56];
  wire [7:0]        vslide1dn_vd_wo_rs1_reg0_8 =
    _GEN_68 & vmask_byte_strb_reg0_8
      ? (_GEN_63 > 5'h8
           ? _GEN_86[4'(vsew_bytes_reg0 - 4'h8)]
           : _GEN_69[4'(vsew_bytes_reg0 - 4'h8)])
      : ma_reg0 ? 8'hFF : old_vd_reg0[71:64];
  wire [7:0]        vslide1dn_vd_wo_rs1_reg0_9 =
    _GEN_68 & vmask_byte_strb_reg0_9
      ? (_GEN_63 > 5'h9
           ? _GEN_86[4'(vsew_bytes_reg0 - 4'h7)]
           : _GEN_69[4'(vsew_bytes_reg0 - 4'h7)])
      : ma_reg0 ? 8'hFF : old_vd_reg0[79:72];
  wire [7:0]        vslide1dn_vd_wo_rs1_reg0_10 =
    _GEN_68 & vmask_byte_strb_reg0_10
      ? (_GEN_63 > 5'hA
           ? _GEN_86[4'(vsew_bytes_reg0 - 4'h6)]
           : _GEN_69[4'(vsew_bytes_reg0 - 4'h6)])
      : ma_reg0 ? 8'hFF : old_vd_reg0[87:80];
  wire [7:0]        vslide1dn_vd_wo_rs1_reg0_11 =
    _GEN_68 & vmask_byte_strb_reg0_11
      ? (_GEN_63 > 5'hB
           ? _GEN_86[4'(vsew_bytes_reg0 - 4'h5)]
           : _GEN_69[4'(vsew_bytes_reg0 - 4'h5)])
      : ma_reg0 ? 8'hFF : old_vd_reg0[95:88];
  wire [7:0]        vslide1dn_vd_wo_rs1_reg0_12 =
    _GEN_68 & vmask_byte_strb_reg0_12
      ? (_GEN_63 > 5'hC
           ? _GEN_86[4'(vsew_bytes_reg0 - 4'h4)]
           : _GEN_69[4'(vsew_bytes_reg0 - 4'h4)])
      : ma_reg0 ? 8'hFF : old_vd_reg0[103:96];
  wire [7:0]        vslide1dn_vd_wo_rs1_reg0_13 =
    _GEN_68 & vmask_byte_strb_reg0_13
      ? (_GEN_63 > 5'hD
           ? _GEN_86[4'(vsew_bytes_reg0 - 4'h3)]
           : _GEN_69[4'(vsew_bytes_reg0 - 4'h3)])
      : ma_reg0 ? 8'hFF : old_vd_reg0[111:104];
  wire [7:0]        vslide1dn_vd_wo_rs1_reg0_14 =
    _GEN_68 & vmask_byte_strb_reg0_14
      ? (_GEN_63 > 5'hE
           ? _GEN_86[4'(vsew_bytes_reg0 - 4'h2)]
           : _GEN_69[4'(vsew_bytes_reg0 - 4'h2)])
      : ma_reg0 ? 8'hFF : old_vd_reg0[119:112];
  wire [7:0]        vslide1dn_vd_wo_rs1_reg0_15 =
    _GEN_68 & vmask_byte_strb_reg0_15
      ? (_GEN_63[4]
           ? _GEN_86[4'(vsew_bytes_reg0 - 4'h1)]
           : _GEN_69[4'(vsew_bytes_reg0 - 4'h1)])
      : ma_reg0 ? 8'hFF : old_vd_reg0[127:120];
  wire [15:0]       _GEN_87 =
    {{vmask_byte_strb_reg0_15},
     {vmask_byte_strb_reg0_14},
     {vmask_byte_strb_reg0_13},
     {vmask_byte_strb_reg0_12},
     {vmask_byte_strb_reg0_11},
     {vmask_byte_strb_reg0_10},
     {vmask_byte_strb_reg0_9},
     {vmask_byte_strb_reg0_8},
     {vmask_byte_strb_reg0_7},
     {vmask_byte_strb_reg0_6},
     {vmask_byte_strb_reg0_5},
     {vmask_byte_strb_reg0_4},
     {vmask_byte_strb_reg0_3},
     {vmask_byte_strb_reg0_2},
     {vmask_byte_strb_reg0_1},
     {vmask_byte_strb_reg0_0}};
  wire [127:0]      vslide1dn_vd_rs1_reg0 =
    (load_rs1_reg0 | uopIdx_reg0[0]) & (|vlRemainBytes_reg0) & vlRemainBytes_reg0 < 11'h11
    & _GEN_87[4'(vlRemainBytes_reg0[3:0] - 4'h1)]
      ? (load_rs1_reg0
           ? {vslide1dn_vd_wo_rs1_reg0_15,
              vslide1dn_vd_wo_rs1_reg0_14,
              vslide1dn_vd_wo_rs1_reg0_13,
              vslide1dn_vd_wo_rs1_reg0_12,
              vslide1dn_vd_wo_rs1_reg0_11,
              vslide1dn_vd_wo_rs1_reg0_10,
              vslide1dn_vd_wo_rs1_reg0_9,
              vslide1dn_vd_wo_rs1_reg0_8,
              vslide1dn_vd_wo_rs1_reg0_7,
              vslide1dn_vd_wo_rs1_reg0_6,
              vslide1dn_vd_wo_rs1_reg0_5,
              vslide1dn_vd_wo_rs1_reg0_4,
              vslide1dn_vd_wo_rs1_reg0_3,
              vslide1dn_vd_wo_rs1_reg0_2,
              vslide1dn_vd_wo_rs1_reg0_1,
              vslide1dn_vd_wo_rs1_reg0_0}
           : old_vd_reg0) & 128'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
        >> 14'(14'h80 - {_vslide1dn_vd_rs1_reg0_T_9, 3'h0})
        | _vslide1dn_vd_rs1_reg0_T_12[127:0] & vs1_reg0
      : load_rs1_reg0
          ? {vslide1dn_vd_wo_rs1_reg0_15,
             vslide1dn_vd_wo_rs1_reg0_14,
             vslide1dn_vd_wo_rs1_reg0_13,
             vslide1dn_vd_wo_rs1_reg0_12,
             vslide1dn_vd_wo_rs1_reg0_11,
             vslide1dn_vd_wo_rs1_reg0_10,
             vslide1dn_vd_wo_rs1_reg0_9,
             vslide1dn_vd_wo_rs1_reg0_8,
             vslide1dn_vd_wo_rs1_reg0_7,
             vslide1dn_vd_wo_rs1_reg0_6,
             vslide1dn_vd_wo_rs1_reg0_5,
             vslide1dn_vd_wo_rs1_reg0_4,
             vslide1dn_vd_wo_rs1_reg0_3,
             vslide1dn_vd_wo_rs1_reg0_2,
             vslide1dn_vd_wo_rs1_reg0_1,
             vslide1dn_vd_wo_rs1_reg0_0}
          : old_vd_reg0;
  wire [7:0]        vrgather_vd_reg0_0 =
    _GEN_65
      ? (vmask_byte_strb_reg0_0
           ? (vrgather_byte_sel_reg0_0 >= _GEN_66 & vrgather_byte_sel_reg0_0 < _GEN_67
                ? _GEN_86[4'(vrgather_byte_sel_reg0_0[3:0] - vs2_bytes_min_reg0[3:0])]
                : first_gather_reg0 ? 8'h0 : old_vd_reg0[7:0])
           : ma_reg0 ? 8'hFF : old_vd_reg0[7:0])
      : 8'h0;
  wire [7:0]        vrgather_vd_reg0_1 =
    _GEN_65
      ? (vmask_byte_strb_reg0_1
           ? (vrgather_byte_sel_reg0_1 >= _GEN_66 & vrgather_byte_sel_reg0_1 < _GEN_67
                ? _GEN_86[4'(vrgather_byte_sel_reg0_1[3:0] - vs2_bytes_min_reg0[3:0])]
                : first_gather_reg0 ? 8'h0 : old_vd_reg0[15:8])
           : ma_reg0 ? 8'hFF : old_vd_reg0[15:8])
      : 8'h0;
  wire [7:0]        vrgather_vd_reg0_2 =
    _GEN_65
      ? (vmask_byte_strb_reg0_2
           ? (vrgather_byte_sel_reg0_2 >= _GEN_66 & vrgather_byte_sel_reg0_2 < _GEN_67
                ? _GEN_86[4'(vrgather_byte_sel_reg0_2[3:0] - vs2_bytes_min_reg0[3:0])]
                : first_gather_reg0 ? 8'h0 : old_vd_reg0[23:16])
           : ma_reg0 ? 8'hFF : old_vd_reg0[23:16])
      : 8'h0;
  wire [7:0]        vrgather_vd_reg0_3 =
    _GEN_65
      ? (vmask_byte_strb_reg0_3
           ? (vrgather_byte_sel_reg0_3 >= _GEN_66 & vrgather_byte_sel_reg0_3 < _GEN_67
                ? _GEN_86[4'(vrgather_byte_sel_reg0_3[3:0] - vs2_bytes_min_reg0[3:0])]
                : first_gather_reg0 ? 8'h0 : old_vd_reg0[31:24])
           : ma_reg0 ? 8'hFF : old_vd_reg0[31:24])
      : 8'h0;
  wire [7:0]        vrgather_vd_reg0_4 =
    _GEN_65
      ? (vmask_byte_strb_reg0_4
           ? (vrgather_byte_sel_reg0_4 >= _GEN_66 & vrgather_byte_sel_reg0_4 < _GEN_67
                ? _GEN_86[4'(vrgather_byte_sel_reg0_4[3:0] - vs2_bytes_min_reg0[3:0])]
                : first_gather_reg0 ? 8'h0 : old_vd_reg0[39:32])
           : ma_reg0 ? 8'hFF : old_vd_reg0[39:32])
      : 8'h0;
  wire [7:0]        vrgather_vd_reg0_5 =
    _GEN_65
      ? (vmask_byte_strb_reg0_5
           ? (vrgather_byte_sel_reg0_5 >= _GEN_66 & vrgather_byte_sel_reg0_5 < _GEN_67
                ? _GEN_86[4'(vrgather_byte_sel_reg0_5[3:0] - vs2_bytes_min_reg0[3:0])]
                : first_gather_reg0 ? 8'h0 : old_vd_reg0[47:40])
           : ma_reg0 ? 8'hFF : old_vd_reg0[47:40])
      : 8'h0;
  wire [7:0]        vrgather_vd_reg0_6 =
    _GEN_65
      ? (vmask_byte_strb_reg0_6
           ? (vrgather_byte_sel_reg0_6 >= _GEN_66 & vrgather_byte_sel_reg0_6 < _GEN_67
                ? _GEN_86[4'(vrgather_byte_sel_reg0_6[3:0] - vs2_bytes_min_reg0[3:0])]
                : first_gather_reg0 ? 8'h0 : old_vd_reg0[55:48])
           : ma_reg0 ? 8'hFF : old_vd_reg0[55:48])
      : 8'h0;
  wire [7:0]        vrgather_vd_reg0_7 =
    _GEN_65
      ? (vmask_byte_strb_reg0_7
           ? (vrgather_byte_sel_reg0_7 >= _GEN_66 & vrgather_byte_sel_reg0_7 < _GEN_67
                ? _GEN_86[4'(vrgather_byte_sel_reg0_7[3:0] - vs2_bytes_min_reg0[3:0])]
                : first_gather_reg0 ? 8'h0 : old_vd_reg0[63:56])
           : ma_reg0 ? 8'hFF : old_vd_reg0[63:56])
      : 8'h0;
  wire [7:0]        vrgather_vd_reg0_8 =
    _GEN_65
      ? (vmask_byte_strb_reg0_8
           ? (vrgather_byte_sel_reg0_8 >= _GEN_66 & vrgather_byte_sel_reg0_8 < _GEN_67
                ? _GEN_86[4'(vrgather_byte_sel_reg0_8[3:0] - vs2_bytes_min_reg0[3:0])]
                : first_gather_reg0 ? 8'h0 : old_vd_reg0[71:64])
           : ma_reg0 ? 8'hFF : old_vd_reg0[71:64])
      : 8'h0;
  wire [7:0]        vrgather_vd_reg0_9 =
    _GEN_65
      ? (vmask_byte_strb_reg0_9
           ? (vrgather_byte_sel_reg0_9 >= _GEN_66 & vrgather_byte_sel_reg0_9 < _GEN_67
                ? _GEN_86[4'(vrgather_byte_sel_reg0_9[3:0] - vs2_bytes_min_reg0[3:0])]
                : first_gather_reg0 ? 8'h0 : old_vd_reg0[79:72])
           : ma_reg0 ? 8'hFF : old_vd_reg0[79:72])
      : 8'h0;
  wire [7:0]        vrgather_vd_reg0_10 =
    _GEN_65
      ? (vmask_byte_strb_reg0_10
           ? (vrgather_byte_sel_reg0_10 >= _GEN_66 & vrgather_byte_sel_reg0_10 < _GEN_67
                ? _GEN_86[4'(vrgather_byte_sel_reg0_10[3:0] - vs2_bytes_min_reg0[3:0])]
                : first_gather_reg0 ? 8'h0 : old_vd_reg0[87:80])
           : ma_reg0 ? 8'hFF : old_vd_reg0[87:80])
      : 8'h0;
  wire [7:0]        vrgather_vd_reg0_11 =
    _GEN_65
      ? (vmask_byte_strb_reg0_11
           ? (vrgather_byte_sel_reg0_11 >= _GEN_66 & vrgather_byte_sel_reg0_11 < _GEN_67
                ? _GEN_86[4'(vrgather_byte_sel_reg0_11[3:0] - vs2_bytes_min_reg0[3:0])]
                : first_gather_reg0 ? 8'h0 : old_vd_reg0[95:88])
           : ma_reg0 ? 8'hFF : old_vd_reg0[95:88])
      : 8'h0;
  wire [7:0]        vrgather_vd_reg0_12 =
    _GEN_65
      ? (vmask_byte_strb_reg0_12
           ? (vrgather_byte_sel_reg0_12 >= _GEN_66 & vrgather_byte_sel_reg0_12 < _GEN_67
                ? _GEN_86[4'(vrgather_byte_sel_reg0_12[3:0] - vs2_bytes_min_reg0[3:0])]
                : first_gather_reg0 ? 8'h0 : old_vd_reg0[103:96])
           : ma_reg0 ? 8'hFF : old_vd_reg0[103:96])
      : 8'h0;
  wire [7:0]        vrgather_vd_reg0_13 =
    _GEN_65
      ? (vmask_byte_strb_reg0_13
           ? (vrgather_byte_sel_reg0_13 >= _GEN_66 & vrgather_byte_sel_reg0_13 < _GEN_67
                ? _GEN_86[4'(vrgather_byte_sel_reg0_13[3:0] - vs2_bytes_min_reg0[3:0])]
                : first_gather_reg0 ? 8'h0 : old_vd_reg0[111:104])
           : ma_reg0 ? 8'hFF : old_vd_reg0[111:104])
      : 8'h0;
  wire [7:0]        vrgather_vd_reg0_14 =
    _GEN_65
      ? (vmask_byte_strb_reg0_14
           ? (vrgather_byte_sel_reg0_14 >= _GEN_66 & vrgather_byte_sel_reg0_14 < _GEN_67
                ? _GEN_86[4'(vrgather_byte_sel_reg0_14[3:0] - vs2_bytes_min_reg0[3:0])]
                : first_gather_reg0 ? 8'h0 : old_vd_reg0[119:112])
           : ma_reg0 ? 8'hFF : old_vd_reg0[119:112])
      : 8'h0;
  wire [7:0]        vrgather_vd_reg0_15 =
    _GEN_65
      ? (vmask_byte_strb_reg0_15
           ? (vrgather_byte_sel_reg0_15 >= _GEN_66 & vrgather_byte_sel_reg0_15 < _GEN_67
                ? _GEN_86[4'(vrgather_byte_sel_reg0_15[3:0] - vs2_bytes_min_reg0[3:0])]
                : first_gather_reg0 ? 8'h0 : old_vd_reg0[127:120])
           : ma_reg0 ? 8'hFF : old_vd_reg0[127:120])
      : 8'h0;
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      fire_reg0_last_r <= 1'h0;
      vsew_reg0 <= 2'h0;
      elements_reg0 <= 5'h0;
      vs1_reg0 <= 128'h0;
      vs1_next_reg0 <= 128'h0;
      vs2_reg0 <= 128'h0;
      old_vd_reg0 <= 128'h0;
      vlRemain_reg0 <= 8'h0;
      is_vrgather_reg0 <= 1'h0;
      is_vrgather_vx_reg0 <= 1'h0;
      uopIdx_reg0 <= 6'h0;
      is_vslide1up_reg0 <= 1'h0;
      is_vslide1dn_reg0 <= 1'h0;
      is_vcompress_reg0 <= 1'h0;
      is_vslideup_reg0 <= 1'h0;
      is_vslidedn_reg0 <= 1'h0;
      is_vrgather16_sew8_reg0 <= 1'h0;
      is_vmvnr_reg0 <= 1'h0;
      is_vslide_reg0 <= 1'h0;
      ta_reg0 <= 1'h0;
      vstartRemain_reg0 <= 8'h0;
      vstart_reg0 <= 7'h0;
      vl_reg0 <= 8'h0;
      vd_reg <= 128'h0;
    end
    else begin
      if (io_in_valid | fire_reg0_last_r)
        fire_reg0_last_r <= io_in_valid;
      if (io_in_valid) begin
        vsew_reg0 <= io_in_bits_srcType_0[1:0];
        elements_reg0 <= _GEN_8[io_in_bits_info_vlmul];
        vs1_reg0 <= io_in_bits_vs1;
        vs1_next_reg0 <= io_in_bits_vs1 >> _mask_start_idx_T[6:0];
        vs2_reg0 <= io_in_bits_vs2;
        old_vd_reg0 <= io_in_bits_old_vd;
        vlRemain_reg0 <=
          vslide1up
            ? ({5'h0, io_in_bits_info_vl} >= _vlRemain_T_2
                 ? 8'(io_in_bits_info_vl - _vlRemain_T_2[7:0])
                 : 8'h0)
            : vslide1dn
                ? ({4'h0, io_in_bits_info_vl} >= _GEN_38 << _GEN_27
                     ? 8'(io_in_bits_info_vl - _vlRemain_T_10[7:0])
                     : 8'h0)
                : ((|vdId) ? 8'h0 : io_in_bits_info_vl)
                  | (vdId == 3'h1 & io_in_bits_info_vl >= _GEN
                       ? 8'(io_in_bits_info_vl - _GEN)
                       : 8'h0)
                  | (vdId == 3'h2 & io_in_bits_info_vl >= _GEN_0
                       ? 8'(io_in_bits_info_vl - _GEN_0)
                       : 8'h0)
                  | (vdId == 3'h3 & io_in_bits_info_vl >= _GEN_1
                       ? 8'(io_in_bits_info_vl - _GEN_1)
                       : 8'h0)
                  | (vdId == 3'h4 & io_in_bits_info_vl >= _GEN_2
                       ? 8'(io_in_bits_info_vl - _GEN_2)
                       : 8'h0)
                  | (vdId == 3'h5 & io_in_bits_info_vl >= _vstartRemain_T_46
                       ? 8'(io_in_bits_info_vl - _vstartRemain_T_46)
                       : 8'h0)
                  | (vdId == 3'h6 & io_in_bits_info_vl >= _vstartRemain_T_53
                       ? 8'(io_in_bits_info_vl - _vstartRemain_T_53)
                       : 8'h0)
                  | ((&vdId) & io_in_bits_info_vl >= _vstartRemain_T_60
                       ? 8'(io_in_bits_info_vl - _vstartRemain_T_60)
                       : 8'h0);
        is_vrgather_reg0 <= vrgather;
        is_vrgather_vx_reg0 <= vrgather_vx;
        uopIdx_reg0 <= io_in_bits_info_uopIdx;
        is_vslide1up_reg0 <= vslide1up;
        is_vslide1dn_reg0 <= vslide1dn;
        is_vcompress_reg0 <= io_in_bits_opcode_op == 6'h6;
        is_vslideup_reg0 <= vslideup;
        is_vslidedn_reg0 <= vslidedn;
        is_vrgather16_sew8_reg0 <= vrgather16_sew8;
        is_vmvnr_reg0 <= vmvnr;
        is_vslide_reg0 <= vslideup | vslide1up | vslidedn | vslide1dn;
        ta_reg0 <= io_in_bits_info_ta;
        vstartRemain_reg0 <=
          vslide1up
            ? ({6'h0, io_in_bits_info_vstart} >= _vstartRemain_T_2
                 ? 8'(_GEN_40 - _vstartRemain_T_2[7:0])
                 : 8'h0)
            : vslide1dn
                ? ({5'h0, io_in_bits_info_vstart} >= _GEN_41 << _GEN_27
                     ? 8'(_GEN_40 - _vstartRemain_T_10[7:0])
                     : 8'h0)
                : ((|vdId) ? 8'h0 : vslideup_vstart[7:0])
                  | (vdId == 3'h1 & vslideup_vstart >= {59'h0, ele_cnt}
                       ? 8'(vslideup_vstart[7:0] - _GEN)
                       : 8'h0)
                  | (vdId == 3'h2 & vslideup_vstart >= {58'h0, ele_cnt, 1'h0}
                       ? 8'(vslideup_vstart[7:0] - _GEN_0)
                       : 8'h0)
                  | (vdId == 3'h3 & vslideup_vstart >= {57'h0, _vstartRemain_T_32}
                       ? 8'(vslideup_vstart[7:0] - _GEN_1)
                       : 8'h0)
                  | (vdId == 3'h4 & vslideup_vstart >= {57'h0, ele_cnt, 2'h0}
                       ? 8'(vslideup_vstart[7:0] - _GEN_2)
                       : 8'h0)
                  | (vdId == 3'h5 & vslideup_vstart >= {56'h0, _vstartRemain_T_46}
                       ? 8'(vslideup_vstart[7:0] - _vstartRemain_T_46)
                       : 8'h0)
                  | (vdId == 3'h6 & vslideup_vstart >= {56'h0, _vstartRemain_T_53}
                       ? 8'(vslideup_vstart[7:0] - _vstartRemain_T_53)
                       : 8'h0)
                  | ((&vdId) & vslideup_vstart >= {56'h0, _vstartRemain_T_60}
                       ? 8'(vslideup_vstart[7:0] - _vstartRemain_T_60)
                       : 8'h0);
        vstart_reg0 <= io_in_bits_info_vstart;
        vl_reg0 <=
          vmvnr
            ? {2'h0,
               (io_in_bits_info_vlmul[1:0] == 2'h0 ? {1'h0, ele_cnt} : 6'h0)
                 | (io_in_bits_info_vlmul[1:0] == 2'h1 ? {ele_cnt, 1'h0} : 6'h0)}
              | (io_in_bits_info_vlmul[1:0] == 2'h2 ? _GEN_2 : 8'h0)
              | ((&(io_in_bits_info_vlmul[1:0])) ? {ele_cnt, 3'h0} : 8'h0)
            : io_in_bits_info_vl;
      end
      if (is_vmvnr_reg0 & fire_reg0_last_r)
        vd_reg <= vs2_reg0;
      else if (is_vslideup_reg0 & fire_reg0_last_r)
        vd_reg <=
          {vmask_byte_strb_reg0_15
             ? (_GEN_59 >= slide_bytes_reg0 & 67'(_GEN_59 - slide_bytes_reg0) < _GEN_44
                  ? _GEN_86[4'(_vslideup_vd_reg0_15_T_2[3:0] - slide_bytes_reg0[3:0])]
                  : old_vd_reg0[127:120])
             : ma_reg0 ? 8'hFF : old_vd_reg0[127:120],
           vmask_byte_strb_reg0_14
             ? (_GEN_58 >= slide_bytes_reg0 & 67'(_GEN_58 - slide_bytes_reg0) < _GEN_44
                  ? _GEN_86[4'(_vslideup_vd_reg0_14_T_2[3:0] - slide_bytes_reg0[3:0])]
                  : old_vd_reg0[119:112])
             : ma_reg0 ? 8'hFF : old_vd_reg0[119:112],
           vmask_byte_strb_reg0_13
             ? (_GEN_57 >= slide_bytes_reg0 & 67'(_GEN_57 - slide_bytes_reg0) < _GEN_44
                  ? _GEN_86[4'(_vslideup_vd_reg0_13_T_2[3:0] - slide_bytes_reg0[3:0])]
                  : old_vd_reg0[111:104])
             : ma_reg0 ? 8'hFF : old_vd_reg0[111:104],
           vmask_byte_strb_reg0_12
             ? (_GEN_56 >= slide_bytes_reg0 & 67'(_GEN_56 - slide_bytes_reg0) < _GEN_44
                  ? _GEN_86[4'(_vslideup_vd_reg0_12_T_2[3:0] - slide_bytes_reg0[3:0])]
                  : old_vd_reg0[103:96])
             : ma_reg0 ? 8'hFF : old_vd_reg0[103:96],
           vmask_byte_strb_reg0_11
             ? (_GEN_55 >= slide_bytes_reg0 & 67'(_GEN_55 - slide_bytes_reg0) < _GEN_44
                  ? _GEN_86[4'(_vslideup_vd_reg0_11_T_2[3:0] - slide_bytes_reg0[3:0])]
                  : old_vd_reg0[95:88])
             : ma_reg0 ? 8'hFF : old_vd_reg0[95:88],
           vmask_byte_strb_reg0_10
             ? (_GEN_54 >= slide_bytes_reg0 & 67'(_GEN_54 - slide_bytes_reg0) < _GEN_44
                  ? _GEN_86[4'(_vslideup_vd_reg0_10_T_2[3:0] - slide_bytes_reg0[3:0])]
                  : old_vd_reg0[87:80])
             : ma_reg0 ? 8'hFF : old_vd_reg0[87:80],
           vmask_byte_strb_reg0_9
             ? (_GEN_53 >= slide_bytes_reg0 & 67'(_GEN_53 - slide_bytes_reg0) < _GEN_44
                  ? _GEN_86[4'(_vslideup_vd_reg0_9_T_2[3:0] - slide_bytes_reg0[3:0])]
                  : old_vd_reg0[79:72])
             : ma_reg0 ? 8'hFF : old_vd_reg0[79:72],
           vmask_byte_strb_reg0_8
             ? (_GEN_52 >= slide_bytes_reg0 & 67'(_GEN_52 - slide_bytes_reg0) < _GEN_44
                  ? _GEN_86[4'(_vslideup_vd_reg0_8_T_2[3:0] - slide_bytes_reg0[3:0])]
                  : old_vd_reg0[71:64])
             : ma_reg0 ? 8'hFF : old_vd_reg0[71:64],
           vmask_byte_strb_reg0_7
             ? (_GEN_51 >= slide_bytes_reg0 & 67'(_GEN_51 - slide_bytes_reg0) < _GEN_44
                  ? _GEN_86[4'(_vslideup_vd_reg0_7_T_2[3:0] - slide_bytes_reg0[3:0])]
                  : old_vd_reg0[63:56])
             : ma_reg0 ? 8'hFF : old_vd_reg0[63:56],
           vmask_byte_strb_reg0_6
             ? (_GEN_50 >= slide_bytes_reg0 & 67'(_GEN_50 - slide_bytes_reg0) < _GEN_44
                  ? _GEN_86[4'(_vslideup_vd_reg0_6_T_2[3:0] - slide_bytes_reg0[3:0])]
                  : old_vd_reg0[55:48])
             : ma_reg0 ? 8'hFF : old_vd_reg0[55:48],
           vmask_byte_strb_reg0_5
             ? (_GEN_49 >= slide_bytes_reg0 & 67'(_GEN_49 - slide_bytes_reg0) < _GEN_44
                  ? _GEN_86[4'(_vslideup_vd_reg0_5_T_2[3:0] - slide_bytes_reg0[3:0])]
                  : old_vd_reg0[47:40])
             : ma_reg0 ? 8'hFF : old_vd_reg0[47:40],
           vmask_byte_strb_reg0_4
             ? (_GEN_48 >= slide_bytes_reg0 & 67'(_GEN_48 - slide_bytes_reg0) < _GEN_44
                  ? _GEN_86[4'(_vslideup_vd_reg0_4_T_2[3:0] - slide_bytes_reg0[3:0])]
                  : old_vd_reg0[39:32])
             : ma_reg0 ? 8'hFF : old_vd_reg0[39:32],
           vmask_byte_strb_reg0_3
             ? (_GEN_47 >= slide_bytes_reg0 & 67'(_GEN_47 - slide_bytes_reg0) < _GEN_44
                  ? _GEN_86[4'(_vslideup_vd_reg0_3_T_2[3:0] - slide_bytes_reg0[3:0])]
                  : old_vd_reg0[31:24])
             : ma_reg0 ? 8'hFF : old_vd_reg0[31:24],
           vmask_byte_strb_reg0_2
             ? (_GEN_46 >= slide_bytes_reg0 & 67'(_GEN_46 - slide_bytes_reg0) < _GEN_44
                  ? _GEN_86[4'(_vslideup_vd_reg0_2_T_2[3:0] - slide_bytes_reg0[3:0])]
                  : old_vd_reg0[23:16])
             : ma_reg0 ? 8'hFF : old_vd_reg0[23:16],
           vmask_byte_strb_reg0_1
             ? (_GEN_45 >= slide_bytes_reg0 & 67'(_GEN_45 - slide_bytes_reg0) < _GEN_44
                  ? _GEN_86[4'(_vslideup_vd_reg0_1_T_2[3:0] - slide_bytes_reg0[3:0])]
                  : old_vd_reg0[15:8])
             : ma_reg0 ? 8'hFF : old_vd_reg0[15:8],
           vmask_byte_strb_reg0_0
             ? (_GEN_43 >= slide_bytes_reg0 & 67'(_GEN_43 - slide_bytes_reg0) < _GEN_44
                  ? _GEN_86[4'(base_reg0[3:0] - slide_bytes_reg0[3:0])]
                  : old_vd_reg0[7:0])
             : ma_reg0 ? 8'hFF : old_vd_reg0[7:0]};
      else if (is_vslide1up_reg0 & fire_reg0_last_r)
        vd_reg <=
          {is_vslide1up_reg0 & vmask_byte_strb_reg0_15
             ? _GEN_86[4'(4'hF - vsew_bytes_reg0)]
             : ma_reg0 ? 8'hFF : old_vd_reg0[127:120],
           is_vslide1up_reg0 & vmask_byte_strb_reg0_14
             ? ((&vsew_bytes_reg0)
                  ? _GEN_69[4'(4'(4'h0 - vsew_bytes_reg0) - 4'h2)]
                  : _GEN_86[4'(4'hE - vsew_bytes_reg0)])
             : ma_reg0 ? 8'hFF : old_vd_reg0[119:112],
           is_vslide1up_reg0 & vmask_byte_strb_reg0_13
             ? (vsew_bytes_reg0 > 4'hD
                  ? _GEN_69[4'(4'(4'h0 - vsew_bytes_reg0) - 4'h3)]
                  : _GEN_86[4'(4'hD - vsew_bytes_reg0)])
             : ma_reg0 ? 8'hFF : old_vd_reg0[111:104],
           is_vslide1up_reg0 & vmask_byte_strb_reg0_12
             ? (vsew_bytes_reg0 > 4'hC
                  ? _GEN_69[4'(4'(4'h0 - vsew_bytes_reg0) - 4'h4)]
                  : _GEN_86[4'(4'hC - vsew_bytes_reg0)])
             : ma_reg0 ? 8'hFF : old_vd_reg0[103:96],
           is_vslide1up_reg0 & vmask_byte_strb_reg0_11
             ? (vsew_bytes_reg0 > 4'hB
                  ? _GEN_69[4'(4'(4'h0 - vsew_bytes_reg0) - 4'h5)]
                  : _GEN_86[4'(4'hB - vsew_bytes_reg0)])
             : ma_reg0 ? 8'hFF : old_vd_reg0[95:88],
           is_vslide1up_reg0 & vmask_byte_strb_reg0_10
             ? (vsew_bytes_reg0 > 4'hA
                  ? _GEN_69[4'(4'(4'h0 - vsew_bytes_reg0) - 4'h6)]
                  : _GEN_86[4'(4'hA - vsew_bytes_reg0)])
             : ma_reg0 ? 8'hFF : old_vd_reg0[87:80],
           is_vslide1up_reg0 & vmask_byte_strb_reg0_9
             ? (vsew_bytes_reg0 > 4'h9
                  ? _GEN_69[4'(4'(4'h0 - vsew_bytes_reg0) - 4'h7)]
                  : _GEN_86[4'(4'h9 - vsew_bytes_reg0)])
             : ma_reg0 ? 8'hFF : old_vd_reg0[79:72],
           is_vslide1up_reg0 & vmask_byte_strb_reg0_8
             ? (vsew_bytes_reg0 > 4'h8
                  ? _GEN_69[4'(4'(4'h0 - vsew_bytes_reg0) - 4'h8)]
                  : _GEN_86[4'(4'h8 - vsew_bytes_reg0)])
             : ma_reg0 ? 8'hFF : old_vd_reg0[71:64],
           is_vslide1up_reg0 & vmask_byte_strb_reg0_7
             ? (vsew_bytes_reg0[3]
                  ? _GEN_69[4'(4'(4'h0 - vsew_bytes_reg0) + 4'h7)]
                  : _GEN_86[4'(4'h7 - vsew_bytes_reg0)])
             : ma_reg0 ? 8'hFF : old_vd_reg0[63:56],
           is_vslide1up_reg0 & vmask_byte_strb_reg0_6
             ? (vsew_bytes_reg0 > 4'h6
                  ? _GEN_69[4'(4'(4'h0 - vsew_bytes_reg0) + 4'h6)]
                  : _GEN_86[4'(4'h6 - vsew_bytes_reg0)])
             : ma_reg0 ? 8'hFF : old_vd_reg0[55:48],
           is_vslide1up_reg0 & vmask_byte_strb_reg0_5
             ? (vsew_bytes_reg0 > 4'h5
                  ? _GEN_69[4'(4'(4'h0 - vsew_bytes_reg0) + 4'h5)]
                  : _GEN_86[4'(4'h5 - vsew_bytes_reg0)])
             : ma_reg0 ? 8'hFF : old_vd_reg0[47:40],
           is_vslide1up_reg0 & vmask_byte_strb_reg0_4
             ? (vsew_bytes_reg0 > 4'h4
                  ? _GEN_69[4'(4'(4'h0 - vsew_bytes_reg0) + 4'h4)]
                  : _GEN_86[4'(4'h4 - vsew_bytes_reg0)])
             : ma_reg0 ? 8'hFF : old_vd_reg0[39:32],
           is_vslide1up_reg0 & vmask_byte_strb_reg0_3
             ? ((|(vsew_bytes_reg0[3:2]))
                  ? _GEN_69[4'(4'(4'h0 - vsew_bytes_reg0) + 4'h3)]
                  : _GEN_86[4'(4'h3 - vsew_bytes_reg0)])
             : ma_reg0 ? 8'hFF : old_vd_reg0[31:24],
           is_vslide1up_reg0 & vmask_byte_strb_reg0_2
             ? (vsew_bytes_reg0 > 4'h2
                  ? _GEN_69[4'(4'(4'h0 - vsew_bytes_reg0) + 4'h2)]
                  : _GEN_86[4'(4'h2 - vsew_bytes_reg0)])
             : ma_reg0 ? 8'hFF : old_vd_reg0[23:16],
           is_vslide1up_reg0 & vmask_byte_strb_reg0_1
             ? ((|(vsew_bytes_reg0[3:1]))
                  ? _GEN_69[4'(4'(4'h0 - vsew_bytes_reg0) + 4'h1)]
                  : _GEN_86[4'(4'h1 - vsew_bytes_reg0)])
             : ma_reg0 ? 8'hFF : old_vd_reg0[15:8],
           is_vslide1up_reg0 & vmask_byte_strb_reg0_0
             ? ((|vsew_bytes_reg0)
                  ? _GEN_69[4'(4'h0 - vsew_bytes_reg0)]
                  : _GEN_86[4'(4'h0 - vsew_bytes_reg0)])
             : ma_reg0 ? 8'hFF : old_vd_reg0[7:0]};
      else if (is_vslidedn_reg0 & fire_reg0_last_r)
        vd_reg <=
          {vmask_byte_strb_reg0_15
             ? (_vslidedn_vd_reg0_15_T_2 >= _GEN_60
                & 68'(_vslidedn_vd_reg0_15_T_2 - _GEN_60) < _GEN_62
                  ? _GEN_86[4'(_vslidedn_vd_reg0_15_T_2[3:0] - base_reg0[3:0])]
                  : first_slidedn_reg0 ? 8'h0 : old_vd_reg0[127:120])
             : ma_reg0 ? 8'hFF : old_vd_reg0[127:120],
           vmask_byte_strb_reg0_14
             ? (_vslidedn_vd_reg0_14_T_2 >= _GEN_60
                & 68'(_vslidedn_vd_reg0_14_T_2 - _GEN_60) < _GEN_62
                  ? _GEN_86[4'(_vslidedn_vd_reg0_14_T_2[3:0] - base_reg0[3:0])]
                  : first_slidedn_reg0 ? 8'h0 : old_vd_reg0[119:112])
             : ma_reg0 ? 8'hFF : old_vd_reg0[119:112],
           vmask_byte_strb_reg0_13
             ? (_vslidedn_vd_reg0_13_T_2 >= _GEN_60
                & 68'(_vslidedn_vd_reg0_13_T_2 - _GEN_60) < _GEN_62
                  ? _GEN_86[4'(_vslidedn_vd_reg0_13_T_2[3:0] - base_reg0[3:0])]
                  : first_slidedn_reg0 ? 8'h0 : old_vd_reg0[111:104])
             : ma_reg0 ? 8'hFF : old_vd_reg0[111:104],
           vmask_byte_strb_reg0_12
             ? (_vslidedn_vd_reg0_12_T_2 >= _GEN_60
                & 68'(_vslidedn_vd_reg0_12_T_2 - _GEN_60) < _GEN_62
                  ? _GEN_86[4'(_vslidedn_vd_reg0_12_T_2[3:0] - base_reg0[3:0])]
                  : first_slidedn_reg0 ? 8'h0 : old_vd_reg0[103:96])
             : ma_reg0 ? 8'hFF : old_vd_reg0[103:96],
           vmask_byte_strb_reg0_11
             ? (_vslidedn_vd_reg0_11_T_2 >= _GEN_60
                & 68'(_vslidedn_vd_reg0_11_T_2 - _GEN_60) < _GEN_62
                  ? _GEN_86[4'(_vslidedn_vd_reg0_11_T_2[3:0] - base_reg0[3:0])]
                  : first_slidedn_reg0 ? 8'h0 : old_vd_reg0[95:88])
             : ma_reg0 ? 8'hFF : old_vd_reg0[95:88],
           vmask_byte_strb_reg0_10
             ? (_vslidedn_vd_reg0_10_T_2 >= _GEN_60
                & 68'(_vslidedn_vd_reg0_10_T_2 - _GEN_60) < _GEN_62
                  ? _GEN_86[4'(_vslidedn_vd_reg0_10_T_2[3:0] - base_reg0[3:0])]
                  : first_slidedn_reg0 ? 8'h0 : old_vd_reg0[87:80])
             : ma_reg0 ? 8'hFF : old_vd_reg0[87:80],
           vmask_byte_strb_reg0_9
             ? (_vslidedn_vd_reg0_9_T_2 >= _GEN_60
                & 68'(_vslidedn_vd_reg0_9_T_2 - _GEN_60) < _GEN_62
                  ? _GEN_86[4'(_vslidedn_vd_reg0_9_T_2[3:0] - base_reg0[3:0])]
                  : first_slidedn_reg0 ? 8'h0 : old_vd_reg0[79:72])
             : ma_reg0 ? 8'hFF : old_vd_reg0[79:72],
           vmask_byte_strb_reg0_8
             ? (_vslidedn_vd_reg0_8_T_2 >= _GEN_60
                & 68'(_vslidedn_vd_reg0_8_T_2 - _GEN_60) < _GEN_62
                  ? _GEN_86[4'(_vslidedn_vd_reg0_8_T_2[3:0] - base_reg0[3:0])]
                  : first_slidedn_reg0 ? 8'h0 : old_vd_reg0[71:64])
             : ma_reg0 ? 8'hFF : old_vd_reg0[71:64],
           vmask_byte_strb_reg0_7
             ? (_vslidedn_vd_reg0_7_T_2 >= _GEN_60
                & 68'(_vslidedn_vd_reg0_7_T_2 - _GEN_60) < _GEN_62
                  ? _GEN_86[4'(_vslidedn_vd_reg0_7_T_2[3:0] - base_reg0[3:0])]
                  : first_slidedn_reg0 ? 8'h0 : old_vd_reg0[63:56])
             : ma_reg0 ? 8'hFF : old_vd_reg0[63:56],
           vmask_byte_strb_reg0_6
             ? (_vslidedn_vd_reg0_6_T_2 >= _GEN_60
                & 68'(_vslidedn_vd_reg0_6_T_2 - _GEN_60) < _GEN_62
                  ? _GEN_86[4'(_vslidedn_vd_reg0_6_T_2[3:0] - base_reg0[3:0])]
                  : first_slidedn_reg0 ? 8'h0 : old_vd_reg0[55:48])
             : ma_reg0 ? 8'hFF : old_vd_reg0[55:48],
           vmask_byte_strb_reg0_5
             ? (_vslidedn_vd_reg0_5_T_2 >= _GEN_60
                & 68'(_vslidedn_vd_reg0_5_T_2 - _GEN_60) < _GEN_62
                  ? _GEN_86[4'(_vslidedn_vd_reg0_5_T_2[3:0] - base_reg0[3:0])]
                  : first_slidedn_reg0 ? 8'h0 : old_vd_reg0[47:40])
             : ma_reg0 ? 8'hFF : old_vd_reg0[47:40],
           vmask_byte_strb_reg0_4
             ? (_vslidedn_vd_reg0_4_T_2 >= _GEN_60
                & 68'(_vslidedn_vd_reg0_4_T_2 - _GEN_60) < _GEN_62
                  ? _GEN_86[4'(_vslidedn_vd_reg0_4_T_2[3:0] - base_reg0[3:0])]
                  : first_slidedn_reg0 ? 8'h0 : old_vd_reg0[39:32])
             : ma_reg0 ? 8'hFF : old_vd_reg0[39:32],
           vmask_byte_strb_reg0_3
             ? (_vslidedn_vd_reg0_3_T_2 >= _GEN_60
                & 68'(_vslidedn_vd_reg0_3_T_2 - _GEN_60) < _GEN_62
                  ? _GEN_86[4'(_vslidedn_vd_reg0_3_T_2[3:0] - base_reg0[3:0])]
                  : first_slidedn_reg0 ? 8'h0 : old_vd_reg0[31:24])
             : ma_reg0 ? 8'hFF : old_vd_reg0[31:24],
           vmask_byte_strb_reg0_2
             ? (_vslidedn_vd_reg0_2_T_2 >= _GEN_60
                & 68'(_vslidedn_vd_reg0_2_T_2 - _GEN_60) < _GEN_62
                  ? _GEN_86[4'(_vslidedn_vd_reg0_2_T_2[3:0] - base_reg0[3:0])]
                  : first_slidedn_reg0 ? 8'h0 : old_vd_reg0[23:16])
             : ma_reg0 ? 8'hFF : old_vd_reg0[23:16],
           vmask_byte_strb_reg0_1
             ? (_vslidedn_vd_reg0_1_T_2 >= _GEN_60
                & 68'(_vslidedn_vd_reg0_1_T_2 - _GEN_60) < _GEN_62
                  ? _GEN_86[4'(_vslidedn_vd_reg0_1_T_2[3:0] - base_reg0[3:0])]
                  : first_slidedn_reg0 ? 8'h0 : old_vd_reg0[15:8])
             : ma_reg0 ? 8'hFF : old_vd_reg0[15:8],
           vmask_byte_strb_reg0_0
             ? (_GEN_61 >= _GEN_60 & 68'(_GEN_61 - _GEN_60) < _GEN_62
                  ? _GEN_86[4'(slide_bytes_reg0[3:0] - base_reg0[3:0])]
                  : first_slidedn_reg0 ? 8'h0 : old_vd_reg0[7:0])
             : ma_reg0 ? 8'hFF : old_vd_reg0[7:0]};
      else if (is_vslide1dn_reg0 & fire_reg0_last_r)
        vd_reg <=
          {_vslide1dn_vd_reg0_T_1
             ? vslide1dn_vd_rs1_reg0[127:120]
             : vslide1dn_vd_wo_rs1_reg0_15,
           _vslide1dn_vd_reg0_T_1
             ? vslide1dn_vd_rs1_reg0[119:112]
             : vslide1dn_vd_wo_rs1_reg0_14,
           _vslide1dn_vd_reg0_T_1
             ? vslide1dn_vd_rs1_reg0[111:104]
             : vslide1dn_vd_wo_rs1_reg0_13,
           _vslide1dn_vd_reg0_T_1
             ? vslide1dn_vd_rs1_reg0[103:96]
             : vslide1dn_vd_wo_rs1_reg0_12,
           _vslide1dn_vd_reg0_T_1
             ? vslide1dn_vd_rs1_reg0[95:88]
             : vslide1dn_vd_wo_rs1_reg0_11,
           _vslide1dn_vd_reg0_T_1
             ? vslide1dn_vd_rs1_reg0[87:80]
             : vslide1dn_vd_wo_rs1_reg0_10,
           _vslide1dn_vd_reg0_T_1
             ? vslide1dn_vd_rs1_reg0[79:72]
             : vslide1dn_vd_wo_rs1_reg0_9,
           _vslide1dn_vd_reg0_T_1
             ? vslide1dn_vd_rs1_reg0[71:64]
             : vslide1dn_vd_wo_rs1_reg0_8,
           _vslide1dn_vd_reg0_T_1
             ? vslide1dn_vd_rs1_reg0[63:56]
             : vslide1dn_vd_wo_rs1_reg0_7,
           _vslide1dn_vd_reg0_T_1
             ? vslide1dn_vd_rs1_reg0[55:48]
             : vslide1dn_vd_wo_rs1_reg0_6,
           _vslide1dn_vd_reg0_T_1
             ? vslide1dn_vd_rs1_reg0[47:40]
             : vslide1dn_vd_wo_rs1_reg0_5,
           _vslide1dn_vd_reg0_T_1
             ? vslide1dn_vd_rs1_reg0[39:32]
             : vslide1dn_vd_wo_rs1_reg0_4,
           _vslide1dn_vd_reg0_T_1
             ? vslide1dn_vd_rs1_reg0[31:24]
             : vslide1dn_vd_wo_rs1_reg0_3,
           _vslide1dn_vd_reg0_T_1
             ? vslide1dn_vd_rs1_reg0[23:16]
             : vslide1dn_vd_wo_rs1_reg0_2,
           _vslide1dn_vd_reg0_T_1
             ? vslide1dn_vd_rs1_reg0[15:8]
             : vslide1dn_vd_wo_rs1_reg0_1,
           _vslide1dn_vd_reg0_T_1
             ? vslide1dn_vd_rs1_reg0[7:0]
             : vslide1dn_vd_wo_rs1_reg0_0};
      else if (_GEN_64 & ~is_vrgather16_sew8_reg0 & fire_reg0_last_r)
        vd_reg <=
          {vrgather_vd_reg0_15,
           vrgather_vd_reg0_14,
           vrgather_vd_reg0_13,
           vrgather_vd_reg0_12,
           vrgather_vd_reg0_11,
           vrgather_vd_reg0_10,
           vrgather_vd_reg0_9,
           vrgather_vd_reg0_8,
           vrgather_vd_reg0_7,
           vrgather_vd_reg0_6,
           vrgather_vd_reg0_5,
           vrgather_vd_reg0_4,
           vrgather_vd_reg0_3,
           vrgather_vd_reg0_2,
           vrgather_vd_reg0_1,
           vrgather_vd_reg0_0};
      else if (is_vrgather16_sew8_reg0 & fire_reg0_last_r)
        vd_reg <=
          uopIdx_reg0[0]
            ? {vrgather_vd_reg0_15,
               vrgather_vd_reg0_14,
               vrgather_vd_reg0_13,
               vrgather_vd_reg0_12,
               vrgather_vd_reg0_11,
               vrgather_vd_reg0_10,
               vrgather_vd_reg0_9,
               vrgather_vd_reg0_8,
               old_vd_reg0[63:0]}
            : {old_vd_reg0[127:64],
               vrgather_vd_reg0_7,
               vrgather_vd_reg0_6,
               vrgather_vd_reg0_5,
               vrgather_vd_reg0_4,
               vrgather_vd_reg0_3,
               vrgather_vd_reg0_2,
               vrgather_vd_reg0_1,
               vrgather_vd_reg0_0};
    end
  end // always @(posedge, posedge)
  wire [4:0]        base_ele =
    _GEN_3 ? _GEN_4 : _GEN_5 ? _GEN_6 : (&io_in_bits_info_vlmul) ? _GEN_7 : ele_cnt;
  wire [7:0]        _GEN_88 = {3'h0, base_ele};
  wire [7:0]        in_previous_ones_sum =
    _load_rs1_T_3 | _in_previous_ones_sum_T_1 ? 8'h0 : io_in_bits_vs1[127:120];
  wire [4:0]        _out_previous_ones_sum_T = 5'(_GEN_8[io_in_bits_info_vlmul] - 5'h1);
  wire [2:0]        _vs2Id_T_3 =
    vrgather & ~vrgather16_sew8 | vrgather_vx
      ? {1'h0,
         {1'h0, _load_rs1_T_5 & io_in_bits_info_uopIdx[0]}
           | (_load_rs1_T_9 ? io_in_bits_info_uopIdx[1:0] : 2'h0)}
        | (_vrgatherVs2Id_T_5 ? io_in_bits_info_uopIdx[2:0] : 3'h0)
      : 3'h0;
  wire [2:0]        vs2Id =
    {_vs2Id_T_3[2],
     _vs2Id_T_3[1:0]
       | (vrgather16_sew8
            ? {1'h0, _load_rs1_T_5 & io_in_bits_info_uopIdx[1]}
              | (_load_rs1_T_9 ? io_in_bits_info_uopIdx[2:1] : 2'h0)
            : 2'h0)} | (vslideup ? _vslideupOffset_outOffsetVs2 : 3'h0)
    | (vslidedn ? _vslidednOffset_outOffsetVs2 : 3'h0);
  wire              _vs2_bytes_max_T = vs2Id == 3'h0;
  wire              _vs2_bytes_max_T_1 = vs2Id == 3'h1;
  wire              _vs2_bytes_max_T_2 = vs2Id == 3'h2;
  wire              _vs2_bytes_max_T_3 = vs2Id == 3'h3;
  wire              _vs2_bytes_max_T_4 = vs2Id == 3'h4;
  wire              _vs2_bytes_max_T_5 = vs2Id == 3'h5;
  wire              _vs2_bytes_max_T_6 = vs2Id == 3'h6;
  wire [5:0]        _GEN_89 = {_vs2_bytes_max_T_2, _vs2_bytes_max_T_1, 4'h0};
  wire              _GEN_90 = io_in_bits_srcType_0[1:0] == 2'h0;
  wire              _GEN_91 = _GEN_90 & ~(io_in_bits_info_uopIdx[0]);
  wire              _GEN_92 = _GEN_90 & io_in_bits_info_uopIdx[0];
  wire [15:0][4:0]  _GEN_93 =
    {{_GEN_8[io_in_bits_info_vlmul][4]
        ? 5'({1'h0,
              4'({1'h0,
                  3'({1'h0, 2'({1'h0, io_in_bits_vs1[0]} + {1'h0, io_in_bits_vs1[1]})}
                     + {1'h0, 2'({1'h0, io_in_bits_vs1[2]} + {1'h0, io_in_bits_vs1[3]})})}
                 + {1'h0,
                    3'({1'h0, 2'({1'h0, io_in_bits_vs1[4]} + {1'h0, io_in_bits_vs1[5]})}
                       + {1'h0,
                          2'({1'h0, io_in_bits_vs1[6]} + {1'h0, io_in_bits_vs1[7]})})})}
             + {1'h0,
                4'({1'h0,
                    3'({1'h0, 2'({1'h0, io_in_bits_vs1[8]} + {1'h0, io_in_bits_vs1[9]})}
                       + {1'h0,
                          2'({1'h0, io_in_bits_vs1[10]} + {1'h0, io_in_bits_vs1[11]})})}
                   + {1'h0,
                      3'({1'h0,
                          2'({1'h0, io_in_bits_vs1[12]} + {1'h0, io_in_bits_vs1[13]})}
                         + {1'h0,
                            2'({1'h0, io_in_bits_vs1[14]}
                               + {1'h0, io_in_bits_vs1[15]})})})})
        : 5'h0},
     {current_uop_ones_sum_14},
     {current_uop_ones_sum_13},
     {current_uop_ones_sum_12},
     {current_uop_ones_sum_11},
     {current_uop_ones_sum_10},
     {current_uop_ones_sum_9},
     {current_uop_ones_sum_8},
     {current_uop_ones_sum_7},
     {current_uop_ones_sum_6},
     {current_uop_ones_sum_5},
     {current_uop_ones_sum_4},
     {current_uop_ones_sum_3},
     {current_uop_ones_sum_2},
     {current_uop_ones_sum_1},
     {current_uop_ones_sum_0}};
  wire [3:0][15:0]  _GEN_94 =
    {{io_in_bits_vs1[111:96]},
     {io_in_bits_vs1[79:64]},
     {io_in_bits_vs1[47:32]},
     {io_in_bits_vs1[15:0]}};
  wire [3:0][66:0]  _GEN_95 =
    {{{48'h0, _GEN_94[vdId[1:0]], 3'h0}},
     {{49'h0, vdId[0] ? io_in_bits_vs1[79:64] : io_in_bits_vs1[15:0], 2'h0}},
     {{50'h0, io_in_bits_vs1[15:0], 1'h0}},
     {67'h0}};
  wire [3:0][66:0]  _GEN_96 =
    {{{io_in_bits_vs1[63:0], 3'h0}},
     {{33'h0, io_in_bits_vs1[31:0], 2'h0}},
     {_GEN_91 ? {51'h0, io_in_bits_vs1[15:0]} : _GEN_95[io_in_bits_srcType_0[1:0]]},
     {{59'h0, io_in_bits_vs1[7:0]}}};
  wire [3:0][66:0]  _GEN_97 =
    {{{io_in_bits_vs1[63:0], 3'h0}},
     {{1'h0, io_in_bits_vs1[63:0], 2'h0}},
     {{2'h0, io_in_bits_vs1[63:0], 1'h0}},
     {{3'h0, io_in_bits_vs1[63:0]}}};
  wire [3:0][18:0]  _GEN_98 =
    {{19'({io_in_bits_vs1[111:96], 3'h0} + 19'h1)},
     {19'({io_in_bits_vs1[79:64], 3'h0} + 19'h1)},
     {19'({io_in_bits_vs1[47:32], 3'h0} + 19'h1)},
     {19'({io_in_bits_vs1[15:0], 3'h0} + 19'h1)}};
  wire [3:0][66:0]  _GEN_99 =
    {{{48'h0, _GEN_98[vdId[1:0]]}},
     {{49'h0,
       vdId[0]
         ? 18'({io_in_bits_vs1[79:64], 2'h0} + 18'h1)
         : 18'({io_in_bits_vs1[15:0], 2'h0} + 18'h1)}},
     {{50'h0, 17'({io_in_bits_vs1[15:0], 1'h0} + 17'h1)}},
     {67'h0}};
  wire [3:0][66:0]  _GEN_100 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h1)},
     {{33'h0, 34'({io_in_bits_vs1[31:0], 2'h0} + 34'h1)}},
     {_GEN_91 ? {51'h0, io_in_bits_vs1[31:16]} : _GEN_99[io_in_bits_srcType_0[1:0]]},
     {{59'h0, io_in_bits_vs1[15:8]}}};
  wire [3:0][66:0]  _GEN_101 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h1)},
     {{1'h0, 66'({io_in_bits_vs1[63:0], 2'h0} + 66'h1)}},
     {{2'h0, 65'({io_in_bits_vs1[63:0], 1'h0} + 65'h1)}},
     {{3'h0, io_in_bits_vs1[63:0]}}};
  wire [3:0][18:0]  _GEN_102 =
    {{19'({io_in_bits_vs1[111:96], 3'h0} + 19'h2)},
     {19'({io_in_bits_vs1[79:64], 3'h0} + 19'h2)},
     {19'({io_in_bits_vs1[47:32], 3'h0} + 19'h2)},
     {19'({io_in_bits_vs1[15:0], 3'h0} + 19'h2)}};
  wire [3:0][66:0]  _GEN_103 =
    {{{48'h0, _GEN_102[vdId[1:0]]}},
     {{49'h0,
       vdId[0]
         ? 18'({io_in_bits_vs1[79:64], 2'h0} + 18'h2)
         : 18'({io_in_bits_vs1[15:0], 2'h0} + 18'h2)}},
     {{50'h0, io_in_bits_vs1[31:16], 1'h0}},
     {67'h0}};
  wire [3:0][66:0]  _GEN_104 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h2)},
     {{33'h0, 34'({io_in_bits_vs1[31:0], 2'h0} + 34'h2)}},
     {_GEN_91 ? {51'h0, io_in_bits_vs1[47:32]} : _GEN_103[io_in_bits_srcType_0[1:0]]},
     {{59'h0, io_in_bits_vs1[23:16]}}};
  wire [3:0][66:0]  _GEN_105 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h2)},
     {{1'h0, 66'({io_in_bits_vs1[63:0], 2'h0} + 66'h2)}},
     {{2'h0, io_in_bits_vs1[63:0], 1'h0}},
     {{3'h0, io_in_bits_vs1[63:0]}}};
  wire [3:0][18:0]  _GEN_106 =
    {{19'({io_in_bits_vs1[111:96], 3'h0} + 19'h3)},
     {19'({io_in_bits_vs1[79:64], 3'h0} + 19'h3)},
     {19'({io_in_bits_vs1[47:32], 3'h0} + 19'h3)},
     {19'({io_in_bits_vs1[15:0], 3'h0} + 19'h3)}};
  wire [3:0][66:0]  _GEN_107 =
    {{{48'h0, _GEN_106[vdId[1:0]]}},
     {{49'h0,
       vdId[0]
         ? 18'({io_in_bits_vs1[79:64], 2'h0} + 18'h3)
         : 18'({io_in_bits_vs1[15:0], 2'h0} + 18'h3)}},
     {{50'h0, 17'({io_in_bits_vs1[31:16], 1'h0} + 17'h1)}},
     {67'h0}};
  wire [3:0][66:0]  _GEN_108 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h3)},
     {{33'h0, 34'({io_in_bits_vs1[31:0], 2'h0} + 34'h3)}},
     {_GEN_91 ? {51'h0, io_in_bits_vs1[63:48]} : _GEN_107[io_in_bits_srcType_0[1:0]]},
     {{59'h0, io_in_bits_vs1[31:24]}}};
  wire [3:0][66:0]  _GEN_109 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h3)},
     {{1'h0, 66'({io_in_bits_vs1[63:0], 2'h0} + 66'h3)}},
     {{2'h0, 65'({io_in_bits_vs1[63:0], 1'h0} + 65'h1)}},
     {{3'h0, io_in_bits_vs1[63:0]}}};
  wire [3:0][18:0]  _GEN_110 =
    {{19'({io_in_bits_vs1[111:96], 3'h0} + 19'h4)},
     {19'({io_in_bits_vs1[79:64], 3'h0} + 19'h4)},
     {19'({io_in_bits_vs1[47:32], 3'h0} + 19'h4)},
     {19'({io_in_bits_vs1[15:0], 3'h0} + 19'h4)}};
  wire [3:0][66:0]  _GEN_111 =
    {{{48'h0, _GEN_110[vdId[1:0]]}},
     {{49'h0, vdId[0] ? io_in_bits_vs1[95:80] : io_in_bits_vs1[31:16], 2'h0}},
     {{50'h0, io_in_bits_vs1[47:32], 1'h0}},
     {67'h0}};
  wire [3:0][66:0]  _GEN_112 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h4)},
     {{33'h0, io_in_bits_vs1[63:32], 2'h0}},
     {_GEN_91 ? {51'h0, io_in_bits_vs1[79:64]} : _GEN_111[io_in_bits_srcType_0[1:0]]},
     {{59'h0, io_in_bits_vs1[39:32]}}};
  wire [3:0][66:0]  _GEN_113 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h4)},
     {{1'h0, io_in_bits_vs1[63:0], 2'h0}},
     {{2'h0, io_in_bits_vs1[63:0], 1'h0}},
     {{3'h0, io_in_bits_vs1[63:0]}}};
  wire [3:0][18:0]  _GEN_114 =
    {{19'({io_in_bits_vs1[111:96], 3'h0} + 19'h5)},
     {19'({io_in_bits_vs1[79:64], 3'h0} + 19'h5)},
     {19'({io_in_bits_vs1[47:32], 3'h0} + 19'h5)},
     {19'({io_in_bits_vs1[15:0], 3'h0} + 19'h5)}};
  wire [3:0][66:0]  _GEN_115 =
    {{{48'h0, _GEN_114[vdId[1:0]]}},
     {{49'h0,
       vdId[0]
         ? 18'({io_in_bits_vs1[95:80], 2'h0} + 18'h1)
         : 18'({io_in_bits_vs1[31:16], 2'h0} + 18'h1)}},
     {{50'h0, 17'({io_in_bits_vs1[47:32], 1'h0} + 17'h1)}},
     {67'h0}};
  wire [3:0][66:0]  _GEN_116 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h5)},
     {{33'h0, 34'({io_in_bits_vs1[63:32], 2'h0} + 34'h1)}},
     {_GEN_91 ? {51'h0, io_in_bits_vs1[95:80]} : _GEN_115[io_in_bits_srcType_0[1:0]]},
     {{59'h0, io_in_bits_vs1[47:40]}}};
  wire [3:0][66:0]  _GEN_117 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h5)},
     {{1'h0, 66'({io_in_bits_vs1[63:0], 2'h0} + 66'h1)}},
     {{2'h0, 65'({io_in_bits_vs1[63:0], 1'h0} + 65'h1)}},
     {{3'h0, io_in_bits_vs1[63:0]}}};
  wire [3:0][18:0]  _GEN_118 =
    {{19'({io_in_bits_vs1[111:96], 3'h0} + 19'h6)},
     {19'({io_in_bits_vs1[79:64], 3'h0} + 19'h6)},
     {19'({io_in_bits_vs1[47:32], 3'h0} + 19'h6)},
     {19'({io_in_bits_vs1[15:0], 3'h0} + 19'h6)}};
  wire [3:0][66:0]  _GEN_119 =
    {{{48'h0, _GEN_118[vdId[1:0]]}},
     {{49'h0,
       vdId[0]
         ? 18'({io_in_bits_vs1[95:80], 2'h0} + 18'h2)
         : 18'({io_in_bits_vs1[31:16], 2'h0} + 18'h2)}},
     {{50'h0, io_in_bits_vs1[63:48], 1'h0}},
     {67'h0}};
  wire [3:0][66:0]  _GEN_120 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h6)},
     {{33'h0, 34'({io_in_bits_vs1[63:32], 2'h0} + 34'h2)}},
     {_GEN_91 ? {51'h0, io_in_bits_vs1[111:96]} : _GEN_119[io_in_bits_srcType_0[1:0]]},
     {{59'h0, io_in_bits_vs1[55:48]}}};
  wire [3:0][66:0]  _GEN_121 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h6)},
     {{1'h0, 66'({io_in_bits_vs1[63:0], 2'h0} + 66'h2)}},
     {{2'h0, io_in_bits_vs1[63:0], 1'h0}},
     {{3'h0, io_in_bits_vs1[63:0]}}};
  wire [3:0][18:0]  _GEN_122 =
    {{19'({io_in_bits_vs1[111:96], 3'h0} + 19'h7)},
     {19'({io_in_bits_vs1[79:64], 3'h0} + 19'h7)},
     {19'({io_in_bits_vs1[47:32], 3'h0} + 19'h7)},
     {19'({io_in_bits_vs1[15:0], 3'h0} + 19'h7)}};
  wire [3:0][66:0]  _GEN_123 =
    {{{48'h0, _GEN_122[vdId[1:0]]}},
     {{49'h0,
       vdId[0]
         ? 18'({io_in_bits_vs1[95:80], 2'h0} + 18'h3)
         : 18'({io_in_bits_vs1[31:16], 2'h0} + 18'h3)}},
     {{50'h0, 17'({io_in_bits_vs1[63:48], 1'h0} + 17'h1)}},
     {67'h0}};
  wire [3:0][66:0]  _GEN_124 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h7)},
     {{33'h0, 34'({io_in_bits_vs1[63:32], 2'h0} + 34'h3)}},
     {_GEN_91 ? {51'h0, io_in_bits_vs1[127:112]} : _GEN_123[io_in_bits_srcType_0[1:0]]},
     {{59'h0, io_in_bits_vs1[63:56]}}};
  wire [3:0][66:0]  _GEN_125 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h7)},
     {{1'h0, 66'({io_in_bits_vs1[63:0], 2'h0} + 66'h3)}},
     {{2'h0, 65'({io_in_bits_vs1[63:0], 1'h0} + 65'h1)}},
     {{3'h0, io_in_bits_vs1[63:0]}}};
  wire [3:0][15:0]  _GEN_126 =
    {{io_in_bits_vs1[127:112]},
     {io_in_bits_vs1[95:80]},
     {io_in_bits_vs1[63:48]},
     {io_in_bits_vs1[31:16]}};
  wire [3:0][66:0]  _GEN_127 =
    {{{48'h0, _GEN_126[vdId[1:0]], 3'h0}},
     {{49'h0, vdId[0] ? io_in_bits_vs1[111:96] : io_in_bits_vs1[47:32], 2'h0}},
     {{50'h0, io_in_bits_vs1[79:64], 1'h0}},
     {67'h0}};
  wire [3:0][66:0]  _GEN_128 =
    {{{io_in_bits_vs1[127:64], 3'h0}},
     {{33'h0, io_in_bits_vs1[95:64], 2'h0}},
     {_GEN_92 ? {51'h0, io_in_bits_vs1[15:0]} : _GEN_127[io_in_bits_srcType_0[1:0]]},
     {{59'h0, io_in_bits_vs1[71:64]}}};
  wire [3:0][66:0]  _GEN_129 =
    {{{io_in_bits_vs1[63:0], 3'h0}},
     {{1'h0, io_in_bits_vs1[63:0], 2'h0}},
     {{2'h0, io_in_bits_vs1[63:0], 1'h0}},
     {{3'h0, io_in_bits_vs1[63:0]}}};
  wire [3:0][18:0]  _GEN_130 =
    {{19'({io_in_bits_vs1[127:112], 3'h0} + 19'h1)},
     {19'({io_in_bits_vs1[95:80], 3'h0} + 19'h1)},
     {19'({io_in_bits_vs1[63:48], 3'h0} + 19'h1)},
     {19'({io_in_bits_vs1[31:16], 3'h0} + 19'h1)}};
  wire [3:0][66:0]  _GEN_131 =
    {{{48'h0, _GEN_130[vdId[1:0]]}},
     {{49'h0,
       vdId[0]
         ? 18'({io_in_bits_vs1[111:96], 2'h0} + 18'h1)
         : 18'({io_in_bits_vs1[47:32], 2'h0} + 18'h1)}},
     {{50'h0, 17'({io_in_bits_vs1[79:64], 1'h0} + 17'h1)}},
     {67'h0}};
  wire [3:0][66:0]  _GEN_132 =
    {{67'({io_in_bits_vs1[127:64], 3'h0} + 67'h1)},
     {{33'h0, 34'({io_in_bits_vs1[95:64], 2'h0} + 34'h1)}},
     {_GEN_92 ? {51'h0, io_in_bits_vs1[31:16]} : _GEN_131[io_in_bits_srcType_0[1:0]]},
     {{59'h0, io_in_bits_vs1[79:72]}}};
  wire [3:0][66:0]  _GEN_133 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h1)},
     {{1'h0, 66'({io_in_bits_vs1[63:0], 2'h0} + 66'h1)}},
     {{2'h0, 65'({io_in_bits_vs1[63:0], 1'h0} + 65'h1)}},
     {{3'h0, io_in_bits_vs1[63:0]}}};
  wire [3:0][18:0]  _GEN_134 =
    {{19'({io_in_bits_vs1[127:112], 3'h0} + 19'h2)},
     {19'({io_in_bits_vs1[95:80], 3'h0} + 19'h2)},
     {19'({io_in_bits_vs1[63:48], 3'h0} + 19'h2)},
     {19'({io_in_bits_vs1[31:16], 3'h0} + 19'h2)}};
  wire [3:0][66:0]  _GEN_135 =
    {{{48'h0, _GEN_134[vdId[1:0]]}},
     {{49'h0,
       vdId[0]
         ? 18'({io_in_bits_vs1[111:96], 2'h0} + 18'h2)
         : 18'({io_in_bits_vs1[47:32], 2'h0} + 18'h2)}},
     {{50'h0, io_in_bits_vs1[95:80], 1'h0}},
     {67'h0}};
  wire [3:0][66:0]  _GEN_136 =
    {{67'({io_in_bits_vs1[127:64], 3'h0} + 67'h2)},
     {{33'h0, 34'({io_in_bits_vs1[95:64], 2'h0} + 34'h2)}},
     {_GEN_92 ? {51'h0, io_in_bits_vs1[47:32]} : _GEN_135[io_in_bits_srcType_0[1:0]]},
     {{59'h0, io_in_bits_vs1[87:80]}}};
  wire [3:0][66:0]  _GEN_137 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h2)},
     {{1'h0, 66'({io_in_bits_vs1[63:0], 2'h0} + 66'h2)}},
     {{2'h0, io_in_bits_vs1[63:0], 1'h0}},
     {{3'h0, io_in_bits_vs1[63:0]}}};
  wire [3:0][18:0]  _GEN_138 =
    {{19'({io_in_bits_vs1[127:112], 3'h0} + 19'h3)},
     {19'({io_in_bits_vs1[95:80], 3'h0} + 19'h3)},
     {19'({io_in_bits_vs1[63:48], 3'h0} + 19'h3)},
     {19'({io_in_bits_vs1[31:16], 3'h0} + 19'h3)}};
  wire [3:0][66:0]  _GEN_139 =
    {{{48'h0, _GEN_138[vdId[1:0]]}},
     {{49'h0,
       vdId[0]
         ? 18'({io_in_bits_vs1[111:96], 2'h0} + 18'h3)
         : 18'({io_in_bits_vs1[47:32], 2'h0} + 18'h3)}},
     {{50'h0, 17'({io_in_bits_vs1[95:80], 1'h0} + 17'h1)}},
     {67'h0}};
  wire [3:0][66:0]  _GEN_140 =
    {{67'({io_in_bits_vs1[127:64], 3'h0} + 67'h3)},
     {{33'h0, 34'({io_in_bits_vs1[95:64], 2'h0} + 34'h3)}},
     {_GEN_92 ? {51'h0, io_in_bits_vs1[63:48]} : _GEN_139[io_in_bits_srcType_0[1:0]]},
     {{59'h0, io_in_bits_vs1[95:88]}}};
  wire [3:0][66:0]  _GEN_141 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h3)},
     {{1'h0, 66'({io_in_bits_vs1[63:0], 2'h0} + 66'h3)}},
     {{2'h0, 65'({io_in_bits_vs1[63:0], 1'h0} + 65'h1)}},
     {{3'h0, io_in_bits_vs1[63:0]}}};
  wire [3:0][18:0]  _GEN_142 =
    {{19'({io_in_bits_vs1[127:112], 3'h0} + 19'h4)},
     {19'({io_in_bits_vs1[95:80], 3'h0} + 19'h4)},
     {19'({io_in_bits_vs1[63:48], 3'h0} + 19'h4)},
     {19'({io_in_bits_vs1[31:16], 3'h0} + 19'h4)}};
  wire [3:0][66:0]  _GEN_143 =
    {{{48'h0, _GEN_142[vdId[1:0]]}},
     {{49'h0, vdId[0] ? io_in_bits_vs1[127:112] : io_in_bits_vs1[63:48], 2'h0}},
     {{50'h0, io_in_bits_vs1[111:96], 1'h0}},
     {67'h0}};
  wire [3:0][66:0]  _GEN_144 =
    {{67'({io_in_bits_vs1[127:64], 3'h0} + 67'h4)},
     {{33'h0, io_in_bits_vs1[127:96], 2'h0}},
     {_GEN_92 ? {51'h0, io_in_bits_vs1[79:64]} : _GEN_143[io_in_bits_srcType_0[1:0]]},
     {{59'h0, io_in_bits_vs1[103:96]}}};
  wire [3:0][66:0]  _GEN_145 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h4)},
     {{1'h0, io_in_bits_vs1[63:0], 2'h0}},
     {{2'h0, io_in_bits_vs1[63:0], 1'h0}},
     {{3'h0, io_in_bits_vs1[63:0]}}};
  wire [3:0][18:0]  _GEN_146 =
    {{19'({io_in_bits_vs1[127:112], 3'h0} + 19'h5)},
     {19'({io_in_bits_vs1[95:80], 3'h0} + 19'h5)},
     {19'({io_in_bits_vs1[63:48], 3'h0} + 19'h5)},
     {19'({io_in_bits_vs1[31:16], 3'h0} + 19'h5)}};
  wire [3:0][66:0]  _GEN_147 =
    {{{48'h0, _GEN_146[vdId[1:0]]}},
     {{49'h0,
       vdId[0]
         ? 18'({io_in_bits_vs1[127:112], 2'h0} + 18'h1)
         : 18'({io_in_bits_vs1[63:48], 2'h0} + 18'h1)}},
     {{50'h0, 17'({io_in_bits_vs1[111:96], 1'h0} + 17'h1)}},
     {67'h0}};
  wire [3:0][66:0]  _GEN_148 =
    {{67'({io_in_bits_vs1[127:64], 3'h0} + 67'h5)},
     {{33'h0, 34'({io_in_bits_vs1[127:96], 2'h0} + 34'h1)}},
     {_GEN_92 ? {51'h0, io_in_bits_vs1[95:80]} : _GEN_147[io_in_bits_srcType_0[1:0]]},
     {{59'h0, io_in_bits_vs1[111:104]}}};
  wire [3:0][66:0]  _GEN_149 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h5)},
     {{1'h0, 66'({io_in_bits_vs1[63:0], 2'h0} + 66'h1)}},
     {{2'h0, 65'({io_in_bits_vs1[63:0], 1'h0} + 65'h1)}},
     {{3'h0, io_in_bits_vs1[63:0]}}};
  wire [3:0][18:0]  _GEN_150 =
    {{19'({io_in_bits_vs1[127:112], 3'h0} + 19'h6)},
     {19'({io_in_bits_vs1[95:80], 3'h0} + 19'h6)},
     {19'({io_in_bits_vs1[63:48], 3'h0} + 19'h6)},
     {19'({io_in_bits_vs1[31:16], 3'h0} + 19'h6)}};
  wire [3:0][66:0]  _GEN_151 =
    {{{48'h0, _GEN_150[vdId[1:0]]}},
     {{49'h0,
       vdId[0]
         ? 18'({io_in_bits_vs1[127:112], 2'h0} + 18'h2)
         : 18'({io_in_bits_vs1[63:48], 2'h0} + 18'h2)}},
     {{50'h0, io_in_bits_vs1[127:112], 1'h0}},
     {67'h0}};
  wire [3:0][66:0]  _GEN_152 =
    {{67'({io_in_bits_vs1[127:64], 3'h0} + 67'h6)},
     {{33'h0, 34'({io_in_bits_vs1[127:96], 2'h0} + 34'h2)}},
     {_GEN_92 ? {51'h0, io_in_bits_vs1[111:96]} : _GEN_151[io_in_bits_srcType_0[1:0]]},
     {{59'h0, io_in_bits_vs1[119:112]}}};
  wire [3:0][66:0]  _GEN_153 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h6)},
     {{1'h0, 66'({io_in_bits_vs1[63:0], 2'h0} + 66'h2)}},
     {{2'h0, io_in_bits_vs1[63:0], 1'h0}},
     {{3'h0, io_in_bits_vs1[63:0]}}};
  wire [3:0][18:0]  _GEN_154 =
    {{19'({io_in_bits_vs1[127:112], 3'h0} + 19'h7)},
     {19'({io_in_bits_vs1[95:80], 3'h0} + 19'h7)},
     {19'({io_in_bits_vs1[63:48], 3'h0} + 19'h7)},
     {19'({io_in_bits_vs1[31:16], 3'h0} + 19'h7)}};
  wire [3:0][66:0]  _GEN_155 =
    {{{48'h0, _GEN_154[vdId[1:0]]}},
     {{49'h0,
       vdId[0]
         ? 18'({io_in_bits_vs1[127:112], 2'h0} + 18'h3)
         : 18'({io_in_bits_vs1[63:48], 2'h0} + 18'h3)}},
     {{50'h0, 17'({io_in_bits_vs1[127:112], 1'h0} + 17'h1)}},
     {67'h0}};
  wire [3:0][66:0]  _GEN_156 =
    {{67'({io_in_bits_vs1[127:64], 3'h0} + 67'h7)},
     {{33'h0, 34'({io_in_bits_vs1[127:96], 2'h0} + 34'h3)}},
     {_GEN_92 ? {51'h0, io_in_bits_vs1[127:112]} : _GEN_155[io_in_bits_srcType_0[1:0]]},
     {{59'h0, io_in_bits_vs1[127:120]}}};
  wire [3:0][66:0]  _GEN_157 =
    {{67'({io_in_bits_vs1[63:0], 3'h0} + 67'h7)},
     {{1'h0, 66'({io_in_bits_vs1[63:0], 2'h0} + 66'h3)}},
     {{2'h0, 65'({io_in_bits_vs1[63:0], 1'h0} + 65'h1)}},
     {{3'h0, io_in_bits_vs1[63:0]}}};
  wire              _GEN_158 = elements_reg0 > 5'h8;
  wire              _GEN_159 = elements_reg0 > 5'h9;
  wire              _GEN_160 = elements_reg0 > 5'hA;
  wire              _GEN_161 = elements_reg0 > 5'hB;
  wire              _GEN_162 = elements_reg0 > 5'hC;
  wire              _GEN_163 = elements_reg0 > 5'hD;
  wire              _GEN_164 = elements_reg0 > 5'hE;
  wire [7:0]        _GEN_165 = {3'h0, ele_cnt_reg0};
  wire [7:0]        _compressed_vs2_masked_reg0_8_T_5 =
    8'((_GEN_158 ? current_ones_sum_reg0_7 : 8'h0) - ones_sum_base_reg0);
  wire              _GEN_166 = _GEN_13 & _GEN_158;
  wire [7:0]        _compressed_vs2_masked_reg0_9_T_5 =
    8'((_GEN_159 ? current_ones_sum_reg0_8 : 8'h0) - ones_sum_base_reg0);
  wire              _GEN_167 = _GEN_13 & _GEN_159;
  wire [7:0]        _compressed_vs2_masked_reg0_10_T_5 =
    8'((_GEN_160 ? current_ones_sum_reg0_9 : 8'h0) - ones_sum_base_reg0);
  wire              _GEN_168 = _GEN_13 & _GEN_160;
  wire [7:0]        _compressed_vs2_masked_reg0_11_T_5 =
    8'((_GEN_161 ? current_ones_sum_reg0_10 : 8'h0) - ones_sum_base_reg0);
  wire              _GEN_169 = _GEN_13 & _GEN_161;
  wire [7:0]        _compressed_vs2_masked_reg0_12_T_5 =
    8'((_GEN_162 ? current_ones_sum_reg0_11 : 8'h0) - ones_sum_base_reg0);
  wire              _GEN_170 = _GEN_13 & _GEN_162;
  wire [7:0]        _compressed_vs2_masked_reg0_13_T_5 =
    8'((_GEN_163 ? current_ones_sum_reg0_12 : 8'h0) - ones_sum_base_reg0);
  wire              _GEN_171 = _GEN_13 & _GEN_163;
  wire [7:0]        _compressed_vs2_masked_reg0_14_T_5 =
    8'((_GEN_164 ? current_ones_sum_reg0_13 : 8'h0) - ones_sum_base_reg0);
  wire              _GEN_172 = _GEN_13 & _GEN_164;
  wire [7:0]        _compressed_vs2_masked_reg0_15_T_5 =
    8'((elements_reg0[4] ? current_ones_sum_reg0_14 : 8'h0) - ones_sum_base_reg0);
  wire              _GEN_173 = _GEN_13 & elements_reg0[4];
  wire [3:0][15:0]  _GEN_174 =
    {{{15'h0, vs1_reg0[1] & _compressed_vs2_masked_reg0_1_T_38 < _GEN_165}
        << _compressed_vs2_masked_reg0_1_T_38[3:0]},
     {{15'h0, vs1_reg0[1] & _compressed_vs2_masked_reg0_1_T_27 < _GEN_165}
        << _compressed_vs2_masked_reg0_1_T_27[3:0]},
     {{15'h0, vs1_reg0[1] & _compressed_vs2_masked_reg0_1_T_16 < _GEN_165}
        << _compressed_vs2_masked_reg0_1_T_16[3:0]},
     {{15'h0, vs1_reg0[1] & _compressed_vs2_masked_reg0_1_T_5 < _GEN_165}
        << _compressed_vs2_masked_reg0_1_T_5[3:0]}};
  wire [3:0][15:0]  _GEN_175 =
    {{{15'h0, vs1_reg0[0] & _compressed_vs2_masked_reg0_0_T_38 < _GEN_165}
        << _compressed_vs2_masked_reg0_0_T_38[3:0]},
     {{15'h0, vs1_reg0[0] & _compressed_vs2_masked_reg0_0_T_27 < _GEN_165}
        << _compressed_vs2_masked_reg0_0_T_27[3:0]},
     {{15'h0, vs1_reg0[0] & _compressed_vs2_masked_reg0_0_T_16 < _GEN_165}
        << _compressed_vs2_masked_reg0_0_T_16[3:0]},
     {{15'h0, vs1_reg0[0] & _compressed_vs2_masked_reg0_0_T_5 < _GEN_165}
        << _compressed_vs2_masked_reg0_0_T_5[3:0]}};
  wire [15:0]       select_compressed_vs2_reg0 =
    ((|elements_reg0) ? _GEN_175[vsew_reg0] : 16'h0)
    | ((|(elements_reg0[4:1])) ? _GEN_174[vsew_reg0] : 16'h0)
    | (_GEN_13
         ? (_GEN_9
              ? {15'h0, vs1_reg0[2] & _compressed_vs2_masked_reg0_2_T_5 < _GEN_165}
                << _compressed_vs2_masked_reg0_2_T_5[3:0]
              : 16'h0)
         : _GEN_14
             ? (_GEN_9
                  ? {15'h0, vs1_reg0[2] & _compressed_vs2_masked_reg0_2_T_16 < _GEN_165}
                    << _compressed_vs2_masked_reg0_2_T_16[3:0]
                  : 16'h0)
             : _GEN_20
                 ? {15'h0, vs1_reg0[2] & _compressed_vs2_masked_reg0_2_T_27 < _GEN_165}
                   << _compressed_vs2_masked_reg0_2_T_27[3:0]
                 : 16'h0)
    | (_GEN_13
         ? ((|(elements_reg0[4:2]))
              ? {15'h0, vs1_reg0[3] & _compressed_vs2_masked_reg0_3_T_5 < _GEN_165}
                << _compressed_vs2_masked_reg0_3_T_5[3:0]
              : 16'h0)
         : _GEN_14
             ? ((|(elements_reg0[4:2]))
                  ? {15'h0, vs1_reg0[3] & _compressed_vs2_masked_reg0_3_T_16 < _GEN_165}
                    << _compressed_vs2_masked_reg0_3_T_16[3:0]
                  : 16'h0)
             : _GEN_21
                 ? {15'h0, vs1_reg0[3] & _compressed_vs2_masked_reg0_3_T_27 < _GEN_165}
                   << _compressed_vs2_masked_reg0_3_T_27[3:0]
                 : 16'h0)
    | (_GEN_13
         ? (_GEN_10
              ? {15'h0, vs1_reg0[4] & _compressed_vs2_masked_reg0_4_T_5 < _GEN_165}
                << _compressed_vs2_masked_reg0_4_T_5[3:0]
              : 16'h0)
         : _GEN_15
             ? {15'h0, vs1_reg0[4] & _compressed_vs2_masked_reg0_4_T_16 < _GEN_165}
               << _compressed_vs2_masked_reg0_4_T_16[3:0]
             : 16'h0)
    | (_GEN_13
         ? (_GEN_11
              ? {15'h0, vs1_reg0[5] & _compressed_vs2_masked_reg0_5_T_5 < _GEN_165}
                << _compressed_vs2_masked_reg0_5_T_5[3:0]
              : 16'h0)
         : _GEN_16
             ? {15'h0, vs1_reg0[5] & _compressed_vs2_masked_reg0_5_T_16 < _GEN_165}
               << _compressed_vs2_masked_reg0_5_T_16[3:0]
             : 16'h0)
    | (_GEN_13
         ? (_GEN_12
              ? {15'h0, vs1_reg0[6] & _compressed_vs2_masked_reg0_6_T_5 < _GEN_165}
                << _compressed_vs2_masked_reg0_6_T_5[3:0]
              : 16'h0)
         : _GEN_17
             ? {15'h0, vs1_reg0[6] & _compressed_vs2_masked_reg0_6_T_16 < _GEN_165}
               << _compressed_vs2_masked_reg0_6_T_16[3:0]
             : 16'h0)
    | (_GEN_13
         ? ((|(elements_reg0[4:3]))
              ? {15'h0, vs1_reg0[7] & _compressed_vs2_masked_reg0_7_T_5 < _GEN_165}
                << _compressed_vs2_masked_reg0_7_T_5[3:0]
              : 16'h0)
         : _GEN_18
             ? {15'h0, vs1_reg0[7] & _compressed_vs2_masked_reg0_7_T_16 < _GEN_165}
               << _compressed_vs2_masked_reg0_7_T_16[3:0]
             : 16'h0)
    | (_GEN_166
         ? {15'h0, vs1_reg0[8] & _compressed_vs2_masked_reg0_8_T_5 < _GEN_165}
           << _compressed_vs2_masked_reg0_8_T_5[3:0]
         : 16'h0)
    | (_GEN_167
         ? {15'h0, vs1_reg0[9] & _compressed_vs2_masked_reg0_9_T_5 < _GEN_165}
           << _compressed_vs2_masked_reg0_9_T_5[3:0]
         : 16'h0)
    | (_GEN_168
         ? {15'h0, vs1_reg0[10] & _compressed_vs2_masked_reg0_10_T_5 < _GEN_165}
           << _compressed_vs2_masked_reg0_10_T_5[3:0]
         : 16'h0)
    | (_GEN_169
         ? {15'h0, vs1_reg0[11] & _compressed_vs2_masked_reg0_11_T_5 < _GEN_165}
           << _compressed_vs2_masked_reg0_11_T_5[3:0]
         : 16'h0)
    | (_GEN_170
         ? {15'h0, vs1_reg0[12] & _compressed_vs2_masked_reg0_12_T_5 < _GEN_165}
           << _compressed_vs2_masked_reg0_12_T_5[3:0]
         : 16'h0)
    | (_GEN_171
         ? {15'h0, vs1_reg0[13] & _compressed_vs2_masked_reg0_13_T_5 < _GEN_165}
           << _compressed_vs2_masked_reg0_13_T_5[3:0]
         : 16'h0)
    | (_GEN_172
         ? {15'h0, vs1_reg0[14] & _compressed_vs2_masked_reg0_14_T_5 < _GEN_165}
           << _compressed_vs2_masked_reg0_14_T_5[3:0]
         : 16'h0)
    | (_GEN_173
         ? {15'h0, vs1_reg0[15] & _compressed_vs2_masked_reg0_15_T_5 < _GEN_165}
           << _compressed_vs2_masked_reg0_15_T_5[3:0]
         : 16'h0);
  wire [3:0][127:0] _GEN_176 =
    {{{128{vs1_reg0[1] & _compressed_vs2_masked_reg0_1_T_38 < _GEN_165}}
        & compressed_vs2_reg0_1},
     {{128{vs1_reg0[1] & _compressed_vs2_masked_reg0_1_T_27 < _GEN_165}}
        & compressed_vs2_reg0_1},
     {{128{vs1_reg0[1] & _compressed_vs2_masked_reg0_1_T_16 < _GEN_165}}
        & compressed_vs2_reg0_1},
     {{128{vs1_reg0[1] & _compressed_vs2_masked_reg0_1_T_5 < _GEN_165}}
        & compressed_vs2_reg0_1}};
  wire [3:0][127:0] _GEN_177 =
    {{{128{vs1_reg0[0] & _compressed_vs2_masked_reg0_0_T_38 < _GEN_165}}
        & compressed_vs2_reg0_0},
     {{128{vs1_reg0[0] & _compressed_vs2_masked_reg0_0_T_27 < _GEN_165}}
        & compressed_vs2_reg0_0},
     {{128{vs1_reg0[0] & _compressed_vs2_masked_reg0_0_T_16 < _GEN_165}}
        & compressed_vs2_reg0_0},
     {{128{vs1_reg0[0] & _compressed_vs2_masked_reg0_0_T_5 < _GEN_165}}
        & compressed_vs2_reg0_0}};
  wire [134:0]      _compressed_vs2_reg0_15_T_5 =
    {127'h0, vs2_reg0[127:120]}
    << {128'h0, _compressed_vs2_masked_reg0_15_T_5[3:0], 3'h0};
  wire [134:0]      _compressed_vs2_reg0_14_T_5 =
    {127'h0, vs2_reg0[119:112]}
    << {128'h0, _compressed_vs2_masked_reg0_14_T_5[3:0], 3'h0};
  wire [134:0]      _compressed_vs2_reg0_13_T_5 =
    {127'h0, vs2_reg0[111:104]}
    << {128'h0, _compressed_vs2_masked_reg0_13_T_5[3:0], 3'h0};
  wire [134:0]      _compressed_vs2_reg0_12_T_5 =
    {127'h0, vs2_reg0[103:96]} << {128'h0, _compressed_vs2_masked_reg0_12_T_5[3:0], 3'h0};
  wire [134:0]      _compressed_vs2_reg0_11_T_5 =
    {127'h0, vs2_reg0[95:88]} << {128'h0, _compressed_vs2_masked_reg0_11_T_5[3:0], 3'h0};
  wire [134:0]      _compressed_vs2_reg0_10_T_5 =
    {127'h0, vs2_reg0[87:80]} << {128'h0, _compressed_vs2_masked_reg0_10_T_5[3:0], 3'h0};
  wire [134:0]      _compressed_vs2_reg0_9_T_5 =
    {127'h0, vs2_reg0[79:72]} << {128'h0, _compressed_vs2_masked_reg0_9_T_5[3:0], 3'h0};
  wire [134:0]      _compressed_vs2_reg0_8_T_5 =
    {127'h0, vs2_reg0[71:64]} << {128'h0, _compressed_vs2_masked_reg0_8_T_5[3:0], 3'h0};
  wire [127:0]      compressed_vs2_merged_reg0 =
    ((|elements_reg0) ? _GEN_177[vsew_reg0] : 128'h0)
    | ((|(elements_reg0[4:1])) ? _GEN_176[vsew_reg0] : 128'h0)
    | (_GEN_13
         ? (_GEN_9
              ? {128{vs1_reg0[2] & _compressed_vs2_masked_reg0_2_T_5 < _GEN_165}}
                & compressed_vs2_reg0_2
              : 128'h0)
         : _GEN_14
             ? (_GEN_9
                  ? {128{vs1_reg0[2] & _compressed_vs2_masked_reg0_2_T_16 < _GEN_165}}
                    & compressed_vs2_reg0_2
                  : 128'h0)
             : _GEN_20
                 ? {128{vs1_reg0[2] & _compressed_vs2_masked_reg0_2_T_27 < _GEN_165}}
                   & compressed_vs2_reg0_2
                 : 128'h0)
    | (_GEN_13
         ? ((|(elements_reg0[4:2]))
              ? {128{vs1_reg0[3] & _compressed_vs2_masked_reg0_3_T_5 < _GEN_165}}
                & compressed_vs2_reg0_3
              : 128'h0)
         : _GEN_14
             ? ((|(elements_reg0[4:2]))
                  ? {128{vs1_reg0[3] & _compressed_vs2_masked_reg0_3_T_16 < _GEN_165}}
                    & compressed_vs2_reg0_3
                  : 128'h0)
             : _GEN_21
                 ? {128{vs1_reg0[3] & _compressed_vs2_masked_reg0_3_T_27 < _GEN_165}}
                   & compressed_vs2_reg0_3
                 : 128'h0)
    | (_GEN_13
         ? (_GEN_10
              ? {128{vs1_reg0[4] & _compressed_vs2_masked_reg0_4_T_5 < _GEN_165}}
                & compressed_vs2_reg0_4
              : 128'h0)
         : _GEN_15
             ? {128{vs1_reg0[4] & _compressed_vs2_masked_reg0_4_T_16 < _GEN_165}}
               & compressed_vs2_reg0_4
             : 128'h0)
    | (_GEN_13
         ? (_GEN_11
              ? {128{vs1_reg0[5] & _compressed_vs2_masked_reg0_5_T_5 < _GEN_165}}
                & compressed_vs2_reg0_5
              : 128'h0)
         : _GEN_16
             ? {128{vs1_reg0[5] & _compressed_vs2_masked_reg0_5_T_16 < _GEN_165}}
               & compressed_vs2_reg0_5
             : 128'h0)
    | (_GEN_13
         ? (_GEN_12
              ? {128{vs1_reg0[6] & _compressed_vs2_masked_reg0_6_T_5 < _GEN_165}}
                & compressed_vs2_reg0_6
              : 128'h0)
         : _GEN_17
             ? {128{vs1_reg0[6] & _compressed_vs2_masked_reg0_6_T_16 < _GEN_165}}
               & compressed_vs2_reg0_6
             : 128'h0)
    | (_GEN_13
         ? ((|(elements_reg0[4:3]))
              ? {128{vs1_reg0[7] & _compressed_vs2_masked_reg0_7_T_5 < _GEN_165}}
                & compressed_vs2_reg0_7
              : 128'h0)
         : _GEN_18
             ? {128{vs1_reg0[7] & _compressed_vs2_masked_reg0_7_T_16 < _GEN_165}}
               & compressed_vs2_reg0_7
             : 128'h0)
    | (_GEN_166
         ? {128{vs1_reg0[8] & _compressed_vs2_masked_reg0_8_T_5 < _GEN_165}}
           & (_GEN_166 ? _compressed_vs2_reg0_8_T_5[127:0] : 128'h0)
         : 128'h0)
    | (_GEN_167
         ? {128{vs1_reg0[9] & _compressed_vs2_masked_reg0_9_T_5 < _GEN_165}}
           & (_GEN_167 ? _compressed_vs2_reg0_9_T_5[127:0] : 128'h0)
         : 128'h0)
    | (_GEN_168
         ? {128{vs1_reg0[10] & _compressed_vs2_masked_reg0_10_T_5 < _GEN_165}}
           & (_GEN_168 ? _compressed_vs2_reg0_10_T_5[127:0] : 128'h0)
         : 128'h0)
    | (_GEN_169
         ? {128{vs1_reg0[11] & _compressed_vs2_masked_reg0_11_T_5 < _GEN_165}}
           & (_GEN_169 ? _compressed_vs2_reg0_11_T_5[127:0] : 128'h0)
         : 128'h0)
    | (_GEN_170
         ? {128{vs1_reg0[12] & _compressed_vs2_masked_reg0_12_T_5 < _GEN_165}}
           & (_GEN_170 ? _compressed_vs2_reg0_12_T_5[127:0] : 128'h0)
         : 128'h0)
    | (_GEN_171
         ? {128{vs1_reg0[13] & _compressed_vs2_masked_reg0_13_T_5 < _GEN_165}}
           & (_GEN_171 ? _compressed_vs2_reg0_13_T_5[127:0] : 128'h0)
         : 128'h0)
    | (_GEN_172
         ? {128{vs1_reg0[14] & _compressed_vs2_masked_reg0_14_T_5 < _GEN_165}}
           & (_GEN_172 ? _compressed_vs2_reg0_14_T_5[127:0] : 128'h0)
         : 128'h0)
    | (_GEN_173
         ? {128{vs1_reg0[15] & _compressed_vs2_masked_reg0_15_T_5 < _GEN_165}}
           & (_GEN_173 ? _compressed_vs2_reg0_15_T_5[127:0] : 128'h0)
         : 128'h0);
  wire              _GEN_178 = _GEN_13 | ~_GEN_14;
  wire              _GEN_179 = _GEN_13 | _GEN_14 | ~_GEN_19;
  wire              _GEN_180 = _GEN_13 | _GEN_14 | _GEN_19;
  wire [10:0]       vstartRemainBytes_reg0 = {3'h0, vstartRemain_reg0} << _GEN_28;
  wire [127:0]      vmask_tail_bits =
    128'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    >> {114'h0,
        (|(vlRemainBytes_reg0[10:4])) ? 11'h0 : 11'(11'h10 - vlRemainBytes_reg0),
        3'h0};
  wire [16510:0]    _vmask_vstart_bits_T =
    16511'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    << {16497'h0,
        (|(vstartRemainBytes_reg0[10:4])) ? 11'h10 : vstartRemainBytes_reg0,
        3'h0};
  wire [3:0][127:0] _GEN_181 =
    {{{_GEN_180
         ? 64'h0
         : select_compressed_vs2_reg0[1]
             ? compressed_vs2_merged_reg0[127:64]
             : old_vd_reg0[127:64],
       _GEN_180
         ? 64'h0
         : select_compressed_vs2_reg0[0]
             ? compressed_vs2_merged_reg0[63:0]
             : old_vd_reg0[63:0]}},
     {{_GEN_179
         ? 32'h0
         : select_compressed_vs2_reg0[3]
             ? compressed_vs2_merged_reg0[127:96]
             : old_vd_reg0[127:96],
       _GEN_179
         ? 32'h0
         : select_compressed_vs2_reg0[2]
             ? compressed_vs2_merged_reg0[95:64]
             : old_vd_reg0[95:64],
       _GEN_179
         ? 32'h0
         : select_compressed_vs2_reg0[1]
             ? compressed_vs2_merged_reg0[63:32]
             : old_vd_reg0[63:32],
       _GEN_179
         ? 32'h0
         : select_compressed_vs2_reg0[0]
             ? compressed_vs2_merged_reg0[31:0]
             : old_vd_reg0[31:0]}},
     {{_GEN_178
         ? 16'h0
         : select_compressed_vs2_reg0[7]
             ? compressed_vs2_merged_reg0[127:112]
             : old_vd_reg0[127:112],
       _GEN_178
         ? 16'h0
         : select_compressed_vs2_reg0[6]
             ? compressed_vs2_merged_reg0[111:96]
             : old_vd_reg0[111:96],
       _GEN_178
         ? 16'h0
         : select_compressed_vs2_reg0[5]
             ? compressed_vs2_merged_reg0[95:80]
             : old_vd_reg0[95:80],
       _GEN_178
         ? 16'h0
         : select_compressed_vs2_reg0[4]
             ? compressed_vs2_merged_reg0[79:64]
             : old_vd_reg0[79:64],
       _GEN_178
         ? 16'h0
         : select_compressed_vs2_reg0[3]
             ? compressed_vs2_merged_reg0[63:48]
             : old_vd_reg0[63:48],
       _GEN_178
         ? 16'h0
         : select_compressed_vs2_reg0[2]
             ? compressed_vs2_merged_reg0[47:32]
             : old_vd_reg0[47:32],
       _GEN_178
         ? 16'h0
         : select_compressed_vs2_reg0[1]
             ? compressed_vs2_merged_reg0[31:16]
             : old_vd_reg0[31:16],
       _GEN_178
         ? 16'h0
         : select_compressed_vs2_reg0[0]
             ? compressed_vs2_merged_reg0[15:0]
             : old_vd_reg0[15:0]}},
     {{_GEN_13
         ? (select_compressed_vs2_reg0[15]
              ? compressed_vs2_merged_reg0[127:120]
              : old_vd_reg0[127:120])
         : 8'h0,
       _GEN_13
         ? (select_compressed_vs2_reg0[14]
              ? compressed_vs2_merged_reg0[119:112]
              : old_vd_reg0[119:112])
         : 8'h0,
       _GEN_13
         ? (select_compressed_vs2_reg0[13]
              ? compressed_vs2_merged_reg0[111:104]
              : old_vd_reg0[111:104])
         : 8'h0,
       _GEN_13
         ? (select_compressed_vs2_reg0[12]
              ? compressed_vs2_merged_reg0[103:96]
              : old_vd_reg0[103:96])
         : 8'h0,
       _GEN_13
         ? (select_compressed_vs2_reg0[11]
              ? compressed_vs2_merged_reg0[95:88]
              : old_vd_reg0[95:88])
         : 8'h0,
       _GEN_13
         ? (select_compressed_vs2_reg0[10]
              ? compressed_vs2_merged_reg0[87:80]
              : old_vd_reg0[87:80])
         : 8'h0,
       _GEN_13
         ? (select_compressed_vs2_reg0[9]
              ? compressed_vs2_merged_reg0[79:72]
              : old_vd_reg0[79:72])
         : 8'h0,
       _GEN_13
         ? (select_compressed_vs2_reg0[8]
              ? compressed_vs2_merged_reg0[71:64]
              : old_vd_reg0[71:64])
         : 8'h0,
       _GEN_13
         ? (select_compressed_vs2_reg0[7]
              ? compressed_vs2_merged_reg0[63:56]
              : old_vd_reg0[63:56])
         : 8'h0,
       _GEN_13
         ? (select_compressed_vs2_reg0[6]
              ? compressed_vs2_merged_reg0[55:48]
              : old_vd_reg0[55:48])
         : 8'h0,
       _GEN_13
         ? (select_compressed_vs2_reg0[5]
              ? compressed_vs2_merged_reg0[47:40]
              : old_vd_reg0[47:40])
         : 8'h0,
       _GEN_13
         ? (select_compressed_vs2_reg0[4]
              ? compressed_vs2_merged_reg0[39:32]
              : old_vd_reg0[39:32])
         : 8'h0,
       _GEN_13
         ? (select_compressed_vs2_reg0[3]
              ? compressed_vs2_merged_reg0[31:24]
              : old_vd_reg0[31:24])
         : 8'h0,
       _GEN_13
         ? (select_compressed_vs2_reg0[2]
              ? compressed_vs2_merged_reg0[23:16]
              : old_vd_reg0[23:16])
         : 8'h0,
       _GEN_13
         ? (select_compressed_vs2_reg0[1]
              ? compressed_vs2_merged_reg0[15:8]
              : old_vd_reg0[15:8])
         : 8'h0,
       _GEN_13
         ? (select_compressed_vs2_reg0[0]
              ? compressed_vs2_merged_reg0[7:0]
              : old_vd_reg0[7:0])
         : 8'h0}}};
  always @(posedge clock) begin
    if (io_in_valid) begin
      current_ones_sum_reg0_0 <=
        (|_out_previous_ones_sum_T)
          ? 8'(in_previous_ones_sum + {3'h0, current_uop_ones_sum_0})
          : 8'h0;
      current_ones_sum_reg0_1 <=
        (|(_out_previous_ones_sum_T[4:1]))
          ? 8'(in_previous_ones_sum + {3'h0, current_uop_ones_sum_1})
          : 8'h0;
      current_ones_sum_reg0_2 <=
        _out_previous_ones_sum_T > 5'h2
          ? 8'(in_previous_ones_sum + {3'h0, current_uop_ones_sum_2})
          : 8'h0;
      current_ones_sum_reg0_3 <=
        (|(_out_previous_ones_sum_T[4:2]))
          ? 8'(in_previous_ones_sum + {3'h0, current_uop_ones_sum_3})
          : 8'h0;
      current_ones_sum_reg0_4 <=
        _out_previous_ones_sum_T > 5'h4
          ? 8'(in_previous_ones_sum + {3'h0, current_uop_ones_sum_4})
          : 8'h0;
      current_ones_sum_reg0_5 <=
        _out_previous_ones_sum_T > 5'h5
          ? 8'(in_previous_ones_sum + {3'h0, current_uop_ones_sum_5})
          : 8'h0;
      current_ones_sum_reg0_6 <=
        _out_previous_ones_sum_T > 5'h6
          ? 8'(in_previous_ones_sum + {3'h0, current_uop_ones_sum_6})
          : 8'h0;
      current_ones_sum_reg0_7 <=
        (|(_out_previous_ones_sum_T[4:3]))
          ? 8'(in_previous_ones_sum + {3'h0, current_uop_ones_sum_7})
          : 8'h0;
      current_ones_sum_reg0_8 <=
        _out_previous_ones_sum_T > 5'h8
          ? 8'(in_previous_ones_sum + {3'h0, current_uop_ones_sum_8})
          : 8'h0;
      current_ones_sum_reg0_9 <=
        _out_previous_ones_sum_T > 5'h9
          ? 8'(in_previous_ones_sum + {3'h0, current_uop_ones_sum_9})
          : 8'h0;
      current_ones_sum_reg0_10 <=
        _out_previous_ones_sum_T > 5'hA
          ? 8'(in_previous_ones_sum + {3'h0, current_uop_ones_sum_10})
          : 8'h0;
      current_ones_sum_reg0_11 <=
        _out_previous_ones_sum_T > 5'hB
          ? 8'(in_previous_ones_sum + {3'h0, current_uop_ones_sum_11})
          : 8'h0;
      current_ones_sum_reg0_12 <=
        _out_previous_ones_sum_T > 5'hC
          ? 8'(in_previous_ones_sum + {3'h0, current_uop_ones_sum_12})
          : 8'h0;
      current_ones_sum_reg0_13 <=
        _out_previous_ones_sum_T > 5'hD
          ? 8'(in_previous_ones_sum + {3'h0, current_uop_ones_sum_13})
          : 8'h0;
      current_ones_sum_reg0_14 <=
        _out_previous_ones_sum_T > 5'hE
          ? 8'(in_previous_ones_sum + {3'h0, current_uop_ones_sum_14})
          : 8'h0;
      in_previous_ones_sum_reg0 <= in_previous_ones_sum;
      out_previous_ones_sum_reg0 <= {3'h0, _GEN_93[_out_previous_ones_sum_T[3:0]]};
      ones_sum_base_reg0 <=
        {1'h0,
         {1'h0,
          _baseUopIdx1H_T_14 | _load_rs1_T_10 | _baseUopIdx1H_T_17 | _baseUopIdx1H_T_19
          | _baseUopIdx1H_T_21 | _baseUopIdx1H_T_23 | _baseUopIdx1H_T_25
            ? {1'h0, base_ele}
            : 6'h0}
           | (_baseUopIdx1H_T_26 | _baseUopIdx1H_T_27 | _baseUopIdx1H_T_29
              | _baseUopIdx1H_T_31 | _baseUopIdx1H_T_33 | _baseUopIdx1H_T_35
                ? {1'h0, base_ele, 1'h0}
                : 7'h0)
           | (_baseUopIdx1H_T_36 | _baseUopIdx1H_T_37 | _baseUopIdx1H_T_39
              | _baseUopIdx1H_T_41 | _baseUopIdx1H_T_43
                ? 7'({2'h0, base_ele} * 7'h3)
                : 7'h0)}
        | (_baseUopIdx1H_T_44 | _baseUopIdx1H_T_45 | _baseUopIdx1H_T_47
           | _baseUopIdx1H_T_49
             ? {1'h0, base_ele, 2'h0}
             : 8'h0)
        | (_baseUopIdx1H_T_50 | _baseUopIdx1H_T_51 | _baseUopIdx1H_T_53
             ? 8'(_GEN_88 * 8'h5)
             : 8'h0)
        | (_baseUopIdx1H_T_54 | _baseUopIdx1H_T_55 ? 8'(_GEN_88 * 8'h6) : 8'h0)
        | (baseUopIdx1H_7 ? 8'(_GEN_88 * 8'h7) : 8'h0);
      ele_cnt_reg0 <= ele_cnt;
      vmask_uop_reg0 <=
        vslide1up
          ? io_in_bits_mask >> (_GEN_25 << _GEN_26)
          : vslide1dn
              ? io_in_bits_mask >> ({7'h0, io_in_bits_info_uopIdx[5:1]} << _GEN_27)
              : ((|vdId) ? 128'h0 : io_in_bits_mask)
                | (vdId == 3'h1 ? io_in_bits_mask >> ele_cnt : 128'h0)
                | (vdId == 3'h2 ? io_in_bits_mask >> {122'h0, ele_cnt, 1'h0} : 128'h0)
                | (vdId == 3'h3 ? io_in_bits_mask >> _vstartRemain_T_32 : 128'h0)
                | (vdId == 3'h4 ? io_in_bits_mask >> {121'h0, ele_cnt, 2'h0} : 128'h0)
                | (vdId == 3'h5 ? io_in_bits_mask >> _vstartRemain_T_46 : 128'h0)
                | (vdId == 3'h6 ? io_in_bits_mask >> _vstartRemain_T_53 : 128'h0)
                | ((&vdId) ? io_in_bits_mask >> _vstartRemain_T_60 : 128'h0);
      vm_reg0 <= io_in_bits_info_vm;
      base_reg0 <=
        {_vs2_bytes_max_T_4, _GEN_89 | (_vs2_bytes_max_T_3 ? 6'h30 : 6'h0)}
        | (_vs2_bytes_max_T_5 ? 7'h50 : 7'h0) | (_vs2_bytes_max_T_6 ? 7'h60 : 7'h0)
        | ((&vs2Id) ? 7'h70 : 7'h0);
      vrgather_byte_sel_reg0_0 <=
        vrgather_vx
          ? _GEN_97[io_in_bits_srcType_0[1:0]]
          : _GEN_96[io_in_bits_srcType_1[1:0]];
      vrgather_byte_sel_reg0_1 <=
        vrgather_vx
          ? _GEN_101[io_in_bits_srcType_0[1:0]]
          : _GEN_100[io_in_bits_srcType_1[1:0]];
      vrgather_byte_sel_reg0_2 <=
        vrgather_vx
          ? _GEN_105[io_in_bits_srcType_0[1:0]]
          : _GEN_104[io_in_bits_srcType_1[1:0]];
      vrgather_byte_sel_reg0_3 <=
        vrgather_vx
          ? _GEN_109[io_in_bits_srcType_0[1:0]]
          : _GEN_108[io_in_bits_srcType_1[1:0]];
      vrgather_byte_sel_reg0_4 <=
        vrgather_vx
          ? _GEN_113[io_in_bits_srcType_0[1:0]]
          : _GEN_112[io_in_bits_srcType_1[1:0]];
      vrgather_byte_sel_reg0_5 <=
        vrgather_vx
          ? _GEN_117[io_in_bits_srcType_0[1:0]]
          : _GEN_116[io_in_bits_srcType_1[1:0]];
      vrgather_byte_sel_reg0_6 <=
        vrgather_vx
          ? _GEN_121[io_in_bits_srcType_0[1:0]]
          : _GEN_120[io_in_bits_srcType_1[1:0]];
      vrgather_byte_sel_reg0_7 <=
        vrgather_vx
          ? _GEN_125[io_in_bits_srcType_0[1:0]]
          : _GEN_124[io_in_bits_srcType_1[1:0]];
      vrgather_byte_sel_reg0_8 <=
        vrgather_vx
          ? _GEN_129[io_in_bits_srcType_0[1:0]]
          : _GEN_128[io_in_bits_srcType_1[1:0]];
      vrgather_byte_sel_reg0_9 <=
        vrgather_vx
          ? _GEN_133[io_in_bits_srcType_0[1:0]]
          : _GEN_132[io_in_bits_srcType_1[1:0]];
      vrgather_byte_sel_reg0_10 <=
        vrgather_vx
          ? _GEN_137[io_in_bits_srcType_0[1:0]]
          : _GEN_136[io_in_bits_srcType_1[1:0]];
      vrgather_byte_sel_reg0_11 <=
        vrgather_vx
          ? _GEN_141[io_in_bits_srcType_0[1:0]]
          : _GEN_140[io_in_bits_srcType_1[1:0]];
      vrgather_byte_sel_reg0_12 <=
        vrgather_vx
          ? _GEN_145[io_in_bits_srcType_0[1:0]]
          : _GEN_144[io_in_bits_srcType_1[1:0]];
      vrgather_byte_sel_reg0_13 <=
        vrgather_vx
          ? _GEN_149[io_in_bits_srcType_0[1:0]]
          : _GEN_148[io_in_bits_srcType_1[1:0]];
      vrgather_byte_sel_reg0_14 <=
        vrgather_vx
          ? _GEN_153[io_in_bits_srcType_0[1:0]]
          : _GEN_152[io_in_bits_srcType_1[1:0]];
      vrgather_byte_sel_reg0_15 <=
        vrgather_vx
          ? _GEN_157[io_in_bits_srcType_0[1:0]]
          : _GEN_156[io_in_bits_srcType_1[1:0]];
      ma_reg0 <= io_in_bits_info_ma;
      vs2_bytes_min_reg0 <=
        {_vs2_bytes_max_T_4, _GEN_89 | (_vs2_bytes_max_T_3 ? 6'h30 : 6'h0)}
        | (_vs2_bytes_max_T_5 ? 7'h50 : 7'h0) | (_vs2_bytes_max_T_6 ? 7'h60 : 7'h0)
        | ((&vs2Id) ? 7'h70 : 7'h0);
      vs2_bytes_max_reg0 <=
        {&vs2Id,
         {_vs2_bytes_max_T_3,
          {_vs2_bytes_max_T_1, _vs2_bytes_max_T ? vlmax_bytes : 5'h0}
            | (_vs2_bytes_max_T_2 ? 6'h30 : 6'h0)} | (_vs2_bytes_max_T_4 ? 7'h50 : 7'h0)
           | (_vs2_bytes_max_T_5 ? 7'h60 : 7'h0) | (_vs2_bytes_max_T_6 ? 7'h70 : 7'h0)};
      vs2_bytes_reg0_0 <= io_in_bits_vs2[7:0];
      vs2_bytes_reg0_1 <= io_in_bits_vs2[15:8];
      vs2_bytes_reg0_2 <= io_in_bits_vs2[23:16];
      vs2_bytes_reg0_3 <= io_in_bits_vs2[31:24];
      vs2_bytes_reg0_4 <= io_in_bits_vs2[39:32];
      vs2_bytes_reg0_5 <= io_in_bits_vs2[47:40];
      vs2_bytes_reg0_6 <= io_in_bits_vs2[55:48];
      vs2_bytes_reg0_7 <= io_in_bits_vs2[63:56];
      vs2_bytes_reg0_8 <= io_in_bits_vs2[71:64];
      vs2_bytes_reg0_9 <= io_in_bits_vs2[79:72];
      vs2_bytes_reg0_10 <= io_in_bits_vs2[87:80];
      vs2_bytes_reg0_11 <= io_in_bits_vs2[95:88];
      vs2_bytes_reg0_12 <= io_in_bits_vs2[103:96];
      vs2_bytes_reg0_13 <= io_in_bits_vs2[111:104];
      vs2_bytes_reg0_14 <= io_in_bits_vs2[119:112];
      vs2_bytes_reg0_15 <= io_in_bits_vs2[127:120];
      first_gather_reg0 <= io_in_bits_info_vlmul[2] | _vs2_bytes_max_T;
      load_rs1_reg0 <=
        (io_in_bits_info_vlmul[2] | io_in_bits_info_vlmul == 3'h0) & _load_rs1_T_3
        | _load_rs1_T_5 & _load_rs1_T_6 | _load_rs1_T_9 & _load_rs1_T_10 | _load_rs1_T_13;
      slide_bytes_reg0 <= {3'h0, slide_ele} << io_in_bits_srcType_0[1:0];
      vlmax_bytes_reg0 <= vlmax_bytes;
      first_slidedn_reg0 <= vslidedn & _vslidednOffset_outIsFirst;
      vsew_bytes_reg0 <= 4'h1 << io_in_bits_srcType_0[1:0];
      vs1_bytes_reg0_0 <= io_in_bits_vs1[7:0];
      vs1_bytes_reg0_1 <= io_in_bits_vs1[15:8];
      vs1_bytes_reg0_2 <= io_in_bits_vs1[23:16];
      vs1_bytes_reg0_3 <= io_in_bits_vs1[31:24];
      vs1_bytes_reg0_4 <= io_in_bits_vs1[39:32];
      vs1_bytes_reg0_5 <= io_in_bits_vs1[47:40];
      vs1_bytes_reg0_6 <= io_in_bits_vs1[55:48];
      vs1_bytes_reg0_7 <= io_in_bits_vs1[63:56];
      vs1_bytes_reg0_8 <= io_in_bits_vs1[71:64];
      vs1_bytes_reg0_9 <= io_in_bits_vs1[79:72];
      vs1_bytes_reg0_10 <= io_in_bits_vs1[87:80];
      vs1_bytes_reg0_11 <= io_in_bits_vs1[95:88];
      vs1_bytes_reg0_12 <= io_in_bits_vs1[103:96];
      vs1_bytes_reg0_13 <= io_in_bits_vs1[111:104];
      vs1_bytes_reg0_14 <= io_in_bits_vs1[119:112];
      vs1_bytes_reg0_15 <= io_in_bits_vs1[127:120];
    end
    if (fire_reg0_last_r) begin
      is_vcompress_reg1 <= is_vcompress_reg0;
      is_vrgather_reg1 <= is_vrgather_reg0;
      is_vrgather_vx_reg1 <= is_vrgather_vx_reg0;
      is_vslide_reg1 <= is_vslide_reg0;
      uopIdx_reg1 <= uopIdx_reg0;
      old_vd_reg1 <= old_vd_reg0;
      ta_reg1 <= ta_reg0;
      vstart_reg1 <= vstart_reg0;
      vl_reg1 <= vl_reg0;
      vsew_reg1 <= vsew_reg0;
      ones_sum_eles_reg1 <= 8'(in_previous_ones_sum_reg0 + out_previous_ones_sum_reg0);
      ones_sum_base_reg1 <= ones_sum_base_reg0;
      compressed_res_reg1 <= _GEN_181[vsew_reg0];
      vs1_next_reg1 <= vs1_next_reg0;
      vmask_tail_bits_reg1 <= vmask_tail_bits;
      vmask_vstart_bits_reg1 <= _vmask_vstart_bits_T[127:0];
      tail_vd_reg1 <= ({128{ta_reg0}} | old_vd_reg0) & ~vmask_tail_bits;
      vstart_old_vd_reg1 <= old_vd_reg0 & ~(_vmask_vstart_bits_T[127:0]);
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:104];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [6:0] i = 7'h0; i < 7'h69; i += 7'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        fire_reg0_last_r = _RANDOM[7'h0][0];
        vsew_reg0 = _RANDOM[7'h0][2:1];
        elements_reg0 = _RANDOM[7'h0][7:3];
        vs1_reg0 =
          {_RANDOM[7'h0][31:8],
           _RANDOM[7'h1],
           _RANDOM[7'h2],
           _RANDOM[7'h3],
           _RANDOM[7'h4][7:0]};
        vs1_next_reg0 =
          {_RANDOM[7'h4][31:8],
           _RANDOM[7'h5],
           _RANDOM[7'h6],
           _RANDOM[7'h7],
           _RANDOM[7'h8][7:0]};
        vs2_reg0 =
          {_RANDOM[7'h8][31:8],
           _RANDOM[7'h9],
           _RANDOM[7'hA],
           _RANDOM[7'hB],
           _RANDOM[7'hC][7:0]};
        old_vd_reg0 =
          {_RANDOM[7'hC][31:8],
           _RANDOM[7'hD],
           _RANDOM[7'hE],
           _RANDOM[7'hF],
           _RANDOM[7'h10][7:0]};
        current_ones_sum_reg0_0 = _RANDOM[7'h10][15:8];
        current_ones_sum_reg0_1 = _RANDOM[7'h10][23:16];
        current_ones_sum_reg0_2 = _RANDOM[7'h10][31:24];
        current_ones_sum_reg0_3 = _RANDOM[7'h11][7:0];
        current_ones_sum_reg0_4 = _RANDOM[7'h11][15:8];
        current_ones_sum_reg0_5 = _RANDOM[7'h11][23:16];
        current_ones_sum_reg0_6 = _RANDOM[7'h11][31:24];
        current_ones_sum_reg0_7 = _RANDOM[7'h12][7:0];
        current_ones_sum_reg0_8 = _RANDOM[7'h12][15:8];
        current_ones_sum_reg0_9 = _RANDOM[7'h12][23:16];
        current_ones_sum_reg0_10 = _RANDOM[7'h12][31:24];
        current_ones_sum_reg0_11 = _RANDOM[7'h13][7:0];
        current_ones_sum_reg0_12 = _RANDOM[7'h13][15:8];
        current_ones_sum_reg0_13 = _RANDOM[7'h13][23:16];
        current_ones_sum_reg0_14 = _RANDOM[7'h13][31:24];
        in_previous_ones_sum_reg0 = _RANDOM[7'h14][15:8];
        out_previous_ones_sum_reg0 = _RANDOM[7'h14][23:16];
        ones_sum_base_reg0 = _RANDOM[7'h14][31:24];
        ele_cnt_reg0 = _RANDOM[7'h15][4:0];
        vlRemain_reg0 = _RANDOM[7'h15][12:5];
        vmask_uop_reg0 =
          {_RANDOM[7'h15][31:13],
           _RANDOM[7'h16],
           _RANDOM[7'h17],
           _RANDOM[7'h18],
           _RANDOM[7'h19][12:0]};
        vm_reg0 = _RANDOM[7'h19][13];
        base_reg0 = _RANDOM[7'h19][20:14];
        vrgather_byte_sel_reg0_0 =
          {_RANDOM[7'h19][31:21], _RANDOM[7'h1A], _RANDOM[7'h1B][23:0]};
        vrgather_byte_sel_reg0_1 =
          {_RANDOM[7'h1B][31:24], _RANDOM[7'h1C], _RANDOM[7'h1D][26:0]};
        vrgather_byte_sel_reg0_2 =
          {_RANDOM[7'h1D][31:27], _RANDOM[7'h1E], _RANDOM[7'h1F][29:0]};
        vrgather_byte_sel_reg0_3 =
          {_RANDOM[7'h1F][31:30], _RANDOM[7'h20], _RANDOM[7'h21], _RANDOM[7'h22][0]};
        vrgather_byte_sel_reg0_4 =
          {_RANDOM[7'h22][31:1], _RANDOM[7'h23], _RANDOM[7'h24][3:0]};
        vrgather_byte_sel_reg0_5 =
          {_RANDOM[7'h24][31:4], _RANDOM[7'h25], _RANDOM[7'h26][6:0]};
        vrgather_byte_sel_reg0_6 =
          {_RANDOM[7'h26][31:7], _RANDOM[7'h27], _RANDOM[7'h28][9:0]};
        vrgather_byte_sel_reg0_7 =
          {_RANDOM[7'h28][31:10], _RANDOM[7'h29], _RANDOM[7'h2A][12:0]};
        vrgather_byte_sel_reg0_8 =
          {_RANDOM[7'h2A][31:13], _RANDOM[7'h2B], _RANDOM[7'h2C][15:0]};
        vrgather_byte_sel_reg0_9 =
          {_RANDOM[7'h2C][31:16], _RANDOM[7'h2D], _RANDOM[7'h2E][18:0]};
        vrgather_byte_sel_reg0_10 =
          {_RANDOM[7'h2E][31:19], _RANDOM[7'h2F], _RANDOM[7'h30][21:0]};
        vrgather_byte_sel_reg0_11 =
          {_RANDOM[7'h30][31:22], _RANDOM[7'h31], _RANDOM[7'h32][24:0]};
        vrgather_byte_sel_reg0_12 =
          {_RANDOM[7'h32][31:25], _RANDOM[7'h33], _RANDOM[7'h34][27:0]};
        vrgather_byte_sel_reg0_13 =
          {_RANDOM[7'h34][31:28], _RANDOM[7'h35], _RANDOM[7'h36][30:0]};
        vrgather_byte_sel_reg0_14 =
          {_RANDOM[7'h36][31], _RANDOM[7'h37], _RANDOM[7'h38], _RANDOM[7'h39][1:0]};
        vrgather_byte_sel_reg0_15 =
          {_RANDOM[7'h39][31:2], _RANDOM[7'h3A], _RANDOM[7'h3B][4:0]};
        is_vrgather_reg0 = _RANDOM[7'h3B][5];
        is_vrgather_vx_reg0 = _RANDOM[7'h3B][6];
        ma_reg0 = _RANDOM[7'h3B][7];
        vs2_bytes_min_reg0 = _RANDOM[7'h3B][14:8];
        vs2_bytes_max_reg0 = _RANDOM[7'h3B][22:15];
        vs2_bytes_reg0_0 = _RANDOM[7'h3B][30:23];
        vs2_bytes_reg0_1 = {_RANDOM[7'h3B][31], _RANDOM[7'h3C][6:0]};
        vs2_bytes_reg0_2 = _RANDOM[7'h3C][14:7];
        vs2_bytes_reg0_3 = _RANDOM[7'h3C][22:15];
        vs2_bytes_reg0_4 = _RANDOM[7'h3C][30:23];
        vs2_bytes_reg0_5 = {_RANDOM[7'h3C][31], _RANDOM[7'h3D][6:0]};
        vs2_bytes_reg0_6 = _RANDOM[7'h3D][14:7];
        vs2_bytes_reg0_7 = _RANDOM[7'h3D][22:15];
        vs2_bytes_reg0_8 = _RANDOM[7'h3D][30:23];
        vs2_bytes_reg0_9 = {_RANDOM[7'h3D][31], _RANDOM[7'h3E][6:0]};
        vs2_bytes_reg0_10 = _RANDOM[7'h3E][14:7];
        vs2_bytes_reg0_11 = _RANDOM[7'h3E][22:15];
        vs2_bytes_reg0_12 = _RANDOM[7'h3E][30:23];
        vs2_bytes_reg0_13 = {_RANDOM[7'h3E][31], _RANDOM[7'h3F][6:0]};
        vs2_bytes_reg0_14 = _RANDOM[7'h3F][14:7];
        vs2_bytes_reg0_15 = _RANDOM[7'h3F][22:15];
        first_gather_reg0 = _RANDOM[7'h3F][23];
        uopIdx_reg0 = _RANDOM[7'h3F][29:24];
        load_rs1_reg0 = _RANDOM[7'h3F][30];
        slide_bytes_reg0 =
          {_RANDOM[7'h3F][31], _RANDOM[7'h40], _RANDOM[7'h41], _RANDOM[7'h42][1:0]};
        vlmax_bytes_reg0 = _RANDOM[7'h42][6:2];
        first_slidedn_reg0 = _RANDOM[7'h42][7];
        is_vslide1up_reg0 = _RANDOM[7'h42][8];
        is_vslide1dn_reg0 = _RANDOM[7'h42][9];
        vsew_bytes_reg0 = _RANDOM[7'h42][13:10];
        vs1_bytes_reg0_0 = _RANDOM[7'h42][21:14];
        vs1_bytes_reg0_1 = _RANDOM[7'h42][29:22];
        vs1_bytes_reg0_2 = {_RANDOM[7'h42][31:30], _RANDOM[7'h43][5:0]};
        vs1_bytes_reg0_3 = _RANDOM[7'h43][13:6];
        vs1_bytes_reg0_4 = _RANDOM[7'h43][21:14];
        vs1_bytes_reg0_5 = _RANDOM[7'h43][29:22];
        vs1_bytes_reg0_6 = {_RANDOM[7'h43][31:30], _RANDOM[7'h44][5:0]};
        vs1_bytes_reg0_7 = _RANDOM[7'h44][13:6];
        vs1_bytes_reg0_8 = _RANDOM[7'h44][21:14];
        vs1_bytes_reg0_9 = _RANDOM[7'h44][29:22];
        vs1_bytes_reg0_10 = {_RANDOM[7'h44][31:30], _RANDOM[7'h45][5:0]};
        vs1_bytes_reg0_11 = _RANDOM[7'h45][13:6];
        vs1_bytes_reg0_12 = _RANDOM[7'h45][21:14];
        vs1_bytes_reg0_13 = _RANDOM[7'h45][29:22];
        vs1_bytes_reg0_14 = {_RANDOM[7'h45][31:30], _RANDOM[7'h46][5:0]};
        vs1_bytes_reg0_15 = _RANDOM[7'h46][13:6];
        is_vcompress_reg0 = _RANDOM[7'h46][14];
        is_vslideup_reg0 = _RANDOM[7'h46][15];
        is_vslidedn_reg0 = _RANDOM[7'h46][16];
        is_vrgather16_sew8_reg0 = _RANDOM[7'h46][17];
        is_vmvnr_reg0 = _RANDOM[7'h46][18];
        is_vslide_reg0 = _RANDOM[7'h46][19];
        ta_reg0 = _RANDOM[7'h46][20];
        vstartRemain_reg0 = _RANDOM[7'h46][28:21];
        vstart_reg0 = {_RANDOM[7'h46][31:29], _RANDOM[7'h47][3:0]};
        vl_reg0 = _RANDOM[7'h47][11:4];
        vd_reg =
          {_RANDOM[7'h47][31:12],
           _RANDOM[7'h48],
           _RANDOM[7'h49],
           _RANDOM[7'h4A],
           _RANDOM[7'h4B][11:0]};
        is_vcompress_reg1 = _RANDOM[7'h4B][12];
        is_vrgather_reg1 = _RANDOM[7'h4B][13];
        is_vrgather_vx_reg1 = _RANDOM[7'h4B][14];
        is_vslide_reg1 = _RANDOM[7'h4B][15];
        uopIdx_reg1 = _RANDOM[7'h4B][21:16];
        old_vd_reg1 =
          {_RANDOM[7'h4B][31:22],
           _RANDOM[7'h4C],
           _RANDOM[7'h4D],
           _RANDOM[7'h4E],
           _RANDOM[7'h4F][21:0]};
        ta_reg1 = _RANDOM[7'h4F][22];
        vstart_reg1 = _RANDOM[7'h4F][29:23];
        vl_reg1 = {_RANDOM[7'h4F][31:30], _RANDOM[7'h50][5:0]};
        vsew_reg1 = _RANDOM[7'h50][7:6];
        ones_sum_eles_reg1 = _RANDOM[7'h50][15:8];
        ones_sum_base_reg1 = _RANDOM[7'h50][23:16];
        compressed_res_reg1 =
          {_RANDOM[7'h50][31:24],
           _RANDOM[7'h51],
           _RANDOM[7'h52],
           _RANDOM[7'h53],
           _RANDOM[7'h54][23:0]};
        vs1_next_reg1 =
          {_RANDOM[7'h54][31:24],
           _RANDOM[7'h55],
           _RANDOM[7'h56],
           _RANDOM[7'h57],
           _RANDOM[7'h58][23:0]};
        vmask_tail_bits_reg1 =
          {_RANDOM[7'h58][31:24],
           _RANDOM[7'h59],
           _RANDOM[7'h5A],
           _RANDOM[7'h5B],
           _RANDOM[7'h5C][23:0]};
        vmask_vstart_bits_reg1 =
          {_RANDOM[7'h5C][31:24],
           _RANDOM[7'h5D],
           _RANDOM[7'h5E],
           _RANDOM[7'h5F],
           _RANDOM[7'h60][23:0]};
        tail_vd_reg1 =
          {_RANDOM[7'h60][31:24],
           _RANDOM[7'h61],
           _RANDOM[7'h62],
           _RANDOM[7'h63],
           _RANDOM[7'h64][23:0]};
        vstart_old_vd_reg1 =
          {_RANDOM[7'h64][31:24],
           _RANDOM[7'h65],
           _RANDOM[7'h66],
           _RANDOM[7'h67],
           _RANDOM[7'h68][23:0]};
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        fire_reg0_last_r = 1'h0;
        vsew_reg0 = 2'h0;
        elements_reg0 = 5'h0;
        vs1_reg0 = 128'h0;
        vs1_next_reg0 = 128'h0;
        vs2_reg0 = 128'h0;
        old_vd_reg0 = 128'h0;
        vlRemain_reg0 = 8'h0;
        is_vrgather_reg0 = 1'h0;
        is_vrgather_vx_reg0 = 1'h0;
        uopIdx_reg0 = 6'h0;
        is_vslide1up_reg0 = 1'h0;
        is_vslide1dn_reg0 = 1'h0;
        is_vcompress_reg0 = 1'h0;
        is_vslideup_reg0 = 1'h0;
        is_vslidedn_reg0 = 1'h0;
        is_vrgather16_sew8_reg0 = 1'h0;
        is_vmvnr_reg0 = 1'h0;
        is_vslide_reg0 = 1'h0;
        ta_reg0 = 1'h0;
        vstartRemain_reg0 = 8'h0;
        vstart_reg0 = 7'h0;
        vl_reg0 = 8'h0;
        vd_reg = 128'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  slideupVs2VdTable vslideupOffset (
    .src          (_GEN_24),
    .outOffsetVs2 (_vslideupOffset_outOffsetVs2),
    .outOffsetVd  (_vslideupOffset_outOffsetVd)
  );
  slidednVs2VdTable vslidednOffset (
    .src          (_GEN_24),
    .outOffsetVs2 (_vslidednOffset_outOffsetVs2),
    .outOffsetVd  (_vslidednOffset_outOffsetVd),
    .outIsFirst   (_vslidednOffset_outIsFirst)
  );
  assign io_out_vd =
    {1'h0, vstart_reg1} >= vl_reg1
      ? old_vd_reg1
      : is_vcompress_reg1
          ? (uopIdx_reg1 == 6'h1 | uopIdx_reg1 == 6'h4 | uopIdx_reg1 == 6'h8
             | uopIdx_reg1 == 6'hD | uopIdx_reg1 == 6'h13 | uopIdx_reg1 == 6'h1A
             | uopIdx_reg1 == 6'h22
               ? {ones_sum_eles_reg1, vs1_next_reg1[119:0]}
               : _GEN_36[vsew_reg1])
          : is_vslide_reg1 | is_vrgather_reg1 | is_vrgather_vx_reg1
              ? vd_reg & vmask_tail_bits_reg1 & vmask_vstart_bits_reg1 | tail_vd_reg1
                | vstart_old_vd_reg1
              : vd_reg;
endmodule

