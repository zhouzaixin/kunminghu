// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module FtqNRSRAM(
  input          clock,
  input          reset,
  input  [5:0]   io_raddr_0,
  input          io_ren_0,
  output [259:0] io_rdata_0_meta,
  output         io_rdata_0_ftb_entry_isCall,
  output         io_rdata_0_ftb_entry_isRet,
  output         io_rdata_0_ftb_entry_isJalr,
  output         io_rdata_0_ftb_entry_valid,
  output [3:0]   io_rdata_0_ftb_entry_brSlots_0_offset,
  output         io_rdata_0_ftb_entry_brSlots_0_sharing,
  output         io_rdata_0_ftb_entry_brSlots_0_valid,
  output [11:0]  io_rdata_0_ftb_entry_brSlots_0_lower,
  output [1:0]   io_rdata_0_ftb_entry_brSlots_0_tarStat,
  output [3:0]   io_rdata_0_ftb_entry_tailSlot_offset,
  output         io_rdata_0_ftb_entry_tailSlot_sharing,
  output         io_rdata_0_ftb_entry_tailSlot_valid,
  output [19:0]  io_rdata_0_ftb_entry_tailSlot_lower,
  output [1:0]   io_rdata_0_ftb_entry_tailSlot_tarStat,
  output [3:0]   io_rdata_0_ftb_entry_pftAddr,
  output         io_rdata_0_ftb_entry_carry,
  output         io_rdata_0_ftb_entry_last_may_be_rvi_call,
  output         io_rdata_0_ftb_entry_strong_bias_0,
  output         io_rdata_0_ftb_entry_strong_bias_1,
  input  [5:0]   io_waddr,
  input          io_wen,
  input  [259:0] io_wdata_meta,
  input          io_wdata_ftb_entry_isCall,
  input          io_wdata_ftb_entry_isRet,
  input          io_wdata_ftb_entry_isJalr,
  input          io_wdata_ftb_entry_valid,
  input  [3:0]   io_wdata_ftb_entry_brSlots_0_offset,
  input          io_wdata_ftb_entry_brSlots_0_sharing,
  input          io_wdata_ftb_entry_brSlots_0_valid,
  input  [11:0]  io_wdata_ftb_entry_brSlots_0_lower,
  input  [1:0]   io_wdata_ftb_entry_brSlots_0_tarStat,
  input  [3:0]   io_wdata_ftb_entry_tailSlot_offset,
  input          io_wdata_ftb_entry_tailSlot_sharing,
  input          io_wdata_ftb_entry_tailSlot_valid,
  input  [19:0]  io_wdata_ftb_entry_tailSlot_lower,
  input  [1:0]   io_wdata_ftb_entry_tailSlot_tarStat,
  input  [3:0]   io_wdata_ftb_entry_pftAddr,
  input          io_wdata_ftb_entry_carry,
  input          io_wdata_ftb_entry_last_may_be_rvi_call,
  input          io_wdata_ftb_entry_strong_bias_0,
  input          io_wdata_ftb_entry_strong_bias_1
);

  SRAMTemplate_65 sram (
    .clock                                               (clock),
    .reset                                               (reset),
    .io_r_req_valid                                      (io_ren_0),
    .io_r_req_bits_setIdx                                (io_raddr_0),
    .io_r_resp_data_0_meta                               (io_rdata_0_meta),
    .io_r_resp_data_0_ftb_entry_isCall                   (io_rdata_0_ftb_entry_isCall),
    .io_r_resp_data_0_ftb_entry_isRet                    (io_rdata_0_ftb_entry_isRet),
    .io_r_resp_data_0_ftb_entry_isJalr                   (io_rdata_0_ftb_entry_isJalr),
    .io_r_resp_data_0_ftb_entry_valid                    (io_rdata_0_ftb_entry_valid),
    .io_r_resp_data_0_ftb_entry_brSlots_0_offset
      (io_rdata_0_ftb_entry_brSlots_0_offset),
    .io_r_resp_data_0_ftb_entry_brSlots_0_sharing
      (io_rdata_0_ftb_entry_brSlots_0_sharing),
    .io_r_resp_data_0_ftb_entry_brSlots_0_valid
      (io_rdata_0_ftb_entry_brSlots_0_valid),
    .io_r_resp_data_0_ftb_entry_brSlots_0_lower
      (io_rdata_0_ftb_entry_brSlots_0_lower),
    .io_r_resp_data_0_ftb_entry_brSlots_0_tarStat
      (io_rdata_0_ftb_entry_brSlots_0_tarStat),
    .io_r_resp_data_0_ftb_entry_tailSlot_offset
      (io_rdata_0_ftb_entry_tailSlot_offset),
    .io_r_resp_data_0_ftb_entry_tailSlot_sharing
      (io_rdata_0_ftb_entry_tailSlot_sharing),
    .io_r_resp_data_0_ftb_entry_tailSlot_valid
      (io_rdata_0_ftb_entry_tailSlot_valid),
    .io_r_resp_data_0_ftb_entry_tailSlot_lower
      (io_rdata_0_ftb_entry_tailSlot_lower),
    .io_r_resp_data_0_ftb_entry_tailSlot_tarStat
      (io_rdata_0_ftb_entry_tailSlot_tarStat),
    .io_r_resp_data_0_ftb_entry_pftAddr                  (io_rdata_0_ftb_entry_pftAddr),
    .io_r_resp_data_0_ftb_entry_carry                    (io_rdata_0_ftb_entry_carry),
    .io_r_resp_data_0_ftb_entry_last_may_be_rvi_call
      (io_rdata_0_ftb_entry_last_may_be_rvi_call),
    .io_r_resp_data_0_ftb_entry_strong_bias_0
      (io_rdata_0_ftb_entry_strong_bias_0),
    .io_r_resp_data_0_ftb_entry_strong_bias_1
      (io_rdata_0_ftb_entry_strong_bias_1),
    .io_w_req_valid                                      (io_wen),
    .io_w_req_bits_setIdx                                (io_waddr),
    .io_w_req_bits_data_0_meta                           (io_wdata_meta),
    .io_w_req_bits_data_0_ftb_entry_isCall               (io_wdata_ftb_entry_isCall),
    .io_w_req_bits_data_0_ftb_entry_isRet                (io_wdata_ftb_entry_isRet),
    .io_w_req_bits_data_0_ftb_entry_isJalr               (io_wdata_ftb_entry_isJalr),
    .io_w_req_bits_data_0_ftb_entry_valid                (io_wdata_ftb_entry_valid),
    .io_w_req_bits_data_0_ftb_entry_brSlots_0_offset
      (io_wdata_ftb_entry_brSlots_0_offset),
    .io_w_req_bits_data_0_ftb_entry_brSlots_0_sharing
      (io_wdata_ftb_entry_brSlots_0_sharing),
    .io_w_req_bits_data_0_ftb_entry_brSlots_0_valid
      (io_wdata_ftb_entry_brSlots_0_valid),
    .io_w_req_bits_data_0_ftb_entry_brSlots_0_lower
      (io_wdata_ftb_entry_brSlots_0_lower),
    .io_w_req_bits_data_0_ftb_entry_brSlots_0_tarStat
      (io_wdata_ftb_entry_brSlots_0_tarStat),
    .io_w_req_bits_data_0_ftb_entry_tailSlot_offset
      (io_wdata_ftb_entry_tailSlot_offset),
    .io_w_req_bits_data_0_ftb_entry_tailSlot_sharing
      (io_wdata_ftb_entry_tailSlot_sharing),
    .io_w_req_bits_data_0_ftb_entry_tailSlot_valid
      (io_wdata_ftb_entry_tailSlot_valid),
    .io_w_req_bits_data_0_ftb_entry_tailSlot_lower
      (io_wdata_ftb_entry_tailSlot_lower),
    .io_w_req_bits_data_0_ftb_entry_tailSlot_tarStat
      (io_wdata_ftb_entry_tailSlot_tarStat),
    .io_w_req_bits_data_0_ftb_entry_pftAddr              (io_wdata_ftb_entry_pftAddr),
    .io_w_req_bits_data_0_ftb_entry_carry                (io_wdata_ftb_entry_carry),
    .io_w_req_bits_data_0_ftb_entry_last_may_be_rvi_call
      (io_wdata_ftb_entry_last_may_be_rvi_call),
    .io_w_req_bits_data_0_ftb_entry_strong_bias_0
      (io_wdata_ftb_entry_strong_bias_0),
    .io_w_req_bits_data_0_ftb_entry_strong_bias_1
      (io_wdata_ftb_entry_strong_bias_1)
  );
endmodule

