// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module CSA_Nto2With3to2MainPipeline(
  input          clock,
  input          io_fire,
  input  [106:0] io_in_0,
  input  [106:0] io_in_1,
  input  [106:0] io_in_2,
  input  [106:0] io_in_3,
  input  [106:0] io_in_4,
  input  [106:0] io_in_5,
  input  [106:0] io_in_6,
  input  [106:0] io_in_7,
  input  [106:0] io_in_8,
  input  [106:0] io_in_9,
  input  [106:0] io_in_10,
  input  [106:0] io_in_11,
  input  [106:0] io_in_12,
  input  [106:0] io_in_13,
  input  [106:0] io_in_14,
  input  [106:0] io_in_15,
  input  [106:0] io_in_16,
  input  [106:0] io_in_17,
  input  [106:0] io_in_18,
  input  [106:0] io_in_19,
  input  [106:0] io_in_20,
  input  [106:0] io_in_21,
  input  [106:0] io_in_22,
  input  [106:0] io_in_23,
  input  [106:0] io_in_24,
  input  [106:0] io_in_25,
  input  [106:0] io_in_26,
  output [106:0] io_out_sum,
  output [106:0] io_out_car
);

  wire [106:0] _U_CSA4to2_1_io_out_sum;
  wire [106:0] _U_CSA4to2_1_io_out_car;
  wire [106:0] _U_CSA4to2_io_out_sum;
  wire [106:0] _U_CSA4to2_io_out_car;
  wire [106:0] _U_CSA3to2_18_io_out_sum;
  wire [106:0] _U_CSA3to2_18_io_out_car;
  wire [106:0] _U_CSA3to2_17_io_out_sum;
  wire [106:0] _U_CSA3to2_17_io_out_car;
  wire [106:0] _U_CSA3to2_16_io_out_sum;
  wire [106:0] _U_CSA3to2_16_io_out_car;
  wire [106:0] _U_CSA3to2_15_io_out_sum;
  wire [106:0] _U_CSA3to2_15_io_out_car;
  wire [106:0] _U_CSA3to2_14_io_out_sum;
  wire [106:0] _U_CSA3to2_14_io_out_car;
  wire [106:0] _U_CSA3to2_13_io_out_sum;
  wire [106:0] _U_CSA3to2_13_io_out_car;
  wire [106:0] _U_CSA3to2_12_io_out_sum;
  wire [106:0] _U_CSA3to2_12_io_out_car;
  wire [106:0] _U_CSA3to2_11_io_out_sum;
  wire [106:0] _U_CSA3to2_11_io_out_car;
  wire [106:0] _U_CSA3to2_10_io_out_sum;
  wire [106:0] _U_CSA3to2_10_io_out_car;
  wire [106:0] _U_CSA3to2_9_io_out_sum;
  wire [106:0] _U_CSA3to2_9_io_out_car;
  wire [106:0] _U_CSA3to2_8_io_out_sum;
  wire [106:0] _U_CSA3to2_8_io_out_car;
  wire [106:0] _U_CSA3to2_7_io_out_sum;
  wire [106:0] _U_CSA3to2_7_io_out_car;
  wire [106:0] _U_CSA3to2_6_io_out_sum;
  wire [106:0] _U_CSA3to2_6_io_out_car;
  wire [106:0] _U_CSA3to2_5_io_out_sum;
  wire [106:0] _U_CSA3to2_5_io_out_car;
  wire [106:0] _U_CSA3to2_4_io_out_sum;
  wire [106:0] _U_CSA3to2_4_io_out_car;
  wire [106:0] _U_CSA3to2_3_io_out_sum;
  wire [106:0] _U_CSA3to2_3_io_out_car;
  wire [106:0] _U_CSA3to2_2_io_out_sum;
  wire [106:0] _U_CSA3to2_2_io_out_car;
  wire [106:0] _U_CSA3to2_1_io_out_sum;
  wire [106:0] _U_CSA3to2_1_io_out_car;
  wire [106:0] _U_CSA3to2_io_out_sum;
  wire [106:0] _U_CSA3to2_io_out_car;
  reg  [106:0] U_CSA4to2_io_in_a_r;
  reg  [106:0] U_CSA4to2_io_in_b_r;
  reg  [106:0] U_CSA4to2_io_in_c_r;
  reg  [106:0] U_CSA4to2_io_in_d_r;
  always @(posedge clock) begin
    if (io_fire) begin
      U_CSA4to2_io_in_a_r <= _U_CSA4to2_io_out_sum;
      U_CSA4to2_io_in_b_r <= _U_CSA4to2_io_out_car;
      U_CSA4to2_io_in_c_r <= _U_CSA4to2_1_io_out_sum;
      U_CSA4to2_io_in_d_r <= _U_CSA4to2_1_io_out_car;
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:13];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [3:0] i = 4'h0; i < 4'hE; i += 4'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        U_CSA4to2_io_in_a_r =
          {_RANDOM[4'h0], _RANDOM[4'h1], _RANDOM[4'h2], _RANDOM[4'h3][10:0]};
        U_CSA4to2_io_in_b_r =
          {_RANDOM[4'h3][31:11], _RANDOM[4'h4], _RANDOM[4'h5], _RANDOM[4'h6][21:0]};
        U_CSA4to2_io_in_c_r =
          {_RANDOM[4'h6][31:22],
           _RANDOM[4'h7],
           _RANDOM[4'h8],
           _RANDOM[4'h9],
           _RANDOM[4'hA][0]};
        U_CSA4to2_io_in_d_r =
          {_RANDOM[4'hA][31:1], _RANDOM[4'hB], _RANDOM[4'hC], _RANDOM[4'hD][11:0]};
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  CSA3to2 U_CSA3to2 (
    .io_in_a    (io_in_0),
    .io_in_b    (io_in_1),
    .io_in_c    (io_in_2),
    .io_out_sum (_U_CSA3to2_io_out_sum),
    .io_out_car (_U_CSA3to2_io_out_car)
  );
  CSA3to2 U_CSA3to2_1 (
    .io_in_a    (io_in_3),
    .io_in_b    (io_in_4),
    .io_in_c    (io_in_5),
    .io_out_sum (_U_CSA3to2_1_io_out_sum),
    .io_out_car (_U_CSA3to2_1_io_out_car)
  );
  CSA3to2 U_CSA3to2_2 (
    .io_in_a    (io_in_6),
    .io_in_b    (io_in_7),
    .io_in_c    (io_in_8),
    .io_out_sum (_U_CSA3to2_2_io_out_sum),
    .io_out_car (_U_CSA3to2_2_io_out_car)
  );
  CSA3to2 U_CSA3to2_3 (
    .io_in_a    (io_in_9),
    .io_in_b    (io_in_10),
    .io_in_c    (io_in_11),
    .io_out_sum (_U_CSA3to2_3_io_out_sum),
    .io_out_car (_U_CSA3to2_3_io_out_car)
  );
  CSA3to2 U_CSA3to2_4 (
    .io_in_a    (io_in_12),
    .io_in_b    (io_in_13),
    .io_in_c    (io_in_14),
    .io_out_sum (_U_CSA3to2_4_io_out_sum),
    .io_out_car (_U_CSA3to2_4_io_out_car)
  );
  CSA3to2 U_CSA3to2_5 (
    .io_in_a    (io_in_15),
    .io_in_b    (io_in_16),
    .io_in_c    (io_in_17),
    .io_out_sum (_U_CSA3to2_5_io_out_sum),
    .io_out_car (_U_CSA3to2_5_io_out_car)
  );
  CSA3to2 U_CSA3to2_6 (
    .io_in_a    (io_in_18),
    .io_in_b    (io_in_19),
    .io_in_c    (io_in_20),
    .io_out_sum (_U_CSA3to2_6_io_out_sum),
    .io_out_car (_U_CSA3to2_6_io_out_car)
  );
  CSA3to2 U_CSA3to2_7 (
    .io_in_a    (io_in_21),
    .io_in_b    (io_in_22),
    .io_in_c    (io_in_23),
    .io_out_sum (_U_CSA3to2_7_io_out_sum),
    .io_out_car (_U_CSA3to2_7_io_out_car)
  );
  CSA3to2 U_CSA3to2_8 (
    .io_in_a    (io_in_24),
    .io_in_b    (io_in_25),
    .io_in_c    (io_in_26),
    .io_out_sum (_U_CSA3to2_8_io_out_sum),
    .io_out_car (_U_CSA3to2_8_io_out_car)
  );
  CSA3to2 U_CSA3to2_9 (
    .io_in_a    (_U_CSA3to2_io_out_sum),
    .io_in_b    (_U_CSA3to2_io_out_car),
    .io_in_c    (_U_CSA3to2_1_io_out_sum),
    .io_out_sum (_U_CSA3to2_9_io_out_sum),
    .io_out_car (_U_CSA3to2_9_io_out_car)
  );
  CSA3to2 U_CSA3to2_10 (
    .io_in_a    (_U_CSA3to2_1_io_out_car),
    .io_in_b    (_U_CSA3to2_2_io_out_sum),
    .io_in_c    (_U_CSA3to2_2_io_out_car),
    .io_out_sum (_U_CSA3to2_10_io_out_sum),
    .io_out_car (_U_CSA3to2_10_io_out_car)
  );
  CSA3to2 U_CSA3to2_11 (
    .io_in_a    (_U_CSA3to2_3_io_out_sum),
    .io_in_b    (_U_CSA3to2_3_io_out_car),
    .io_in_c    (_U_CSA3to2_4_io_out_sum),
    .io_out_sum (_U_CSA3to2_11_io_out_sum),
    .io_out_car (_U_CSA3to2_11_io_out_car)
  );
  CSA3to2 U_CSA3to2_12 (
    .io_in_a    (_U_CSA3to2_4_io_out_car),
    .io_in_b    (_U_CSA3to2_5_io_out_sum),
    .io_in_c    (_U_CSA3to2_5_io_out_car),
    .io_out_sum (_U_CSA3to2_12_io_out_sum),
    .io_out_car (_U_CSA3to2_12_io_out_car)
  );
  CSA3to2 U_CSA3to2_13 (
    .io_in_a    (_U_CSA3to2_6_io_out_sum),
    .io_in_b    (_U_CSA3to2_6_io_out_car),
    .io_in_c    (_U_CSA3to2_7_io_out_sum),
    .io_out_sum (_U_CSA3to2_13_io_out_sum),
    .io_out_car (_U_CSA3to2_13_io_out_car)
  );
  CSA3to2 U_CSA3to2_14 (
    .io_in_a    (_U_CSA3to2_7_io_out_car),
    .io_in_b    (_U_CSA3to2_8_io_out_sum),
    .io_in_c    (_U_CSA3to2_8_io_out_car),
    .io_out_sum (_U_CSA3to2_14_io_out_sum),
    .io_out_car (_U_CSA3to2_14_io_out_car)
  );
  CSA3to2 U_CSA3to2_15 (
    .io_in_a    (_U_CSA3to2_9_io_out_sum),
    .io_in_b    (_U_CSA3to2_9_io_out_car),
    .io_in_c    (_U_CSA3to2_10_io_out_sum),
    .io_out_sum (_U_CSA3to2_15_io_out_sum),
    .io_out_car (_U_CSA3to2_15_io_out_car)
  );
  CSA3to2 U_CSA3to2_16 (
    .io_in_a    (_U_CSA3to2_10_io_out_car),
    .io_in_b    (_U_CSA3to2_11_io_out_sum),
    .io_in_c    (_U_CSA3to2_11_io_out_car),
    .io_out_sum (_U_CSA3to2_16_io_out_sum),
    .io_out_car (_U_CSA3to2_16_io_out_car)
  );
  CSA3to2 U_CSA3to2_17 (
    .io_in_a    (_U_CSA3to2_12_io_out_sum),
    .io_in_b    (_U_CSA3to2_12_io_out_car),
    .io_in_c    (_U_CSA3to2_13_io_out_sum),
    .io_out_sum (_U_CSA3to2_17_io_out_sum),
    .io_out_car (_U_CSA3to2_17_io_out_car)
  );
  CSA3to2 U_CSA3to2_18 (
    .io_in_a    (_U_CSA3to2_13_io_out_car),
    .io_in_b    (_U_CSA3to2_14_io_out_sum),
    .io_in_c    (_U_CSA3to2_14_io_out_car),
    .io_out_sum (_U_CSA3to2_18_io_out_sum),
    .io_out_car (_U_CSA3to2_18_io_out_car)
  );
  CSA4to2 U_CSA4to2 (
    .io_in_a    (_U_CSA3to2_15_io_out_sum),
    .io_in_b    (_U_CSA3to2_15_io_out_car),
    .io_in_c    (_U_CSA3to2_16_io_out_sum),
    .io_in_d    (_U_CSA3to2_16_io_out_car),
    .io_out_sum (_U_CSA4to2_io_out_sum),
    .io_out_car (_U_CSA4to2_io_out_car)
  );
  CSA4to2 U_CSA4to2_1 (
    .io_in_a    (_U_CSA3to2_17_io_out_sum),
    .io_in_b    (_U_CSA3to2_17_io_out_car),
    .io_in_c    (_U_CSA3to2_18_io_out_sum),
    .io_in_d    (_U_CSA3to2_18_io_out_car),
    .io_out_sum (_U_CSA4to2_1_io_out_sum),
    .io_out_car (_U_CSA4to2_1_io_out_car)
  );
  CSA4to2 U_CSA4to2_2 (
    .io_in_a    (U_CSA4to2_io_in_a_r),
    .io_in_b    (U_CSA4to2_io_in_b_r),
    .io_in_c    (U_CSA4to2_io_in_c_r),
    .io_in_d    (U_CSA4to2_io_in_d_r),
    .io_out_sum (io_out_sum),
    .io_out_car (io_out_car)
  );
endmodule

