// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module LsqEnqCtrl(
  input         clock,
  input         reset,
  input         io_redirect_valid,
  output        io_enq_canAccept,
  input  [1:0]  io_enq_needAlloc_0,
  input  [1:0]  io_enq_needAlloc_1,
  input  [1:0]  io_enq_needAlloc_2,
  input  [1:0]  io_enq_needAlloc_3,
  input  [1:0]  io_enq_needAlloc_4,
  input  [1:0]  io_enq_needAlloc_5,
  input         io_enq_req_0_valid,
  input  [34:0] io_enq_req_0_bits_fuType,
  input  [8:0]  io_enq_req_0_bits_fuOpType,
  input  [6:0]  io_enq_req_0_bits_uopIdx,
  input         io_enq_req_0_bits_lastUop,
  input         io_enq_req_0_bits_robIdx_flag,
  input  [7:0]  io_enq_req_0_bits_robIdx_value,
  input  [4:0]  io_enq_req_0_bits_numLsElem,
  input         io_enq_req_1_valid,
  input  [34:0] io_enq_req_1_bits_fuType,
  input  [8:0]  io_enq_req_1_bits_fuOpType,
  input  [6:0]  io_enq_req_1_bits_uopIdx,
  input         io_enq_req_1_bits_lastUop,
  input         io_enq_req_1_bits_robIdx_flag,
  input  [7:0]  io_enq_req_1_bits_robIdx_value,
  input  [4:0]  io_enq_req_1_bits_numLsElem,
  input         io_enq_req_2_valid,
  input  [34:0] io_enq_req_2_bits_fuType,
  input  [8:0]  io_enq_req_2_bits_fuOpType,
  input  [6:0]  io_enq_req_2_bits_uopIdx,
  input         io_enq_req_2_bits_lastUop,
  input         io_enq_req_2_bits_robIdx_flag,
  input  [7:0]  io_enq_req_2_bits_robIdx_value,
  input  [4:0]  io_enq_req_2_bits_numLsElem,
  input         io_enq_req_3_valid,
  input  [34:0] io_enq_req_3_bits_fuType,
  input  [8:0]  io_enq_req_3_bits_fuOpType,
  input  [6:0]  io_enq_req_3_bits_uopIdx,
  input         io_enq_req_3_bits_lastUop,
  input         io_enq_req_3_bits_robIdx_flag,
  input  [7:0]  io_enq_req_3_bits_robIdx_value,
  input  [4:0]  io_enq_req_3_bits_numLsElem,
  input         io_enq_req_4_valid,
  input  [34:0] io_enq_req_4_bits_fuType,
  input  [8:0]  io_enq_req_4_bits_fuOpType,
  input  [6:0]  io_enq_req_4_bits_uopIdx,
  input         io_enq_req_4_bits_lastUop,
  input         io_enq_req_4_bits_robIdx_flag,
  input  [7:0]  io_enq_req_4_bits_robIdx_value,
  input  [4:0]  io_enq_req_4_bits_numLsElem,
  input         io_enq_req_5_valid,
  input  [34:0] io_enq_req_5_bits_fuType,
  input  [8:0]  io_enq_req_5_bits_fuOpType,
  input  [6:0]  io_enq_req_5_bits_uopIdx,
  input         io_enq_req_5_bits_lastUop,
  input         io_enq_req_5_bits_robIdx_flag,
  input  [7:0]  io_enq_req_5_bits_robIdx_value,
  input  [4:0]  io_enq_req_5_bits_numLsElem,
  input         io_enq_iqAccept_0,
  input         io_enq_iqAccept_1,
  input         io_enq_iqAccept_2,
  input         io_enq_iqAccept_3,
  input         io_enq_iqAccept_4,
  input         io_enq_iqAccept_5,
  output        io_enq_resp_0_lqIdx_flag,
  output [6:0]  io_enq_resp_0_lqIdx_value,
  output        io_enq_resp_0_sqIdx_flag,
  output [5:0]  io_enq_resp_0_sqIdx_value,
  output        io_enq_resp_1_lqIdx_flag,
  output [6:0]  io_enq_resp_1_lqIdx_value,
  output        io_enq_resp_1_sqIdx_flag,
  output [5:0]  io_enq_resp_1_sqIdx_value,
  output        io_enq_resp_2_lqIdx_flag,
  output [6:0]  io_enq_resp_2_lqIdx_value,
  output        io_enq_resp_2_sqIdx_flag,
  output [5:0]  io_enq_resp_2_sqIdx_value,
  output        io_enq_resp_3_lqIdx_flag,
  output [6:0]  io_enq_resp_3_lqIdx_value,
  output        io_enq_resp_3_sqIdx_flag,
  output [5:0]  io_enq_resp_3_sqIdx_value,
  output        io_enq_resp_4_lqIdx_flag,
  output [6:0]  io_enq_resp_4_lqIdx_value,
  output        io_enq_resp_4_sqIdx_flag,
  output [5:0]  io_enq_resp_4_sqIdx_value,
  output        io_enq_resp_5_lqIdx_flag,
  output [6:0]  io_enq_resp_5_lqIdx_value,
  output        io_enq_resp_5_sqIdx_flag,
  output [5:0]  io_enq_resp_5_sqIdx_value,
  input  [3:0]  io_lcommit,
  input  [1:0]  io_scommit,
  input  [6:0]  io_lqCancelCnt,
  input  [5:0]  io_sqCancelCnt,
  output [6:0]  io_lqFreeCount,
  output [5:0]  io_sqFreeCount,
  output [1:0]  io_enqLsq_needAlloc_0,
  output [1:0]  io_enqLsq_needAlloc_1,
  output [1:0]  io_enqLsq_needAlloc_2,
  output [1:0]  io_enqLsq_needAlloc_3,
  output [1:0]  io_enqLsq_needAlloc_4,
  output [1:0]  io_enqLsq_needAlloc_5,
  output        io_enqLsq_req_0_valid,
  output [34:0] io_enqLsq_req_0_bits_fuType,
  output [8:0]  io_enqLsq_req_0_bits_fuOpType,
  output [6:0]  io_enqLsq_req_0_bits_uopIdx,
  output        io_enqLsq_req_0_bits_lastUop,
  output        io_enqLsq_req_0_bits_robIdx_flag,
  output [7:0]  io_enqLsq_req_0_bits_robIdx_value,
  output        io_enqLsq_req_0_bits_lqIdx_flag,
  output [6:0]  io_enqLsq_req_0_bits_lqIdx_value,
  output        io_enqLsq_req_0_bits_sqIdx_flag,
  output [5:0]  io_enqLsq_req_0_bits_sqIdx_value,
  output [4:0]  io_enqLsq_req_0_bits_numLsElem,
  output        io_enqLsq_req_1_valid,
  output [34:0] io_enqLsq_req_1_bits_fuType,
  output [8:0]  io_enqLsq_req_1_bits_fuOpType,
  output [6:0]  io_enqLsq_req_1_bits_uopIdx,
  output        io_enqLsq_req_1_bits_lastUop,
  output        io_enqLsq_req_1_bits_robIdx_flag,
  output [7:0]  io_enqLsq_req_1_bits_robIdx_value,
  output        io_enqLsq_req_1_bits_lqIdx_flag,
  output [6:0]  io_enqLsq_req_1_bits_lqIdx_value,
  output        io_enqLsq_req_1_bits_sqIdx_flag,
  output [5:0]  io_enqLsq_req_1_bits_sqIdx_value,
  output [4:0]  io_enqLsq_req_1_bits_numLsElem,
  output        io_enqLsq_req_2_valid,
  output [34:0] io_enqLsq_req_2_bits_fuType,
  output [8:0]  io_enqLsq_req_2_bits_fuOpType,
  output [6:0]  io_enqLsq_req_2_bits_uopIdx,
  output        io_enqLsq_req_2_bits_lastUop,
  output        io_enqLsq_req_2_bits_robIdx_flag,
  output [7:0]  io_enqLsq_req_2_bits_robIdx_value,
  output        io_enqLsq_req_2_bits_lqIdx_flag,
  output [6:0]  io_enqLsq_req_2_bits_lqIdx_value,
  output        io_enqLsq_req_2_bits_sqIdx_flag,
  output [5:0]  io_enqLsq_req_2_bits_sqIdx_value,
  output [4:0]  io_enqLsq_req_2_bits_numLsElem,
  output        io_enqLsq_req_3_valid,
  output [34:0] io_enqLsq_req_3_bits_fuType,
  output [8:0]  io_enqLsq_req_3_bits_fuOpType,
  output [6:0]  io_enqLsq_req_3_bits_uopIdx,
  output        io_enqLsq_req_3_bits_lastUop,
  output        io_enqLsq_req_3_bits_robIdx_flag,
  output [7:0]  io_enqLsq_req_3_bits_robIdx_value,
  output        io_enqLsq_req_3_bits_lqIdx_flag,
  output [6:0]  io_enqLsq_req_3_bits_lqIdx_value,
  output        io_enqLsq_req_3_bits_sqIdx_flag,
  output [5:0]  io_enqLsq_req_3_bits_sqIdx_value,
  output [4:0]  io_enqLsq_req_3_bits_numLsElem,
  output        io_enqLsq_req_4_valid,
  output [34:0] io_enqLsq_req_4_bits_fuType,
  output [8:0]  io_enqLsq_req_4_bits_fuOpType,
  output [6:0]  io_enqLsq_req_4_bits_uopIdx,
  output        io_enqLsq_req_4_bits_lastUop,
  output        io_enqLsq_req_4_bits_robIdx_flag,
  output [7:0]  io_enqLsq_req_4_bits_robIdx_value,
  output        io_enqLsq_req_4_bits_lqIdx_flag,
  output [6:0]  io_enqLsq_req_4_bits_lqIdx_value,
  output        io_enqLsq_req_4_bits_sqIdx_flag,
  output [5:0]  io_enqLsq_req_4_bits_sqIdx_value,
  output [4:0]  io_enqLsq_req_4_bits_numLsElem,
  output        io_enqLsq_req_5_valid,
  output [34:0] io_enqLsq_req_5_bits_fuType,
  output [8:0]  io_enqLsq_req_5_bits_fuOpType,
  output [6:0]  io_enqLsq_req_5_bits_uopIdx,
  output        io_enqLsq_req_5_bits_lastUop,
  output        io_enqLsq_req_5_bits_robIdx_flag,
  output [7:0]  io_enqLsq_req_5_bits_robIdx_value,
  output        io_enqLsq_req_5_bits_lqIdx_flag,
  output [6:0]  io_enqLsq_req_5_bits_lqIdx_value,
  output        io_enqLsq_req_5_bits_sqIdx_flag,
  output [5:0]  io_enqLsq_req_5_bits_sqIdx_value,
  output [4:0]  io_enqLsq_req_5_bits_numLsElem
);

  reg         lqPtr_flag;
  reg  [6:0]  lqPtr_value;
  reg         sqPtr_flag;
  reg  [5:0]  sqPtr_value;
  reg  [6:0]  lqCounter;
  reg  [5:0]  sqCounter;
  wire [4:0]  loadQueueElem_0 =
    io_enq_req_0_valid & (io_enq_req_0_bits_fuType[15] | io_enq_req_0_bits_fuType[31])
      ? io_enq_req_0_bits_numLsElem
      : 5'h0;
  wire [4:0]  storeQueueElem_0 =
    io_enq_req_0_valid & (io_enq_req_0_bits_fuType[16] | io_enq_req_0_bits_fuType[32])
      ? io_enq_req_0_bits_numLsElem
      : 5'h0;
  wire [5:0]  _loadFlowPopCount_T_10 =
    6'({1'h0, loadQueueElem_0}
       + {1'h0,
          io_enq_req_1_valid
          & (io_enq_req_1_bits_fuType[15] | io_enq_req_1_bits_fuType[31])
            ? io_enq_req_1_bits_numLsElem
            : 5'h0});
  wire [6:0]  _GEN = {1'h0, _loadFlowPopCount_T_10};
  wire [6:0]  _GEN_0 =
    {2'h0,
     io_enq_req_2_valid & (io_enq_req_2_bits_fuType[15] | io_enq_req_2_bits_fuType[31])
       ? io_enq_req_2_bits_numLsElem
       : 5'h0};
  wire [6:0]  _loadFlowPopCount_T_2 = 7'(_GEN + _GEN_0);
  wire [7:0]  _GEN_1 =
    {3'h0,
     io_enq_req_3_valid & (io_enq_req_3_bits_fuType[15] | io_enq_req_3_bits_fuType[31])
       ? io_enq_req_3_bits_numLsElem
       : 5'h0};
  wire [7:0]  loadFlowPopCount_4 = 8'({1'h0, 7'(_GEN + _GEN_0)} + _GEN_1);
  wire [7:0]  _GEN_2 =
    {3'h0,
     io_enq_req_4_valid & (io_enq_req_4_bits_fuType[15] | io_enq_req_4_bits_fuType[31])
       ? io_enq_req_4_bits_numLsElem
       : 5'h0};
  wire [7:0]  _loadFlowPopCount_T_9 = 8'({1'h0, 7'(_GEN + _GEN_0)} + 8'(_GEN_1 + _GEN_2));
  wire [5:0]  _storeFlowPopCount_T_10 =
    6'({1'h0, storeQueueElem_0}
       + {1'h0,
          io_enq_req_1_valid
          & (io_enq_req_1_bits_fuType[16] | io_enq_req_1_bits_fuType[32])
            ? io_enq_req_1_bits_numLsElem
            : 5'h0});
  wire [6:0]  _GEN_3 = {1'h0, _storeFlowPopCount_T_10};
  wire [6:0]  _GEN_4 =
    {2'h0,
     io_enq_req_2_valid & (io_enq_req_2_bits_fuType[16] | io_enq_req_2_bits_fuType[32])
       ? io_enq_req_2_bits_numLsElem
       : 5'h0};
  wire [6:0]  _storeFlowPopCount_T_2 = 7'(_GEN_3 + _GEN_4);
  wire [7:0]  _GEN_5 =
    {3'h0,
     io_enq_req_3_valid & (io_enq_req_3_bits_fuType[16] | io_enq_req_3_bits_fuType[32])
       ? io_enq_req_3_bits_numLsElem
       : 5'h0};
  wire [7:0]  storeFlowPopCount_4 = 8'({1'h0, 7'(_GEN_3 + _GEN_4)} + _GEN_5);
  wire [7:0]  _GEN_6 =
    {3'h0,
     io_enq_req_4_valid & (io_enq_req_4_bits_fuType[16] | io_enq_req_4_bits_fuType[32])
       ? io_enq_req_4_bits_numLsElem
       : 5'h0};
  wire [7:0]  _storeFlowPopCount_T_9 =
    8'({1'h0, 7'(_GEN_3 + _GEN_4)} + 8'(_GEN_5 + _GEN_6));
  wire [7:0]  lqAllocNumber =
    io_enq_iqAccept_0
      ? (io_enq_iqAccept_1
           ? (io_enq_iqAccept_2
                ? (io_enq_iqAccept_3
                     ? (io_enq_iqAccept_4
                          ? (io_enq_iqAccept_5
                               ? 8'(8'({1'h0, 7'(_GEN + _GEN_0)} + _GEN_1)
                                    + 8'(_GEN_2
                                         + {3'h0,
                                            io_enq_req_5_valid
                                            & (io_enq_req_5_bits_fuType[15]
                                               | io_enq_req_5_bits_fuType[31])
                                              ? io_enq_req_5_bits_numLsElem
                                              : 5'h0}))
                               : _loadFlowPopCount_T_9)
                          : loadFlowPopCount_4)
                     : {1'h0, _loadFlowPopCount_T_2})
                : {2'h0, _loadFlowPopCount_T_10})
           : {3'h0, loadQueueElem_0})
      : 8'h0;
  wire [7:0]  sqAllocNumber =
    io_enq_iqAccept_0
      ? (io_enq_iqAccept_1
           ? (io_enq_iqAccept_2
                ? (io_enq_iqAccept_3
                     ? (io_enq_iqAccept_4
                          ? (io_enq_iqAccept_5
                               ? 8'(8'({1'h0, 7'(_GEN_3 + _GEN_4)} + _GEN_5)
                                    + 8'(_GEN_6
                                         + {3'h0,
                                            io_enq_req_5_valid
                                            & (io_enq_req_5_bits_fuType[16]
                                               | io_enq_req_5_bits_fuType[32])
                                              ? io_enq_req_5_bits_numLsElem
                                              : 5'h0}))
                               : _storeFlowPopCount_T_9)
                          : storeFlowPopCount_4)
                     : {1'h0, _storeFlowPopCount_T_2})
                : {2'h0, _storeFlowPopCount_T_10})
           : {3'h0, storeQueueElem_0})
      : 8'h0;
  reg         t1_redirect;
  reg         t2_redirect;
  reg         t3_update;
  reg  [6:0]  t3_lqCancelCnt_next_r;
  reg  [5:0]  t3_sqCancelCnt_next_r;
  wire [7:0]  _GEN_7 = {1'h0, lqPtr_value};
  wire [6:0]  _GEN_8 = {1'h0, sqPtr_value};
  wire [8:0]  _GEN_9 = {2'h0, lqPtr_value};
  wire [8:0]  _GEN_10 = {1'h0, lqAllocNumber};
  wire [8:0]  _GEN_11 = {1'h0, sqAllocNumber};
  reg         io_enq_canAccept_REG;
  wire [8:0]  _io_enq_resp_0_lqIdx_diff_T_4 = 9'(_GEN_9 - 9'h48);
  wire        io_enq_resp_0_lqIdx_reverse_flag =
    $signed(_io_enq_resp_0_lqIdx_diff_T_4) > -9'sh1;
  wire        io_enq_resp_0_lqIdx_new_ptr_flag =
    io_enq_resp_0_lqIdx_reverse_flag ^ lqPtr_flag;
  wire [6:0]  _io_enq_resp_0_lqIdx_new_ptr_value_T_1 =
    io_enq_resp_0_lqIdx_reverse_flag ? _io_enq_resp_0_lqIdx_diff_T_4[6:0] : lqPtr_value;
  wire [7:0]  _io_enq_resp_0_sqIdx_diff_T_4 = 8'({2'h0, sqPtr_value} - 8'h38);
  wire        io_enq_resp_0_sqIdx_reverse_flag =
    $signed(_io_enq_resp_0_sqIdx_diff_T_4) > -8'sh1;
  wire        io_enq_resp_0_sqIdx_new_ptr_flag =
    io_enq_resp_0_sqIdx_reverse_flag ^ sqPtr_flag;
  wire [5:0]  _io_enq_resp_0_sqIdx_new_ptr_value_T_1 =
    io_enq_resp_0_sqIdx_reverse_flag ? _io_enq_resp_0_sqIdx_diff_T_4[5:0] : sqPtr_value;
  wire [7:0]  io_enq_resp_1_lqIdx_new_value = 8'(_GEN_7 + {3'h0, loadQueueElem_0});
  wire [8:0]  _io_enq_resp_1_lqIdx_diff_T_4 =
    9'({1'h0, io_enq_resp_1_lqIdx_new_value} - 9'h48);
  wire        io_enq_resp_1_lqIdx_reverse_flag =
    $signed(_io_enq_resp_1_lqIdx_diff_T_4) > -9'sh1;
  wire        io_enq_resp_1_lqIdx_new_ptr_flag =
    io_enq_resp_1_lqIdx_reverse_flag ^ lqPtr_flag;
  wire [6:0]  _io_enq_resp_1_lqIdx_new_ptr_value_T_1 =
    io_enq_resp_1_lqIdx_reverse_flag
      ? _io_enq_resp_1_lqIdx_diff_T_4[6:0]
      : io_enq_resp_1_lqIdx_new_value[6:0];
  wire [6:0]  io_enq_resp_1_sqIdx_new_value = 7'(_GEN_8 + {2'h0, storeQueueElem_0});
  wire [7:0]  _io_enq_resp_1_sqIdx_diff_T_4 =
    8'({1'h0, io_enq_resp_1_sqIdx_new_value} - 8'h38);
  wire        io_enq_resp_1_sqIdx_reverse_flag =
    $signed(_io_enq_resp_1_sqIdx_diff_T_4) > -8'sh1;
  wire        io_enq_resp_1_sqIdx_new_ptr_flag =
    io_enq_resp_1_sqIdx_reverse_flag ^ sqPtr_flag;
  wire [5:0]  _io_enq_resp_1_sqIdx_new_ptr_value_T_1 =
    io_enq_resp_1_sqIdx_reverse_flag
      ? _io_enq_resp_1_sqIdx_diff_T_4[5:0]
      : io_enq_resp_1_sqIdx_new_value[5:0];
  wire [7:0]  io_enq_resp_2_lqIdx_new_value = 8'(_GEN_7 + {2'h0, _loadFlowPopCount_T_10});
  wire [8:0]  _io_enq_resp_2_lqIdx_diff_T_4 =
    9'({1'h0, io_enq_resp_2_lqIdx_new_value} - 9'h48);
  wire        io_enq_resp_2_lqIdx_reverse_flag =
    $signed(_io_enq_resp_2_lqIdx_diff_T_4) > -9'sh1;
  wire        io_enq_resp_2_lqIdx_new_ptr_flag =
    io_enq_resp_2_lqIdx_reverse_flag ^ lqPtr_flag;
  wire [6:0]  _io_enq_resp_2_lqIdx_new_ptr_value_T_1 =
    io_enq_resp_2_lqIdx_reverse_flag
      ? _io_enq_resp_2_lqIdx_diff_T_4[6:0]
      : io_enq_resp_2_lqIdx_new_value[6:0];
  wire [6:0]  io_enq_resp_2_sqIdx_new_value = 7'(_GEN_8 + _GEN_3);
  wire [7:0]  _io_enq_resp_2_sqIdx_diff_T_4 =
    8'({1'h0, io_enq_resp_2_sqIdx_new_value} - 8'h38);
  wire        io_enq_resp_2_sqIdx_reverse_flag =
    $signed(_io_enq_resp_2_sqIdx_diff_T_4) > -8'sh1;
  wire        io_enq_resp_2_sqIdx_new_ptr_flag =
    io_enq_resp_2_sqIdx_reverse_flag ^ sqPtr_flag;
  wire [5:0]  _io_enq_resp_2_sqIdx_new_ptr_value_T_1 =
    io_enq_resp_2_sqIdx_reverse_flag
      ? _io_enq_resp_2_sqIdx_diff_T_4[5:0]
      : io_enq_resp_2_sqIdx_new_value[5:0];
  wire [7:0]  io_enq_resp_3_lqIdx_new_value = 8'(_GEN_7 + {1'h0, _loadFlowPopCount_T_2});
  wire [8:0]  _io_enq_resp_3_lqIdx_diff_T_4 =
    9'({1'h0, io_enq_resp_3_lqIdx_new_value} - 9'h48);
  wire        io_enq_resp_3_lqIdx_reverse_flag =
    $signed(_io_enq_resp_3_lqIdx_diff_T_4) > -9'sh1;
  wire        io_enq_resp_3_lqIdx_new_ptr_flag =
    io_enq_resp_3_lqIdx_reverse_flag ^ lqPtr_flag;
  wire [6:0]  _io_enq_resp_3_lqIdx_new_ptr_value_T_1 =
    io_enq_resp_3_lqIdx_reverse_flag
      ? _io_enq_resp_3_lqIdx_diff_T_4[6:0]
      : io_enq_resp_3_lqIdx_new_value[6:0];
  wire [6:0]  io_enq_resp_3_sqIdx_new_value =
    7'(_GEN_8 + {1'h0, _storeFlowPopCount_T_2[5:0]});
  wire [7:0]  _io_enq_resp_3_sqIdx_diff_T_4 =
    8'({1'h0, io_enq_resp_3_sqIdx_new_value} - 8'h38);
  wire        io_enq_resp_3_sqIdx_reverse_flag =
    $signed(_io_enq_resp_3_sqIdx_diff_T_4) > -8'sh1;
  wire        io_enq_resp_3_sqIdx_new_ptr_flag =
    io_enq_resp_3_sqIdx_reverse_flag ^ sqPtr_flag;
  wire [5:0]  _io_enq_resp_3_sqIdx_new_ptr_value_T_1 =
    io_enq_resp_3_sqIdx_reverse_flag
      ? _io_enq_resp_3_sqIdx_diff_T_4[5:0]
      : io_enq_resp_3_sqIdx_new_value[5:0];
  wire [7:0]  io_enq_resp_4_lqIdx_new_value =
    8'(_GEN_7 + {1'h0, loadFlowPopCount_4[6:0]});
  wire [8:0]  _io_enq_resp_4_lqIdx_diff_T_4 =
    9'({1'h0, io_enq_resp_4_lqIdx_new_value} - 9'h48);
  wire        io_enq_resp_4_lqIdx_reverse_flag =
    $signed(_io_enq_resp_4_lqIdx_diff_T_4) > -9'sh1;
  wire        io_enq_resp_4_lqIdx_new_ptr_flag =
    io_enq_resp_4_lqIdx_reverse_flag ^ lqPtr_flag;
  wire [6:0]  _io_enq_resp_4_lqIdx_new_ptr_value_T_1 =
    io_enq_resp_4_lqIdx_reverse_flag
      ? _io_enq_resp_4_lqIdx_diff_T_4[6:0]
      : io_enq_resp_4_lqIdx_new_value[6:0];
  wire [6:0]  io_enq_resp_4_sqIdx_new_value =
    7'(_GEN_8 + {1'h0, storeFlowPopCount_4[5:0]});
  wire [7:0]  _io_enq_resp_4_sqIdx_diff_T_4 =
    8'({1'h0, io_enq_resp_4_sqIdx_new_value} - 8'h38);
  wire        io_enq_resp_4_sqIdx_reverse_flag =
    $signed(_io_enq_resp_4_sqIdx_diff_T_4) > -8'sh1;
  wire        io_enq_resp_4_sqIdx_new_ptr_flag =
    io_enq_resp_4_sqIdx_reverse_flag ^ sqPtr_flag;
  wire [5:0]  _io_enq_resp_4_sqIdx_new_ptr_value_T_1 =
    io_enq_resp_4_sqIdx_reverse_flag
      ? _io_enq_resp_4_sqIdx_diff_T_4[5:0]
      : io_enq_resp_4_sqIdx_new_value[5:0];
  wire [7:0]  io_enq_resp_5_lqIdx_new_value =
    8'(_GEN_7 + {1'h0, _loadFlowPopCount_T_9[6:0]});
  wire [8:0]  _io_enq_resp_5_lqIdx_diff_T_4 =
    9'({1'h0, io_enq_resp_5_lqIdx_new_value} - 9'h48);
  wire        io_enq_resp_5_lqIdx_reverse_flag =
    $signed(_io_enq_resp_5_lqIdx_diff_T_4) > -9'sh1;
  wire        io_enq_resp_5_lqIdx_new_ptr_flag =
    io_enq_resp_5_lqIdx_reverse_flag ^ lqPtr_flag;
  wire [6:0]  _io_enq_resp_5_lqIdx_new_ptr_value_T_1 =
    io_enq_resp_5_lqIdx_reverse_flag
      ? _io_enq_resp_5_lqIdx_diff_T_4[6:0]
      : io_enq_resp_5_lqIdx_new_value[6:0];
  wire [6:0]  io_enq_resp_5_sqIdx_new_value =
    7'(_GEN_8 + {1'h0, _storeFlowPopCount_T_9[5:0]});
  wire [7:0]  _io_enq_resp_5_sqIdx_diff_T_4 =
    8'({1'h0, io_enq_resp_5_sqIdx_new_value} - 8'h38);
  wire        io_enq_resp_5_sqIdx_reverse_flag =
    $signed(_io_enq_resp_5_sqIdx_diff_T_4) > -8'sh1;
  wire        io_enq_resp_5_sqIdx_new_ptr_flag =
    io_enq_resp_5_sqIdx_reverse_flag ^ sqPtr_flag;
  wire [5:0]  _io_enq_resp_5_sqIdx_new_ptr_value_T_1 =
    io_enq_resp_5_sqIdx_reverse_flag
      ? _io_enq_resp_5_sqIdx_diff_T_4[5:0]
      : io_enq_resp_5_sqIdx_new_value[5:0];
  reg  [1:0]  REG_0;
  reg  [1:0]  REG_1;
  reg  [1:0]  REG_2;
  reg  [1:0]  REG_3;
  reg  [1:0]  REG_4;
  reg  [1:0]  REG_5;
  reg         io_enqLsq_req_0_valid_REG;
  reg  [34:0] io_enqLsq_req_0_bits_r_fuType;
  reg  [8:0]  io_enqLsq_req_0_bits_r_fuOpType;
  reg  [6:0]  io_enqLsq_req_0_bits_r_uopIdx;
  reg         io_enqLsq_req_0_bits_r_lastUop;
  reg         io_enqLsq_req_0_bits_r_robIdx_flag;
  reg  [7:0]  io_enqLsq_req_0_bits_r_robIdx_value;
  reg  [4:0]  io_enqLsq_req_0_bits_r_numLsElem;
  reg         io_enqLsq_req_0_bits_lqIdx_r_flag;
  reg  [6:0]  io_enqLsq_req_0_bits_lqIdx_r_value;
  reg         io_enqLsq_req_0_bits_sqIdx_r_flag;
  reg  [5:0]  io_enqLsq_req_0_bits_sqIdx_r_value;
  reg         io_enqLsq_req_1_valid_REG;
  reg  [34:0] io_enqLsq_req_1_bits_r_fuType;
  reg  [8:0]  io_enqLsq_req_1_bits_r_fuOpType;
  reg  [6:0]  io_enqLsq_req_1_bits_r_uopIdx;
  reg         io_enqLsq_req_1_bits_r_lastUop;
  reg         io_enqLsq_req_1_bits_r_robIdx_flag;
  reg  [7:0]  io_enqLsq_req_1_bits_r_robIdx_value;
  reg  [4:0]  io_enqLsq_req_1_bits_r_numLsElem;
  reg         io_enqLsq_req_1_bits_lqIdx_r_flag;
  reg  [6:0]  io_enqLsq_req_1_bits_lqIdx_r_value;
  reg         io_enqLsq_req_1_bits_sqIdx_r_flag;
  reg  [5:0]  io_enqLsq_req_1_bits_sqIdx_r_value;
  reg         io_enqLsq_req_2_valid_REG;
  reg  [34:0] io_enqLsq_req_2_bits_r_fuType;
  reg  [8:0]  io_enqLsq_req_2_bits_r_fuOpType;
  reg  [6:0]  io_enqLsq_req_2_bits_r_uopIdx;
  reg         io_enqLsq_req_2_bits_r_lastUop;
  reg         io_enqLsq_req_2_bits_r_robIdx_flag;
  reg  [7:0]  io_enqLsq_req_2_bits_r_robIdx_value;
  reg  [4:0]  io_enqLsq_req_2_bits_r_numLsElem;
  reg         io_enqLsq_req_2_bits_lqIdx_r_flag;
  reg  [6:0]  io_enqLsq_req_2_bits_lqIdx_r_value;
  reg         io_enqLsq_req_2_bits_sqIdx_r_flag;
  reg  [5:0]  io_enqLsq_req_2_bits_sqIdx_r_value;
  reg         io_enqLsq_req_3_valid_REG;
  reg  [34:0] io_enqLsq_req_3_bits_r_fuType;
  reg  [8:0]  io_enqLsq_req_3_bits_r_fuOpType;
  reg  [6:0]  io_enqLsq_req_3_bits_r_uopIdx;
  reg         io_enqLsq_req_3_bits_r_lastUop;
  reg         io_enqLsq_req_3_bits_r_robIdx_flag;
  reg  [7:0]  io_enqLsq_req_3_bits_r_robIdx_value;
  reg  [4:0]  io_enqLsq_req_3_bits_r_numLsElem;
  reg         io_enqLsq_req_3_bits_lqIdx_r_flag;
  reg  [6:0]  io_enqLsq_req_3_bits_lqIdx_r_value;
  reg         io_enqLsq_req_3_bits_sqIdx_r_flag;
  reg  [5:0]  io_enqLsq_req_3_bits_sqIdx_r_value;
  reg         io_enqLsq_req_4_valid_REG;
  reg  [34:0] io_enqLsq_req_4_bits_r_fuType;
  reg  [8:0]  io_enqLsq_req_4_bits_r_fuOpType;
  reg  [6:0]  io_enqLsq_req_4_bits_r_uopIdx;
  reg         io_enqLsq_req_4_bits_r_lastUop;
  reg         io_enqLsq_req_4_bits_r_robIdx_flag;
  reg  [7:0]  io_enqLsq_req_4_bits_r_robIdx_value;
  reg  [4:0]  io_enqLsq_req_4_bits_r_numLsElem;
  reg         io_enqLsq_req_4_bits_lqIdx_r_flag;
  reg  [6:0]  io_enqLsq_req_4_bits_lqIdx_r_value;
  reg         io_enqLsq_req_4_bits_sqIdx_r_flag;
  reg  [5:0]  io_enqLsq_req_4_bits_sqIdx_r_value;
  reg         io_enqLsq_req_5_valid_REG;
  reg  [34:0] io_enqLsq_req_5_bits_r_fuType;
  reg  [8:0]  io_enqLsq_req_5_bits_r_fuOpType;
  reg  [6:0]  io_enqLsq_req_5_bits_r_uopIdx;
  reg         io_enqLsq_req_5_bits_r_lastUop;
  reg         io_enqLsq_req_5_bits_r_robIdx_flag;
  reg  [7:0]  io_enqLsq_req_5_bits_r_robIdx_value;
  reg  [4:0]  io_enqLsq_req_5_bits_r_numLsElem;
  reg         io_enqLsq_req_5_bits_lqIdx_r_flag;
  reg  [6:0]  io_enqLsq_req_5_bits_lqIdx_r_value;
  reg         io_enqLsq_req_5_bits_sqIdx_r_flag;
  reg  [5:0]  io_enqLsq_req_5_bits_sqIdx_r_value;
  wire [7:0]  lqPtr_flipped_new_ptr_new_value =
    8'(_GEN_7 + {1'h0, 7'(7'h48 - t3_lqCancelCnt_next_r)});
  wire [8:0]  _lqPtr_flipped_new_ptr_diff_T_4 =
    9'({1'h0, lqPtr_flipped_new_ptr_new_value} - 9'h48);
  wire        lqPtr_flipped_new_ptr_reverse_flag =
    $signed(_lqPtr_flipped_new_ptr_diff_T_4) > -9'sh1;
  wire [6:0]  sqPtr_flipped_new_ptr_new_value =
    7'(_GEN_8 + {1'h0, 6'(6'h38 - t3_sqCancelCnt_next_r)});
  wire [7:0]  _sqPtr_flipped_new_ptr_diff_T_4 =
    8'({1'h0, sqPtr_flipped_new_ptr_new_value} - 8'h38);
  wire        sqPtr_flipped_new_ptr_reverse_flag =
    $signed(_sqPtr_flipped_new_ptr_diff_T_4) > -8'sh1;
  wire        _GEN_12 = ~io_redirect_valid & io_enq_canAccept_REG;
  wire [8:0]  lqPtr_new_value = 9'(_GEN_9 + _GEN_10);
  wire [9:0]  _lqPtr_diff_T_4 = 10'({1'h0, lqPtr_new_value} - 10'h48);
  wire        lqPtr_reverse_flag = $signed(_lqPtr_diff_T_4) > -10'sh1;
  wire [8:0]  sqPtr_new_value = 9'({3'h0, sqPtr_value} + _GEN_11);
  wire [9:0]  _sqPtr_diff_T_4 = 10'({1'h0, sqPtr_new_value} - 10'h38);
  wire        sqPtr_reverse_flag = $signed(_sqPtr_diff_T_4) > -10'sh1;
  wire [6:0]  _GEN_13 = {3'h0, io_lcommit};
  wire [5:0]  _GEN_14 = {4'h0, io_scommit};
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      lqPtr_flag <= 1'h0;
      lqPtr_value <= 7'h0;
      sqPtr_flag <= 1'h0;
      sqPtr_value <= 6'h0;
      lqCounter <= 7'h48;
      sqCounter <= 6'h38;
      t3_lqCancelCnt_next_r <= 7'h0;
      t3_sqCancelCnt_next_r <= 6'h0;
    end
    else begin
      if (t3_update) begin
        lqPtr_flag <= lqPtr_flipped_new_ptr_reverse_flag ^ ~lqPtr_flag;
        lqPtr_value <=
          lqPtr_flipped_new_ptr_reverse_flag
            ? _lqPtr_flipped_new_ptr_diff_T_4[6:0]
            : lqPtr_flipped_new_ptr_new_value[6:0];
        sqPtr_flag <= sqPtr_flipped_new_ptr_reverse_flag ^ ~sqPtr_flag;
        sqPtr_value <=
          sqPtr_flipped_new_ptr_reverse_flag
            ? _sqPtr_flipped_new_ptr_diff_T_4[5:0]
            : sqPtr_flipped_new_ptr_new_value[5:0];
        lqCounter <= 7'(lqCounter + 7'(_GEN_13 + t3_lqCancelCnt_next_r));
        sqCounter <= 6'(sqCounter + 6'(_GEN_14 + t3_sqCancelCnt_next_r));
      end
      else begin
        lqPtr_flag <= _GEN_12 & lqPtr_reverse_flag ^ lqPtr_flag;
        if (_GEN_12) begin
          lqPtr_value <= lqPtr_reverse_flag ? _lqPtr_diff_T_4[6:0] : lqPtr_new_value[6:0];
          sqPtr_value <= sqPtr_reverse_flag ? _sqPtr_diff_T_4[5:0] : sqPtr_new_value[5:0];
          lqCounter <= 7'(7'(lqCounter + _GEN_13) - lqAllocNumber[6:0]);
          sqCounter <= 6'(6'(sqCounter + _GEN_14) - sqAllocNumber[5:0]);
        end
        else begin
          lqCounter <= 7'(lqCounter + _GEN_13);
          sqCounter <= 6'(sqCounter + _GEN_14);
        end
        sqPtr_flag <= _GEN_12 & sqPtr_reverse_flag ^ sqPtr_flag;
      end
      if (~(io_lqCancelCnt == t3_lqCancelCnt_next_r))
        t3_lqCancelCnt_next_r <= io_lqCancelCnt;
      if (~(io_sqCancelCnt == t3_sqCancelCnt_next_r))
        t3_sqCancelCnt_next_r <= io_sqCancelCnt;
    end
  end // always @(posedge, posedge)
  wire        t2_update =
    t2_redirect
    & {|io_enq_needAlloc_5,
       |io_enq_needAlloc_4,
       |io_enq_needAlloc_3,
       |io_enq_needAlloc_2,
       |io_enq_needAlloc_1,
       |io_enq_needAlloc_0} == 6'h0;
  wire        do_enq = io_enq_req_0_valid & ~io_redirect_valid & io_enq_canAccept_REG;
  wire        do_enq_1 = io_enq_req_1_valid & ~io_redirect_valid & io_enq_canAccept_REG;
  wire        do_enq_2 = io_enq_req_2_valid & ~io_redirect_valid & io_enq_canAccept_REG;
  wire        do_enq_3 = io_enq_req_3_valid & ~io_redirect_valid & io_enq_canAccept_REG;
  wire        do_enq_4 = io_enq_req_4_valid & ~io_redirect_valid & io_enq_canAccept_REG;
  wire        do_enq_5 = io_enq_req_5_valid & ~io_redirect_valid & io_enq_canAccept_REG;
  always @(posedge clock) begin
    t1_redirect <= io_redirect_valid;
    t2_redirect <= t1_redirect;
    t3_update <= t2_update;
    io_enq_canAccept_REG <=
      {2'h0, lqCounter} >= 9'(_GEN_10 + 9'h6) & {3'h0, sqCounter} >= 9'(_GEN_11 + 9'h4)
      & ~t2_update;
    REG_0 <= io_enq_needAlloc_0;
    REG_1 <= io_enq_needAlloc_1;
    REG_2 <= io_enq_needAlloc_2;
    REG_3 <= io_enq_needAlloc_3;
    REG_4 <= io_enq_needAlloc_4;
    REG_5 <= io_enq_needAlloc_5;
    io_enqLsq_req_0_valid_REG <= do_enq;
    if (do_enq) begin
      io_enqLsq_req_0_bits_r_fuType <= io_enq_req_0_bits_fuType;
      io_enqLsq_req_0_bits_r_fuOpType <= io_enq_req_0_bits_fuOpType;
      io_enqLsq_req_0_bits_r_uopIdx <= io_enq_req_0_bits_uopIdx;
      io_enqLsq_req_0_bits_r_lastUop <= io_enq_req_0_bits_lastUop;
      io_enqLsq_req_0_bits_r_robIdx_flag <= io_enq_req_0_bits_robIdx_flag;
      io_enqLsq_req_0_bits_r_robIdx_value <= io_enq_req_0_bits_robIdx_value;
      io_enqLsq_req_0_bits_r_numLsElem <= io_enq_req_0_bits_numLsElem;
      io_enqLsq_req_0_bits_lqIdx_r_flag <= io_enq_resp_0_lqIdx_new_ptr_flag;
      io_enqLsq_req_0_bits_lqIdx_r_value <= _io_enq_resp_0_lqIdx_new_ptr_value_T_1;
      io_enqLsq_req_0_bits_sqIdx_r_flag <= io_enq_resp_0_sqIdx_new_ptr_flag;
      io_enqLsq_req_0_bits_sqIdx_r_value <= _io_enq_resp_0_sqIdx_new_ptr_value_T_1;
    end
    io_enqLsq_req_1_valid_REG <= do_enq_1;
    if (do_enq_1) begin
      io_enqLsq_req_1_bits_r_fuType <= io_enq_req_1_bits_fuType;
      io_enqLsq_req_1_bits_r_fuOpType <= io_enq_req_1_bits_fuOpType;
      io_enqLsq_req_1_bits_r_uopIdx <= io_enq_req_1_bits_uopIdx;
      io_enqLsq_req_1_bits_r_lastUop <= io_enq_req_1_bits_lastUop;
      io_enqLsq_req_1_bits_r_robIdx_flag <= io_enq_req_1_bits_robIdx_flag;
      io_enqLsq_req_1_bits_r_robIdx_value <= io_enq_req_1_bits_robIdx_value;
      io_enqLsq_req_1_bits_r_numLsElem <= io_enq_req_1_bits_numLsElem;
      io_enqLsq_req_1_bits_lqIdx_r_flag <= io_enq_resp_1_lqIdx_new_ptr_flag;
      io_enqLsq_req_1_bits_lqIdx_r_value <= _io_enq_resp_1_lqIdx_new_ptr_value_T_1;
      io_enqLsq_req_1_bits_sqIdx_r_flag <= io_enq_resp_1_sqIdx_new_ptr_flag;
      io_enqLsq_req_1_bits_sqIdx_r_value <= _io_enq_resp_1_sqIdx_new_ptr_value_T_1;
    end
    io_enqLsq_req_2_valid_REG <= do_enq_2;
    if (do_enq_2) begin
      io_enqLsq_req_2_bits_r_fuType <= io_enq_req_2_bits_fuType;
      io_enqLsq_req_2_bits_r_fuOpType <= io_enq_req_2_bits_fuOpType;
      io_enqLsq_req_2_bits_r_uopIdx <= io_enq_req_2_bits_uopIdx;
      io_enqLsq_req_2_bits_r_lastUop <= io_enq_req_2_bits_lastUop;
      io_enqLsq_req_2_bits_r_robIdx_flag <= io_enq_req_2_bits_robIdx_flag;
      io_enqLsq_req_2_bits_r_robIdx_value <= io_enq_req_2_bits_robIdx_value;
      io_enqLsq_req_2_bits_r_numLsElem <= io_enq_req_2_bits_numLsElem;
      io_enqLsq_req_2_bits_lqIdx_r_flag <= io_enq_resp_2_lqIdx_new_ptr_flag;
      io_enqLsq_req_2_bits_lqIdx_r_value <= _io_enq_resp_2_lqIdx_new_ptr_value_T_1;
      io_enqLsq_req_2_bits_sqIdx_r_flag <= io_enq_resp_2_sqIdx_new_ptr_flag;
      io_enqLsq_req_2_bits_sqIdx_r_value <= _io_enq_resp_2_sqIdx_new_ptr_value_T_1;
    end
    io_enqLsq_req_3_valid_REG <= do_enq_3;
    if (do_enq_3) begin
      io_enqLsq_req_3_bits_r_fuType <= io_enq_req_3_bits_fuType;
      io_enqLsq_req_3_bits_r_fuOpType <= io_enq_req_3_bits_fuOpType;
      io_enqLsq_req_3_bits_r_uopIdx <= io_enq_req_3_bits_uopIdx;
      io_enqLsq_req_3_bits_r_lastUop <= io_enq_req_3_bits_lastUop;
      io_enqLsq_req_3_bits_r_robIdx_flag <= io_enq_req_3_bits_robIdx_flag;
      io_enqLsq_req_3_bits_r_robIdx_value <= io_enq_req_3_bits_robIdx_value;
      io_enqLsq_req_3_bits_r_numLsElem <= io_enq_req_3_bits_numLsElem;
      io_enqLsq_req_3_bits_lqIdx_r_flag <= io_enq_resp_3_lqIdx_new_ptr_flag;
      io_enqLsq_req_3_bits_lqIdx_r_value <= _io_enq_resp_3_lqIdx_new_ptr_value_T_1;
      io_enqLsq_req_3_bits_sqIdx_r_flag <= io_enq_resp_3_sqIdx_new_ptr_flag;
      io_enqLsq_req_3_bits_sqIdx_r_value <= _io_enq_resp_3_sqIdx_new_ptr_value_T_1;
    end
    io_enqLsq_req_4_valid_REG <= do_enq_4;
    if (do_enq_4) begin
      io_enqLsq_req_4_bits_r_fuType <= io_enq_req_4_bits_fuType;
      io_enqLsq_req_4_bits_r_fuOpType <= io_enq_req_4_bits_fuOpType;
      io_enqLsq_req_4_bits_r_uopIdx <= io_enq_req_4_bits_uopIdx;
      io_enqLsq_req_4_bits_r_lastUop <= io_enq_req_4_bits_lastUop;
      io_enqLsq_req_4_bits_r_robIdx_flag <= io_enq_req_4_bits_robIdx_flag;
      io_enqLsq_req_4_bits_r_robIdx_value <= io_enq_req_4_bits_robIdx_value;
      io_enqLsq_req_4_bits_r_numLsElem <= io_enq_req_4_bits_numLsElem;
      io_enqLsq_req_4_bits_lqIdx_r_flag <= io_enq_resp_4_lqIdx_new_ptr_flag;
      io_enqLsq_req_4_bits_lqIdx_r_value <= _io_enq_resp_4_lqIdx_new_ptr_value_T_1;
      io_enqLsq_req_4_bits_sqIdx_r_flag <= io_enq_resp_4_sqIdx_new_ptr_flag;
      io_enqLsq_req_4_bits_sqIdx_r_value <= _io_enq_resp_4_sqIdx_new_ptr_value_T_1;
    end
    io_enqLsq_req_5_valid_REG <= do_enq_5;
    if (do_enq_5) begin
      io_enqLsq_req_5_bits_r_fuType <= io_enq_req_5_bits_fuType;
      io_enqLsq_req_5_bits_r_fuOpType <= io_enq_req_5_bits_fuOpType;
      io_enqLsq_req_5_bits_r_uopIdx <= io_enq_req_5_bits_uopIdx;
      io_enqLsq_req_5_bits_r_lastUop <= io_enq_req_5_bits_lastUop;
      io_enqLsq_req_5_bits_r_robIdx_flag <= io_enq_req_5_bits_robIdx_flag;
      io_enqLsq_req_5_bits_r_robIdx_value <= io_enq_req_5_bits_robIdx_value;
      io_enqLsq_req_5_bits_r_numLsElem <= io_enq_req_5_bits_numLsElem;
      io_enqLsq_req_5_bits_lqIdx_r_flag <= io_enq_resp_5_lqIdx_new_ptr_flag;
      io_enqLsq_req_5_bits_lqIdx_r_value <= _io_enq_resp_5_lqIdx_new_ptr_value_T_1;
      io_enqLsq_req_5_bits_sqIdx_r_flag <= io_enq_resp_5_sqIdx_new_ptr_flag;
      io_enqLsq_req_5_bits_sqIdx_r_value <= _io_enq_resp_5_sqIdx_new_ptr_value_T_1;
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:235];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [7:0] i = 8'h0; i < 8'hEC; i += 8'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        lqPtr_flag = _RANDOM[8'h0][0];
        lqPtr_value = _RANDOM[8'h0][7:1];
        sqPtr_flag = _RANDOM[8'h0][8];
        sqPtr_value = _RANDOM[8'h0][14:9];
        lqCounter = _RANDOM[8'h0][21:15];
        sqCounter = _RANDOM[8'h0][27:22];
        t1_redirect = _RANDOM[8'h0][29];
        t2_redirect = _RANDOM[8'h0][30];
        t3_update = _RANDOM[8'h0][31];
        t3_lqCancelCnt_next_r = _RANDOM[8'h1][6:0];
        t3_sqCancelCnt_next_r = _RANDOM[8'h1][12:7];
        io_enq_canAccept_REG = _RANDOM[8'h1][13];
        REG_0 = _RANDOM[8'h1][15:14];
        REG_1 = _RANDOM[8'h1][17:16];
        REG_2 = _RANDOM[8'h1][19:18];
        REG_3 = _RANDOM[8'h1][21:20];
        REG_4 = _RANDOM[8'h1][23:22];
        REG_5 = _RANDOM[8'h1][25:24];
        io_enqLsq_req_0_valid_REG = _RANDOM[8'h2][0];
        io_enqLsq_req_0_bits_r_fuType = {_RANDOM[8'h7][31:8], _RANDOM[8'h8][10:0]};
        io_enqLsq_req_0_bits_r_fuOpType = _RANDOM[8'h8][19:11];
        io_enqLsq_req_0_bits_r_uopIdx = _RANDOM[8'h10][25:19];
        io_enqLsq_req_0_bits_r_lastUop = _RANDOM[8'h10][28];
        io_enqLsq_req_0_bits_r_robIdx_flag = _RANDOM[8'h14][13];
        io_enqLsq_req_0_bits_r_robIdx_value = _RANDOM[8'h14][21:14];
        io_enqLsq_req_0_bits_r_numLsElem = _RANDOM[8'h28][13:9];
        io_enqLsq_req_0_bits_lqIdx_r_flag = _RANDOM[8'h28][14];
        io_enqLsq_req_0_bits_lqIdx_r_value = _RANDOM[8'h28][21:15];
        io_enqLsq_req_0_bits_sqIdx_r_flag = _RANDOM[8'h28][22];
        io_enqLsq_req_0_bits_sqIdx_r_value = _RANDOM[8'h28][28:23];
        io_enqLsq_req_1_valid_REG = _RANDOM[8'h28][29];
        io_enqLsq_req_1_bits_r_fuType = {_RANDOM[8'h2E][31:5], _RANDOM[8'h2F][7:0]};
        io_enqLsq_req_1_bits_r_fuOpType = _RANDOM[8'h2F][16:8];
        io_enqLsq_req_1_bits_r_uopIdx = _RANDOM[8'h37][22:16];
        io_enqLsq_req_1_bits_r_lastUop = _RANDOM[8'h37][25];
        io_enqLsq_req_1_bits_r_robIdx_flag = _RANDOM[8'h3B][10];
        io_enqLsq_req_1_bits_r_robIdx_value = _RANDOM[8'h3B][18:11];
        io_enqLsq_req_1_bits_r_numLsElem = _RANDOM[8'h4F][10:6];
        io_enqLsq_req_1_bits_lqIdx_r_flag = _RANDOM[8'h4F][11];
        io_enqLsq_req_1_bits_lqIdx_r_value = _RANDOM[8'h4F][18:12];
        io_enqLsq_req_1_bits_sqIdx_r_flag = _RANDOM[8'h4F][19];
        io_enqLsq_req_1_bits_sqIdx_r_value = _RANDOM[8'h4F][25:20];
        io_enqLsq_req_2_valid_REG = _RANDOM[8'h4F][26];
        io_enqLsq_req_2_bits_r_fuType = {_RANDOM[8'h55][31:2], _RANDOM[8'h56][4:0]};
        io_enqLsq_req_2_bits_r_fuOpType = _RANDOM[8'h56][13:5];
        io_enqLsq_req_2_bits_r_uopIdx = _RANDOM[8'h5E][19:13];
        io_enqLsq_req_2_bits_r_lastUop = _RANDOM[8'h5E][22];
        io_enqLsq_req_2_bits_r_robIdx_flag = _RANDOM[8'h62][7];
        io_enqLsq_req_2_bits_r_robIdx_value = _RANDOM[8'h62][15:8];
        io_enqLsq_req_2_bits_r_numLsElem = _RANDOM[8'h76][7:3];
        io_enqLsq_req_2_bits_lqIdx_r_flag = _RANDOM[8'h76][8];
        io_enqLsq_req_2_bits_lqIdx_r_value = _RANDOM[8'h76][15:9];
        io_enqLsq_req_2_bits_sqIdx_r_flag = _RANDOM[8'h76][16];
        io_enqLsq_req_2_bits_sqIdx_r_value = _RANDOM[8'h76][22:17];
        io_enqLsq_req_3_valid_REG = _RANDOM[8'h76][23];
        io_enqLsq_req_3_bits_r_fuType =
          {_RANDOM[8'h7B][31], _RANDOM[8'h7C], _RANDOM[8'h7D][1:0]};
        io_enqLsq_req_3_bits_r_fuOpType = _RANDOM[8'h7D][10:2];
        io_enqLsq_req_3_bits_r_uopIdx = _RANDOM[8'h85][16:10];
        io_enqLsq_req_3_bits_r_lastUop = _RANDOM[8'h85][19];
        io_enqLsq_req_3_bits_r_robIdx_flag = _RANDOM[8'h89][4];
        io_enqLsq_req_3_bits_r_robIdx_value = _RANDOM[8'h89][12:5];
        io_enqLsq_req_3_bits_r_numLsElem = _RANDOM[8'h9D][4:0];
        io_enqLsq_req_3_bits_lqIdx_r_flag = _RANDOM[8'h9D][5];
        io_enqLsq_req_3_bits_lqIdx_r_value = _RANDOM[8'h9D][12:6];
        io_enqLsq_req_3_bits_sqIdx_r_flag = _RANDOM[8'h9D][13];
        io_enqLsq_req_3_bits_sqIdx_r_value = _RANDOM[8'h9D][19:14];
        io_enqLsq_req_4_valid_REG = _RANDOM[8'h9D][20];
        io_enqLsq_req_4_bits_r_fuType = {_RANDOM[8'hA2][31:28], _RANDOM[8'hA3][30:0]};
        io_enqLsq_req_4_bits_r_fuOpType = {_RANDOM[8'hA3][31], _RANDOM[8'hA4][7:0]};
        io_enqLsq_req_4_bits_r_uopIdx = _RANDOM[8'hAC][13:7];
        io_enqLsq_req_4_bits_r_lastUop = _RANDOM[8'hAC][16];
        io_enqLsq_req_4_bits_r_robIdx_flag = _RANDOM[8'hB0][1];
        io_enqLsq_req_4_bits_r_robIdx_value = _RANDOM[8'hB0][9:2];
        io_enqLsq_req_4_bits_r_numLsElem = {_RANDOM[8'hC3][31:29], _RANDOM[8'hC4][1:0]};
        io_enqLsq_req_4_bits_lqIdx_r_flag = _RANDOM[8'hC4][2];
        io_enqLsq_req_4_bits_lqIdx_r_value = _RANDOM[8'hC4][9:3];
        io_enqLsq_req_4_bits_sqIdx_r_flag = _RANDOM[8'hC4][10];
        io_enqLsq_req_4_bits_sqIdx_r_value = _RANDOM[8'hC4][16:11];
        io_enqLsq_req_5_valid_REG = _RANDOM[8'hC4][17];
        io_enqLsq_req_5_bits_r_fuType = {_RANDOM[8'hC9][31:25], _RANDOM[8'hCA][27:0]};
        io_enqLsq_req_5_bits_r_fuOpType = {_RANDOM[8'hCA][31:28], _RANDOM[8'hCB][4:0]};
        io_enqLsq_req_5_bits_r_uopIdx = _RANDOM[8'hD3][10:4];
        io_enqLsq_req_5_bits_r_lastUop = _RANDOM[8'hD3][13];
        io_enqLsq_req_5_bits_r_robIdx_flag = _RANDOM[8'hD6][30];
        io_enqLsq_req_5_bits_r_robIdx_value = {_RANDOM[8'hD6][31], _RANDOM[8'hD7][6:0]};
        io_enqLsq_req_5_bits_r_numLsElem = _RANDOM[8'hEA][30:26];
        io_enqLsq_req_5_bits_lqIdx_r_flag = _RANDOM[8'hEA][31];
        io_enqLsq_req_5_bits_lqIdx_r_value = _RANDOM[8'hEB][6:0];
        io_enqLsq_req_5_bits_sqIdx_r_flag = _RANDOM[8'hEB][7];
        io_enqLsq_req_5_bits_sqIdx_r_value = _RANDOM[8'hEB][13:8];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        lqPtr_flag = 1'h0;
        lqPtr_value = 7'h0;
        sqPtr_flag = 1'h0;
        sqPtr_value = 6'h0;
        lqCounter = 7'h48;
        sqCounter = 6'h38;
        t3_lqCancelCnt_next_r = 7'h0;
        t3_sqCancelCnt_next_r = 6'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_enq_canAccept = io_enq_canAccept_REG;
  assign io_enq_resp_0_lqIdx_flag = io_enq_resp_0_lqIdx_new_ptr_flag;
  assign io_enq_resp_0_lqIdx_value = _io_enq_resp_0_lqIdx_new_ptr_value_T_1;
  assign io_enq_resp_0_sqIdx_flag = io_enq_resp_0_sqIdx_new_ptr_flag;
  assign io_enq_resp_0_sqIdx_value = _io_enq_resp_0_sqIdx_new_ptr_value_T_1;
  assign io_enq_resp_1_lqIdx_flag = io_enq_resp_1_lqIdx_new_ptr_flag;
  assign io_enq_resp_1_lqIdx_value = _io_enq_resp_1_lqIdx_new_ptr_value_T_1;
  assign io_enq_resp_1_sqIdx_flag = io_enq_resp_1_sqIdx_new_ptr_flag;
  assign io_enq_resp_1_sqIdx_value = _io_enq_resp_1_sqIdx_new_ptr_value_T_1;
  assign io_enq_resp_2_lqIdx_flag = io_enq_resp_2_lqIdx_new_ptr_flag;
  assign io_enq_resp_2_lqIdx_value = _io_enq_resp_2_lqIdx_new_ptr_value_T_1;
  assign io_enq_resp_2_sqIdx_flag = io_enq_resp_2_sqIdx_new_ptr_flag;
  assign io_enq_resp_2_sqIdx_value = _io_enq_resp_2_sqIdx_new_ptr_value_T_1;
  assign io_enq_resp_3_lqIdx_flag = io_enq_resp_3_lqIdx_new_ptr_flag;
  assign io_enq_resp_3_lqIdx_value = _io_enq_resp_3_lqIdx_new_ptr_value_T_1;
  assign io_enq_resp_3_sqIdx_flag = io_enq_resp_3_sqIdx_new_ptr_flag;
  assign io_enq_resp_3_sqIdx_value = _io_enq_resp_3_sqIdx_new_ptr_value_T_1;
  assign io_enq_resp_4_lqIdx_flag = io_enq_resp_4_lqIdx_new_ptr_flag;
  assign io_enq_resp_4_lqIdx_value = _io_enq_resp_4_lqIdx_new_ptr_value_T_1;
  assign io_enq_resp_4_sqIdx_flag = io_enq_resp_4_sqIdx_new_ptr_flag;
  assign io_enq_resp_4_sqIdx_value = _io_enq_resp_4_sqIdx_new_ptr_value_T_1;
  assign io_enq_resp_5_lqIdx_flag = io_enq_resp_5_lqIdx_new_ptr_flag;
  assign io_enq_resp_5_lqIdx_value = _io_enq_resp_5_lqIdx_new_ptr_value_T_1;
  assign io_enq_resp_5_sqIdx_flag = io_enq_resp_5_sqIdx_new_ptr_flag;
  assign io_enq_resp_5_sqIdx_value = _io_enq_resp_5_sqIdx_new_ptr_value_T_1;
  assign io_lqFreeCount = lqCounter;
  assign io_sqFreeCount = sqCounter;
  assign io_enqLsq_needAlloc_0 = REG_0;
  assign io_enqLsq_needAlloc_1 = REG_1;
  assign io_enqLsq_needAlloc_2 = REG_2;
  assign io_enqLsq_needAlloc_3 = REG_3;
  assign io_enqLsq_needAlloc_4 = REG_4;
  assign io_enqLsq_needAlloc_5 = REG_5;
  assign io_enqLsq_req_0_valid = io_enqLsq_req_0_valid_REG;
  assign io_enqLsq_req_0_bits_fuType = io_enqLsq_req_0_bits_r_fuType;
  assign io_enqLsq_req_0_bits_fuOpType = io_enqLsq_req_0_bits_r_fuOpType;
  assign io_enqLsq_req_0_bits_uopIdx = io_enqLsq_req_0_bits_r_uopIdx;
  assign io_enqLsq_req_0_bits_lastUop = io_enqLsq_req_0_bits_r_lastUop;
  assign io_enqLsq_req_0_bits_robIdx_flag = io_enqLsq_req_0_bits_r_robIdx_flag;
  assign io_enqLsq_req_0_bits_robIdx_value = io_enqLsq_req_0_bits_r_robIdx_value;
  assign io_enqLsq_req_0_bits_lqIdx_flag = io_enqLsq_req_0_bits_lqIdx_r_flag;
  assign io_enqLsq_req_0_bits_lqIdx_value = io_enqLsq_req_0_bits_lqIdx_r_value;
  assign io_enqLsq_req_0_bits_sqIdx_flag = io_enqLsq_req_0_bits_sqIdx_r_flag;
  assign io_enqLsq_req_0_bits_sqIdx_value = io_enqLsq_req_0_bits_sqIdx_r_value;
  assign io_enqLsq_req_0_bits_numLsElem = io_enqLsq_req_0_bits_r_numLsElem;
  assign io_enqLsq_req_1_valid = io_enqLsq_req_1_valid_REG;
  assign io_enqLsq_req_1_bits_fuType = io_enqLsq_req_1_bits_r_fuType;
  assign io_enqLsq_req_1_bits_fuOpType = io_enqLsq_req_1_bits_r_fuOpType;
  assign io_enqLsq_req_1_bits_uopIdx = io_enqLsq_req_1_bits_r_uopIdx;
  assign io_enqLsq_req_1_bits_lastUop = io_enqLsq_req_1_bits_r_lastUop;
  assign io_enqLsq_req_1_bits_robIdx_flag = io_enqLsq_req_1_bits_r_robIdx_flag;
  assign io_enqLsq_req_1_bits_robIdx_value = io_enqLsq_req_1_bits_r_robIdx_value;
  assign io_enqLsq_req_1_bits_lqIdx_flag = io_enqLsq_req_1_bits_lqIdx_r_flag;
  assign io_enqLsq_req_1_bits_lqIdx_value = io_enqLsq_req_1_bits_lqIdx_r_value;
  assign io_enqLsq_req_1_bits_sqIdx_flag = io_enqLsq_req_1_bits_sqIdx_r_flag;
  assign io_enqLsq_req_1_bits_sqIdx_value = io_enqLsq_req_1_bits_sqIdx_r_value;
  assign io_enqLsq_req_1_bits_numLsElem = io_enqLsq_req_1_bits_r_numLsElem;
  assign io_enqLsq_req_2_valid = io_enqLsq_req_2_valid_REG;
  assign io_enqLsq_req_2_bits_fuType = io_enqLsq_req_2_bits_r_fuType;
  assign io_enqLsq_req_2_bits_fuOpType = io_enqLsq_req_2_bits_r_fuOpType;
  assign io_enqLsq_req_2_bits_uopIdx = io_enqLsq_req_2_bits_r_uopIdx;
  assign io_enqLsq_req_2_bits_lastUop = io_enqLsq_req_2_bits_r_lastUop;
  assign io_enqLsq_req_2_bits_robIdx_flag = io_enqLsq_req_2_bits_r_robIdx_flag;
  assign io_enqLsq_req_2_bits_robIdx_value = io_enqLsq_req_2_bits_r_robIdx_value;
  assign io_enqLsq_req_2_bits_lqIdx_flag = io_enqLsq_req_2_bits_lqIdx_r_flag;
  assign io_enqLsq_req_2_bits_lqIdx_value = io_enqLsq_req_2_bits_lqIdx_r_value;
  assign io_enqLsq_req_2_bits_sqIdx_flag = io_enqLsq_req_2_bits_sqIdx_r_flag;
  assign io_enqLsq_req_2_bits_sqIdx_value = io_enqLsq_req_2_bits_sqIdx_r_value;
  assign io_enqLsq_req_2_bits_numLsElem = io_enqLsq_req_2_bits_r_numLsElem;
  assign io_enqLsq_req_3_valid = io_enqLsq_req_3_valid_REG;
  assign io_enqLsq_req_3_bits_fuType = io_enqLsq_req_3_bits_r_fuType;
  assign io_enqLsq_req_3_bits_fuOpType = io_enqLsq_req_3_bits_r_fuOpType;
  assign io_enqLsq_req_3_bits_uopIdx = io_enqLsq_req_3_bits_r_uopIdx;
  assign io_enqLsq_req_3_bits_lastUop = io_enqLsq_req_3_bits_r_lastUop;
  assign io_enqLsq_req_3_bits_robIdx_flag = io_enqLsq_req_3_bits_r_robIdx_flag;
  assign io_enqLsq_req_3_bits_robIdx_value = io_enqLsq_req_3_bits_r_robIdx_value;
  assign io_enqLsq_req_3_bits_lqIdx_flag = io_enqLsq_req_3_bits_lqIdx_r_flag;
  assign io_enqLsq_req_3_bits_lqIdx_value = io_enqLsq_req_3_bits_lqIdx_r_value;
  assign io_enqLsq_req_3_bits_sqIdx_flag = io_enqLsq_req_3_bits_sqIdx_r_flag;
  assign io_enqLsq_req_3_bits_sqIdx_value = io_enqLsq_req_3_bits_sqIdx_r_value;
  assign io_enqLsq_req_3_bits_numLsElem = io_enqLsq_req_3_bits_r_numLsElem;
  assign io_enqLsq_req_4_valid = io_enqLsq_req_4_valid_REG;
  assign io_enqLsq_req_4_bits_fuType = io_enqLsq_req_4_bits_r_fuType;
  assign io_enqLsq_req_4_bits_fuOpType = io_enqLsq_req_4_bits_r_fuOpType;
  assign io_enqLsq_req_4_bits_uopIdx = io_enqLsq_req_4_bits_r_uopIdx;
  assign io_enqLsq_req_4_bits_lastUop = io_enqLsq_req_4_bits_r_lastUop;
  assign io_enqLsq_req_4_bits_robIdx_flag = io_enqLsq_req_4_bits_r_robIdx_flag;
  assign io_enqLsq_req_4_bits_robIdx_value = io_enqLsq_req_4_bits_r_robIdx_value;
  assign io_enqLsq_req_4_bits_lqIdx_flag = io_enqLsq_req_4_bits_lqIdx_r_flag;
  assign io_enqLsq_req_4_bits_lqIdx_value = io_enqLsq_req_4_bits_lqIdx_r_value;
  assign io_enqLsq_req_4_bits_sqIdx_flag = io_enqLsq_req_4_bits_sqIdx_r_flag;
  assign io_enqLsq_req_4_bits_sqIdx_value = io_enqLsq_req_4_bits_sqIdx_r_value;
  assign io_enqLsq_req_4_bits_numLsElem = io_enqLsq_req_4_bits_r_numLsElem;
  assign io_enqLsq_req_5_valid = io_enqLsq_req_5_valid_REG;
  assign io_enqLsq_req_5_bits_fuType = io_enqLsq_req_5_bits_r_fuType;
  assign io_enqLsq_req_5_bits_fuOpType = io_enqLsq_req_5_bits_r_fuOpType;
  assign io_enqLsq_req_5_bits_uopIdx = io_enqLsq_req_5_bits_r_uopIdx;
  assign io_enqLsq_req_5_bits_lastUop = io_enqLsq_req_5_bits_r_lastUop;
  assign io_enqLsq_req_5_bits_robIdx_flag = io_enqLsq_req_5_bits_r_robIdx_flag;
  assign io_enqLsq_req_5_bits_robIdx_value = io_enqLsq_req_5_bits_r_robIdx_value;
  assign io_enqLsq_req_5_bits_lqIdx_flag = io_enqLsq_req_5_bits_lqIdx_r_flag;
  assign io_enqLsq_req_5_bits_lqIdx_value = io_enqLsq_req_5_bits_lqIdx_r_value;
  assign io_enqLsq_req_5_bits_sqIdx_flag = io_enqLsq_req_5_bits_sqIdx_r_flag;
  assign io_enqLsq_req_5_bits_sqIdx_value = io_enqLsq_req_5_bits_sqIdx_r_value;
  assign io_enqLsq_req_5_bits_numLsElem = io_enqLsq_req_5_bits_r_numLsElem;
endmodule

