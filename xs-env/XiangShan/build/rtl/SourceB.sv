// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module SourceB(
  input          clock,
  input          reset,
  input          io_sourceB_ready,
  output         io_sourceB_valid,
  output [2:0]   io_sourceB_bits_opcode,
  output [1:0]   io_sourceB_bits_param,
  output [47:0]  io_sourceB_bits_address,
  output [255:0] io_sourceB_bits_data,
  output         io_task_ready,
  input          io_task_valid,
  input  [32:0]  io_task_bits_tag,
  input  [6:0]   io_task_bits_set,
  input  [2:0]   io_task_bits_opcode,
  input  [1:0]   io_task_bits_param,
  input  [1:0]   io_task_bits_alias,
  input          io_grantStatus_0_valid,
  input  [6:0]   io_grantStatus_0_set,
  input  [32:0]  io_grantStatus_0_tag,
  input          io_grantStatus_1_valid,
  input  [6:0]   io_grantStatus_1_set,
  input  [32:0]  io_grantStatus_1_tag,
  input          io_grantStatus_2_valid,
  input  [6:0]   io_grantStatus_2_set,
  input  [32:0]  io_grantStatus_2_tag,
  input          io_grantStatus_3_valid,
  input  [6:0]   io_grantStatus_3_set,
  input  [32:0]  io_grantStatus_3_tag,
  input          io_grantStatus_4_valid,
  input  [6:0]   io_grantStatus_4_set,
  input  [32:0]  io_grantStatus_4_tag,
  input          io_grantStatus_5_valid,
  input  [6:0]   io_grantStatus_5_set,
  input  [32:0]  io_grantStatus_5_tag,
  input          io_grantStatus_6_valid,
  input  [6:0]   io_grantStatus_6_set,
  input  [32:0]  io_grantStatus_6_tag,
  input          io_grantStatus_7_valid,
  input  [6:0]   io_grantStatus_7_set,
  input  [32:0]  io_grantStatus_7_tag,
  input          io_grantStatus_8_valid,
  input  [6:0]   io_grantStatus_8_set,
  input  [32:0]  io_grantStatus_8_tag,
  input          io_grantStatus_9_valid,
  input  [6:0]   io_grantStatus_9_set,
  input  [32:0]  io_grantStatus_9_tag,
  input          io_grantStatus_10_valid,
  input  [6:0]   io_grantStatus_10_set,
  input  [32:0]  io_grantStatus_10_tag,
  input          io_grantStatus_11_valid,
  input  [6:0]   io_grantStatus_11_set,
  input  [32:0]  io_grantStatus_11_tag,
  input          io_grantStatus_12_valid,
  input  [6:0]   io_grantStatus_12_set,
  input  [32:0]  io_grantStatus_12_tag,
  input          io_grantStatus_13_valid,
  input  [6:0]   io_grantStatus_13_set,
  input  [32:0]  io_grantStatus_13_tag,
  input          io_grantStatus_14_valid,
  input  [6:0]   io_grantStatus_14_set,
  input  [32:0]  io_grantStatus_14_tag,
  input          io_grantStatus_15_valid,
  input  [6:0]   io_grantStatus_15_set,
  input  [32:0]  io_grantStatus_15_tag
);

  wire        _issueArb_io_in_0_ready;
  wire        _issueArb_io_in_1_ready;
  wire        _issueArb_io_in_2_ready;
  wire        _issueArb_io_in_3_ready;
  wire [32:0] _issueArb_io_out_bits_tag;
  wire [6:0]  _issueArb_io_out_bits_set;
  wire [1:0]  _issueArb_io_out_bits_alias;
  reg         probes_0_valid;
  reg         probes_0_rdy;
  reg  [6:0]  probes_0_waitG;
  reg  [32:0] probes_0_task_tag;
  reg  [6:0]  probes_0_task_set;
  reg  [2:0]  probes_0_task_opcode;
  reg  [1:0]  probes_0_task_param;
  reg  [1:0]  probes_0_task_alias;
  reg         probes_1_valid;
  reg         probes_1_rdy;
  reg  [6:0]  probes_1_waitG;
  reg  [32:0] probes_1_task_tag;
  reg  [6:0]  probes_1_task_set;
  reg  [2:0]  probes_1_task_opcode;
  reg  [1:0]  probes_1_task_param;
  reg  [1:0]  probes_1_task_alias;
  reg         probes_2_valid;
  reg         probes_2_rdy;
  reg  [6:0]  probes_2_waitG;
  reg  [32:0] probes_2_task_tag;
  reg  [6:0]  probes_2_task_set;
  reg  [2:0]  probes_2_task_opcode;
  reg  [1:0]  probes_2_task_param;
  reg  [1:0]  probes_2_task_alias;
  reg         probes_3_valid;
  reg         probes_3_rdy;
  reg  [6:0]  probes_3_waitG;
  reg  [32:0] probes_3_task_tag;
  reg  [6:0]  probes_3_task_set;
  reg  [2:0]  probes_3_task_opcode;
  reg  [1:0]  probes_3_task_param;
  reg  [1:0]  probes_3_task_alias;
  wire        io_task_ready_0 =
    {probes_0_valid, probes_1_valid, probes_2_valid, probes_3_valid} != 4'hF;
  wire        _issueArb_io_in_0_valid_T = probes_0_valid & probes_0_rdy;
  wire        _issueArb_io_in_1_valid_T = probes_1_valid & probes_1_rdy;
  wire        _issueArb_io_in_2_valid_T = probes_2_valid & probes_2_rdy;
  wire        _issueArb_io_in_3_valid_T = probes_3_valid & probes_3_rdy;
  wire        conflictMask_1 =
    io_grantStatus_1_valid & io_grantStatus_1_set == io_task_bits_set
    & io_grantStatus_1_tag == io_task_bits_tag;
  wire        conflictMask_2 =
    io_grantStatus_2_valid & io_grantStatus_2_set == io_task_bits_set
    & io_grantStatus_2_tag == io_task_bits_tag;
  wire        conflictMask_3 =
    io_grantStatus_3_valid & io_grantStatus_3_set == io_task_bits_set
    & io_grantStatus_3_tag == io_task_bits_tag;
  wire        conflictMask_4 =
    io_grantStatus_4_valid & io_grantStatus_4_set == io_task_bits_set
    & io_grantStatus_4_tag == io_task_bits_tag;
  wire        conflictMask_5 =
    io_grantStatus_5_valid & io_grantStatus_5_set == io_task_bits_set
    & io_grantStatus_5_tag == io_task_bits_tag;
  wire        conflictMask_6 =
    io_grantStatus_6_valid & io_grantStatus_6_set == io_task_bits_set
    & io_grantStatus_6_tag == io_task_bits_tag;
  wire        conflictMask_7 =
    io_grantStatus_7_valid & io_grantStatus_7_set == io_task_bits_set
    & io_grantStatus_7_tag == io_task_bits_tag;
  wire        conflictMask_8 =
    io_grantStatus_8_valid & io_grantStatus_8_set == io_task_bits_set
    & io_grantStatus_8_tag == io_task_bits_tag;
  wire        conflictMask_9 =
    io_grantStatus_9_valid & io_grantStatus_9_set == io_task_bits_set
    & io_grantStatus_9_tag == io_task_bits_tag;
  wire        conflictMask_10 =
    io_grantStatus_10_valid & io_grantStatus_10_set == io_task_bits_set
    & io_grantStatus_10_tag == io_task_bits_tag;
  wire        conflictMask_11 =
    io_grantStatus_11_valid & io_grantStatus_11_set == io_task_bits_set
    & io_grantStatus_11_tag == io_task_bits_tag;
  wire        conflictMask_12 =
    io_grantStatus_12_valid & io_grantStatus_12_set == io_task_bits_set
    & io_grantStatus_12_tag == io_task_bits_tag;
  wire        conflictMask_13 =
    io_grantStatus_13_valid & io_grantStatus_13_set == io_task_bits_set
    & io_grantStatus_13_tag == io_task_bits_tag;
  wire        conflictMask_14 =
    io_grantStatus_14_valid & io_grantStatus_14_set == io_task_bits_set
    & io_grantStatus_14_tag == io_task_bits_tag;
  wire        conflictMask_15 =
    io_grantStatus_15_valid & io_grantStatus_15_set == io_task_bits_set
    & io_grantStatus_15_tag == io_task_bits_tag;
  wire [1:0]  insertIdx =
    probes_0_valid ? (probes_1_valid ? {1'h1, probes_2_valid} : 2'h1) : 2'h0;
  wire        alloc = io_task_ready_0 & io_task_valid;
  wire        _GEN = alloc & insertIdx == 2'h0;
  wire        _GEN_0 = alloc & insertIdx == 2'h1;
  wire        _GEN_1 = alloc & insertIdx == 2'h2;
  wire        _GEN_2 = alloc & (&insertIdx);
  wire        _probes_rdy_T =
    {io_grantStatus_0_valid & io_grantStatus_0_set == io_task_bits_set
       & io_grantStatus_0_tag == io_task_bits_tag,
     conflictMask_1,
     conflictMask_2,
     conflictMask_3,
     conflictMask_4,
     conflictMask_5,
     conflictMask_6,
     conflictMask_7,
     conflictMask_8,
     conflictMask_9,
     conflictMask_10,
     conflictMask_11,
     conflictMask_12,
     conflictMask_13,
     conflictMask_14,
     conflictMask_15} == 16'h0;
  wire [6:0]  _probes_waitG_T_2 =
    {conflictMask_15,
     conflictMask_14,
     conflictMask_13,
     conflictMask_12,
     conflictMask_11,
     conflictMask_10,
     conflictMask_9}
    | {conflictMask_7,
       conflictMask_6,
       conflictMask_5,
       conflictMask_4,
       conflictMask_3,
       conflictMask_2,
       conflictMask_1};
  wire [2:0]  _probes_waitG_T_4 = _probes_waitG_T_2[6:4] | _probes_waitG_T_2[2:0];
  wire [6:0]  _GEN_3 =
    {3'h0,
     |{conflictMask_15,
       conflictMask_14,
       conflictMask_13,
       conflictMask_12,
       conflictMask_11,
       conflictMask_10,
       conflictMask_9,
       conflictMask_8},
     |(_probes_waitG_T_2[6:3]),
     |(_probes_waitG_T_4[2:1]),
     _probes_waitG_T_4[2] | _probes_waitG_T_4[0]};
  wire [15:0] _GEN_4 =
    {{io_grantStatus_15_valid},
     {io_grantStatus_14_valid},
     {io_grantStatus_13_valid},
     {io_grantStatus_12_valid},
     {io_grantStatus_11_valid},
     {io_grantStatus_10_valid},
     {io_grantStatus_9_valid},
     {io_grantStatus_8_valid},
     {io_grantStatus_7_valid},
     {io_grantStatus_6_valid},
     {io_grantStatus_5_valid},
     {io_grantStatus_4_valid},
     {io_grantStatus_3_valid},
     {io_grantStatus_2_valid},
     {io_grantStatus_1_valid},
     {io_grantStatus_0_valid}};
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      probes_0_valid <= 1'h0;
      probes_0_rdy <= 1'h0;
      probes_0_waitG <= 7'h0;
      probes_0_task_tag <= 33'h0;
      probes_0_task_set <= 7'h0;
      probes_0_task_opcode <= 3'h0;
      probes_0_task_param <= 2'h0;
      probes_0_task_alias <= 2'h0;
      probes_1_valid <= 1'h0;
      probes_1_rdy <= 1'h0;
      probes_1_waitG <= 7'h0;
      probes_1_task_tag <= 33'h0;
      probes_1_task_set <= 7'h0;
      probes_1_task_opcode <= 3'h0;
      probes_1_task_param <= 2'h0;
      probes_1_task_alias <= 2'h0;
      probes_2_valid <= 1'h0;
      probes_2_rdy <= 1'h0;
      probes_2_waitG <= 7'h0;
      probes_2_task_tag <= 33'h0;
      probes_2_task_set <= 7'h0;
      probes_2_task_opcode <= 3'h0;
      probes_2_task_param <= 2'h0;
      probes_2_task_alias <= 2'h0;
      probes_3_valid <= 1'h0;
      probes_3_rdy <= 1'h0;
      probes_3_waitG <= 7'h0;
      probes_3_task_tag <= 33'h0;
      probes_3_task_set <= 7'h0;
      probes_3_task_opcode <= 3'h0;
      probes_3_task_param <= 2'h0;
      probes_3_task_alias <= 2'h0;
    end
    else begin
      probes_0_valid <=
        ~(_issueArb_io_in_0_ready & _issueArb_io_in_0_valid_T) & (_GEN | probes_0_valid);
      probes_0_rdy <=
        probes_0_valid & ~_GEN_4[probes_0_waitG[3:0]]
        | (_GEN ? _probes_rdy_T : probes_0_rdy);
      if (_GEN) begin
        probes_0_waitG <= _GEN_3;
        probes_0_task_tag <= io_task_bits_tag;
        probes_0_task_set <= io_task_bits_set;
        probes_0_task_opcode <= io_task_bits_opcode;
        probes_0_task_param <= io_task_bits_param;
        probes_0_task_alias <= io_task_bits_alias;
      end
      probes_1_valid <=
        ~(_issueArb_io_in_1_ready & _issueArb_io_in_1_valid_T)
        & (_GEN_0 | probes_1_valid);
      probes_1_rdy <=
        probes_1_valid & ~_GEN_4[probes_1_waitG[3:0]]
        | (_GEN_0 ? _probes_rdy_T : probes_1_rdy);
      if (_GEN_0) begin
        probes_1_waitG <= _GEN_3;
        probes_1_task_tag <= io_task_bits_tag;
        probes_1_task_set <= io_task_bits_set;
        probes_1_task_opcode <= io_task_bits_opcode;
        probes_1_task_param <= io_task_bits_param;
        probes_1_task_alias <= io_task_bits_alias;
      end
      probes_2_valid <=
        ~(_issueArb_io_in_2_ready & _issueArb_io_in_2_valid_T)
        & (_GEN_1 | probes_2_valid);
      probes_2_rdy <=
        probes_2_valid & ~_GEN_4[probes_2_waitG[3:0]]
        | (_GEN_1 ? _probes_rdy_T : probes_2_rdy);
      if (_GEN_1) begin
        probes_2_waitG <= _GEN_3;
        probes_2_task_tag <= io_task_bits_tag;
        probes_2_task_set <= io_task_bits_set;
        probes_2_task_opcode <= io_task_bits_opcode;
        probes_2_task_param <= io_task_bits_param;
        probes_2_task_alias <= io_task_bits_alias;
      end
      probes_3_valid <=
        ~(_issueArb_io_in_3_ready & _issueArb_io_in_3_valid_T)
        & (_GEN_2 | probes_3_valid);
      probes_3_rdy <=
        probes_3_valid & ~_GEN_4[probes_3_waitG[3:0]]
        | (_GEN_2 ? _probes_rdy_T : probes_3_rdy);
      if (_GEN_2) begin
        probes_3_waitG <= _GEN_3;
        probes_3_task_tag <= io_task_bits_tag;
        probes_3_task_set <= io_task_bits_set;
        probes_3_task_opcode <= io_task_bits_opcode;
        probes_3_task_param <= io_task_bits_param;
        probes_3_task_alias <= io_task_bits_alias;
      end
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:7];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [3:0] i = 4'h0; i < 4'h8; i += 4'h1) begin
          _RANDOM[i[2:0]] = `RANDOM;
        end
        probes_0_valid = _RANDOM[3'h0][0];
        probes_0_rdy = _RANDOM[3'h0][1];
        probes_0_waitG = _RANDOM[3'h0][8:2];
        probes_0_task_tag = {_RANDOM[3'h0][31:9], _RANDOM[3'h1][9:0]};
        probes_0_task_set = _RANDOM[3'h1][16:10];
        probes_0_task_opcode = _RANDOM[3'h1][25:23];
        probes_0_task_param = _RANDOM[3'h1][27:26];
        probes_0_task_alias = _RANDOM[3'h1][29:28];
        probes_1_valid = _RANDOM[3'h1][30];
        probes_1_rdy = _RANDOM[3'h1][31];
        probes_1_waitG = _RANDOM[3'h2][6:0];
        probes_1_task_tag = {_RANDOM[3'h2][31:7], _RANDOM[3'h3][7:0]};
        probes_1_task_set = _RANDOM[3'h3][14:8];
        probes_1_task_opcode = _RANDOM[3'h3][23:21];
        probes_1_task_param = _RANDOM[3'h3][25:24];
        probes_1_task_alias = _RANDOM[3'h3][27:26];
        probes_2_valid = _RANDOM[3'h3][28];
        probes_2_rdy = _RANDOM[3'h3][29];
        probes_2_waitG = {_RANDOM[3'h3][31:30], _RANDOM[3'h4][4:0]};
        probes_2_task_tag = {_RANDOM[3'h4][31:5], _RANDOM[3'h5][5:0]};
        probes_2_task_set = _RANDOM[3'h5][12:6];
        probes_2_task_opcode = _RANDOM[3'h5][21:19];
        probes_2_task_param = _RANDOM[3'h5][23:22];
        probes_2_task_alias = _RANDOM[3'h5][25:24];
        probes_3_valid = _RANDOM[3'h5][26];
        probes_3_rdy = _RANDOM[3'h5][27];
        probes_3_waitG = {_RANDOM[3'h5][31:28], _RANDOM[3'h6][2:0]};
        probes_3_task_tag = {_RANDOM[3'h6][31:3], _RANDOM[3'h7][3:0]};
        probes_3_task_set = _RANDOM[3'h7][10:4];
        probes_3_task_opcode = _RANDOM[3'h7][19:17];
        probes_3_task_param = _RANDOM[3'h7][21:20];
        probes_3_task_alias = _RANDOM[3'h7][23:22];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        probes_0_valid = 1'h0;
        probes_0_rdy = 1'h0;
        probes_0_waitG = 7'h0;
        probes_0_task_tag = 33'h0;
        probes_0_task_set = 7'h0;
        probes_0_task_opcode = 3'h0;
        probes_0_task_param = 2'h0;
        probes_0_task_alias = 2'h0;
        probes_1_valid = 1'h0;
        probes_1_rdy = 1'h0;
        probes_1_waitG = 7'h0;
        probes_1_task_tag = 33'h0;
        probes_1_task_set = 7'h0;
        probes_1_task_opcode = 3'h0;
        probes_1_task_param = 2'h0;
        probes_1_task_alias = 2'h0;
        probes_2_valid = 1'h0;
        probes_2_rdy = 1'h0;
        probes_2_waitG = 7'h0;
        probes_2_task_tag = 33'h0;
        probes_2_task_set = 7'h0;
        probes_2_task_opcode = 3'h0;
        probes_2_task_param = 2'h0;
        probes_2_task_alias = 2'h0;
        probes_3_valid = 1'h0;
        probes_3_rdy = 1'h0;
        probes_3_waitG = 7'h0;
        probes_3_task_tag = 33'h0;
        probes_3_task_set = 7'h0;
        probes_3_task_opcode = 3'h0;
        probes_3_task_param = 2'h0;
        probes_3_task_alias = 2'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  FastArbiter_5 issueArb (
    .clock               (clock),
    .reset               (reset),
    .io_in_0_ready       (_issueArb_io_in_0_ready),
    .io_in_0_valid       (_issueArb_io_in_0_valid_T),
    .io_in_0_bits_tag    (probes_0_task_tag),
    .io_in_0_bits_set    (probes_0_task_set),
    .io_in_0_bits_opcode (probes_0_task_opcode),
    .io_in_0_bits_param  (probes_0_task_param),
    .io_in_0_bits_alias  (probes_0_task_alias),
    .io_in_1_ready       (_issueArb_io_in_1_ready),
    .io_in_1_valid       (_issueArb_io_in_1_valid_T),
    .io_in_1_bits_tag    (probes_1_task_tag),
    .io_in_1_bits_set    (probes_1_task_set),
    .io_in_1_bits_opcode (probes_1_task_opcode),
    .io_in_1_bits_param  (probes_1_task_param),
    .io_in_1_bits_alias  (probes_1_task_alias),
    .io_in_2_ready       (_issueArb_io_in_2_ready),
    .io_in_2_valid       (_issueArb_io_in_2_valid_T),
    .io_in_2_bits_tag    (probes_2_task_tag),
    .io_in_2_bits_set    (probes_2_task_set),
    .io_in_2_bits_opcode (probes_2_task_opcode),
    .io_in_2_bits_param  (probes_2_task_param),
    .io_in_2_bits_alias  (probes_2_task_alias),
    .io_in_3_ready       (_issueArb_io_in_3_ready),
    .io_in_3_valid       (_issueArb_io_in_3_valid_T),
    .io_in_3_bits_tag    (probes_3_task_tag),
    .io_in_3_bits_set    (probes_3_task_set),
    .io_in_3_bits_opcode (probes_3_task_opcode),
    .io_in_3_bits_param  (probes_3_task_param),
    .io_in_3_bits_alias  (probes_3_task_alias),
    .io_out_ready        (io_sourceB_ready),
    .io_out_valid        (io_sourceB_valid),
    .io_out_bits_tag     (_issueArb_io_out_bits_tag),
    .io_out_bits_set     (_issueArb_io_out_bits_set),
    .io_out_bits_opcode  (io_sourceB_bits_opcode),
    .io_out_bits_param   (io_sourceB_bits_param),
    .io_out_bits_alias   (_issueArb_io_out_bits_alias)
  );
  assign io_sourceB_bits_address =
    {2'h0, _issueArb_io_out_bits_tag, _issueArb_io_out_bits_set, 6'h0};
  assign io_sourceB_bits_data = {253'h0, _issueArb_io_out_bits_alias, 1'h0};
  assign io_task_ready = io_task_ready_0;
endmodule

