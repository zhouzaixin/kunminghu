// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module FastArbiter_6(
  input         clock,
  input         reset,
  output        io_in_0_ready,
  input         io_in_0_valid,
  input  [32:0] io_in_0_bits_tag,
  input  [6:0]  io_in_0_bits_set,
  input  [1:0]  io_in_0_bits_param,
  input  [1:0]  io_in_0_bits_alias,
  output        io_in_1_ready,
  input         io_in_1_valid,
  input  [32:0] io_in_1_bits_tag,
  input  [6:0]  io_in_1_bits_set,
  input  [1:0]  io_in_1_bits_param,
  input  [1:0]  io_in_1_bits_alias,
  output        io_in_2_ready,
  input         io_in_2_valid,
  input  [32:0] io_in_2_bits_tag,
  input  [6:0]  io_in_2_bits_set,
  input  [1:0]  io_in_2_bits_param,
  input  [1:0]  io_in_2_bits_alias,
  output        io_in_3_ready,
  input         io_in_3_valid,
  input  [32:0] io_in_3_bits_tag,
  input  [6:0]  io_in_3_bits_set,
  input  [1:0]  io_in_3_bits_param,
  input  [1:0]  io_in_3_bits_alias,
  output        io_in_4_ready,
  input         io_in_4_valid,
  input  [32:0] io_in_4_bits_tag,
  input  [6:0]  io_in_4_bits_set,
  input  [1:0]  io_in_4_bits_param,
  input  [1:0]  io_in_4_bits_alias,
  output        io_in_5_ready,
  input         io_in_5_valid,
  input  [32:0] io_in_5_bits_tag,
  input  [6:0]  io_in_5_bits_set,
  input  [1:0]  io_in_5_bits_param,
  input  [1:0]  io_in_5_bits_alias,
  output        io_in_6_ready,
  input         io_in_6_valid,
  input  [32:0] io_in_6_bits_tag,
  input  [6:0]  io_in_6_bits_set,
  input  [1:0]  io_in_6_bits_param,
  input  [1:0]  io_in_6_bits_alias,
  output        io_in_7_ready,
  input         io_in_7_valid,
  input  [32:0] io_in_7_bits_tag,
  input  [6:0]  io_in_7_bits_set,
  input  [1:0]  io_in_7_bits_param,
  input  [1:0]  io_in_7_bits_alias,
  output        io_in_8_ready,
  input         io_in_8_valid,
  input  [32:0] io_in_8_bits_tag,
  input  [6:0]  io_in_8_bits_set,
  input  [1:0]  io_in_8_bits_param,
  input  [1:0]  io_in_8_bits_alias,
  output        io_in_9_ready,
  input         io_in_9_valid,
  input  [32:0] io_in_9_bits_tag,
  input  [6:0]  io_in_9_bits_set,
  input  [1:0]  io_in_9_bits_param,
  input  [1:0]  io_in_9_bits_alias,
  output        io_in_10_ready,
  input         io_in_10_valid,
  input  [32:0] io_in_10_bits_tag,
  input  [6:0]  io_in_10_bits_set,
  input  [1:0]  io_in_10_bits_param,
  input  [1:0]  io_in_10_bits_alias,
  output        io_in_11_ready,
  input         io_in_11_valid,
  input  [32:0] io_in_11_bits_tag,
  input  [6:0]  io_in_11_bits_set,
  input  [1:0]  io_in_11_bits_param,
  input  [1:0]  io_in_11_bits_alias,
  output        io_in_12_ready,
  input         io_in_12_valid,
  input  [32:0] io_in_12_bits_tag,
  input  [6:0]  io_in_12_bits_set,
  input  [1:0]  io_in_12_bits_param,
  input  [1:0]  io_in_12_bits_alias,
  output        io_in_13_ready,
  input         io_in_13_valid,
  input  [32:0] io_in_13_bits_tag,
  input  [6:0]  io_in_13_bits_set,
  input  [1:0]  io_in_13_bits_param,
  input  [1:0]  io_in_13_bits_alias,
  output        io_in_14_ready,
  input         io_in_14_valid,
  input  [32:0] io_in_14_bits_tag,
  input  [6:0]  io_in_14_bits_set,
  input  [1:0]  io_in_14_bits_param,
  input  [1:0]  io_in_14_bits_alias,
  output        io_in_15_ready,
  input         io_in_15_valid,
  input  [32:0] io_in_15_bits_tag,
  input  [6:0]  io_in_15_bits_set,
  input  [1:0]  io_in_15_bits_param,
  input  [1:0]  io_in_15_bits_alias,
  input         io_out_ready,
  output        io_out_valid,
  output [32:0] io_out_bits_tag,
  output [6:0]  io_out_bits_set,
  output [2:0]  io_out_bits_opcode,
  output [1:0]  io_out_bits_param,
  output [1:0]  io_out_bits_alias
);

  wire [15:0] chosenOH;
  wire [15:0] valids =
    {io_in_15_valid,
     io_in_14_valid,
     io_in_13_valid,
     io_in_12_valid,
     io_in_11_valid,
     io_in_10_valid,
     io_in_9_valid,
     io_in_8_valid,
     io_in_7_valid,
     io_in_6_valid,
     io_in_5_valid,
     io_in_4_valid,
     io_in_3_valid,
     io_in_2_valid,
     io_in_1_valid,
     io_in_0_valid};
  reg  [15:0] pendingMask;
  reg  [15:0] rrGrantMask;
  wire        _rrSelOH_T_17 = rrGrantMask[0] & pendingMask[0];
  wire        _rrSelOH_T_2 = rrGrantMask[1] & pendingMask[1];
  wire        _rrSelOH_T_3 = rrGrantMask[2] & pendingMask[2];
  wire        _rrSelOH_T_4 = rrGrantMask[3] & pendingMask[3];
  wire        _rrSelOH_T_5 = rrGrantMask[4] & pendingMask[4];
  wire        _rrSelOH_T_6 = rrGrantMask[5] & pendingMask[5];
  wire        _rrSelOH_T_7 = rrGrantMask[6] & pendingMask[6];
  wire        _rrSelOH_T_8 = rrGrantMask[7] & pendingMask[7];
  wire        _rrSelOH_T_9 = rrGrantMask[8] & pendingMask[8];
  wire        _rrSelOH_T_10 = rrGrantMask[9] & pendingMask[9];
  wire        _rrSelOH_T_11 = rrGrantMask[10] & pendingMask[10];
  wire        _rrSelOH_T_12 = rrGrantMask[11] & pendingMask[11];
  wire        _rrSelOH_T_13 = rrGrantMask[12] & pendingMask[12];
  wire        _rrSelOH_T_14 = rrGrantMask[13] & pendingMask[13];
  wire        _rrSelOH_T_15 = rrGrantMask[14] & pendingMask[14];
  wire [15:0] rrSelOH =
    {rrGrantMask[15] & pendingMask[15]
       & {_rrSelOH_T_17,
          _rrSelOH_T_2,
          _rrSelOH_T_3,
          _rrSelOH_T_4,
          _rrSelOH_T_5,
          _rrSelOH_T_6,
          _rrSelOH_T_7,
          _rrSelOH_T_8,
          _rrSelOH_T_9,
          _rrSelOH_T_10,
          _rrSelOH_T_11,
          _rrSelOH_T_12,
          _rrSelOH_T_13,
          _rrSelOH_T_14,
          _rrSelOH_T_15} == 15'h0,
     _rrSelOH_T_15
       & {_rrSelOH_T_17,
          _rrSelOH_T_2,
          _rrSelOH_T_3,
          _rrSelOH_T_4,
          _rrSelOH_T_5,
          _rrSelOH_T_6,
          _rrSelOH_T_7,
          _rrSelOH_T_8,
          _rrSelOH_T_9,
          _rrSelOH_T_10,
          _rrSelOH_T_11,
          _rrSelOH_T_12,
          _rrSelOH_T_13,
          _rrSelOH_T_14} == 14'h0,
     _rrSelOH_T_14
       & {_rrSelOH_T_17,
          _rrSelOH_T_2,
          _rrSelOH_T_3,
          _rrSelOH_T_4,
          _rrSelOH_T_5,
          _rrSelOH_T_6,
          _rrSelOH_T_7,
          _rrSelOH_T_8,
          _rrSelOH_T_9,
          _rrSelOH_T_10,
          _rrSelOH_T_11,
          _rrSelOH_T_12,
          _rrSelOH_T_13} == 13'h0,
     _rrSelOH_T_13
       & {_rrSelOH_T_17,
          _rrSelOH_T_2,
          _rrSelOH_T_3,
          _rrSelOH_T_4,
          _rrSelOH_T_5,
          _rrSelOH_T_6,
          _rrSelOH_T_7,
          _rrSelOH_T_8,
          _rrSelOH_T_9,
          _rrSelOH_T_10,
          _rrSelOH_T_11,
          _rrSelOH_T_12} == 12'h0,
     _rrSelOH_T_12
       & {_rrSelOH_T_17,
          _rrSelOH_T_2,
          _rrSelOH_T_3,
          _rrSelOH_T_4,
          _rrSelOH_T_5,
          _rrSelOH_T_6,
          _rrSelOH_T_7,
          _rrSelOH_T_8,
          _rrSelOH_T_9,
          _rrSelOH_T_10,
          _rrSelOH_T_11} == 11'h0,
     _rrSelOH_T_11
       & {_rrSelOH_T_17,
          _rrSelOH_T_2,
          _rrSelOH_T_3,
          _rrSelOH_T_4,
          _rrSelOH_T_5,
          _rrSelOH_T_6,
          _rrSelOH_T_7,
          _rrSelOH_T_8,
          _rrSelOH_T_9,
          _rrSelOH_T_10} == 10'h0,
     _rrSelOH_T_10
       & {_rrSelOH_T_17,
          _rrSelOH_T_2,
          _rrSelOH_T_3,
          _rrSelOH_T_4,
          _rrSelOH_T_5,
          _rrSelOH_T_6,
          _rrSelOH_T_7,
          _rrSelOH_T_8,
          _rrSelOH_T_9} == 9'h0,
     _rrSelOH_T_9
       & {_rrSelOH_T_17,
          _rrSelOH_T_2,
          _rrSelOH_T_3,
          _rrSelOH_T_4,
          _rrSelOH_T_5,
          _rrSelOH_T_6,
          _rrSelOH_T_7,
          _rrSelOH_T_8} == 8'h0,
     _rrSelOH_T_8
       & {_rrSelOH_T_17,
          _rrSelOH_T_2,
          _rrSelOH_T_3,
          _rrSelOH_T_4,
          _rrSelOH_T_5,
          _rrSelOH_T_6,
          _rrSelOH_T_7} == 7'h0,
     _rrSelOH_T_7
       & {_rrSelOH_T_17,
          _rrSelOH_T_2,
          _rrSelOH_T_3,
          _rrSelOH_T_4,
          _rrSelOH_T_5,
          _rrSelOH_T_6} == 6'h0,
     _rrSelOH_T_6
       & {_rrSelOH_T_17, _rrSelOH_T_2, _rrSelOH_T_3, _rrSelOH_T_4, _rrSelOH_T_5} == 5'h0,
     _rrSelOH_T_5 & {_rrSelOH_T_17, _rrSelOH_T_2, _rrSelOH_T_3, _rrSelOH_T_4} == 4'h0,
     _rrSelOH_T_4 & {_rrSelOH_T_17, _rrSelOH_T_2, _rrSelOH_T_3} == 3'h0,
     _rrSelOH_T_3 & {_rrSelOH_T_17, _rrSelOH_T_2} == 2'h0,
     _rrSelOH_T_2 & ~_rrSelOH_T_17,
     _rrSelOH_T_17};
  assign chosenOH =
    (|(rrSelOH & valids))
      ? rrSelOH
      : {io_in_15_valid
           & {io_in_0_valid,
              io_in_1_valid,
              io_in_2_valid,
              io_in_3_valid,
              io_in_4_valid,
              io_in_5_valid,
              io_in_6_valid,
              io_in_7_valid,
              io_in_8_valid,
              io_in_9_valid,
              io_in_10_valid,
              io_in_11_valid,
              io_in_12_valid,
              io_in_13_valid,
              io_in_14_valid} == 15'h0,
         io_in_14_valid
           & {io_in_0_valid,
              io_in_1_valid,
              io_in_2_valid,
              io_in_3_valid,
              io_in_4_valid,
              io_in_5_valid,
              io_in_6_valid,
              io_in_7_valid,
              io_in_8_valid,
              io_in_9_valid,
              io_in_10_valid,
              io_in_11_valid,
              io_in_12_valid,
              io_in_13_valid} == 14'h0,
         io_in_13_valid
           & {io_in_0_valid,
              io_in_1_valid,
              io_in_2_valid,
              io_in_3_valid,
              io_in_4_valid,
              io_in_5_valid,
              io_in_6_valid,
              io_in_7_valid,
              io_in_8_valid,
              io_in_9_valid,
              io_in_10_valid,
              io_in_11_valid,
              io_in_12_valid} == 13'h0,
         io_in_12_valid
           & {io_in_0_valid,
              io_in_1_valid,
              io_in_2_valid,
              io_in_3_valid,
              io_in_4_valid,
              io_in_5_valid,
              io_in_6_valid,
              io_in_7_valid,
              io_in_8_valid,
              io_in_9_valid,
              io_in_10_valid,
              io_in_11_valid} == 12'h0,
         io_in_11_valid
           & {io_in_0_valid,
              io_in_1_valid,
              io_in_2_valid,
              io_in_3_valid,
              io_in_4_valid,
              io_in_5_valid,
              io_in_6_valid,
              io_in_7_valid,
              io_in_8_valid,
              io_in_9_valid,
              io_in_10_valid} == 11'h0,
         io_in_10_valid
           & {io_in_0_valid,
              io_in_1_valid,
              io_in_2_valid,
              io_in_3_valid,
              io_in_4_valid,
              io_in_5_valid,
              io_in_6_valid,
              io_in_7_valid,
              io_in_8_valid,
              io_in_9_valid} == 10'h0,
         io_in_9_valid
           & {io_in_0_valid,
              io_in_1_valid,
              io_in_2_valid,
              io_in_3_valid,
              io_in_4_valid,
              io_in_5_valid,
              io_in_6_valid,
              io_in_7_valid,
              io_in_8_valid} == 9'h0,
         io_in_8_valid
           & {io_in_0_valid,
              io_in_1_valid,
              io_in_2_valid,
              io_in_3_valid,
              io_in_4_valid,
              io_in_5_valid,
              io_in_6_valid,
              io_in_7_valid} == 8'h0,
         io_in_7_valid
           & {io_in_0_valid,
              io_in_1_valid,
              io_in_2_valid,
              io_in_3_valid,
              io_in_4_valid,
              io_in_5_valid,
              io_in_6_valid} == 7'h0,
         io_in_6_valid
           & {io_in_0_valid,
              io_in_1_valid,
              io_in_2_valid,
              io_in_3_valid,
              io_in_4_valid,
              io_in_5_valid} == 6'h0,
         io_in_5_valid
           & {io_in_0_valid,
              io_in_1_valid,
              io_in_2_valid,
              io_in_3_valid,
              io_in_4_valid} == 5'h0,
         io_in_4_valid
           & {io_in_0_valid, io_in_1_valid, io_in_2_valid, io_in_3_valid} == 4'h0,
         io_in_3_valid & {io_in_0_valid, io_in_1_valid, io_in_2_valid} == 3'h0,
         io_in_2_valid & {io_in_0_valid, io_in_1_valid} == 2'h0,
         io_in_1_valid & ~io_in_0_valid,
         io_in_0_valid};
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      pendingMask <= 16'h0;
      rrGrantMask <= 16'h0;
    end
    else if (io_out_ready & (|valids)) begin
      pendingMask <= valids & ~chosenOH;
      rrGrantMask <=
        {|(chosenOH[14:0]),
         |(chosenOH[13:0]),
         |(chosenOH[12:0]),
         |(chosenOH[11:0]),
         |(chosenOH[10:0]),
         |(chosenOH[9:0]),
         |(chosenOH[8:0]),
         |(chosenOH[7:0]),
         |(chosenOH[6:0]),
         |(chosenOH[5:0]),
         |(chosenOH[4:0]),
         |(chosenOH[3:0]),
         |(chosenOH[2:0]),
         |(chosenOH[1:0]),
         chosenOH[0],
         1'h0};
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;
        pendingMask = _RANDOM[/*Zero width*/ 1'b0][15:0];
        rrGrantMask = _RANDOM[/*Zero width*/ 1'b0][31:16];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        pendingMask = 16'h0;
        rrGrantMask = 16'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_in_0_ready = chosenOH[0] & io_out_ready;
  assign io_in_1_ready = chosenOH[1] & io_out_ready;
  assign io_in_2_ready = chosenOH[2] & io_out_ready;
  assign io_in_3_ready = chosenOH[3] & io_out_ready;
  assign io_in_4_ready = chosenOH[4] & io_out_ready;
  assign io_in_5_ready = chosenOH[5] & io_out_ready;
  assign io_in_6_ready = chosenOH[6] & io_out_ready;
  assign io_in_7_ready = chosenOH[7] & io_out_ready;
  assign io_in_8_ready = chosenOH[8] & io_out_ready;
  assign io_in_9_ready = chosenOH[9] & io_out_ready;
  assign io_in_10_ready = chosenOH[10] & io_out_ready;
  assign io_in_11_ready = chosenOH[11] & io_out_ready;
  assign io_in_12_ready = chosenOH[12] & io_out_ready;
  assign io_in_13_ready = chosenOH[13] & io_out_ready;
  assign io_in_14_ready = chosenOH[14] & io_out_ready;
  assign io_in_15_ready = chosenOH[15] & io_out_ready;
  assign io_out_valid = |valids;
  assign io_out_bits_tag =
    (chosenOH[0] ? io_in_0_bits_tag : 33'h0) | (chosenOH[1] ? io_in_1_bits_tag : 33'h0)
    | (chosenOH[2] ? io_in_2_bits_tag : 33'h0) | (chosenOH[3] ? io_in_3_bits_tag : 33'h0)
    | (chosenOH[4] ? io_in_4_bits_tag : 33'h0) | (chosenOH[5] ? io_in_5_bits_tag : 33'h0)
    | (chosenOH[6] ? io_in_6_bits_tag : 33'h0) | (chosenOH[7] ? io_in_7_bits_tag : 33'h0)
    | (chosenOH[8] ? io_in_8_bits_tag : 33'h0) | (chosenOH[9] ? io_in_9_bits_tag : 33'h0)
    | (chosenOH[10] ? io_in_10_bits_tag : 33'h0)
    | (chosenOH[11] ? io_in_11_bits_tag : 33'h0)
    | (chosenOH[12] ? io_in_12_bits_tag : 33'h0)
    | (chosenOH[13] ? io_in_13_bits_tag : 33'h0)
    | (chosenOH[14] ? io_in_14_bits_tag : 33'h0)
    | (chosenOH[15] ? io_in_15_bits_tag : 33'h0);
  assign io_out_bits_set =
    (chosenOH[0] ? io_in_0_bits_set : 7'h0) | (chosenOH[1] ? io_in_1_bits_set : 7'h0)
    | (chosenOH[2] ? io_in_2_bits_set : 7'h0) | (chosenOH[3] ? io_in_3_bits_set : 7'h0)
    | (chosenOH[4] ? io_in_4_bits_set : 7'h0) | (chosenOH[5] ? io_in_5_bits_set : 7'h0)
    | (chosenOH[6] ? io_in_6_bits_set : 7'h0) | (chosenOH[7] ? io_in_7_bits_set : 7'h0)
    | (chosenOH[8] ? io_in_8_bits_set : 7'h0) | (chosenOH[9] ? io_in_9_bits_set : 7'h0)
    | (chosenOH[10] ? io_in_10_bits_set : 7'h0)
    | (chosenOH[11] ? io_in_11_bits_set : 7'h0)
    | (chosenOH[12] ? io_in_12_bits_set : 7'h0)
    | (chosenOH[13] ? io_in_13_bits_set : 7'h0)
    | (chosenOH[14] ? io_in_14_bits_set : 7'h0)
    | (chosenOH[15] ? io_in_15_bits_set : 7'h0);
  assign io_out_bits_opcode = (|chosenOH) ? 3'h6 : 3'h0;
  assign io_out_bits_param =
    (chosenOH[0] ? io_in_0_bits_param : 2'h0) | (chosenOH[1] ? io_in_1_bits_param : 2'h0)
    | (chosenOH[2] ? io_in_2_bits_param : 2'h0)
    | (chosenOH[3] ? io_in_3_bits_param : 2'h0)
    | (chosenOH[4] ? io_in_4_bits_param : 2'h0)
    | (chosenOH[5] ? io_in_5_bits_param : 2'h0)
    | (chosenOH[6] ? io_in_6_bits_param : 2'h0)
    | (chosenOH[7] ? io_in_7_bits_param : 2'h0)
    | (chosenOH[8] ? io_in_8_bits_param : 2'h0)
    | (chosenOH[9] ? io_in_9_bits_param : 2'h0)
    | (chosenOH[10] ? io_in_10_bits_param : 2'h0)
    | (chosenOH[11] ? io_in_11_bits_param : 2'h0)
    | (chosenOH[12] ? io_in_12_bits_param : 2'h0)
    | (chosenOH[13] ? io_in_13_bits_param : 2'h0)
    | (chosenOH[14] ? io_in_14_bits_param : 2'h0)
    | (chosenOH[15] ? io_in_15_bits_param : 2'h0);
  assign io_out_bits_alias =
    (chosenOH[0] ? io_in_0_bits_alias : 2'h0) | (chosenOH[1] ? io_in_1_bits_alias : 2'h0)
    | (chosenOH[2] ? io_in_2_bits_alias : 2'h0)
    | (chosenOH[3] ? io_in_3_bits_alias : 2'h0)
    | (chosenOH[4] ? io_in_4_bits_alias : 2'h0)
    | (chosenOH[5] ? io_in_5_bits_alias : 2'h0)
    | (chosenOH[6] ? io_in_6_bits_alias : 2'h0)
    | (chosenOH[7] ? io_in_7_bits_alias : 2'h0)
    | (chosenOH[8] ? io_in_8_bits_alias : 2'h0)
    | (chosenOH[9] ? io_in_9_bits_alias : 2'h0)
    | (chosenOH[10] ? io_in_10_bits_alias : 2'h0)
    | (chosenOH[11] ? io_in_11_bits_alias : 2'h0)
    | (chosenOH[12] ? io_in_12_bits_alias : 2'h0)
    | (chosenOH[13] ? io_in_13_bits_alias : 2'h0)
    | (chosenOH[14] ? io_in_14_bits_alias : 2'h0)
    | (chosenOH[15] ? io_in_15_bits_alias : 2'h0);
endmodule

