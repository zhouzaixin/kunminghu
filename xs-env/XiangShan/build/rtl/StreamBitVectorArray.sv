// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module StreamBitVectorArray(
  input         clock,
  input         reset,
  output        io_train_req_ready,
  input         io_train_req_valid,
  input  [49:0] io_train_req_bits_vaddr,
  input         io_train_req_bits_miss,
  input         io_train_req_bits_pfHitStream,
  output        io_l1_prefetch_req_valid,
  output [39:0] io_l1_prefetch_req_bits_region,
  output [15:0] io_l1_prefetch_req_bits_bit_vec,
  output        io_l2_l3_prefetch_req_valid,
  output [39:0] io_l2_l3_prefetch_req_bits_region,
  output [15:0] io_l2_l3_prefetch_req_bits_bit_vec,
  output [1:0]  io_l2_l3_prefetch_req_bits_sink
);

  wire              _s0_can_accept_T_3;
  reg  [39:0]       array_0_tag;
  reg  [15:0]       array_0_bit_vec;
  reg               array_0_active;
  reg  [4:0]        array_0_cnt;
  reg  [39:0]       array_1_tag;
  reg  [15:0]       array_1_bit_vec;
  reg               array_1_active;
  reg  [4:0]        array_1_cnt;
  reg  [39:0]       array_2_tag;
  reg  [15:0]       array_2_bit_vec;
  reg               array_2_active;
  reg  [4:0]        array_2_cnt;
  reg  [39:0]       array_3_tag;
  reg  [15:0]       array_3_bit_vec;
  reg               array_3_active;
  reg  [4:0]        array_3_cnt;
  reg  [39:0]       array_4_tag;
  reg  [15:0]       array_4_bit_vec;
  reg               array_4_active;
  reg  [4:0]        array_4_cnt;
  reg  [39:0]       array_5_tag;
  reg  [15:0]       array_5_bit_vec;
  reg               array_5_active;
  reg  [4:0]        array_5_cnt;
  reg  [39:0]       array_6_tag;
  reg  [15:0]       array_6_bit_vec;
  reg               array_6_active;
  reg  [4:0]        array_6_cnt;
  reg  [39:0]       array_7_tag;
  reg  [15:0]       array_7_bit_vec;
  reg               array_7_active;
  reg  [4:0]        array_7_cnt;
  reg  [39:0]       array_8_tag;
  reg  [15:0]       array_8_bit_vec;
  reg               array_8_active;
  reg  [4:0]        array_8_cnt;
  reg  [39:0]       array_9_tag;
  reg  [15:0]       array_9_bit_vec;
  reg               array_9_active;
  reg  [4:0]        array_9_cnt;
  reg  [39:0]       array_10_tag;
  reg  [15:0]       array_10_bit_vec;
  reg               array_10_active;
  reg  [4:0]        array_10_cnt;
  reg  [39:0]       array_11_tag;
  reg  [15:0]       array_11_bit_vec;
  reg               array_11_active;
  reg  [4:0]        array_11_cnt;
  reg  [39:0]       array_12_tag;
  reg  [15:0]       array_12_bit_vec;
  reg               array_12_active;
  reg  [4:0]        array_12_cnt;
  reg  [39:0]       array_13_tag;
  reg  [15:0]       array_13_bit_vec;
  reg               array_13_active;
  reg  [4:0]        array_13_cnt;
  reg  [39:0]       array_14_tag;
  reg  [15:0]       array_14_bit_vec;
  reg               array_14_active;
  reg  [4:0]        array_14_cnt;
  reg  [39:0]       array_15_tag;
  reg  [15:0]       array_15_bit_vec;
  reg               array_15_active;
  reg  [4:0]        array_15_cnt;
  reg               valids_0;
  reg               valids_1;
  reg               valids_2;
  reg               valids_3;
  reg               valids_4;
  reg               valids_5;
  reg               valids_6;
  reg               valids_7;
  reg               valids_8;
  reg               valids_9;
  reg               valids_10;
  reg               valids_11;
  reg               valids_12;
  reg               valids_13;
  reg               valids_14;
  reg               valids_15;
  reg  [14:0]       state_reg;
  wire              s0_valid = ~_s0_can_accept_T_3 & io_train_req_valid;
  wire              _s0_region_tag_minus_one_match_vec_T = valids_0 & s0_valid;
  wire              _s0_region_tag_minus_one_match_vec_T_4 = valids_1 & s0_valid;
  wire              s0_region_tag_match_vec_1 =
    _s0_region_tag_minus_one_match_vec_T_4
    & {array_1_tag[14:10] ^ array_1_tag[19:15] ^ array_1_tag[24:20],
       array_1_tag[9:0]} == {io_train_req_bits_vaddr[24:20]
                               ^ io_train_req_bits_vaddr[29:25]
                               ^ io_train_req_bits_vaddr[34:30],
                             io_train_req_bits_vaddr[19:10]};
  wire              _s0_region_tag_minus_one_match_vec_T_8 = valids_2 & s0_valid;
  wire              s0_region_tag_match_vec_2 =
    _s0_region_tag_minus_one_match_vec_T_8
    & {array_2_tag[14:10] ^ array_2_tag[19:15] ^ array_2_tag[24:20],
       array_2_tag[9:0]} == {io_train_req_bits_vaddr[24:20]
                               ^ io_train_req_bits_vaddr[29:25]
                               ^ io_train_req_bits_vaddr[34:30],
                             io_train_req_bits_vaddr[19:10]};
  wire              _s0_region_tag_minus_one_match_vec_T_12 = valids_3 & s0_valid;
  wire              s0_region_tag_match_vec_3 =
    _s0_region_tag_minus_one_match_vec_T_12
    & {array_3_tag[14:10] ^ array_3_tag[19:15] ^ array_3_tag[24:20],
       array_3_tag[9:0]} == {io_train_req_bits_vaddr[24:20]
                               ^ io_train_req_bits_vaddr[29:25]
                               ^ io_train_req_bits_vaddr[34:30],
                             io_train_req_bits_vaddr[19:10]};
  wire              _s0_region_tag_minus_one_match_vec_T_16 = valids_4 & s0_valid;
  wire              s0_region_tag_match_vec_4 =
    _s0_region_tag_minus_one_match_vec_T_16
    & {array_4_tag[14:10] ^ array_4_tag[19:15] ^ array_4_tag[24:20],
       array_4_tag[9:0]} == {io_train_req_bits_vaddr[24:20]
                               ^ io_train_req_bits_vaddr[29:25]
                               ^ io_train_req_bits_vaddr[34:30],
                             io_train_req_bits_vaddr[19:10]};
  wire              _s0_region_tag_minus_one_match_vec_T_20 = valids_5 & s0_valid;
  wire              s0_region_tag_match_vec_5 =
    _s0_region_tag_minus_one_match_vec_T_20
    & {array_5_tag[14:10] ^ array_5_tag[19:15] ^ array_5_tag[24:20],
       array_5_tag[9:0]} == {io_train_req_bits_vaddr[24:20]
                               ^ io_train_req_bits_vaddr[29:25]
                               ^ io_train_req_bits_vaddr[34:30],
                             io_train_req_bits_vaddr[19:10]};
  wire              _s0_region_tag_minus_one_match_vec_T_24 = valids_6 & s0_valid;
  wire              s0_region_tag_match_vec_6 =
    _s0_region_tag_minus_one_match_vec_T_24
    & {array_6_tag[14:10] ^ array_6_tag[19:15] ^ array_6_tag[24:20],
       array_6_tag[9:0]} == {io_train_req_bits_vaddr[24:20]
                               ^ io_train_req_bits_vaddr[29:25]
                               ^ io_train_req_bits_vaddr[34:30],
                             io_train_req_bits_vaddr[19:10]};
  wire              _s0_region_tag_minus_one_match_vec_T_28 = valids_7 & s0_valid;
  wire              s0_region_tag_match_vec_7 =
    _s0_region_tag_minus_one_match_vec_T_28
    & {array_7_tag[14:10] ^ array_7_tag[19:15] ^ array_7_tag[24:20],
       array_7_tag[9:0]} == {io_train_req_bits_vaddr[24:20]
                               ^ io_train_req_bits_vaddr[29:25]
                               ^ io_train_req_bits_vaddr[34:30],
                             io_train_req_bits_vaddr[19:10]};
  wire              _s0_region_tag_minus_one_match_vec_T_32 = valids_8 & s0_valid;
  wire              s0_region_tag_match_vec_8 =
    _s0_region_tag_minus_one_match_vec_T_32
    & {array_8_tag[14:10] ^ array_8_tag[19:15] ^ array_8_tag[24:20],
       array_8_tag[9:0]} == {io_train_req_bits_vaddr[24:20]
                               ^ io_train_req_bits_vaddr[29:25]
                               ^ io_train_req_bits_vaddr[34:30],
                             io_train_req_bits_vaddr[19:10]};
  wire              _s0_region_tag_minus_one_match_vec_T_36 = valids_9 & s0_valid;
  wire              s0_region_tag_match_vec_9 =
    _s0_region_tag_minus_one_match_vec_T_36
    & {array_9_tag[14:10] ^ array_9_tag[19:15] ^ array_9_tag[24:20],
       array_9_tag[9:0]} == {io_train_req_bits_vaddr[24:20]
                               ^ io_train_req_bits_vaddr[29:25]
                               ^ io_train_req_bits_vaddr[34:30],
                             io_train_req_bits_vaddr[19:10]};
  wire              _s0_region_tag_minus_one_match_vec_T_40 = valids_10 & s0_valid;
  wire              s0_region_tag_match_vec_10 =
    _s0_region_tag_minus_one_match_vec_T_40
    & {array_10_tag[14:10] ^ array_10_tag[19:15] ^ array_10_tag[24:20],
       array_10_tag[9:0]} == {io_train_req_bits_vaddr[24:20]
                                ^ io_train_req_bits_vaddr[29:25]
                                ^ io_train_req_bits_vaddr[34:30],
                              io_train_req_bits_vaddr[19:10]};
  wire              _s0_region_tag_minus_one_match_vec_T_44 = valids_11 & s0_valid;
  wire              s0_region_tag_match_vec_11 =
    _s0_region_tag_minus_one_match_vec_T_44
    & {array_11_tag[14:10] ^ array_11_tag[19:15] ^ array_11_tag[24:20],
       array_11_tag[9:0]} == {io_train_req_bits_vaddr[24:20]
                                ^ io_train_req_bits_vaddr[29:25]
                                ^ io_train_req_bits_vaddr[34:30],
                              io_train_req_bits_vaddr[19:10]};
  wire              _s0_region_tag_minus_one_match_vec_T_48 = valids_12 & s0_valid;
  wire              s0_region_tag_match_vec_12 =
    _s0_region_tag_minus_one_match_vec_T_48
    & {array_12_tag[14:10] ^ array_12_tag[19:15] ^ array_12_tag[24:20],
       array_12_tag[9:0]} == {io_train_req_bits_vaddr[24:20]
                                ^ io_train_req_bits_vaddr[29:25]
                                ^ io_train_req_bits_vaddr[34:30],
                              io_train_req_bits_vaddr[19:10]};
  wire              _s0_region_tag_minus_one_match_vec_T_52 = valids_13 & s0_valid;
  wire              s0_region_tag_match_vec_13 =
    _s0_region_tag_minus_one_match_vec_T_52
    & {array_13_tag[14:10] ^ array_13_tag[19:15] ^ array_13_tag[24:20],
       array_13_tag[9:0]} == {io_train_req_bits_vaddr[24:20]
                                ^ io_train_req_bits_vaddr[29:25]
                                ^ io_train_req_bits_vaddr[34:30],
                              io_train_req_bits_vaddr[19:10]};
  wire              _s0_region_tag_minus_one_match_vec_T_56 = valids_14 & s0_valid;
  wire              s0_region_tag_match_vec_14 =
    _s0_region_tag_minus_one_match_vec_T_56
    & {array_14_tag[14:10] ^ array_14_tag[19:15] ^ array_14_tag[24:20],
       array_14_tag[9:0]} == {io_train_req_bits_vaddr[24:20]
                                ^ io_train_req_bits_vaddr[29:25]
                                ^ io_train_req_bits_vaddr[34:30],
                              io_train_req_bits_vaddr[19:10]};
  wire              _s0_region_tag_minus_one_match_vec_T_60 = valids_15 & s0_valid;
  wire              s0_region_tag_match_vec_15 =
    _s0_region_tag_minus_one_match_vec_T_60
    & {array_15_tag[14:10] ^ array_15_tag[19:15] ^ array_15_tag[24:20],
       array_15_tag[9:0]} == {io_train_req_bits_vaddr[24:20]
                                ^ io_train_req_bits_vaddr[29:25]
                                ^ io_train_req_bits_vaddr[34:30],
                              io_train_req_bits_vaddr[19:10]};
  wire [15:0]       _s0_hit_T =
    {_s0_region_tag_minus_one_match_vec_T
       & {array_0_tag[14:10] ^ array_0_tag[19:15] ^ array_0_tag[24:20],
          array_0_tag[9:0]} == {io_train_req_bits_vaddr[24:20]
                                  ^ io_train_req_bits_vaddr[29:25]
                                  ^ io_train_req_bits_vaddr[34:30],
                                io_train_req_bits_vaddr[19:10]},
     s0_region_tag_match_vec_1,
     s0_region_tag_match_vec_2,
     s0_region_tag_match_vec_3,
     s0_region_tag_match_vec_4,
     s0_region_tag_match_vec_5,
     s0_region_tag_match_vec_6,
     s0_region_tag_match_vec_7,
     s0_region_tag_match_vec_8,
     s0_region_tag_match_vec_9,
     s0_region_tag_match_vec_10,
     s0_region_tag_match_vec_11,
     s0_region_tag_match_vec_12,
     s0_region_tag_match_vec_13,
     s0_region_tag_match_vec_14,
     s0_region_tag_match_vec_15};
  wire [6:0]        _s0_index_T_1 =
    {s0_region_tag_match_vec_15,
     s0_region_tag_match_vec_14,
     s0_region_tag_match_vec_13,
     s0_region_tag_match_vec_12,
     s0_region_tag_match_vec_11,
     s0_region_tag_match_vec_10,
     s0_region_tag_match_vec_9}
    | {s0_region_tag_match_vec_7,
       s0_region_tag_match_vec_6,
       s0_region_tag_match_vec_5,
       s0_region_tag_match_vec_4,
       s0_region_tag_match_vec_3,
       s0_region_tag_match_vec_2,
       s0_region_tag_match_vec_1};
  wire [2:0]        _s0_index_T_3 = _s0_index_T_1[6:4] | _s0_index_T_1[2:0];
  wire [3:0]        s0_index =
    (|_s0_hit_T)
      ? {|{s0_region_tag_match_vec_15,
           s0_region_tag_match_vec_14,
           s0_region_tag_match_vec_13,
           s0_region_tag_match_vec_12,
           s0_region_tag_match_vec_11,
           s0_region_tag_match_vec_10,
           s0_region_tag_match_vec_9,
           s0_region_tag_match_vec_8},
         |(_s0_index_T_1[6:3]),
         |(_s0_index_T_3[2:1]),
         _s0_index_T_3[2] | _s0_index_T_3[0]}
      : {state_reg[14],
         state_reg[14]
           ? {state_reg[13],
              state_reg[13]
                ? {state_reg[12], state_reg[12] ? state_reg[11] : state_reg[10]}
                : {state_reg[9], state_reg[9] ? state_reg[8] : state_reg[7]}}
           : {state_reg[6],
              state_reg[6]
                ? {state_reg[5], state_reg[5] ? state_reg[4] : state_reg[3]}
                : {state_reg[2], state_reg[2] ? state_reg[1] : state_reg[0]}}};
  reg               s1_valid_last_REG;
  reg  [3:0]        s1_index;
  reg               s1_miss;
  reg               s1_pfHit;
  reg  [3:0]        s1_plus_one_index;
  reg  [3:0]        s1_minus_one_index;
  reg               s1_hit;
  reg               s1_plus_one_hit_r;
  wire [15:0]       _GEN =
    {{array_15_active},
     {array_14_active},
     {array_13_active},
     {array_12_active},
     {array_11_active},
     {array_10_active},
     {array_9_active},
     {array_8_active},
     {array_7_active},
     {array_6_active},
     {array_5_active},
     {array_4_active},
     {array_3_active},
     {array_2_active},
     {array_1_active},
     {array_0_active}};
  reg               s1_minus_one_hit_r;
  reg  [39:0]       s1_region_tag;
  reg  [3:0]        s1_region_bits;
  wire              s1_alloc = s1_valid_last_REG & ~s1_hit;
  assign _s0_can_accept_T_3 =
    s1_valid_last_REG
    & {s1_region_tag[14:10] ^ s1_region_tag[19:15] ^ s1_region_tag[24:20],
       s1_region_tag[9:0]} == {io_train_req_bits_vaddr[24:20]
                                 ^ io_train_req_bits_vaddr[29:25]
                                 ^ io_train_req_bits_vaddr[34:30],
                               io_train_req_bits_vaddr[19:10]};
  wire              _GEN_0 = s1_index == 4'h0;
  wire              _GEN_1 = s1_alloc & _GEN_0;
  wire              _GEN_2 = s1_index == 4'h1;
  wire              _GEN_3 = s1_alloc & _GEN_2;
  wire              _GEN_4 = s1_index == 4'h2;
  wire              _GEN_5 = s1_alloc & _GEN_4;
  wire              _GEN_6 = s1_index == 4'h3;
  wire              _GEN_7 = s1_alloc & _GEN_6;
  wire              _GEN_8 = s1_index == 4'h4;
  wire              _GEN_9 = s1_alloc & _GEN_8;
  wire              _GEN_10 = s1_index == 4'h5;
  wire              _GEN_11 = s1_alloc & _GEN_10;
  wire              _GEN_12 = s1_index == 4'h6;
  wire              _GEN_13 = s1_alloc & _GEN_12;
  wire              _GEN_14 = s1_index == 4'h7;
  wire              _GEN_15 = s1_alloc & _GEN_14;
  wire              _GEN_16 = s1_index == 4'h8;
  wire              _GEN_17 = s1_alloc & _GEN_16;
  wire              _GEN_18 = s1_index == 4'h9;
  wire              _GEN_19 = s1_alloc & _GEN_18;
  wire              _GEN_20 = s1_index == 4'hA;
  wire              _GEN_21 = s1_alloc & _GEN_20;
  wire              _GEN_22 = s1_index == 4'hB;
  wire              _GEN_23 = s1_alloc & _GEN_22;
  wire              _GEN_24 = s1_index == 4'hC;
  wire              _GEN_25 = s1_alloc & _GEN_24;
  wire              _GEN_26 = s1_index == 4'hD;
  wire              _GEN_27 = s1_alloc & _GEN_26;
  wire              _GEN_28 = s1_index == 4'hE;
  wire              _GEN_29 = s1_alloc & _GEN_28;
  wire              _GEN_30 = s1_alloc & (&s1_index);
  reg               s2_valid_last_REG;
  reg  [3:0]        s2_index;
  reg  [49:0]       s2_pf_l1_incr_vaddr;
  reg  [49:0]       s2_pf_l2_incr_vaddr;
  reg  [49:0]       s2_pf_l3_incr_vaddr;
  reg               s2_can_send_pf;
  wire              s2_will_send_pf = s2_valid_last_REG & _GEN[s2_index] & s2_can_send_pf;
  reg               s3_pf_l1_valid_last_REG;
  reg  [39:0]       s3_pf_l1_bits_region;
  reg  [15:0]       s3_pf_l1_bits_bit_vec;
  reg               s3_pf_l2_valid_last_REG;
  reg  [39:0]       s3_pf_l2_bits_region;
  reg  [15:0]       s3_pf_l2_bits_bit_vec;
  reg  [39:0]       s3_pf_l3_bits_region;
  reg  [15:0]       s3_pf_l3_bits_bit_vec;
  reg               s4_pf_l2_valid_last_REG;
  reg  [39:0]       s4_pf_l2_bits_region;
  reg  [15:0]       s4_pf_l2_bits_bit_vec;
  reg  [39:0]       s4_pf_l3_bits_region;
  reg  [15:0]       s4_pf_l3_bits_bit_vec;
  reg  [39:0]       s5_pf_l3_bits_region;
  reg  [15:0]       s5_pf_l3_bits_bit_vec;
  reg               last_REG;
  reg               last_REG_1;
  reg               last_REG_2;
  reg               last_REG_3;
  reg               last_REG_4;
  reg               last_REG_5;
  reg               last_REG_6;
  reg               last_REG_7;
  reg               last_REG_8;
  reg               last_REG_9;
  reg               last_REG_10;
  reg               last_REG_11;
  reg               last_REG_12;
  reg               last_REG_13;
  reg               last_REG_14;
  reg               last_REG_15;
  wire [24:0]       _s0_region_tag_plus_one_T_1 =
    25'(io_train_req_bits_vaddr[34:10] + 25'h1);
  wire [24:0]       _s0_region_tag_minus_one_T_1 =
    25'(io_train_req_bits_vaddr[34:10] - 25'h1);
  wire              s0_region_tag_plus_one_match_vec_1 =
    _s0_region_tag_minus_one_match_vec_T_4
    & {array_1_tag[14:10] ^ array_1_tag[19:15] ^ array_1_tag[24:20],
       array_1_tag[9:0]} == {_s0_region_tag_plus_one_T_1[14:10]
                               ^ _s0_region_tag_plus_one_T_1[19:15]
                               ^ _s0_region_tag_plus_one_T_1[24:20],
                             _s0_region_tag_plus_one_T_1[9:0]};
  wire              s0_region_tag_plus_one_match_vec_2 =
    _s0_region_tag_minus_one_match_vec_T_8
    & {array_2_tag[14:10] ^ array_2_tag[19:15] ^ array_2_tag[24:20],
       array_2_tag[9:0]} == {_s0_region_tag_plus_one_T_1[14:10]
                               ^ _s0_region_tag_plus_one_T_1[19:15]
                               ^ _s0_region_tag_plus_one_T_1[24:20],
                             _s0_region_tag_plus_one_T_1[9:0]};
  wire              s0_region_tag_plus_one_match_vec_3 =
    _s0_region_tag_minus_one_match_vec_T_12
    & {array_3_tag[14:10] ^ array_3_tag[19:15] ^ array_3_tag[24:20],
       array_3_tag[9:0]} == {_s0_region_tag_plus_one_T_1[14:10]
                               ^ _s0_region_tag_plus_one_T_1[19:15]
                               ^ _s0_region_tag_plus_one_T_1[24:20],
                             _s0_region_tag_plus_one_T_1[9:0]};
  wire              s0_region_tag_plus_one_match_vec_4 =
    _s0_region_tag_minus_one_match_vec_T_16
    & {array_4_tag[14:10] ^ array_4_tag[19:15] ^ array_4_tag[24:20],
       array_4_tag[9:0]} == {_s0_region_tag_plus_one_T_1[14:10]
                               ^ _s0_region_tag_plus_one_T_1[19:15]
                               ^ _s0_region_tag_plus_one_T_1[24:20],
                             _s0_region_tag_plus_one_T_1[9:0]};
  wire              s0_region_tag_plus_one_match_vec_5 =
    _s0_region_tag_minus_one_match_vec_T_20
    & {array_5_tag[14:10] ^ array_5_tag[19:15] ^ array_5_tag[24:20],
       array_5_tag[9:0]} == {_s0_region_tag_plus_one_T_1[14:10]
                               ^ _s0_region_tag_plus_one_T_1[19:15]
                               ^ _s0_region_tag_plus_one_T_1[24:20],
                             _s0_region_tag_plus_one_T_1[9:0]};
  wire              s0_region_tag_plus_one_match_vec_6 =
    _s0_region_tag_minus_one_match_vec_T_24
    & {array_6_tag[14:10] ^ array_6_tag[19:15] ^ array_6_tag[24:20],
       array_6_tag[9:0]} == {_s0_region_tag_plus_one_T_1[14:10]
                               ^ _s0_region_tag_plus_one_T_1[19:15]
                               ^ _s0_region_tag_plus_one_T_1[24:20],
                             _s0_region_tag_plus_one_T_1[9:0]};
  wire              s0_region_tag_plus_one_match_vec_7 =
    _s0_region_tag_minus_one_match_vec_T_28
    & {array_7_tag[14:10] ^ array_7_tag[19:15] ^ array_7_tag[24:20],
       array_7_tag[9:0]} == {_s0_region_tag_plus_one_T_1[14:10]
                               ^ _s0_region_tag_plus_one_T_1[19:15]
                               ^ _s0_region_tag_plus_one_T_1[24:20],
                             _s0_region_tag_plus_one_T_1[9:0]};
  wire              s0_region_tag_plus_one_match_vec_8 =
    _s0_region_tag_minus_one_match_vec_T_32
    & {array_8_tag[14:10] ^ array_8_tag[19:15] ^ array_8_tag[24:20],
       array_8_tag[9:0]} == {_s0_region_tag_plus_one_T_1[14:10]
                               ^ _s0_region_tag_plus_one_T_1[19:15]
                               ^ _s0_region_tag_plus_one_T_1[24:20],
                             _s0_region_tag_plus_one_T_1[9:0]};
  wire              s0_region_tag_plus_one_match_vec_9 =
    _s0_region_tag_minus_one_match_vec_T_36
    & {array_9_tag[14:10] ^ array_9_tag[19:15] ^ array_9_tag[24:20],
       array_9_tag[9:0]} == {_s0_region_tag_plus_one_T_1[14:10]
                               ^ _s0_region_tag_plus_one_T_1[19:15]
                               ^ _s0_region_tag_plus_one_T_1[24:20],
                             _s0_region_tag_plus_one_T_1[9:0]};
  wire              s0_region_tag_plus_one_match_vec_10 =
    _s0_region_tag_minus_one_match_vec_T_40
    & {array_10_tag[14:10] ^ array_10_tag[19:15] ^ array_10_tag[24:20],
       array_10_tag[9:0]} == {_s0_region_tag_plus_one_T_1[14:10]
                                ^ _s0_region_tag_plus_one_T_1[19:15]
                                ^ _s0_region_tag_plus_one_T_1[24:20],
                              _s0_region_tag_plus_one_T_1[9:0]};
  wire              s0_region_tag_plus_one_match_vec_11 =
    _s0_region_tag_minus_one_match_vec_T_44
    & {array_11_tag[14:10] ^ array_11_tag[19:15] ^ array_11_tag[24:20],
       array_11_tag[9:0]} == {_s0_region_tag_plus_one_T_1[14:10]
                                ^ _s0_region_tag_plus_one_T_1[19:15]
                                ^ _s0_region_tag_plus_one_T_1[24:20],
                              _s0_region_tag_plus_one_T_1[9:0]};
  wire              s0_region_tag_plus_one_match_vec_12 =
    _s0_region_tag_minus_one_match_vec_T_48
    & {array_12_tag[14:10] ^ array_12_tag[19:15] ^ array_12_tag[24:20],
       array_12_tag[9:0]} == {_s0_region_tag_plus_one_T_1[14:10]
                                ^ _s0_region_tag_plus_one_T_1[19:15]
                                ^ _s0_region_tag_plus_one_T_1[24:20],
                              _s0_region_tag_plus_one_T_1[9:0]};
  wire              s0_region_tag_plus_one_match_vec_13 =
    _s0_region_tag_minus_one_match_vec_T_52
    & {array_13_tag[14:10] ^ array_13_tag[19:15] ^ array_13_tag[24:20],
       array_13_tag[9:0]} == {_s0_region_tag_plus_one_T_1[14:10]
                                ^ _s0_region_tag_plus_one_T_1[19:15]
                                ^ _s0_region_tag_plus_one_T_1[24:20],
                              _s0_region_tag_plus_one_T_1[9:0]};
  wire              s0_region_tag_plus_one_match_vec_14 =
    _s0_region_tag_minus_one_match_vec_T_56
    & {array_14_tag[14:10] ^ array_14_tag[19:15] ^ array_14_tag[24:20],
       array_14_tag[9:0]} == {_s0_region_tag_plus_one_T_1[14:10]
                                ^ _s0_region_tag_plus_one_T_1[19:15]
                                ^ _s0_region_tag_plus_one_T_1[24:20],
                              _s0_region_tag_plus_one_T_1[9:0]};
  wire              s0_region_tag_plus_one_match_vec_15 =
    _s0_region_tag_minus_one_match_vec_T_60
    & {array_15_tag[14:10] ^ array_15_tag[19:15] ^ array_15_tag[24:20],
       array_15_tag[9:0]} == {_s0_region_tag_plus_one_T_1[14:10]
                                ^ _s0_region_tag_plus_one_T_1[19:15]
                                ^ _s0_region_tag_plus_one_T_1[24:20],
                              _s0_region_tag_plus_one_T_1[9:0]};
  wire              s0_region_tag_minus_one_match_vec_1 =
    _s0_region_tag_minus_one_match_vec_T_4
    & {array_1_tag[14:10] ^ array_1_tag[19:15] ^ array_1_tag[24:20],
       array_1_tag[9:0]} == {_s0_region_tag_minus_one_T_1[14:10]
                               ^ _s0_region_tag_minus_one_T_1[19:15]
                               ^ _s0_region_tag_minus_one_T_1[24:20],
                             _s0_region_tag_minus_one_T_1[9:0]};
  wire              s0_region_tag_minus_one_match_vec_2 =
    _s0_region_tag_minus_one_match_vec_T_8
    & {array_2_tag[14:10] ^ array_2_tag[19:15] ^ array_2_tag[24:20],
       array_2_tag[9:0]} == {_s0_region_tag_minus_one_T_1[14:10]
                               ^ _s0_region_tag_minus_one_T_1[19:15]
                               ^ _s0_region_tag_minus_one_T_1[24:20],
                             _s0_region_tag_minus_one_T_1[9:0]};
  wire              s0_region_tag_minus_one_match_vec_3 =
    _s0_region_tag_minus_one_match_vec_T_12
    & {array_3_tag[14:10] ^ array_3_tag[19:15] ^ array_3_tag[24:20],
       array_3_tag[9:0]} == {_s0_region_tag_minus_one_T_1[14:10]
                               ^ _s0_region_tag_minus_one_T_1[19:15]
                               ^ _s0_region_tag_minus_one_T_1[24:20],
                             _s0_region_tag_minus_one_T_1[9:0]};
  wire              s0_region_tag_minus_one_match_vec_4 =
    _s0_region_tag_minus_one_match_vec_T_16
    & {array_4_tag[14:10] ^ array_4_tag[19:15] ^ array_4_tag[24:20],
       array_4_tag[9:0]} == {_s0_region_tag_minus_one_T_1[14:10]
                               ^ _s0_region_tag_minus_one_T_1[19:15]
                               ^ _s0_region_tag_minus_one_T_1[24:20],
                             _s0_region_tag_minus_one_T_1[9:0]};
  wire              s0_region_tag_minus_one_match_vec_5 =
    _s0_region_tag_minus_one_match_vec_T_20
    & {array_5_tag[14:10] ^ array_5_tag[19:15] ^ array_5_tag[24:20],
       array_5_tag[9:0]} == {_s0_region_tag_minus_one_T_1[14:10]
                               ^ _s0_region_tag_minus_one_T_1[19:15]
                               ^ _s0_region_tag_minus_one_T_1[24:20],
                             _s0_region_tag_minus_one_T_1[9:0]};
  wire              s0_region_tag_minus_one_match_vec_6 =
    _s0_region_tag_minus_one_match_vec_T_24
    & {array_6_tag[14:10] ^ array_6_tag[19:15] ^ array_6_tag[24:20],
       array_6_tag[9:0]} == {_s0_region_tag_minus_one_T_1[14:10]
                               ^ _s0_region_tag_minus_one_T_1[19:15]
                               ^ _s0_region_tag_minus_one_T_1[24:20],
                             _s0_region_tag_minus_one_T_1[9:0]};
  wire              s0_region_tag_minus_one_match_vec_7 =
    _s0_region_tag_minus_one_match_vec_T_28
    & {array_7_tag[14:10] ^ array_7_tag[19:15] ^ array_7_tag[24:20],
       array_7_tag[9:0]} == {_s0_region_tag_minus_one_T_1[14:10]
                               ^ _s0_region_tag_minus_one_T_1[19:15]
                               ^ _s0_region_tag_minus_one_T_1[24:20],
                             _s0_region_tag_minus_one_T_1[9:0]};
  wire              s0_region_tag_minus_one_match_vec_8 =
    _s0_region_tag_minus_one_match_vec_T_32
    & {array_8_tag[14:10] ^ array_8_tag[19:15] ^ array_8_tag[24:20],
       array_8_tag[9:0]} == {_s0_region_tag_minus_one_T_1[14:10]
                               ^ _s0_region_tag_minus_one_T_1[19:15]
                               ^ _s0_region_tag_minus_one_T_1[24:20],
                             _s0_region_tag_minus_one_T_1[9:0]};
  wire              s0_region_tag_minus_one_match_vec_9 =
    _s0_region_tag_minus_one_match_vec_T_36
    & {array_9_tag[14:10] ^ array_9_tag[19:15] ^ array_9_tag[24:20],
       array_9_tag[9:0]} == {_s0_region_tag_minus_one_T_1[14:10]
                               ^ _s0_region_tag_minus_one_T_1[19:15]
                               ^ _s0_region_tag_minus_one_T_1[24:20],
                             _s0_region_tag_minus_one_T_1[9:0]};
  wire              s0_region_tag_minus_one_match_vec_10 =
    _s0_region_tag_minus_one_match_vec_T_40
    & {array_10_tag[14:10] ^ array_10_tag[19:15] ^ array_10_tag[24:20],
       array_10_tag[9:0]} == {_s0_region_tag_minus_one_T_1[14:10]
                                ^ _s0_region_tag_minus_one_T_1[19:15]
                                ^ _s0_region_tag_minus_one_T_1[24:20],
                              _s0_region_tag_minus_one_T_1[9:0]};
  wire              s0_region_tag_minus_one_match_vec_11 =
    _s0_region_tag_minus_one_match_vec_T_44
    & {array_11_tag[14:10] ^ array_11_tag[19:15] ^ array_11_tag[24:20],
       array_11_tag[9:0]} == {_s0_region_tag_minus_one_T_1[14:10]
                                ^ _s0_region_tag_minus_one_T_1[19:15]
                                ^ _s0_region_tag_minus_one_T_1[24:20],
                              _s0_region_tag_minus_one_T_1[9:0]};
  wire              s0_region_tag_minus_one_match_vec_12 =
    _s0_region_tag_minus_one_match_vec_T_48
    & {array_12_tag[14:10] ^ array_12_tag[19:15] ^ array_12_tag[24:20],
       array_12_tag[9:0]} == {_s0_region_tag_minus_one_T_1[14:10]
                                ^ _s0_region_tag_minus_one_T_1[19:15]
                                ^ _s0_region_tag_minus_one_T_1[24:20],
                              _s0_region_tag_minus_one_T_1[9:0]};
  wire              s0_region_tag_minus_one_match_vec_13 =
    _s0_region_tag_minus_one_match_vec_T_52
    & {array_13_tag[14:10] ^ array_13_tag[19:15] ^ array_13_tag[24:20],
       array_13_tag[9:0]} == {_s0_region_tag_minus_one_T_1[14:10]
                                ^ _s0_region_tag_minus_one_T_1[19:15]
                                ^ _s0_region_tag_minus_one_T_1[24:20],
                              _s0_region_tag_minus_one_T_1[9:0]};
  wire              s0_region_tag_minus_one_match_vec_14 =
    _s0_region_tag_minus_one_match_vec_T_56
    & {array_14_tag[14:10] ^ array_14_tag[19:15] ^ array_14_tag[24:20],
       array_14_tag[9:0]} == {_s0_region_tag_minus_one_T_1[14:10]
                                ^ _s0_region_tag_minus_one_T_1[19:15]
                                ^ _s0_region_tag_minus_one_T_1[24:20],
                              _s0_region_tag_minus_one_T_1[9:0]};
  wire              s0_region_tag_minus_one_match_vec_15 =
    _s0_region_tag_minus_one_match_vec_T_60
    & {array_15_tag[14:10] ^ array_15_tag[19:15] ^ array_15_tag[24:20],
       array_15_tag[9:0]} == {_s0_region_tag_minus_one_T_1[14:10]
                                ^ _s0_region_tag_minus_one_T_1[19:15]
                                ^ _s0_region_tag_minus_one_T_1[24:20],
                              _s0_region_tag_minus_one_T_1[9:0]};
  wire [6:0]        _s0_plus_one_index_T_2 =
    {s0_region_tag_plus_one_match_vec_15,
     s0_region_tag_plus_one_match_vec_14,
     s0_region_tag_plus_one_match_vec_13,
     s0_region_tag_plus_one_match_vec_12,
     s0_region_tag_plus_one_match_vec_11,
     s0_region_tag_plus_one_match_vec_10,
     s0_region_tag_plus_one_match_vec_9}
    | {s0_region_tag_plus_one_match_vec_7,
       s0_region_tag_plus_one_match_vec_6,
       s0_region_tag_plus_one_match_vec_5,
       s0_region_tag_plus_one_match_vec_4,
       s0_region_tag_plus_one_match_vec_3,
       s0_region_tag_plus_one_match_vec_2,
       s0_region_tag_plus_one_match_vec_1};
  wire [2:0]        _s0_plus_one_index_T_4 =
    _s0_plus_one_index_T_2[6:4] | _s0_plus_one_index_T_2[2:0];
  wire [6:0]        _s0_minus_one_index_T_2 =
    {s0_region_tag_minus_one_match_vec_15,
     s0_region_tag_minus_one_match_vec_14,
     s0_region_tag_minus_one_match_vec_13,
     s0_region_tag_minus_one_match_vec_12,
     s0_region_tag_minus_one_match_vec_11,
     s0_region_tag_minus_one_match_vec_10,
     s0_region_tag_minus_one_match_vec_9}
    | {s0_region_tag_minus_one_match_vec_7,
       s0_region_tag_minus_one_match_vec_6,
       s0_region_tag_minus_one_match_vec_5,
       s0_region_tag_minus_one_match_vec_4,
       s0_region_tag_minus_one_match_vec_3,
       s0_region_tag_minus_one_match_vec_2,
       s0_region_tag_minus_one_match_vec_1};
  wire [2:0]        _s0_minus_one_index_T_4 =
    _s0_minus_one_index_T_2[6:4] | _s0_minus_one_index_T_2[2:0];
  wire [43:0]       _GEN_31 = {s1_region_tag, s1_region_bits};
  wire [15:0]       s2_pf_l1_req_bits_region_bit_vec = 16'h1 << s2_pf_l1_incr_vaddr[9:6];
  wire [15:0]       s2_pf_l2_req_bits_region_bit_vec = 16'h1 << s2_pf_l2_incr_vaddr[9:6];
  wire [14:0]       _GEN_32 =
    s2_pf_l2_req_bits_region_bit_vec[15:1] | s2_pf_l2_req_bits_region_bit_vec[14:0];
  wire [13:0]       _GEN_33 = _GEN_32[14:1] | s2_pf_l2_req_bits_region_bit_vec[13:0];
  wire [15:0]       s2_pf_l3_req_bits_region_bit_vec = 16'h1 << s2_pf_l3_incr_vaddr[9:6];
  wire [14:0]       _GEN_34 =
    s2_pf_l3_req_bits_region_bit_vec[15:1] | s2_pf_l3_req_bits_region_bit_vec[14:0];
  wire [13:0]       _GEN_35 = _GEN_34[14:1] | s2_pf_l3_req_bits_region_bit_vec[13:0];
  wire [12:0]       _GEN_36 = _GEN_35[13:1] | s2_pf_l3_req_bits_region_bit_vec[12:0];
  wire [11:0]       _GEN_37 = _GEN_36[12:1] | s2_pf_l3_req_bits_region_bit_vec[11:0];
  wire [10:0]       _GEN_38 = _GEN_37[11:1] | s2_pf_l3_req_bits_region_bit_vec[10:0];
  wire [9:0]        _GEN_39 = _GEN_38[10:1] | s2_pf_l3_req_bits_region_bit_vec[9:0];
  wire [15:0][4:0]  _GEN_40 =
    {{array_15_cnt},
     {array_14_cnt},
     {array_13_cnt},
     {array_12_cnt},
     {array_11_cnt},
     {array_10_cnt},
     {array_9_cnt},
     {array_8_cnt},
     {array_7_cnt},
     {array_6_cnt},
     {array_5_cnt},
     {array_4_cnt},
     {array_3_cnt},
     {array_2_cnt},
     {array_1_cnt},
     {array_0_cnt}};
  wire              s1_update = s1_valid_last_REG & s1_hit;
  wire [15:0]       _s1_can_send_pf_T = 16'h1 << s1_region_bits;
  wire [15:0][15:0] _GEN_41 =
    {{array_15_bit_vec},
     {array_14_bit_vec},
     {array_13_bit_vec},
     {array_12_bit_vec},
     {array_11_bit_vec},
     {array_10_bit_vec},
     {array_9_bit_vec},
     {array_8_bit_vec},
     {array_7_bit_vec},
     {array_6_bit_vec},
     {array_5_bit_vec},
     {array_4_bit_vec},
     {array_3_bit_vec},
     {array_2_bit_vec},
     {array_1_bit_vec},
     {array_0_bit_vec}};
  wire [15:0]       _GEN_42 = _GEN_41[s1_index];
  wire              _GEN_43 =
    s1_plus_one_hit_r & _GEN[s1_plus_one_index] & _GEN_40[s1_plus_one_index] > 5'hB
    | s1_minus_one_hit_r & _GEN[s1_minus_one_index] & _GEN_40[s1_minus_one_index] > 5'hB;
  wire [4:0]        _GEN_44 = _GEN_40[s1_index];
  wire              cnt_en = (_GEN_42 & _s1_can_send_pf_T) == 16'h0;
  wire [4:0]        _cnt_next_T = 5'(_GEN_44 + 5'h1);
  wire [15:0]       _array_bit_vec_T = _GEN_42 | _s1_can_send_pf_T;
  wire              _GEN_45 = (cnt_en ? _cnt_next_T : _GEN_44) > 5'hB;
  wire              _GEN_46 = _GEN_45 & _GEN_0;
  wire              _GEN_47 = _GEN_45 & _GEN_2;
  wire              _GEN_48 = _GEN_45 & _GEN_4;
  wire              _GEN_49 = _GEN_45 & _GEN_6;
  wire              _GEN_50 = _GEN_45 & _GEN_8;
  wire              _GEN_51 = _GEN_45 & _GEN_10;
  wire              _GEN_52 = _GEN_45 & _GEN_12;
  wire              _GEN_53 = _GEN_45 & _GEN_14;
  wire              _GEN_54 = _GEN_45 & _GEN_16;
  wire              _GEN_55 = _GEN_45 & _GEN_18;
  wire              _GEN_56 = _GEN_45 & _GEN_20;
  wire              _GEN_57 = _GEN_45 & _GEN_22;
  wire              _GEN_58 = _GEN_45 & _GEN_24;
  wire              _GEN_59 = _GEN_45 & _GEN_26;
  wire              _GEN_60 = _GEN_45 & _GEN_28;
  wire              _GEN_61 = _GEN_45 & (&s1_index);
  always @(posedge clock) begin
    if (_GEN_1)
      array_0_tag <= s1_region_tag;
    if (s1_alloc) begin
      if (_GEN_0) begin
        array_0_bit_vec <= _s1_can_send_pf_T;
        array_0_active <= _GEN_43;
        array_0_cnt <= 5'h1;
      end
      if (_GEN_2) begin
        array_1_bit_vec <= _s1_can_send_pf_T;
        array_1_active <= _GEN_43;
        array_1_cnt <= 5'h1;
      end
      if (_GEN_4) begin
        array_2_bit_vec <= _s1_can_send_pf_T;
        array_2_active <= _GEN_43;
        array_2_cnt <= 5'h1;
      end
      if (_GEN_6) begin
        array_3_bit_vec <= _s1_can_send_pf_T;
        array_3_active <= _GEN_43;
        array_3_cnt <= 5'h1;
      end
      if (_GEN_8) begin
        array_4_bit_vec <= _s1_can_send_pf_T;
        array_4_active <= _GEN_43;
        array_4_cnt <= 5'h1;
      end
      if (_GEN_10) begin
        array_5_bit_vec <= _s1_can_send_pf_T;
        array_5_active <= _GEN_43;
        array_5_cnt <= 5'h1;
      end
      if (_GEN_12) begin
        array_6_bit_vec <= _s1_can_send_pf_T;
        array_6_active <= _GEN_43;
        array_6_cnt <= 5'h1;
      end
      if (_GEN_14) begin
        array_7_bit_vec <= _s1_can_send_pf_T;
        array_7_active <= _GEN_43;
        array_7_cnt <= 5'h1;
      end
      if (_GEN_16) begin
        array_8_bit_vec <= _s1_can_send_pf_T;
        array_8_active <= _GEN_43;
        array_8_cnt <= 5'h1;
      end
      if (_GEN_18) begin
        array_9_bit_vec <= _s1_can_send_pf_T;
        array_9_active <= _GEN_43;
        array_9_cnt <= 5'h1;
      end
      if (_GEN_20) begin
        array_10_bit_vec <= _s1_can_send_pf_T;
        array_10_active <= _GEN_43;
        array_10_cnt <= 5'h1;
      end
      if (_GEN_22) begin
        array_11_bit_vec <= _s1_can_send_pf_T;
        array_11_active <= _GEN_43;
        array_11_cnt <= 5'h1;
      end
      if (_GEN_24) begin
        array_12_bit_vec <= _s1_can_send_pf_T;
        array_12_active <= _GEN_43;
        array_12_cnt <= 5'h1;
      end
      if (_GEN_26) begin
        array_13_bit_vec <= _s1_can_send_pf_T;
        array_13_active <= _GEN_43;
        array_13_cnt <= 5'h1;
      end
      if (_GEN_28) begin
        array_14_bit_vec <= _s1_can_send_pf_T;
        array_14_active <= _GEN_43;
        array_14_cnt <= 5'h1;
      end
      if (&s1_index) begin
        array_15_bit_vec <= _s1_can_send_pf_T;
        array_15_active <= _GEN_43;
        array_15_cnt <= 5'h1;
      end
    end
    else begin
      if (s1_update & _GEN_0) begin
        array_0_bit_vec <= _array_bit_vec_T;
        if (cnt_en)
          array_0_cnt <= _cnt_next_T;
        else
          array_0_cnt <= _GEN_44;
      end
      if (s1_update) begin
        if (_GEN_43) begin
          array_0_active <= _GEN_0 | _GEN_46 | array_0_active;
          array_1_active <= _GEN_2 | _GEN_47 | array_1_active;
          array_2_active <= _GEN_4 | _GEN_48 | array_2_active;
          array_3_active <= _GEN_6 | _GEN_49 | array_3_active;
          array_4_active <= _GEN_8 | _GEN_50 | array_4_active;
          array_5_active <= _GEN_10 | _GEN_51 | array_5_active;
          array_6_active <= _GEN_12 | _GEN_52 | array_6_active;
          array_7_active <= _GEN_14 | _GEN_53 | array_7_active;
          array_8_active <= _GEN_16 | _GEN_54 | array_8_active;
          array_9_active <= _GEN_18 | _GEN_55 | array_9_active;
          array_10_active <= _GEN_20 | _GEN_56 | array_10_active;
          array_11_active <= _GEN_22 | _GEN_57 | array_11_active;
          array_12_active <= _GEN_24 | _GEN_58 | array_12_active;
          array_13_active <= _GEN_26 | _GEN_59 | array_13_active;
          array_14_active <= _GEN_28 | _GEN_60 | array_14_active;
          array_15_active <= (&s1_index) | _GEN_61 | array_15_active;
        end
        else begin
          array_0_active <= _GEN_46 | array_0_active;
          array_1_active <= _GEN_47 | array_1_active;
          array_2_active <= _GEN_48 | array_2_active;
          array_3_active <= _GEN_49 | array_3_active;
          array_4_active <= _GEN_50 | array_4_active;
          array_5_active <= _GEN_51 | array_5_active;
          array_6_active <= _GEN_52 | array_6_active;
          array_7_active <= _GEN_53 | array_7_active;
          array_8_active <= _GEN_54 | array_8_active;
          array_9_active <= _GEN_55 | array_9_active;
          array_10_active <= _GEN_56 | array_10_active;
          array_11_active <= _GEN_57 | array_11_active;
          array_12_active <= _GEN_58 | array_12_active;
          array_13_active <= _GEN_59 | array_13_active;
          array_14_active <= _GEN_60 | array_14_active;
          array_15_active <= _GEN_61 | array_15_active;
        end
      end
      if (s1_update & _GEN_2) begin
        array_1_bit_vec <= _array_bit_vec_T;
        if (cnt_en)
          array_1_cnt <= _cnt_next_T;
        else
          array_1_cnt <= _GEN_44;
      end
      if (s1_update & _GEN_4) begin
        array_2_bit_vec <= _array_bit_vec_T;
        if (cnt_en)
          array_2_cnt <= _cnt_next_T;
        else
          array_2_cnt <= _GEN_44;
      end
      if (s1_update & _GEN_6) begin
        array_3_bit_vec <= _array_bit_vec_T;
        if (cnt_en)
          array_3_cnt <= _cnt_next_T;
        else
          array_3_cnt <= _GEN_44;
      end
      if (s1_update & _GEN_8) begin
        array_4_bit_vec <= _array_bit_vec_T;
        if (cnt_en)
          array_4_cnt <= _cnt_next_T;
        else
          array_4_cnt <= _GEN_44;
      end
      if (s1_update & _GEN_10) begin
        array_5_bit_vec <= _array_bit_vec_T;
        if (cnt_en)
          array_5_cnt <= _cnt_next_T;
        else
          array_5_cnt <= _GEN_44;
      end
      if (s1_update & _GEN_12) begin
        array_6_bit_vec <= _array_bit_vec_T;
        if (cnt_en)
          array_6_cnt <= _cnt_next_T;
        else
          array_6_cnt <= _GEN_44;
      end
      if (s1_update & _GEN_14) begin
        array_7_bit_vec <= _array_bit_vec_T;
        if (cnt_en)
          array_7_cnt <= _cnt_next_T;
        else
          array_7_cnt <= _GEN_44;
      end
      if (s1_update & _GEN_16) begin
        array_8_bit_vec <= _array_bit_vec_T;
        if (cnt_en)
          array_8_cnt <= _cnt_next_T;
        else
          array_8_cnt <= _GEN_44;
      end
      if (s1_update & _GEN_18) begin
        array_9_bit_vec <= _array_bit_vec_T;
        if (cnt_en)
          array_9_cnt <= _cnt_next_T;
        else
          array_9_cnt <= _GEN_44;
      end
      if (s1_update & _GEN_20) begin
        array_10_bit_vec <= _array_bit_vec_T;
        if (cnt_en)
          array_10_cnt <= _cnt_next_T;
        else
          array_10_cnt <= _GEN_44;
      end
      if (s1_update & _GEN_22) begin
        array_11_bit_vec <= _array_bit_vec_T;
        if (cnt_en)
          array_11_cnt <= _cnt_next_T;
        else
          array_11_cnt <= _GEN_44;
      end
      if (s1_update & _GEN_24) begin
        array_12_bit_vec <= _array_bit_vec_T;
        if (cnt_en)
          array_12_cnt <= _cnt_next_T;
        else
          array_12_cnt <= _GEN_44;
      end
      if (s1_update & _GEN_26) begin
        array_13_bit_vec <= _array_bit_vec_T;
        if (cnt_en)
          array_13_cnt <= _cnt_next_T;
        else
          array_13_cnt <= _GEN_44;
      end
      if (s1_update & _GEN_28) begin
        array_14_bit_vec <= _array_bit_vec_T;
        if (cnt_en)
          array_14_cnt <= _cnt_next_T;
        else
          array_14_cnt <= _GEN_44;
      end
      if (s1_update & (&s1_index)) begin
        array_15_bit_vec <= _array_bit_vec_T;
        if (cnt_en)
          array_15_cnt <= _cnt_next_T;
        else
          array_15_cnt <= _GEN_44;
      end
    end
    if (_GEN_3)
      array_1_tag <= s1_region_tag;
    if (_GEN_5)
      array_2_tag <= s1_region_tag;
    if (_GEN_7)
      array_3_tag <= s1_region_tag;
    if (_GEN_9)
      array_4_tag <= s1_region_tag;
    if (_GEN_11)
      array_5_tag <= s1_region_tag;
    if (_GEN_13)
      array_6_tag <= s1_region_tag;
    if (_GEN_15)
      array_7_tag <= s1_region_tag;
    if (_GEN_17)
      array_8_tag <= s1_region_tag;
    if (_GEN_19)
      array_9_tag <= s1_region_tag;
    if (_GEN_21)
      array_10_tag <= s1_region_tag;
    if (_GEN_23)
      array_11_tag <= s1_region_tag;
    if (_GEN_25)
      array_12_tag <= s1_region_tag;
    if (_GEN_27)
      array_13_tag <= s1_region_tag;
    if (_GEN_29)
      array_14_tag <= s1_region_tag;
    if (_GEN_30)
      array_15_tag <= s1_region_tag;
    if (s0_valid) begin
      s1_index <= s0_index;
      s1_miss <= io_train_req_bits_miss;
      s1_pfHit <= io_train_req_bits_pfHitStream;
      s1_plus_one_index <=
        {|{s0_region_tag_plus_one_match_vec_15,
           s0_region_tag_plus_one_match_vec_14,
           s0_region_tag_plus_one_match_vec_13,
           s0_region_tag_plus_one_match_vec_12,
           s0_region_tag_plus_one_match_vec_11,
           s0_region_tag_plus_one_match_vec_10,
           s0_region_tag_plus_one_match_vec_9,
           s0_region_tag_plus_one_match_vec_8},
         |(_s0_plus_one_index_T_2[6:3]),
         |(_s0_plus_one_index_T_4[2:1]),
         _s0_plus_one_index_T_4[2] | _s0_plus_one_index_T_4[0]};
      s1_minus_one_index <=
        {|{s0_region_tag_minus_one_match_vec_15,
           s0_region_tag_minus_one_match_vec_14,
           s0_region_tag_minus_one_match_vec_13,
           s0_region_tag_minus_one_match_vec_12,
           s0_region_tag_minus_one_match_vec_11,
           s0_region_tag_minus_one_match_vec_10,
           s0_region_tag_minus_one_match_vec_9,
           s0_region_tag_minus_one_match_vec_8},
         |(_s0_minus_one_index_T_2[6:3]),
         |(_s0_minus_one_index_T_4[2:1]),
         _s0_minus_one_index_T_4[2] | _s0_minus_one_index_T_4[0]};
      s1_hit <= |_s0_hit_T;
      s1_plus_one_hit_r <=
        |{_s0_region_tag_minus_one_match_vec_T
            & {array_0_tag[14:10] ^ array_0_tag[19:15] ^ array_0_tag[24:20],
               array_0_tag[9:0]} == {_s0_region_tag_plus_one_T_1[14:10]
                                       ^ _s0_region_tag_plus_one_T_1[19:15]
                                       ^ _s0_region_tag_plus_one_T_1[24:20],
                                     _s0_region_tag_plus_one_T_1[9:0]},
          s0_region_tag_plus_one_match_vec_1,
          s0_region_tag_plus_one_match_vec_2,
          s0_region_tag_plus_one_match_vec_3,
          s0_region_tag_plus_one_match_vec_4,
          s0_region_tag_plus_one_match_vec_5,
          s0_region_tag_plus_one_match_vec_6,
          s0_region_tag_plus_one_match_vec_7,
          s0_region_tag_plus_one_match_vec_8,
          s0_region_tag_plus_one_match_vec_9,
          s0_region_tag_plus_one_match_vec_10,
          s0_region_tag_plus_one_match_vec_11,
          s0_region_tag_plus_one_match_vec_12,
          s0_region_tag_plus_one_match_vec_13,
          s0_region_tag_plus_one_match_vec_14,
          s0_region_tag_plus_one_match_vec_15};
      s1_minus_one_hit_r <=
        |{_s0_region_tag_minus_one_match_vec_T
            & {array_0_tag[14:10] ^ array_0_tag[19:15] ^ array_0_tag[24:20],
               array_0_tag[9:0]} == {_s0_region_tag_minus_one_T_1[14:10]
                                       ^ _s0_region_tag_minus_one_T_1[19:15]
                                       ^ _s0_region_tag_minus_one_T_1[24:20],
                                     _s0_region_tag_minus_one_T_1[9:0]},
          s0_region_tag_minus_one_match_vec_1,
          s0_region_tag_minus_one_match_vec_2,
          s0_region_tag_minus_one_match_vec_3,
          s0_region_tag_minus_one_match_vec_4,
          s0_region_tag_minus_one_match_vec_5,
          s0_region_tag_minus_one_match_vec_6,
          s0_region_tag_minus_one_match_vec_7,
          s0_region_tag_minus_one_match_vec_8,
          s0_region_tag_minus_one_match_vec_9,
          s0_region_tag_minus_one_match_vec_10,
          s0_region_tag_minus_one_match_vec_11,
          s0_region_tag_minus_one_match_vec_12,
          s0_region_tag_minus_one_match_vec_13,
          s0_region_tag_minus_one_match_vec_14,
          s0_region_tag_minus_one_match_vec_15};
      s1_region_tag <= io_train_req_bits_vaddr[49:10];
      s1_region_bits <= io_train_req_bits_vaddr[9:6];
    end
    if (s1_valid_last_REG) begin
      s2_index <= s1_index;
      s2_pf_l1_incr_vaddr <= {44'(_GEN_31 + 44'h20), 6'h0};
      s2_pf_l2_incr_vaddr <= {44'(_GEN_31 + 44'h80), 6'h0};
      s2_pf_l3_incr_vaddr <= {44'(_GEN_31 + 44'h100), 6'h0};
      s2_can_send_pf <=
        (~s1_update | (_GEN_42 & _s1_can_send_pf_T) == 16'h0) & (s1_miss | s1_pfHit);
    end
    if (s2_will_send_pf) begin
      s3_pf_l1_bits_region <= s2_pf_l1_incr_vaddr[49:10];
      s3_pf_l1_bits_bit_vec <=
        {s2_pf_l1_req_bits_region_bit_vec[15:1] | s2_pf_l1_req_bits_region_bit_vec[14:0],
         s2_pf_l1_incr_vaddr[9:6] == 4'h0};
      s3_pf_l2_bits_region <= s2_pf_l2_incr_vaddr[49:10];
      s3_pf_l2_bits_bit_vec <=
        {_GEN_33[13:1] | s2_pf_l2_req_bits_region_bit_vec[12:0],
         _GEN_33[0],
         _GEN_32[0],
         s2_pf_l2_incr_vaddr[9:6] == 4'h0};
      s3_pf_l3_bits_region <= s2_pf_l3_incr_vaddr[49:10];
      s3_pf_l3_bits_bit_vec <=
        {_GEN_39[9:1] | s2_pf_l3_req_bits_region_bit_vec[8:0],
         _GEN_39[0],
         _GEN_38[0],
         _GEN_37[0],
         _GEN_36[0],
         _GEN_35[0],
         _GEN_34[0],
         s2_pf_l3_incr_vaddr[9:6] == 4'h0};
    end
    if (s3_pf_l2_valid_last_REG) begin
      s4_pf_l2_bits_region <= s3_pf_l2_bits_region;
      s4_pf_l2_bits_bit_vec <= s3_pf_l2_bits_bit_vec;
      s4_pf_l3_bits_region <= s3_pf_l3_bits_region;
      s4_pf_l3_bits_bit_vec <= s3_pf_l3_bits_bit_vec;
    end
    if (s4_pf_l2_valid_last_REG) begin
      s5_pf_l3_bits_region <= s4_pf_l3_bits_region;
      s5_pf_l3_bits_bit_vec <= s4_pf_l3_bits_bit_vec;
    end
  end // always @(posedge)
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      valids_0 <= 1'h0;
      valids_1 <= 1'h0;
      valids_2 <= 1'h0;
      valids_3 <= 1'h0;
      valids_4 <= 1'h0;
      valids_5 <= 1'h0;
      valids_6 <= 1'h0;
      valids_7 <= 1'h0;
      valids_8 <= 1'h0;
      valids_9 <= 1'h0;
      valids_10 <= 1'h0;
      valids_11 <= 1'h0;
      valids_12 <= 1'h0;
      valids_13 <= 1'h0;
      valids_14 <= 1'h0;
      valids_15 <= 1'h0;
      state_reg <= 15'h0;
      s1_valid_last_REG <= 1'h0;
      s2_valid_last_REG <= 1'h0;
      s3_pf_l1_valid_last_REG <= 1'h0;
      s3_pf_l2_valid_last_REG <= 1'h0;
      s4_pf_l2_valid_last_REG <= 1'h0;
      last_REG <= 1'h0;
      last_REG_1 <= 1'h0;
      last_REG_2 <= 1'h0;
      last_REG_3 <= 1'h0;
      last_REG_4 <= 1'h0;
      last_REG_5 <= 1'h0;
      last_REG_6 <= 1'h0;
      last_REG_7 <= 1'h0;
      last_REG_8 <= 1'h0;
      last_REG_9 <= 1'h0;
      last_REG_10 <= 1'h0;
      last_REG_11 <= 1'h0;
      last_REG_12 <= 1'h0;
      last_REG_13 <= 1'h0;
      last_REG_14 <= 1'h0;
      last_REG_15 <= 1'h0;
    end
    else begin
      valids_0 <= ~last_REG & (_GEN_1 | valids_0);
      valids_1 <= ~last_REG_1 & (_GEN_3 | valids_1);
      valids_2 <= ~last_REG_2 & (_GEN_5 | valids_2);
      valids_3 <= ~last_REG_3 & (_GEN_7 | valids_3);
      valids_4 <= ~last_REG_4 & (_GEN_9 | valids_4);
      valids_5 <= ~last_REG_5 & (_GEN_11 | valids_5);
      valids_6 <= ~last_REG_6 & (_GEN_13 | valids_6);
      valids_7 <= ~last_REG_7 & (_GEN_15 | valids_7);
      valids_8 <= ~last_REG_8 & (_GEN_17 | valids_8);
      valids_9 <= ~last_REG_9 & (_GEN_19 | valids_9);
      valids_10 <= ~last_REG_10 & (_GEN_21 | valids_10);
      valids_11 <= ~last_REG_11 & (_GEN_23 | valids_11);
      valids_12 <= ~last_REG_12 & (_GEN_25 | valids_12);
      valids_13 <= ~last_REG_13 & (_GEN_27 | valids_13);
      valids_14 <= ~last_REG_14 & (_GEN_29 | valids_14);
      valids_15 <= ~last_REG_15 & (_GEN_30 | valids_15);
      if (s0_valid)
        state_reg <=
          {~(s0_index[3]),
           s0_index[3]
             ? {~(s0_index[2]),
                s0_index[2]
                  ? {~(s0_index[1]),
                     s0_index[1] ? ~(s0_index[0]) : state_reg[11],
                     s0_index[1] ? state_reg[10] : ~(s0_index[0])}
                  : state_reg[12:10],
                s0_index[2]
                  ? state_reg[9:7]
                  : {~(s0_index[1]),
                     s0_index[1] ? ~(s0_index[0]) : state_reg[8],
                     s0_index[1] ? state_reg[7] : ~(s0_index[0])}}
             : state_reg[13:7],
           s0_index[3]
             ? state_reg[6:0]
             : {~(s0_index[2]),
                s0_index[2]
                  ? {~(s0_index[1]),
                     s0_index[1] ? ~(s0_index[0]) : state_reg[4],
                     s0_index[1] ? state_reg[3] : ~(s0_index[0])}
                  : state_reg[5:3],
                s0_index[2]
                  ? state_reg[2:0]
                  : {~(s0_index[1]),
                     s0_index[1] ? ~(s0_index[0]) : state_reg[1],
                     s0_index[1] ? state_reg[0] : ~(s0_index[0])}}};
      s1_valid_last_REG <= s0_valid;
      s2_valid_last_REG <= s1_valid_last_REG;
      s3_pf_l1_valid_last_REG <= s2_will_send_pf;
      s3_pf_l2_valid_last_REG <= s2_will_send_pf;
      s4_pf_l2_valid_last_REG <= s3_pf_l2_valid_last_REG;
      last_REG <= 1'h0;
      last_REG_1 <= 1'h0;
      last_REG_2 <= 1'h0;
      last_REG_3 <= 1'h0;
      last_REG_4 <= 1'h0;
      last_REG_5 <= 1'h0;
      last_REG_6 <= 1'h0;
      last_REG_7 <= 1'h0;
      last_REG_8 <= 1'h0;
      last_REG_9 <= 1'h0;
      last_REG_10 <= 1'h0;
      last_REG_11 <= 1'h0;
      last_REG_12 <= 1'h0;
      last_REG_13 <= 1'h0;
      last_REG_14 <= 1'h0;
      last_REG_15 <= 1'h0;
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:110];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [6:0] i = 7'h0; i < 7'h6F; i += 7'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        array_0_tag = {_RANDOM[7'h0], _RANDOM[7'h1][7:0]};
        array_0_bit_vec = _RANDOM[7'h1][23:8];
        array_0_active = _RANDOM[7'h1][24];
        array_0_cnt = _RANDOM[7'h1][29:25];
        array_1_tag = {_RANDOM[7'h3][31:17], _RANDOM[7'h4][24:0]};
        array_1_bit_vec = {_RANDOM[7'h4][31:25], _RANDOM[7'h5][8:0]};
        array_1_active = _RANDOM[7'h5][9];
        array_1_cnt = _RANDOM[7'h5][14:10];
        array_2_tag = {_RANDOM[7'h7][31:2], _RANDOM[7'h8][9:0]};
        array_2_bit_vec = _RANDOM[7'h8][25:10];
        array_2_active = _RANDOM[7'h8][26];
        array_2_cnt = _RANDOM[7'h8][31:27];
        array_3_tag = {_RANDOM[7'hA][31:19], _RANDOM[7'hB][26:0]};
        array_3_bit_vec = {_RANDOM[7'hB][31:27], _RANDOM[7'hC][10:0]};
        array_3_active = _RANDOM[7'hC][11];
        array_3_cnt = _RANDOM[7'hC][16:12];
        array_4_tag = {_RANDOM[7'hE][31:4], _RANDOM[7'hF][11:0]};
        array_4_bit_vec = _RANDOM[7'hF][27:12];
        array_4_active = _RANDOM[7'hF][28];
        array_4_cnt = {_RANDOM[7'hF][31:29], _RANDOM[7'h10][1:0]};
        array_5_tag = {_RANDOM[7'h11][31:21], _RANDOM[7'h12][28:0]};
        array_5_bit_vec = {_RANDOM[7'h12][31:29], _RANDOM[7'h13][12:0]};
        array_5_active = _RANDOM[7'h13][13];
        array_5_cnt = _RANDOM[7'h13][18:14];
        array_6_tag = {_RANDOM[7'h15][31:6], _RANDOM[7'h16][13:0]};
        array_6_bit_vec = _RANDOM[7'h16][29:14];
        array_6_active = _RANDOM[7'h16][30];
        array_6_cnt = {_RANDOM[7'h16][31], _RANDOM[7'h17][3:0]};
        array_7_tag = {_RANDOM[7'h18][31:23], _RANDOM[7'h19][30:0]};
        array_7_bit_vec = {_RANDOM[7'h19][31], _RANDOM[7'h1A][14:0]};
        array_7_active = _RANDOM[7'h1A][15];
        array_7_cnt = _RANDOM[7'h1A][20:16];
        array_8_tag = {_RANDOM[7'h1C][31:8], _RANDOM[7'h1D][15:0]};
        array_8_bit_vec = _RANDOM[7'h1D][31:16];
        array_8_active = _RANDOM[7'h1E][0];
        array_8_cnt = _RANDOM[7'h1E][5:1];
        array_9_tag = {_RANDOM[7'h1F][31:25], _RANDOM[7'h20], _RANDOM[7'h21][0]};
        array_9_bit_vec = _RANDOM[7'h21][16:1];
        array_9_active = _RANDOM[7'h21][17];
        array_9_cnt = _RANDOM[7'h21][22:18];
        array_10_tag = {_RANDOM[7'h23][31:10], _RANDOM[7'h24][17:0]};
        array_10_bit_vec = {_RANDOM[7'h24][31:18], _RANDOM[7'h25][1:0]};
        array_10_active = _RANDOM[7'h25][2];
        array_10_cnt = _RANDOM[7'h25][7:3];
        array_11_tag = {_RANDOM[7'h26][31:27], _RANDOM[7'h27], _RANDOM[7'h28][2:0]};
        array_11_bit_vec = _RANDOM[7'h28][18:3];
        array_11_active = _RANDOM[7'h28][19];
        array_11_cnt = _RANDOM[7'h28][24:20];
        array_12_tag = {_RANDOM[7'h2A][31:12], _RANDOM[7'h2B][19:0]};
        array_12_bit_vec = {_RANDOM[7'h2B][31:20], _RANDOM[7'h2C][3:0]};
        array_12_active = _RANDOM[7'h2C][4];
        array_12_cnt = _RANDOM[7'h2C][9:5];
        array_13_tag = {_RANDOM[7'h2D][31:29], _RANDOM[7'h2E], _RANDOM[7'h2F][4:0]};
        array_13_bit_vec = _RANDOM[7'h2F][20:5];
        array_13_active = _RANDOM[7'h2F][21];
        array_13_cnt = _RANDOM[7'h2F][26:22];
        array_14_tag = {_RANDOM[7'h31][31:14], _RANDOM[7'h32][21:0]};
        array_14_bit_vec = {_RANDOM[7'h32][31:22], _RANDOM[7'h33][5:0]};
        array_14_active = _RANDOM[7'h33][6];
        array_14_cnt = _RANDOM[7'h33][11:7];
        array_15_tag = {_RANDOM[7'h34][31], _RANDOM[7'h35], _RANDOM[7'h36][6:0]};
        array_15_bit_vec = _RANDOM[7'h36][22:7];
        array_15_active = _RANDOM[7'h36][23];
        array_15_cnt = _RANDOM[7'h36][28:24];
        valids_0 = _RANDOM[7'h38][16];
        valids_1 = _RANDOM[7'h38][17];
        valids_2 = _RANDOM[7'h38][18];
        valids_3 = _RANDOM[7'h38][19];
        valids_4 = _RANDOM[7'h38][20];
        valids_5 = _RANDOM[7'h38][21];
        valids_6 = _RANDOM[7'h38][22];
        valids_7 = _RANDOM[7'h38][23];
        valids_8 = _RANDOM[7'h38][24];
        valids_9 = _RANDOM[7'h38][25];
        valids_10 = _RANDOM[7'h38][26];
        valids_11 = _RANDOM[7'h38][27];
        valids_12 = _RANDOM[7'h38][28];
        valids_13 = _RANDOM[7'h38][29];
        valids_14 = _RANDOM[7'h38][30];
        valids_15 = _RANDOM[7'h38][31];
        state_reg = _RANDOM[7'h39][14:0];
        s1_valid_last_REG = _RANDOM[7'h39][21];
        s1_index = _RANDOM[7'h39][25:22];
        s1_miss = _RANDOM[7'h3C][30];
        s1_pfHit = _RANDOM[7'h3C][31];
        s1_plus_one_index = _RANDOM[7'h3D][3:0];
        s1_minus_one_index = _RANDOM[7'h3D][7:4];
        s1_hit = _RANDOM[7'h3D][8];
        s1_plus_one_hit_r = _RANDOM[7'h3D][9];
        s1_minus_one_hit_r = _RANDOM[7'h3D][10];
        s1_region_tag = {_RANDOM[7'h3D][31:11], _RANDOM[7'h3E][18:0]};
        s1_region_bits = _RANDOM[7'h3E][22:19];
        s2_valid_last_REG = _RANDOM[7'h40][10];
        s2_index = _RANDOM[7'h40][14:11];
        s2_pf_l1_incr_vaddr = {_RANDOM[7'h44][31], _RANDOM[7'h45], _RANDOM[7'h46][16:0]};
        s2_pf_l2_incr_vaddr = {_RANDOM[7'h48][31:3], _RANDOM[7'h49][20:0]};
        s2_pf_l3_incr_vaddr = {_RANDOM[7'h4B][31:7], _RANDOM[7'h4C][24:0]};
        s2_can_send_pf = _RANDOM[7'h4E][11];
        s3_pf_l1_valid_last_REG = _RANDOM[7'h4E][12];
        s3_pf_l1_bits_region = {_RANDOM[7'h4E][31:13], _RANDOM[7'h4F][20:0]};
        s3_pf_l1_bits_bit_vec = {_RANDOM[7'h4F][31:21], _RANDOM[7'h50][4:0]};
        s3_pf_l2_valid_last_REG = _RANDOM[7'h53][14];
        s3_pf_l2_bits_region = {_RANDOM[7'h53][31:15], _RANDOM[7'h54][22:0]};
        s3_pf_l2_bits_bit_vec = {_RANDOM[7'h54][31:23], _RANDOM[7'h55][6:0]};
        s3_pf_l3_bits_region = {_RANDOM[7'h58][31:16], _RANDOM[7'h59][23:0]};
        s3_pf_l3_bits_bit_vec = {_RANDOM[7'h59][31:24], _RANDOM[7'h5A][7:0]};
        s4_pf_l2_valid_last_REG = _RANDOM[7'h5D][17];
        s4_pf_l2_bits_region = {_RANDOM[7'h5D][31:18], _RANDOM[7'h5E][25:0]};
        s4_pf_l2_bits_bit_vec = {_RANDOM[7'h5E][31:26], _RANDOM[7'h5F][9:0]};
        s4_pf_l3_bits_region = {_RANDOM[7'h62][31:19], _RANDOM[7'h63][26:0]};
        s4_pf_l3_bits_bit_vec = {_RANDOM[7'h63][31:27], _RANDOM[7'h64][10:0]};
        s5_pf_l3_bits_region = {_RANDOM[7'h67][31:21], _RANDOM[7'h68][28:0]};
        s5_pf_l3_bits_bit_vec = {_RANDOM[7'h68][31:29], _RANDOM[7'h69][12:0]};
        last_REG = _RANDOM[7'h6E][8];
        last_REG_1 = _RANDOM[7'h6E][9];
        last_REG_2 = _RANDOM[7'h6E][10];
        last_REG_3 = _RANDOM[7'h6E][11];
        last_REG_4 = _RANDOM[7'h6E][12];
        last_REG_5 = _RANDOM[7'h6E][13];
        last_REG_6 = _RANDOM[7'h6E][14];
        last_REG_7 = _RANDOM[7'h6E][15];
        last_REG_8 = _RANDOM[7'h6E][16];
        last_REG_9 = _RANDOM[7'h6E][17];
        last_REG_10 = _RANDOM[7'h6E][18];
        last_REG_11 = _RANDOM[7'h6E][19];
        last_REG_12 = _RANDOM[7'h6E][20];
        last_REG_13 = _RANDOM[7'h6E][21];
        last_REG_14 = _RANDOM[7'h6E][22];
        last_REG_15 = _RANDOM[7'h6E][23];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        valids_0 = 1'h0;
        valids_1 = 1'h0;
        valids_2 = 1'h0;
        valids_3 = 1'h0;
        valids_4 = 1'h0;
        valids_5 = 1'h0;
        valids_6 = 1'h0;
        valids_7 = 1'h0;
        valids_8 = 1'h0;
        valids_9 = 1'h0;
        valids_10 = 1'h0;
        valids_11 = 1'h0;
        valids_12 = 1'h0;
        valids_13 = 1'h0;
        valids_14 = 1'h0;
        valids_15 = 1'h0;
        state_reg = 15'h0;
        s1_valid_last_REG = 1'h0;
        s2_valid_last_REG = 1'h0;
        s3_pf_l1_valid_last_REG = 1'h0;
        s3_pf_l2_valid_last_REG = 1'h0;
        s4_pf_l2_valid_last_REG = 1'h0;
        last_REG = 1'h0;
        last_REG_1 = 1'h0;
        last_REG_2 = 1'h0;
        last_REG_3 = 1'h0;
        last_REG_4 = 1'h0;
        last_REG_5 = 1'h0;
        last_REG_6 = 1'h0;
        last_REG_7 = 1'h0;
        last_REG_8 = 1'h0;
        last_REG_9 = 1'h0;
        last_REG_10 = 1'h0;
        last_REG_11 = 1'h0;
        last_REG_12 = 1'h0;
        last_REG_13 = 1'h0;
        last_REG_14 = 1'h0;
        last_REG_15 = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_train_req_ready = ~_s0_can_accept_T_3;
  assign io_l1_prefetch_req_valid = s3_pf_l1_valid_last_REG;
  assign io_l1_prefetch_req_bits_region = s3_pf_l1_bits_region;
  assign io_l1_prefetch_req_bits_bit_vec = s3_pf_l1_bits_bit_vec;
  assign io_l2_l3_prefetch_req_valid = s4_pf_l2_valid_last_REG;
  assign io_l2_l3_prefetch_req_bits_region =
    s4_pf_l2_valid_last_REG ? s4_pf_l2_bits_region : s5_pf_l3_bits_region;
  assign io_l2_l3_prefetch_req_bits_bit_vec =
    s4_pf_l2_valid_last_REG ? s4_pf_l2_bits_bit_vec : s5_pf_l3_bits_bit_vec;
  assign io_l2_l3_prefetch_req_bits_sink = s4_pf_l2_valid_last_REG ? 2'h1 : 2'h2;
endmodule

