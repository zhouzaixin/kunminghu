// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module SyncDataModuleTemplate__64entry_1(
  input        clock,
  input        reset,
  input        io_ren_0,
  input        io_ren_1,
  input  [5:0] io_raddr_0,
  input  [5:0] io_raddr_1,
  output       io_rdata_0_isCall,
  output       io_rdata_0_isRet,
  output       io_rdata_0_isJalr,
  output [3:0] io_rdata_0_brSlots_0_offset,
  output       io_rdata_0_brSlots_0_valid,
  output [3:0] io_rdata_0_tailSlot_offset,
  output       io_rdata_0_tailSlot_sharing,
  output       io_rdata_0_tailSlot_valid,
  output [3:0] io_rdata_1_brSlots_0_offset,
  output       io_rdata_1_brSlots_0_valid,
  output [3:0] io_rdata_1_tailSlot_offset,
  output       io_rdata_1_tailSlot_sharing,
  output       io_rdata_1_tailSlot_valid,
  input        io_wen_0,
  input  [5:0] io_waddr_0,
  input        io_wdata_0_isCall,
  input        io_wdata_0_isRet,
  input        io_wdata_0_isJalr,
  input  [3:0] io_wdata_0_brSlots_0_offset,
  input        io_wdata_0_brSlots_0_valid,
  input  [3:0] io_wdata_0_tailSlot_offset,
  input        io_wdata_0_tailSlot_sharing,
  input        io_wdata_0_tailSlot_valid
);

  wire       _dataBanks_3_io_rdata_0_isCall;
  wire       _dataBanks_3_io_rdata_0_isRet;
  wire       _dataBanks_3_io_rdata_0_isJalr;
  wire [3:0] _dataBanks_3_io_rdata_0_brSlots_0_offset;
  wire       _dataBanks_3_io_rdata_0_brSlots_0_valid;
  wire [3:0] _dataBanks_3_io_rdata_0_tailSlot_offset;
  wire       _dataBanks_3_io_rdata_0_tailSlot_sharing;
  wire       _dataBanks_3_io_rdata_0_tailSlot_valid;
  wire [3:0] _dataBanks_3_io_rdata_1_brSlots_0_offset;
  wire       _dataBanks_3_io_rdata_1_brSlots_0_valid;
  wire [3:0] _dataBanks_3_io_rdata_1_tailSlot_offset;
  wire       _dataBanks_3_io_rdata_1_tailSlot_sharing;
  wire       _dataBanks_3_io_rdata_1_tailSlot_valid;
  wire       _dataBanks_2_io_rdata_0_isCall;
  wire       _dataBanks_2_io_rdata_0_isRet;
  wire       _dataBanks_2_io_rdata_0_isJalr;
  wire [3:0] _dataBanks_2_io_rdata_0_brSlots_0_offset;
  wire       _dataBanks_2_io_rdata_0_brSlots_0_valid;
  wire [3:0] _dataBanks_2_io_rdata_0_tailSlot_offset;
  wire       _dataBanks_2_io_rdata_0_tailSlot_sharing;
  wire       _dataBanks_2_io_rdata_0_tailSlot_valid;
  wire [3:0] _dataBanks_2_io_rdata_1_brSlots_0_offset;
  wire       _dataBanks_2_io_rdata_1_brSlots_0_valid;
  wire [3:0] _dataBanks_2_io_rdata_1_tailSlot_offset;
  wire       _dataBanks_2_io_rdata_1_tailSlot_sharing;
  wire       _dataBanks_2_io_rdata_1_tailSlot_valid;
  wire       _dataBanks_1_io_rdata_0_isCall;
  wire       _dataBanks_1_io_rdata_0_isRet;
  wire       _dataBanks_1_io_rdata_0_isJalr;
  wire [3:0] _dataBanks_1_io_rdata_0_brSlots_0_offset;
  wire       _dataBanks_1_io_rdata_0_brSlots_0_valid;
  wire [3:0] _dataBanks_1_io_rdata_0_tailSlot_offset;
  wire       _dataBanks_1_io_rdata_0_tailSlot_sharing;
  wire       _dataBanks_1_io_rdata_0_tailSlot_valid;
  wire [3:0] _dataBanks_1_io_rdata_1_brSlots_0_offset;
  wire       _dataBanks_1_io_rdata_1_brSlots_0_valid;
  wire [3:0] _dataBanks_1_io_rdata_1_tailSlot_offset;
  wire       _dataBanks_1_io_rdata_1_tailSlot_sharing;
  wire       _dataBanks_1_io_rdata_1_tailSlot_valid;
  wire       _dataBanks_0_io_rdata_0_isCall;
  wire       _dataBanks_0_io_rdata_0_isRet;
  wire       _dataBanks_0_io_rdata_0_isJalr;
  wire [3:0] _dataBanks_0_io_rdata_0_brSlots_0_offset;
  wire       _dataBanks_0_io_rdata_0_brSlots_0_valid;
  wire [3:0] _dataBanks_0_io_rdata_0_tailSlot_offset;
  wire       _dataBanks_0_io_rdata_0_tailSlot_sharing;
  wire       _dataBanks_0_io_rdata_0_tailSlot_valid;
  wire [3:0] _dataBanks_0_io_rdata_1_brSlots_0_offset;
  wire       _dataBanks_0_io_rdata_1_brSlots_0_valid;
  wire [3:0] _dataBanks_0_io_rdata_1_tailSlot_offset;
  wire       _dataBanks_0_io_rdata_1_tailSlot_sharing;
  wire       _dataBanks_0_io_rdata_1_tailSlot_valid;
  reg  [5:0] raddr_dup_0;
  reg  [5:0] raddr_dup_1;
  reg        wen_dup_last_REG;
  reg  [5:0] waddr_dup_0;
  reg        r_isCall;
  reg        r_isRet;
  reg        r_isJalr;
  reg  [3:0] r_brSlots_0_offset;
  reg        r_brSlots_0_valid;
  reg  [3:0] r_tailSlot_offset;
  reg        r_tailSlot_sharing;
  reg        r_tailSlot_valid;
  reg  [5:0] raddr_dup_0_1;
  reg  [5:0] raddr_dup_1_1;
  reg        wen_dup_last_REG_1;
  reg  [5:0] waddr_dup_0_1;
  reg        r_1_isCall;
  reg        r_1_isRet;
  reg        r_1_isJalr;
  reg  [3:0] r_1_brSlots_0_offset;
  reg        r_1_brSlots_0_valid;
  reg  [3:0] r_1_tailSlot_offset;
  reg        r_1_tailSlot_sharing;
  reg        r_1_tailSlot_valid;
  reg  [5:0] raddr_dup_0_2;
  reg  [5:0] raddr_dup_1_2;
  reg        wen_dup_last_REG_2;
  reg  [5:0] waddr_dup_0_2;
  reg        r_2_isCall;
  reg        r_2_isRet;
  reg        r_2_isJalr;
  reg  [3:0] r_2_brSlots_0_offset;
  reg        r_2_brSlots_0_valid;
  reg  [3:0] r_2_tailSlot_offset;
  reg        r_2_tailSlot_sharing;
  reg        r_2_tailSlot_valid;
  reg  [5:0] raddr_dup_0_3;
  reg  [5:0] raddr_dup_1_3;
  reg        wen_dup_last_REG_3;
  reg  [5:0] waddr_dup_0_3;
  reg        r_3_isCall;
  reg        r_3_isRet;
  reg        r_3_isJalr;
  reg  [3:0] r_3_brSlots_0_offset;
  reg        r_3_brSlots_0_valid;
  reg  [3:0] r_3_tailSlot_offset;
  reg        r_3_tailSlot_sharing;
  reg        r_3_tailSlot_valid;
  reg  [5:0] raddr_dup;
  wire       _io_rdata_0_T = raddr_dup[5:4] == 2'h0;
  wire       _io_rdata_0_T_1 = raddr_dup[5:4] == 2'h1;
  wire       _io_rdata_0_T_2 = raddr_dup[5:4] == 2'h2;
  reg  [5:0] raddr_dup_2;
  wire       _io_rdata_1_T = raddr_dup_2[5:4] == 2'h0;
  wire       _io_rdata_1_T_1 = raddr_dup_2[5:4] == 2'h1;
  wire       _io_rdata_1_T_2 = raddr_dup_2[5:4] == 2'h2;
  always @(posedge clock) begin
    if (io_ren_0) begin
      raddr_dup_0 <= io_raddr_0;
      raddr_dup_0_1 <= io_raddr_0;
      raddr_dup_0_2 <= io_raddr_0;
      raddr_dup_0_3 <= io_raddr_0;
      raddr_dup <= io_raddr_0;
    end
    if (io_ren_1) begin
      raddr_dup_1 <= io_raddr_1;
      raddr_dup_1_1 <= io_raddr_1;
      raddr_dup_1_2 <= io_raddr_1;
      raddr_dup_1_3 <= io_raddr_1;
      raddr_dup_2 <= io_raddr_1;
    end
    if (io_wen_0) begin
      waddr_dup_0 <= io_waddr_0;
      r_isCall <= io_wdata_0_isCall;
      r_isRet <= io_wdata_0_isRet;
      r_isJalr <= io_wdata_0_isJalr;
      r_brSlots_0_offset <= io_wdata_0_brSlots_0_offset;
      r_brSlots_0_valid <= io_wdata_0_brSlots_0_valid;
      r_tailSlot_offset <= io_wdata_0_tailSlot_offset;
      r_tailSlot_sharing <= io_wdata_0_tailSlot_sharing;
      r_tailSlot_valid <= io_wdata_0_tailSlot_valid;
      waddr_dup_0_1 <= io_waddr_0;
      r_1_isCall <= io_wdata_0_isCall;
      r_1_isRet <= io_wdata_0_isRet;
      r_1_isJalr <= io_wdata_0_isJalr;
      r_1_brSlots_0_offset <= io_wdata_0_brSlots_0_offset;
      r_1_brSlots_0_valid <= io_wdata_0_brSlots_0_valid;
      r_1_tailSlot_offset <= io_wdata_0_tailSlot_offset;
      r_1_tailSlot_sharing <= io_wdata_0_tailSlot_sharing;
      r_1_tailSlot_valid <= io_wdata_0_tailSlot_valid;
      waddr_dup_0_2 <= io_waddr_0;
      r_2_isCall <= io_wdata_0_isCall;
      r_2_isRet <= io_wdata_0_isRet;
      r_2_isJalr <= io_wdata_0_isJalr;
      r_2_brSlots_0_offset <= io_wdata_0_brSlots_0_offset;
      r_2_brSlots_0_valid <= io_wdata_0_brSlots_0_valid;
      r_2_tailSlot_offset <= io_wdata_0_tailSlot_offset;
      r_2_tailSlot_sharing <= io_wdata_0_tailSlot_sharing;
      r_2_tailSlot_valid <= io_wdata_0_tailSlot_valid;
      waddr_dup_0_3 <= io_waddr_0;
      r_3_isCall <= io_wdata_0_isCall;
      r_3_isRet <= io_wdata_0_isRet;
      r_3_isJalr <= io_wdata_0_isJalr;
      r_3_brSlots_0_offset <= io_wdata_0_brSlots_0_offset;
      r_3_brSlots_0_valid <= io_wdata_0_brSlots_0_valid;
      r_3_tailSlot_offset <= io_wdata_0_tailSlot_offset;
      r_3_tailSlot_sharing <= io_wdata_0_tailSlot_sharing;
      r_3_tailSlot_valid <= io_wdata_0_tailSlot_valid;
    end
  end // always @(posedge)
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      wen_dup_last_REG <= 1'h0;
      wen_dup_last_REG_1 <= 1'h0;
      wen_dup_last_REG_2 <= 1'h0;
      wen_dup_last_REG_3 <= 1'h0;
    end
    else begin
      wen_dup_last_REG <= io_wen_0;
      wen_dup_last_REG_1 <= io_wen_0;
      wen_dup_last_REG_2 <= io_wen_0;
      wen_dup_last_REG_3 <= io_wen_0;
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:4];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [2:0] i = 3'h0; i < 3'h5; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        raddr_dup_0 = _RANDOM[3'h0][5:0];
        raddr_dup_1 = _RANDOM[3'h0][11:6];
        wen_dup_last_REG = _RANDOM[3'h0][12];
        waddr_dup_0 = _RANDOM[3'h0][18:13];
        r_isCall = _RANDOM[3'h0][19];
        r_isRet = _RANDOM[3'h0][20];
        r_isJalr = _RANDOM[3'h0][21];
        r_brSlots_0_offset = _RANDOM[3'h0][25:22];
        r_brSlots_0_valid = _RANDOM[3'h0][27];
        r_tailSlot_offset = _RANDOM[3'h0][31:28];
        r_tailSlot_sharing = _RANDOM[3'h1][0];
        r_tailSlot_valid = _RANDOM[3'h1][1];
        raddr_dup_0_1 = _RANDOM[3'h1][7:2];
        raddr_dup_1_1 = _RANDOM[3'h1][13:8];
        wen_dup_last_REG_1 = _RANDOM[3'h1][14];
        waddr_dup_0_1 = _RANDOM[3'h1][20:15];
        r_1_isCall = _RANDOM[3'h1][21];
        r_1_isRet = _RANDOM[3'h1][22];
        r_1_isJalr = _RANDOM[3'h1][23];
        r_1_brSlots_0_offset = _RANDOM[3'h1][27:24];
        r_1_brSlots_0_valid = _RANDOM[3'h1][29];
        r_1_tailSlot_offset = {_RANDOM[3'h1][31:30], _RANDOM[3'h2][1:0]};
        r_1_tailSlot_sharing = _RANDOM[3'h2][2];
        r_1_tailSlot_valid = _RANDOM[3'h2][3];
        raddr_dup_0_2 = _RANDOM[3'h2][9:4];
        raddr_dup_1_2 = _RANDOM[3'h2][15:10];
        wen_dup_last_REG_2 = _RANDOM[3'h2][16];
        waddr_dup_0_2 = _RANDOM[3'h2][22:17];
        r_2_isCall = _RANDOM[3'h2][23];
        r_2_isRet = _RANDOM[3'h2][24];
        r_2_isJalr = _RANDOM[3'h2][25];
        r_2_brSlots_0_offset = _RANDOM[3'h2][29:26];
        r_2_brSlots_0_valid = _RANDOM[3'h2][31];
        r_2_tailSlot_offset = _RANDOM[3'h3][3:0];
        r_2_tailSlot_sharing = _RANDOM[3'h3][4];
        r_2_tailSlot_valid = _RANDOM[3'h3][5];
        raddr_dup_0_3 = _RANDOM[3'h3][11:6];
        raddr_dup_1_3 = _RANDOM[3'h3][17:12];
        wen_dup_last_REG_3 = _RANDOM[3'h3][18];
        waddr_dup_0_3 = _RANDOM[3'h3][24:19];
        r_3_isCall = _RANDOM[3'h3][25];
        r_3_isRet = _RANDOM[3'h3][26];
        r_3_isJalr = _RANDOM[3'h3][27];
        r_3_brSlots_0_offset = _RANDOM[3'h3][31:28];
        r_3_brSlots_0_valid = _RANDOM[3'h4][1];
        r_3_tailSlot_offset = _RANDOM[3'h4][5:2];
        r_3_tailSlot_sharing = _RANDOM[3'h4][6];
        r_3_tailSlot_valid = _RANDOM[3'h4][7];
        raddr_dup = _RANDOM[3'h4][13:8];
        raddr_dup_2 = _RANDOM[3'h4][19:14];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        wen_dup_last_REG = 1'h0;
        wen_dup_last_REG_1 = 1'h0;
        wen_dup_last_REG_2 = 1'h0;
        wen_dup_last_REG_3 = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  DataModule__16entry_4 dataBanks_0 (
    .clock                       (clock),
    .io_raddr_0                  (raddr_dup_0[3:0]),
    .io_raddr_1                  (raddr_dup_1[3:0]),
    .io_rdata_0_isCall           (_dataBanks_0_io_rdata_0_isCall),
    .io_rdata_0_isRet            (_dataBanks_0_io_rdata_0_isRet),
    .io_rdata_0_isJalr           (_dataBanks_0_io_rdata_0_isJalr),
    .io_rdata_0_brSlots_0_offset (_dataBanks_0_io_rdata_0_brSlots_0_offset),
    .io_rdata_0_brSlots_0_valid  (_dataBanks_0_io_rdata_0_brSlots_0_valid),
    .io_rdata_0_tailSlot_offset  (_dataBanks_0_io_rdata_0_tailSlot_offset),
    .io_rdata_0_tailSlot_sharing (_dataBanks_0_io_rdata_0_tailSlot_sharing),
    .io_rdata_0_tailSlot_valid   (_dataBanks_0_io_rdata_0_tailSlot_valid),
    .io_rdata_1_brSlots_0_offset (_dataBanks_0_io_rdata_1_brSlots_0_offset),
    .io_rdata_1_brSlots_0_valid  (_dataBanks_0_io_rdata_1_brSlots_0_valid),
    .io_rdata_1_tailSlot_offset  (_dataBanks_0_io_rdata_1_tailSlot_offset),
    .io_rdata_1_tailSlot_sharing (_dataBanks_0_io_rdata_1_tailSlot_sharing),
    .io_rdata_1_tailSlot_valid   (_dataBanks_0_io_rdata_1_tailSlot_valid),
    .io_wen_0                    (wen_dup_last_REG & waddr_dup_0[5:4] == 2'h0),
    .io_waddr_0                  (waddr_dup_0[3:0]),
    .io_wdata_0_isCall           (r_isCall),
    .io_wdata_0_isRet            (r_isRet),
    .io_wdata_0_isJalr           (r_isJalr),
    .io_wdata_0_brSlots_0_offset (r_brSlots_0_offset),
    .io_wdata_0_brSlots_0_valid  (r_brSlots_0_valid),
    .io_wdata_0_tailSlot_offset  (r_tailSlot_offset),
    .io_wdata_0_tailSlot_sharing (r_tailSlot_sharing),
    .io_wdata_0_tailSlot_valid   (r_tailSlot_valid)
  );
  DataModule__16entry_4 dataBanks_1 (
    .clock                       (clock),
    .io_raddr_0                  (raddr_dup_0_1[3:0]),
    .io_raddr_1                  (raddr_dup_1_1[3:0]),
    .io_rdata_0_isCall           (_dataBanks_1_io_rdata_0_isCall),
    .io_rdata_0_isRet            (_dataBanks_1_io_rdata_0_isRet),
    .io_rdata_0_isJalr           (_dataBanks_1_io_rdata_0_isJalr),
    .io_rdata_0_brSlots_0_offset (_dataBanks_1_io_rdata_0_brSlots_0_offset),
    .io_rdata_0_brSlots_0_valid  (_dataBanks_1_io_rdata_0_brSlots_0_valid),
    .io_rdata_0_tailSlot_offset  (_dataBanks_1_io_rdata_0_tailSlot_offset),
    .io_rdata_0_tailSlot_sharing (_dataBanks_1_io_rdata_0_tailSlot_sharing),
    .io_rdata_0_tailSlot_valid   (_dataBanks_1_io_rdata_0_tailSlot_valid),
    .io_rdata_1_brSlots_0_offset (_dataBanks_1_io_rdata_1_brSlots_0_offset),
    .io_rdata_1_brSlots_0_valid  (_dataBanks_1_io_rdata_1_brSlots_0_valid),
    .io_rdata_1_tailSlot_offset  (_dataBanks_1_io_rdata_1_tailSlot_offset),
    .io_rdata_1_tailSlot_sharing (_dataBanks_1_io_rdata_1_tailSlot_sharing),
    .io_rdata_1_tailSlot_valid   (_dataBanks_1_io_rdata_1_tailSlot_valid),
    .io_wen_0                    (wen_dup_last_REG_1 & waddr_dup_0_1[5:4] == 2'h1),
    .io_waddr_0                  (waddr_dup_0_1[3:0]),
    .io_wdata_0_isCall           (r_1_isCall),
    .io_wdata_0_isRet            (r_1_isRet),
    .io_wdata_0_isJalr           (r_1_isJalr),
    .io_wdata_0_brSlots_0_offset (r_1_brSlots_0_offset),
    .io_wdata_0_brSlots_0_valid  (r_1_brSlots_0_valid),
    .io_wdata_0_tailSlot_offset  (r_1_tailSlot_offset),
    .io_wdata_0_tailSlot_sharing (r_1_tailSlot_sharing),
    .io_wdata_0_tailSlot_valid   (r_1_tailSlot_valid)
  );
  DataModule__16entry_4 dataBanks_2 (
    .clock                       (clock),
    .io_raddr_0                  (raddr_dup_0_2[3:0]),
    .io_raddr_1                  (raddr_dup_1_2[3:0]),
    .io_rdata_0_isCall           (_dataBanks_2_io_rdata_0_isCall),
    .io_rdata_0_isRet            (_dataBanks_2_io_rdata_0_isRet),
    .io_rdata_0_isJalr           (_dataBanks_2_io_rdata_0_isJalr),
    .io_rdata_0_brSlots_0_offset (_dataBanks_2_io_rdata_0_brSlots_0_offset),
    .io_rdata_0_brSlots_0_valid  (_dataBanks_2_io_rdata_0_brSlots_0_valid),
    .io_rdata_0_tailSlot_offset  (_dataBanks_2_io_rdata_0_tailSlot_offset),
    .io_rdata_0_tailSlot_sharing (_dataBanks_2_io_rdata_0_tailSlot_sharing),
    .io_rdata_0_tailSlot_valid   (_dataBanks_2_io_rdata_0_tailSlot_valid),
    .io_rdata_1_brSlots_0_offset (_dataBanks_2_io_rdata_1_brSlots_0_offset),
    .io_rdata_1_brSlots_0_valid  (_dataBanks_2_io_rdata_1_brSlots_0_valid),
    .io_rdata_1_tailSlot_offset  (_dataBanks_2_io_rdata_1_tailSlot_offset),
    .io_rdata_1_tailSlot_sharing (_dataBanks_2_io_rdata_1_tailSlot_sharing),
    .io_rdata_1_tailSlot_valid   (_dataBanks_2_io_rdata_1_tailSlot_valid),
    .io_wen_0                    (wen_dup_last_REG_2 & waddr_dup_0_2[5:4] == 2'h2),
    .io_waddr_0                  (waddr_dup_0_2[3:0]),
    .io_wdata_0_isCall           (r_2_isCall),
    .io_wdata_0_isRet            (r_2_isRet),
    .io_wdata_0_isJalr           (r_2_isJalr),
    .io_wdata_0_brSlots_0_offset (r_2_brSlots_0_offset),
    .io_wdata_0_brSlots_0_valid  (r_2_brSlots_0_valid),
    .io_wdata_0_tailSlot_offset  (r_2_tailSlot_offset),
    .io_wdata_0_tailSlot_sharing (r_2_tailSlot_sharing),
    .io_wdata_0_tailSlot_valid   (r_2_tailSlot_valid)
  );
  DataModule__16entry_4 dataBanks_3 (
    .clock                       (clock),
    .io_raddr_0                  (raddr_dup_0_3[3:0]),
    .io_raddr_1                  (raddr_dup_1_3[3:0]),
    .io_rdata_0_isCall           (_dataBanks_3_io_rdata_0_isCall),
    .io_rdata_0_isRet            (_dataBanks_3_io_rdata_0_isRet),
    .io_rdata_0_isJalr           (_dataBanks_3_io_rdata_0_isJalr),
    .io_rdata_0_brSlots_0_offset (_dataBanks_3_io_rdata_0_brSlots_0_offset),
    .io_rdata_0_brSlots_0_valid  (_dataBanks_3_io_rdata_0_brSlots_0_valid),
    .io_rdata_0_tailSlot_offset  (_dataBanks_3_io_rdata_0_tailSlot_offset),
    .io_rdata_0_tailSlot_sharing (_dataBanks_3_io_rdata_0_tailSlot_sharing),
    .io_rdata_0_tailSlot_valid   (_dataBanks_3_io_rdata_0_tailSlot_valid),
    .io_rdata_1_brSlots_0_offset (_dataBanks_3_io_rdata_1_brSlots_0_offset),
    .io_rdata_1_brSlots_0_valid  (_dataBanks_3_io_rdata_1_brSlots_0_valid),
    .io_rdata_1_tailSlot_offset  (_dataBanks_3_io_rdata_1_tailSlot_offset),
    .io_rdata_1_tailSlot_sharing (_dataBanks_3_io_rdata_1_tailSlot_sharing),
    .io_rdata_1_tailSlot_valid   (_dataBanks_3_io_rdata_1_tailSlot_valid),
    .io_wen_0                    (wen_dup_last_REG_3 & (&(waddr_dup_0_3[5:4]))),
    .io_waddr_0                  (waddr_dup_0_3[3:0]),
    .io_wdata_0_isCall           (r_3_isCall),
    .io_wdata_0_isRet            (r_3_isRet),
    .io_wdata_0_isJalr           (r_3_isJalr),
    .io_wdata_0_brSlots_0_offset (r_3_brSlots_0_offset),
    .io_wdata_0_brSlots_0_valid  (r_3_brSlots_0_valid),
    .io_wdata_0_tailSlot_offset  (r_3_tailSlot_offset),
    .io_wdata_0_tailSlot_sharing (r_3_tailSlot_sharing),
    .io_wdata_0_tailSlot_valid   (r_3_tailSlot_valid)
  );
  assign io_rdata_0_isCall =
    _io_rdata_0_T & _dataBanks_0_io_rdata_0_isCall | _io_rdata_0_T_1
    & _dataBanks_1_io_rdata_0_isCall | _io_rdata_0_T_2 & _dataBanks_2_io_rdata_0_isCall
    | (&(raddr_dup[5:4])) & _dataBanks_3_io_rdata_0_isCall;
  assign io_rdata_0_isRet =
    _io_rdata_0_T & _dataBanks_0_io_rdata_0_isRet | _io_rdata_0_T_1
    & _dataBanks_1_io_rdata_0_isRet | _io_rdata_0_T_2 & _dataBanks_2_io_rdata_0_isRet
    | (&(raddr_dup[5:4])) & _dataBanks_3_io_rdata_0_isRet;
  assign io_rdata_0_isJalr =
    _io_rdata_0_T & _dataBanks_0_io_rdata_0_isJalr | _io_rdata_0_T_1
    & _dataBanks_1_io_rdata_0_isJalr | _io_rdata_0_T_2 & _dataBanks_2_io_rdata_0_isJalr
    | (&(raddr_dup[5:4])) & _dataBanks_3_io_rdata_0_isJalr;
  assign io_rdata_0_brSlots_0_offset =
    (_io_rdata_0_T ? _dataBanks_0_io_rdata_0_brSlots_0_offset : 4'h0)
    | (_io_rdata_0_T_1 ? _dataBanks_1_io_rdata_0_brSlots_0_offset : 4'h0)
    | (_io_rdata_0_T_2 ? _dataBanks_2_io_rdata_0_brSlots_0_offset : 4'h0)
    | ((&(raddr_dup[5:4])) ? _dataBanks_3_io_rdata_0_brSlots_0_offset : 4'h0);
  assign io_rdata_0_brSlots_0_valid =
    _io_rdata_0_T & _dataBanks_0_io_rdata_0_brSlots_0_valid | _io_rdata_0_T_1
    & _dataBanks_1_io_rdata_0_brSlots_0_valid | _io_rdata_0_T_2
    & _dataBanks_2_io_rdata_0_brSlots_0_valid | (&(raddr_dup[5:4]))
    & _dataBanks_3_io_rdata_0_brSlots_0_valid;
  assign io_rdata_0_tailSlot_offset =
    (_io_rdata_0_T ? _dataBanks_0_io_rdata_0_tailSlot_offset : 4'h0)
    | (_io_rdata_0_T_1 ? _dataBanks_1_io_rdata_0_tailSlot_offset : 4'h0)
    | (_io_rdata_0_T_2 ? _dataBanks_2_io_rdata_0_tailSlot_offset : 4'h0)
    | ((&(raddr_dup[5:4])) ? _dataBanks_3_io_rdata_0_tailSlot_offset : 4'h0);
  assign io_rdata_0_tailSlot_sharing =
    _io_rdata_0_T & _dataBanks_0_io_rdata_0_tailSlot_sharing | _io_rdata_0_T_1
    & _dataBanks_1_io_rdata_0_tailSlot_sharing | _io_rdata_0_T_2
    & _dataBanks_2_io_rdata_0_tailSlot_sharing | (&(raddr_dup[5:4]))
    & _dataBanks_3_io_rdata_0_tailSlot_sharing;
  assign io_rdata_0_tailSlot_valid =
    _io_rdata_0_T & _dataBanks_0_io_rdata_0_tailSlot_valid | _io_rdata_0_T_1
    & _dataBanks_1_io_rdata_0_tailSlot_valid | _io_rdata_0_T_2
    & _dataBanks_2_io_rdata_0_tailSlot_valid | (&(raddr_dup[5:4]))
    & _dataBanks_3_io_rdata_0_tailSlot_valid;
  assign io_rdata_1_brSlots_0_offset =
    (_io_rdata_1_T ? _dataBanks_0_io_rdata_1_brSlots_0_offset : 4'h0)
    | (_io_rdata_1_T_1 ? _dataBanks_1_io_rdata_1_brSlots_0_offset : 4'h0)
    | (_io_rdata_1_T_2 ? _dataBanks_2_io_rdata_1_brSlots_0_offset : 4'h0)
    | ((&(raddr_dup_2[5:4])) ? _dataBanks_3_io_rdata_1_brSlots_0_offset : 4'h0);
  assign io_rdata_1_brSlots_0_valid =
    _io_rdata_1_T & _dataBanks_0_io_rdata_1_brSlots_0_valid | _io_rdata_1_T_1
    & _dataBanks_1_io_rdata_1_brSlots_0_valid | _io_rdata_1_T_2
    & _dataBanks_2_io_rdata_1_brSlots_0_valid | (&(raddr_dup_2[5:4]))
    & _dataBanks_3_io_rdata_1_brSlots_0_valid;
  assign io_rdata_1_tailSlot_offset =
    (_io_rdata_1_T ? _dataBanks_0_io_rdata_1_tailSlot_offset : 4'h0)
    | (_io_rdata_1_T_1 ? _dataBanks_1_io_rdata_1_tailSlot_offset : 4'h0)
    | (_io_rdata_1_T_2 ? _dataBanks_2_io_rdata_1_tailSlot_offset : 4'h0)
    | ((&(raddr_dup_2[5:4])) ? _dataBanks_3_io_rdata_1_tailSlot_offset : 4'h0);
  assign io_rdata_1_tailSlot_sharing =
    _io_rdata_1_T & _dataBanks_0_io_rdata_1_tailSlot_sharing | _io_rdata_1_T_1
    & _dataBanks_1_io_rdata_1_tailSlot_sharing | _io_rdata_1_T_2
    & _dataBanks_2_io_rdata_1_tailSlot_sharing | (&(raddr_dup_2[5:4]))
    & _dataBanks_3_io_rdata_1_tailSlot_sharing;
  assign io_rdata_1_tailSlot_valid =
    _io_rdata_1_T & _dataBanks_0_io_rdata_1_tailSlot_valid | _io_rdata_1_T_1
    & _dataBanks_1_io_rdata_1_tailSlot_valid | _io_rdata_1_T_2
    & _dataBanks_2_io_rdata_1_tailSlot_valid | (&(raddr_dup_2[5:4]))
    & _dataBanks_3_io_rdata_1_tailSlot_valid;
endmodule

