// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module SRT16DividerDataModule(
  input         clock,
  input         reset,
  input  [63:0] io_src_0,
  input  [63:0] io_src_1,
  input         io_valid,
  input         io_sign,
  input         io_kill_w,
  input         io_kill_r,
  input         io_isHi,
  input         io_isW,
  output        io_in_ready,
  output        io_out_valid,
  output [63:0] io_out_data,
  input         io_out_ready
);

  wire            io_in_ready_0;
  wire [63:0]     _rightShifter_io_out;
  wire [12:0]     _signs2_csa_spec_4_3_io_out_0;
  wire [12:0]     _signs2_csa_spec_4_3_io_out_1;
  wire [12:0]     _signs2_csa_spec_4_2_io_out_0;
  wire [12:0]     _signs2_csa_spec_4_2_io_out_1;
  wire [12:0]     _signs2_csa_spec_4_1_io_out_0;
  wire [12:0]     _signs2_csa_spec_4_1_io_out_1;
  wire [12:0]     _signs2_csa_spec_4_0_io_out_0;
  wire [12:0]     _signs2_csa_spec_4_0_io_out_1;
  wire [12:0]     _csa_spec_4_io_out_0;
  wire [12:0]     _csa_spec_4_io_out_1;
  wire [12:0]     _signs2_csa_spec_3_3_io_out_0;
  wire [12:0]     _signs2_csa_spec_3_3_io_out_1;
  wire [12:0]     _signs2_csa_spec_3_2_io_out_0;
  wire [12:0]     _signs2_csa_spec_3_2_io_out_1;
  wire [12:0]     _signs2_csa_spec_3_1_io_out_0;
  wire [12:0]     _signs2_csa_spec_3_1_io_out_1;
  wire [12:0]     _signs2_csa_spec_3_0_io_out_0;
  wire [12:0]     _signs2_csa_spec_3_0_io_out_1;
  wire [12:0]     _csa_spec_3_io_out_0;
  wire [12:0]     _csa_spec_3_io_out_1;
  wire [12:0]     _signs2_csa_spec_2_3_io_out_0;
  wire [12:0]     _signs2_csa_spec_2_3_io_out_1;
  wire [12:0]     _signs2_csa_spec_2_2_io_out_0;
  wire [12:0]     _signs2_csa_spec_2_2_io_out_1;
  wire [12:0]     _signs2_csa_spec_2_1_io_out_0;
  wire [12:0]     _signs2_csa_spec_2_1_io_out_1;
  wire [12:0]     _signs2_csa_spec_2_0_io_out_0;
  wire [12:0]     _signs2_csa_spec_2_0_io_out_1;
  wire [12:0]     _csa_spec_2_io_out_0;
  wire [12:0]     _csa_spec_2_io_out_1;
  wire [12:0]     _signs2_csa_spec_1_3_io_out_0;
  wire [12:0]     _signs2_csa_spec_1_3_io_out_1;
  wire [12:0]     _signs2_csa_spec_1_2_io_out_0;
  wire [12:0]     _signs2_csa_spec_1_2_io_out_1;
  wire [12:0]     _signs2_csa_spec_1_1_io_out_0;
  wire [12:0]     _signs2_csa_spec_1_1_io_out_1;
  wire [12:0]     _signs2_csa_spec_1_0_io_out_0;
  wire [12:0]     _signs2_csa_spec_1_0_io_out_1;
  wire [12:0]     _csa_spec_1_io_out_0;
  wire [12:0]     _csa_spec_1_io_out_1;
  wire [12:0]     _signs2_csa_spec_0_3_io_out_0;
  wire [12:0]     _signs2_csa_spec_0_3_io_out_1;
  wire [12:0]     _signs2_csa_spec_0_2_io_out_0;
  wire [12:0]     _signs2_csa_spec_0_2_io_out_1;
  wire [12:0]     _signs2_csa_spec_0_1_io_out_0;
  wire [12:0]     _signs2_csa_spec_0_1_io_out_1;
  wire [12:0]     _signs2_csa_spec_0_0_io_out_0;
  wire [12:0]     _signs2_csa_spec_0_0_io_out_1;
  wire [12:0]     _csa_spec_0_io_out_0;
  wire [12:0]     _csa_spec_0_io_out_1;
  wire [67:0]     _csa_sel_wide_2_io_out_0;
  wire [67:0]     _csa_sel_wide_2_io_out_1;
  wire [67:0]     _csa_sel_wide_1_io_out_0;
  wire [67:0]     _csa_sel_wide_1_io_out_1;
  wire [9:0]      _signs_csa_sel_3_io_out_0;
  wire [9:0]      _signs_csa_sel_3_io_out_1;
  wire [9:0]      _signs_csa_sel_2_io_out_0;
  wire [9:0]      _signs_csa_sel_2_io_out_1;
  wire [9:0]      _signs_csa_sel_1_io_out_0;
  wire [9:0]      _signs_csa_sel_1_io_out_1;
  wire [9:0]      _signs_csa_sel_0_io_out_0;
  wire [9:0]      _signs_csa_sel_0_io_out_1;
  wire            in_fire = io_valid & io_in_ready_0;
  reg  [6:0]      state;
  reg  [63:0]     quotIterReg;
  reg  [63:0]     quotM1IterReg;
  reg             specialReg;
  reg  [63:0]     aReg;
  reg             dSignReg;
  reg  [63:0]     aAbsReg;
  reg  [63:0]     dAbsReg;
  reg  [63:0]     aNormReg;
  reg  [63:0]     dNormReg;
  wire [5:0]      _aLZC_T_127 =
    aAbsReg[63]
      ? 6'h0
      : aAbsReg[62]
          ? 6'h1
          : aAbsReg[61]
              ? 6'h2
              : aAbsReg[60]
                  ? 6'h3
                  : aAbsReg[59]
                      ? 6'h4
                      : aAbsReg[58]
                          ? 6'h5
                          : aAbsReg[57]
                              ? 6'h6
                              : aAbsReg[56]
                                  ? 6'h7
                                  : aAbsReg[55]
                                      ? 6'h8
                                      : aAbsReg[54]
                                          ? 6'h9
                                          : aAbsReg[53]
                                              ? 6'hA
                                              : aAbsReg[52]
                                                  ? 6'hB
                                                  : aAbsReg[51]
                                                      ? 6'hC
                                                      : aAbsReg[50]
                                                          ? 6'hD
                                                          : aAbsReg[49]
                                                              ? 6'hE
                                                              : aAbsReg[48]
                                                                  ? 6'hF
                                                                  : aAbsReg[47]
                                                                      ? 6'h10
                                                                      : aAbsReg[46]
                                                                          ? 6'h11
                                                                          : aAbsReg[45]
                                                                              ? 6'h12
                                                                              : aAbsReg[44]
                                                                                  ? 6'h13
                                                                                  : aAbsReg[43]
                                                                                      ? 6'h14
                                                                                      : aAbsReg[42]
                                                                                          ? 6'h15
                                                                                          : aAbsReg[41]
                                                                                              ? 6'h16
                                                                                              : aAbsReg[40]
                                                                                                  ? 6'h17
                                                                                                  : aAbsReg[39]
                                                                                                      ? 6'h18
                                                                                                      : aAbsReg[38]
                                                                                                          ? 6'h19
                                                                                                          : aAbsReg[37]
                                                                                                              ? 6'h1A
                                                                                                              : aAbsReg[36]
                                                                                                                  ? 6'h1B
                                                                                                                  : aAbsReg[35]
                                                                                                                      ? 6'h1C
                                                                                                                      : aAbsReg[34]
                                                                                                                          ? 6'h1D
                                                                                                                          : aAbsReg[33]
                                                                                                                              ? 6'h1E
                                                                                                                              : aAbsReg[32]
                                                                                                                                  ? 6'h1F
                                                                                                                                  : aAbsReg[31]
                                                                                                                                      ? 6'h20
                                                                                                                                      : aAbsReg[30]
                                                                                                                                          ? 6'h21
                                                                                                                                          : aAbsReg[29]
                                                                                                                                              ? 6'h22
                                                                                                                                              : aAbsReg[28]
                                                                                                                                                  ? 6'h23
                                                                                                                                                  : aAbsReg[27]
                                                                                                                                                      ? 6'h24
                                                                                                                                                      : aAbsReg[26]
                                                                                                                                                          ? 6'h25
                                                                                                                                                          : aAbsReg[25]
                                                                                                                                                              ? 6'h26
                                                                                                                                                              : aAbsReg[24]
                                                                                                                                                                  ? 6'h27
                                                                                                                                                                  : aAbsReg[23]
                                                                                                                                                                      ? 6'h28
                                                                                                                                                                      : aAbsReg[22]
                                                                                                                                                                          ? 6'h29
                                                                                                                                                                          : aAbsReg[21]
                                                                                                                                                                              ? 6'h2A
                                                                                                                                                                              : aAbsReg[20]
                                                                                                                                                                                  ? 6'h2B
                                                                                                                                                                                  : aAbsReg[19]
                                                                                                                                                                                      ? 6'h2C
                                                                                                                                                                                      : aAbsReg[18]
                                                                                                                                                                                          ? 6'h2D
                                                                                                                                                                                          : aAbsReg[17]
                                                                                                                                                                                              ? 6'h2E
                                                                                                                                                                                              : aAbsReg[16]
                                                                                                                                                                                                  ? 6'h2F
                                                                                                                                                                                                  : aAbsReg[15]
                                                                                                                                                                                                      ? 6'h30
                                                                                                                                                                                                      : aAbsReg[14]
                                                                                                                                                                                                          ? 6'h31
                                                                                                                                                                                                          : aAbsReg[13]
                                                                                                                                                                                                              ? 6'h32
                                                                                                                                                                                                              : aAbsReg[12]
                                                                                                                                                                                                                  ? 6'h33
                                                                                                                                                                                                                  : aAbsReg[11]
                                                                                                                                                                                                                      ? 6'h34
                                                                                                                                                                                                                      : aAbsReg[10]
                                                                                                                                                                                                                          ? 6'h35
                                                                                                                                                                                                                          : aAbsReg[9]
                                                                                                                                                                                                                              ? 6'h36
                                                                                                                                                                                                                              : aAbsReg[8]
                                                                                                                                                                                                                                  ? 6'h37
                                                                                                                                                                                                                                  : aAbsReg[7]
                                                                                                                                                                                                                                      ? 6'h38
                                                                                                                                                                                                                                      : aAbsReg[6]
                                                                                                                                                                                                                                          ? 6'h39
                                                                                                                                                                                                                                          : aAbsReg[5]
                                                                                                                                                                                                                                              ? 6'h3A
                                                                                                                                                                                                                                              : aAbsReg[4]
                                                                                                                                                                                                                                                  ? 6'h3B
                                                                                                                                                                                                                                                  : aAbsReg[3]
                                                                                                                                                                                                                                                      ? 6'h3C
                                                                                                                                                                                                                                                      : aAbsReg[2]
                                                                                                                                                                                                                                                          ? 6'h3D
                                                                                                                                                                                                                                                          : {5'h1F,
                                                                                                                                                                                                                                                             ~(aAbsReg[1])};
  wire [5:0]      _dLZC_T_127 =
    dAbsReg[63]
      ? 6'h0
      : dAbsReg[62]
          ? 6'h1
          : dAbsReg[61]
              ? 6'h2
              : dAbsReg[60]
                  ? 6'h3
                  : dAbsReg[59]
                      ? 6'h4
                      : dAbsReg[58]
                          ? 6'h5
                          : dAbsReg[57]
                              ? 6'h6
                              : dAbsReg[56]
                                  ? 6'h7
                                  : dAbsReg[55]
                                      ? 6'h8
                                      : dAbsReg[54]
                                          ? 6'h9
                                          : dAbsReg[53]
                                              ? 6'hA
                                              : dAbsReg[52]
                                                  ? 6'hB
                                                  : dAbsReg[51]
                                                      ? 6'hC
                                                      : dAbsReg[50]
                                                          ? 6'hD
                                                          : dAbsReg[49]
                                                              ? 6'hE
                                                              : dAbsReg[48]
                                                                  ? 6'hF
                                                                  : dAbsReg[47]
                                                                      ? 6'h10
                                                                      : dAbsReg[46]
                                                                          ? 6'h11
                                                                          : dAbsReg[45]
                                                                              ? 6'h12
                                                                              : dAbsReg[44]
                                                                                  ? 6'h13
                                                                                  : dAbsReg[43]
                                                                                      ? 6'h14
                                                                                      : dAbsReg[42]
                                                                                          ? 6'h15
                                                                                          : dAbsReg[41]
                                                                                              ? 6'h16
                                                                                              : dAbsReg[40]
                                                                                                  ? 6'h17
                                                                                                  : dAbsReg[39]
                                                                                                      ? 6'h18
                                                                                                      : dAbsReg[38]
                                                                                                          ? 6'h19
                                                                                                          : dAbsReg[37]
                                                                                                              ? 6'h1A
                                                                                                              : dAbsReg[36]
                                                                                                                  ? 6'h1B
                                                                                                                  : dAbsReg[35]
                                                                                                                      ? 6'h1C
                                                                                                                      : dAbsReg[34]
                                                                                                                          ? 6'h1D
                                                                                                                          : dAbsReg[33]
                                                                                                                              ? 6'h1E
                                                                                                                              : dAbsReg[32]
                                                                                                                                  ? 6'h1F
                                                                                                                                  : dAbsReg[31]
                                                                                                                                      ? 6'h20
                                                                                                                                      : dAbsReg[30]
                                                                                                                                          ? 6'h21
                                                                                                                                          : dAbsReg[29]
                                                                                                                                              ? 6'h22
                                                                                                                                              : dAbsReg[28]
                                                                                                                                                  ? 6'h23
                                                                                                                                                  : dAbsReg[27]
                                                                                                                                                      ? 6'h24
                                                                                                                                                      : dAbsReg[26]
                                                                                                                                                          ? 6'h25
                                                                                                                                                          : dAbsReg[25]
                                                                                                                                                              ? 6'h26
                                                                                                                                                              : dAbsReg[24]
                                                                                                                                                                  ? 6'h27
                                                                                                                                                                  : dAbsReg[23]
                                                                                                                                                                      ? 6'h28
                                                                                                                                                                      : dAbsReg[22]
                                                                                                                                                                          ? 6'h29
                                                                                                                                                                          : dAbsReg[21]
                                                                                                                                                                              ? 6'h2A
                                                                                                                                                                              : dAbsReg[20]
                                                                                                                                                                                  ? 6'h2B
                                                                                                                                                                                  : dAbsReg[19]
                                                                                                                                                                                      ? 6'h2C
                                                                                                                                                                                      : dAbsReg[18]
                                                                                                                                                                                          ? 6'h2D
                                                                                                                                                                                          : dAbsReg[17]
                                                                                                                                                                                              ? 6'h2E
                                                                                                                                                                                              : dAbsReg[16]
                                                                                                                                                                                                  ? 6'h2F
                                                                                                                                                                                                  : dAbsReg[15]
                                                                                                                                                                                                      ? 6'h30
                                                                                                                                                                                                      : dAbsReg[14]
                                                                                                                                                                                                          ? 6'h31
                                                                                                                                                                                                          : dAbsReg[13]
                                                                                                                                                                                                              ? 6'h32
                                                                                                                                                                                                              : dAbsReg[12]
                                                                                                                                                                                                                  ? 6'h33
                                                                                                                                                                                                                  : dAbsReg[11]
                                                                                                                                                                                                                      ? 6'h34
                                                                                                                                                                                                                      : dAbsReg[10]
                                                                                                                                                                                                                          ? 6'h35
                                                                                                                                                                                                                          : dAbsReg[9]
                                                                                                                                                                                                                              ? 6'h36
                                                                                                                                                                                                                              : dAbsReg[8]
                                                                                                                                                                                                                                  ? 6'h37
                                                                                                                                                                                                                                  : dAbsReg[7]
                                                                                                                                                                                                                                      ? 6'h38
                                                                                                                                                                                                                                      : dAbsReg[6]
                                                                                                                                                                                                                                          ? 6'h39
                                                                                                                                                                                                                                          : dAbsReg[5]
                                                                                                                                                                                                                                              ? 6'h3A
                                                                                                                                                                                                                                              : dAbsReg[4]
                                                                                                                                                                                                                                                  ? 6'h3B
                                                                                                                                                                                                                                                  : dAbsReg[3]
                                                                                                                                                                                                                                                      ? 6'h3C
                                                                                                                                                                                                                                                      : dAbsReg[2]
                                                                                                                                                                                                                                                          ? 6'h3D
                                                                                                                                                                                                                                                          : {5'h1F,
                                                                                                                                                                                                                                                             ~(dAbsReg[1])};
  reg  [6:0]      aLZCReg;
  reg  [6:0]      dLZCReg;
  wire [5:0]      _lzcRegDiff_T_4 = 6'(dLZCReg[5:0] - aLZCReg[5:0]);
  wire            dIsZero = dNormReg == 64'h0;
  reg             aTooSmall;
  wire            special = (&_dLZC_T_127) | dIsZero | aTooSmall;
  reg  [63:0]     quotSpecialReg;
  reg  [63:0]     remSpecialReg;
  reg             quotSignReg;
  reg             rSignReg;
  reg  [3:0]      iterNumReg;
  reg  [4:0]      qPrevReg;
  reg  [67:0]     rSumReg;
  reg  [67:0]     rCarryReg;
  reg  [67:0]     udNegReg_0;
  reg  [67:0]     udNegReg_1;
  reg  [67:0]     udNegReg_3;
  reg  [67:0]     udNegReg_4;
  reg  [9:0]      rudPmNegReg_0_0;
  reg  [9:0]      rudPmNegReg_0_1;
  reg  [9:0]      rudPmNegReg_0_2;
  reg  [9:0]      rudPmNegReg_0_3;
  reg  [9:0]      rudPmNegReg_1_0;
  reg  [9:0]      rudPmNegReg_1_1;
  reg  [9:0]      rudPmNegReg_1_2;
  reg  [9:0]      rudPmNegReg_1_3;
  reg  [9:0]      rudPmNegReg_2_0;
  reg  [9:0]      rudPmNegReg_2_1;
  reg  [9:0]      rudPmNegReg_2_2;
  reg  [9:0]      rudPmNegReg_2_3;
  reg  [9:0]      rudPmNegReg_3_0;
  reg  [9:0]      rudPmNegReg_3_1;
  reg  [9:0]      rudPmNegReg_3_2;
  reg  [9:0]      rudPmNegReg_3_3;
  reg  [9:0]      rudPmNegReg_4_0;
  reg  [9:0]      rudPmNegReg_4_1;
  reg  [9:0]      rudPmNegReg_4_2;
  reg  [9:0]      rudPmNegReg_4_3;
  reg  [12:0]     r2udPmNegReg_0_0;
  reg  [12:0]     r2udPmNegReg_0_1;
  reg  [12:0]     r2udPmNegReg_0_2;
  reg  [12:0]     r2udPmNegReg_0_3;
  reg  [12:0]     r2udPmNegReg_1_0;
  reg  [12:0]     r2udPmNegReg_1_1;
  reg  [12:0]     r2udPmNegReg_1_2;
  reg  [12:0]     r2udPmNegReg_1_3;
  reg  [12:0]     r2udPmNegReg_2_0;
  reg  [12:0]     r2udPmNegReg_2_1;
  reg  [12:0]     r2udPmNegReg_2_2;
  reg  [12:0]     r2udPmNegReg_2_3;
  reg  [12:0]     r2udPmNegReg_3_0;
  reg  [12:0]     r2udPmNegReg_3_1;
  reg  [12:0]     r2udPmNegReg_3_2;
  reg  [12:0]     r2udPmNegReg_3_3;
  reg  [12:0]     r2udPmNegReg_4_0;
  reg  [12:0]     r2udPmNegReg_4_1;
  reg  [12:0]     r2udPmNegReg_4_2;
  reg  [12:0]     r2udPmNegReg_4_3;
  wire [9:0]      _signs_T_2 =
    10'(_signs_csa_sel_0_io_out_0 + {_signs_csa_sel_0_io_out_1[8:0], 1'h0});
  wire [9:0]      _signs_T_7 =
    10'(_signs_csa_sel_1_io_out_0 + {_signs_csa_sel_1_io_out_1[8:0], 1'h0});
  wire [9:0]      _signs_T_12 =
    10'(_signs_csa_sel_2_io_out_0 + {_signs_csa_sel_2_io_out_1[8:0], 1'h0});
  wire [9:0]      _signs_T_17 =
    10'(_signs_csa_sel_3_io_out_0 + {_signs_csa_sel_3_io_out_1[8:0], 1'h0});
  wire            qNext_sel_q_0 = _signs_T_2[9] & _signs_T_7[9] & _signs_T_12[9];
  wire            qNext_sel_q_1 = ~(_signs_T_2[9]) & _signs_T_7[9] & _signs_T_12[9];
  wire            qNext_sel_q_2 = _signs_T_12[9] & ~(_signs_T_7[9]);
  wire            qNext_sel_q_3 = _signs_T_17[9] & ~(_signs_T_12[9]) & ~(_signs_T_7[9]);
  wire            qNext_sel_q_4 =
    ~(_signs_T_17[9]) & ~(_signs_T_12[9]) & ~(_signs_T_7[9]);
  wire            _quotM1IterNext_T = _lzcRegDiff_T_4[1] ^ ~(_lzcRegDiff_T_4[0]);
  wire [12:0]     _signs2_T_2 =
    13'(_signs2_csa_spec_0_0_io_out_0 + {_signs2_csa_spec_0_0_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_7 =
    13'(_signs2_csa_spec_0_1_io_out_0 + {_signs2_csa_spec_0_1_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_12 =
    13'(_signs2_csa_spec_0_2_io_out_0 + {_signs2_csa_spec_0_2_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_17 =
    13'(_signs2_csa_spec_0_3_io_out_0 + {_signs2_csa_spec_0_3_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_22 =
    13'(_signs2_csa_spec_1_0_io_out_0 + {_signs2_csa_spec_1_0_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_27 =
    13'(_signs2_csa_spec_1_1_io_out_0 + {_signs2_csa_spec_1_1_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_32 =
    13'(_signs2_csa_spec_1_2_io_out_0 + {_signs2_csa_spec_1_2_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_37 =
    13'(_signs2_csa_spec_1_3_io_out_0 + {_signs2_csa_spec_1_3_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_42 =
    13'(_signs2_csa_spec_2_0_io_out_0 + {_signs2_csa_spec_2_0_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_47 =
    13'(_signs2_csa_spec_2_1_io_out_0 + {_signs2_csa_spec_2_1_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_52 =
    13'(_signs2_csa_spec_2_2_io_out_0 + {_signs2_csa_spec_2_2_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_57 =
    13'(_signs2_csa_spec_2_3_io_out_0 + {_signs2_csa_spec_2_3_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_62 =
    13'(_signs2_csa_spec_3_0_io_out_0 + {_signs2_csa_spec_3_0_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_67 =
    13'(_signs2_csa_spec_3_1_io_out_0 + {_signs2_csa_spec_3_1_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_72 =
    13'(_signs2_csa_spec_3_2_io_out_0 + {_signs2_csa_spec_3_2_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_77 =
    13'(_signs2_csa_spec_3_3_io_out_0 + {_signs2_csa_spec_3_3_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_82 =
    13'(_signs2_csa_spec_4_0_io_out_0 + {_signs2_csa_spec_4_0_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_87 =
    13'(_signs2_csa_spec_4_1_io_out_0 + {_signs2_csa_spec_4_1_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_92 =
    13'(_signs2_csa_spec_4_2_io_out_0 + {_signs2_csa_spec_4_2_io_out_1[11:0], 1'h0});
  wire [12:0]     _signs2_T_97 =
    13'(_signs2_csa_spec_4_3_io_out_0 + {_signs2_csa_spec_4_3_io_out_1[11:0], 1'h0});
  reg  [64:0]     rNextReg;
  reg  [64:0]     rNextPdReg;
  wire            needCorr = rSignReg ? ~(rNextReg[64]) & (|rNextReg) : rNextReg[64];
  wire [64:0]     rPreShifted = needCorr ? rNextPdReg : rNextReg;
  reg  [63:0]     rFinal;
  reg  [63:0]     qFinal;
  wire [63:0]     res = io_isHi ? rFinal : qFinal;
  assign io_in_ready_0 = state[0];
  always @(posedge clock or posedge reset) begin
    if (reset)
      state <= 7'h1;
    else if (io_kill_r)
      state <= 7'h1;
    else if (state[0] & in_fire & ~io_kill_w)
      state <= 7'h2;
    else if (state[1])
      state <= 7'h4;
    else if (state[2])
      state <= special ? 7'h20 : 7'h8;
    else if (state[3])
      state <= (|iterNumReg) ? 7'h8 : 7'h10;
    else if (state[4])
      state <= 7'h20;
    else if (state[5])
      state <= 7'h40;
    else if (state[6] & io_out_ready)
      state <= 7'h1;
  end // always @(posedge, posedge)
  wire [126:0]    _aNorm_T_2 = {63'h0, aAbsReg} << _aLZC_T_127;
  wire [126:0]    _dNorm_T_2 = {63'h0, dAbsReg} << _dLZC_T_127;
  wire [6:0]      _lzcWireDiff_T_4 = 7'({1'h0, _dLZC_T_127} - {1'h0, _aLZC_T_127});
  wire [5:0]      _iterNum_T_2 = 6'(_lzcRegDiff_T_4 + 6'h1);
  wire [9:0]      _GEN = {2'h0, dNormReg[63:56]};
  wire [9:0]      _GEN_0 = {3'h0, dNormReg[63:57]};
  wire [12:0]     _GEN_1 = {2'h0, dNormReg[63:53]};
  wire [12:0]     _GEN_2 = {3'h0, dNormReg[63:54]};
  wire [67:0]     _rNext_T_4 = 68'(~rSumReg + 68'(~rCarryReg + 68'h2));
  wire [67:0]     _rNextPd_T_8 =
    68'(68'(~rSumReg + ~rCarryReg) + 68'({1'h1, ~dNormReg, 3'h7} + 68'h3));
  wire [7:0][6:0] _GEN_3 = '{7'h52, 7'h56, 7'h58, 7'h5C, 7'h5E, 7'h62, 7'h64, 7'h68};
  wire [63:0]     aInverter = 64'(64'h0 - (state[0] ? io_src_0 : quotIterReg));
  wire [63:0]     dInverter = 64'(64'h0 - (state[0] ? io_src_1 : quotM1IterReg));
  wire            aSign = io_sign & io_src_0[63];
  wire            dSign = io_sign & io_src_1[63];
  wire [64:0]     _rSumInit_T_2 =
    _lzcRegDiff_T_4[0] ? {1'h0, aNormReg} : {aNormReg, 1'h0};
  wire [64:0]     dNeg = 65'(65'h0 - {1'h0, dNormReg});
  wire            _GEN_4 = dNormReg[62:60] == 3'h1;
  wire [6:0]      _GEN_5 = {4'h3, _GEN_4, 2'h2};
  wire            _GEN_6 = dNormReg[62:60] == 3'h4;
  wire            _GEN_7 = dNormReg[62:60] == 3'h5;
  wire            _GEN_8 = dNormReg[62:60] == 3'h6;
  wire [7:0][6:0] _GEN_9 =
    {{7'h30}, {7'h2C}, {7'h2A}, {7'h26}, {7'h24}, {7'h20}, {_GEN_5}, {_GEN_5}};
  wire [6:0]      _GEN_10 = _GEN_9[dNormReg[62:60]];
  wire            _GEN_11 = dNormReg[62:60] == 3'h3 | dNormReg[62:60] == 3'h2 | _GEN_4;
  wire [6:0]      _GEN_12 =
    (&(dNormReg[62:60])) | _GEN_8 | _GEN_7 | _GEN_6 ? 7'h8 : {5'h1, _GEN_11, 1'h0};
  wire [6:0]      _GEN_13 =
    (&(dNormReg[62:60])) | _GEN_8 | _GEN_7 ? 7'h7A : _GEN_6 ? 7'h7B : {6'h3E, ~_GEN_11};
  wire [6:0]      _GEN_14 = _GEN_3[dNormReg[62:60]];
  wire [1:0]      _GEN_15 = {2{dNeg[64]}};
  wire [63:0]     _GEN_16 = {quotIterReg[61:0], 2'h1};
  wire [63:0]     _GEN_17 = {quotIterReg[61:0], 2'h0};
  wire [63:0]     _GEN_18 = {quotM1IterReg[61:0], 2'h3};
  wire [63:0]     _GEN_19 = {quotM1IterReg[61:0], 2'h2};
  wire [63:0]     quotHalfIter_quotNext =
    (qPrevReg[4] ? {quotIterReg[61:0], 2'h2} : 64'h0) | (qPrevReg[3] ? _GEN_16 : 64'h0)
    | (qPrevReg[2] ? _GEN_17 : 64'h0) | (qPrevReg[1] ? _GEN_18 : 64'h0)
    | (qPrevReg[0] ? _GEN_19 : 64'h0);
  wire [63:0]     quotM1HalfIter_quotM1Next =
    (qPrevReg[4] ? _GEN_16 : 64'h0) | (qPrevReg[3] ? _GEN_17 : 64'h0)
    | (qPrevReg[2] ? _GEN_18 : 64'h0) | (qPrevReg[1] ? _GEN_19 : 64'h0)
    | (qPrevReg[0] ? {quotM1IterReg[61:0], 2'h1} : 64'h0);
  wire [63:0]     _GEN_20 = {quotHalfIter_quotNext[61:0], 2'h1};
  wire [63:0]     _GEN_21 = {quotHalfIter_quotNext[61:0], 2'h0};
  wire [63:0]     _GEN_22 = {quotM1HalfIter_quotM1Next[61:0], 2'h3};
  wire [63:0]     _GEN_23 = {quotM1HalfIter_quotM1Next[61:0], 2'h2};
  wire [67:0]     _rNextPd_T_10 = 68'(rSumReg + rCarryReg);
  wire [4:0]      rSumInitTrunc = {1'h0, _rSumInit_T_2[64:61]};
  wire [2:0]      _GEN_24 = {3{_GEN_10[6]}};
  wire [9:0]      _GEN_25 = {_GEN_24, _GEN_10};
  wire [1:0]      _GEN_26 = {2{_GEN_12[6]}};
  wire [9:0]      _GEN_27 = {_GEN_26, _GEN_12, 1'h0};
  wire [1:0]      _GEN_28 = {2{_GEN_13[6]}};
  wire [9:0]      _GEN_29 = {_GEN_28, _GEN_13, 1'h0};
  wire [2:0]      _GEN_30 = {3{_GEN_14[6]}};
  wire [9:0]      _GEN_31 = {_GEN_30, _GEN_14};
  wire [9:0]      _GEN_32 = {_GEN_15, dNeg[64:57]};
  wire [4:0]      _GEN_33 = {5{_GEN_10[6]}};
  wire [12:0]     _GEN_34 = {_GEN_33, _GEN_10, 1'h0};
  wire [3:0]      _GEN_35 = {4{_GEN_12[6]}};
  wire [12:0]     _GEN_36 = {_GEN_35, _GEN_12, 2'h0};
  wire [3:0]      _GEN_37 = {4{_GEN_13[6]}};
  wire [12:0]     _GEN_38 = {_GEN_37, _GEN_13, 2'h0};
  wire [4:0]      _GEN_39 = {5{_GEN_14[6]}};
  wire [12:0]     _GEN_40 = {_GEN_39, _GEN_14, 1'h0};
  wire [12:0]     _GEN_41 = {_GEN_15, dNeg[64:54]};
  wire [12:0]     _GEN_42 = {dNeg[64], dNeg[64:53]};
  wire [67:0]     _rNextPd_T_13 = 68'(_rNextPd_T_10 + {1'h0, dNormReg, 3'h0});
  always @(posedge clock) begin
    if (state[2] | state[3] | state[4]) begin
      if (state[3]) begin
        if (_quotM1IterNext_T & ~(|iterNumReg))
          quotIterReg <= quotHalfIter_quotNext;
        else
          quotIterReg <=
            (qNext_sel_q_4 ? {quotHalfIter_quotNext[61:0], 2'h2} : 64'h0)
            | (qNext_sel_q_3 ? _GEN_20 : 64'h0) | (qNext_sel_q_2 ? _GEN_21 : 64'h0)
            | (qNext_sel_q_1 ? _GEN_22 : 64'h0) | (qNext_sel_q_0 ? _GEN_23 : 64'h0);
      end
      else if (state[2])
        quotIterReg <= 64'h0;
      else if (quotSignReg)
        quotIterReg <= aInverter;
    end
    if (state[2] | state[3] | state[4]) begin
      if (state[3]) begin
        if (_quotM1IterNext_T & ~(|iterNumReg))
          quotM1IterReg <= quotM1HalfIter_quotM1Next;
        else
          quotM1IterReg <=
            (qNext_sel_q_4 ? _GEN_20 : 64'h0) | (qNext_sel_q_3 ? _GEN_21 : 64'h0)
            | (qNext_sel_q_2 ? _GEN_22 : 64'h0) | (qNext_sel_q_1 ? _GEN_23 : 64'h0)
            | (qNext_sel_q_0 ? {quotM1HalfIter_quotM1Next[61:0], 2'h1} : 64'h0);
      end
      else if (state[2])
        quotM1IterReg <= 64'h0;
      else if (quotSignReg)
        quotM1IterReg <= dInverter;
    end
    if (state[2])
      specialReg <= special;
    if (in_fire) begin
      aReg <= io_src_0;
      dSignReg <= dSign;
      aAbsReg <= aSign ? aInverter : io_src_0;
      dAbsReg <= dSign ? dInverter : io_src_1;
      rSignReg <= aSign;
    end
    if (state[1])
      aNormReg <= _aNorm_T_2[63:0];
    if (state[1])
      dNormReg <= _dNorm_T_2[63:0];
    if (state[1])
      aLZCReg <= {1'h0, _aLZC_T_127};
    if (state[1])
      dLZCReg <= {1'h0, _dLZC_T_127};
    if (state[1])
      aTooSmall <= _lzcWireDiff_T_4[6];
    if (state[2])
      quotSpecialReg <=
        dIsZero
          ? 64'hFFFFFFFFFFFFFFFF
          : aTooSmall ? 64'h0 : dSignReg ? 64'(64'h0 - aReg) : aReg;
    if (state[2])
      remSpecialReg <= dIsZero | aTooSmall ? aReg : 64'h0;
    if (in_fire | state[2] & dIsZero)
      quotSignReg <= ~(state[0]) | aSign ^ dSign;
    if (state[2] | state[3])
      iterNumReg <= state[2] ? _iterNum_T_2[5:2] : 4'(iterNumReg - 4'h1);
    if (state[2] | state[3])
      qPrevReg <=
        state[2]
          ? (rSumInitTrunc >= ((&(dNormReg[62:60])) | dNormReg[62:60] == 3'h6
                                 ? 5'h16
                                 : dNormReg[62:60] == 3'h5
                                     ? 5'h14
                                     : dNormReg[62:60] == 3'h4
                                         ? 5'h12
                                         : dNormReg[62:60] == 3'h3
                                             ? 5'h10
                                             : dNormReg[62:60] == 3'h2
                                                 ? 5'hF
                                                 : {3'h3, dNormReg[62:60] == 3'h1, 1'h0})
               ? 5'h10
               : rSumInitTrunc >= ((&(dNormReg[62:60]))
                                     ? 5'h8
                                     : {3'h1,
                                        dNormReg[62:60] == 3'h6 | dNormReg[62:60] == 3'h5
                                          | dNormReg[62:60] == 3'h4
                                          | dNormReg[62:60] == 3'h3,
                                        1'h0})
                   ? 5'h8
                   : 5'h4)
          : (qNext_sel_q_0
               ? {~(_signs2_T_17[12]) & ~(_signs2_T_12[12]) & ~(_signs2_T_7[12]),
                  _signs2_T_17[12] & ~(_signs2_T_12[12]) & ~(_signs2_T_7[12]),
                  _signs2_T_12[12] & ~(_signs2_T_7[12]),
                  ~(_signs2_T_2[12]) & _signs2_T_7[12] & _signs2_T_12[12],
                  _signs2_T_2[12] & _signs2_T_7[12] & _signs2_T_12[12]}
               : 5'h0)
            | (qNext_sel_q_1
                 ? {~(_signs2_T_37[12]) & ~(_signs2_T_32[12]) & ~(_signs2_T_27[12]),
                    _signs2_T_37[12] & ~(_signs2_T_32[12]) & ~(_signs2_T_27[12]),
                    _signs2_T_32[12] & ~(_signs2_T_27[12]),
                    ~(_signs2_T_22[12]) & _signs2_T_27[12] & _signs2_T_32[12],
                    _signs2_T_22[12] & _signs2_T_27[12] & _signs2_T_32[12]}
                 : 5'h0)
            | (qNext_sel_q_2
                 ? {~(_signs2_T_57[12]) & ~(_signs2_T_52[12]) & ~(_signs2_T_47[12]),
                    _signs2_T_57[12] & ~(_signs2_T_52[12]) & ~(_signs2_T_47[12]),
                    _signs2_T_52[12] & ~(_signs2_T_47[12]),
                    ~(_signs2_T_42[12]) & _signs2_T_47[12] & _signs2_T_52[12],
                    _signs2_T_42[12] & _signs2_T_47[12] & _signs2_T_52[12]}
                 : 5'h0)
            | (qNext_sel_q_3
                 ? {~(_signs2_T_77[12]) & ~(_signs2_T_72[12]) & ~(_signs2_T_67[12]),
                    _signs2_T_77[12] & ~(_signs2_T_72[12]) & ~(_signs2_T_67[12]),
                    _signs2_T_72[12] & ~(_signs2_T_67[12]),
                    ~(_signs2_T_62[12]) & _signs2_T_67[12] & _signs2_T_72[12],
                    _signs2_T_62[12] & _signs2_T_67[12] & _signs2_T_72[12]}
                 : 5'h0)
            | (qNext_sel_q_4
                 ? {~(_signs2_T_97[12]) & ~(_signs2_T_92[12]) & ~(_signs2_T_87[12]),
                    _signs2_T_97[12] & ~(_signs2_T_92[12]) & ~(_signs2_T_87[12]),
                    _signs2_T_92[12] & ~(_signs2_T_87[12]),
                    ~(_signs2_T_82[12]) & _signs2_T_87[12] & _signs2_T_92[12],
                    _signs2_T_82[12] & _signs2_T_87[12] & _signs2_T_92[12]}
                 : 5'h0);
    if (state[2] | state[3])
      rSumReg <=
        state[2]
          ? {3'h0, _rSumInit_T_2}
          : _quotM1IterNext_T & ~(|iterNumReg)
              ? _csa_sel_wide_1_io_out_0
              : _csa_sel_wide_2_io_out_0;
    if (state[2] | state[3])
      rCarryReg <=
        state[2]
          ? 68'h0
          : {_quotM1IterNext_T & ~(|iterNumReg)
               ? _csa_sel_wide_1_io_out_1[66:0]
               : _csa_sel_wide_2_io_out_1[66:0],
             1'h0};
    if (state[2]) begin
      udNegReg_0 <= {2'h0, dNormReg, 2'h0};
      udNegReg_1 <= {3'h0, dNormReg, 1'h0};
      udNegReg_3 <= {_GEN_15, dNeg, 1'h0};
      udNegReg_4 <= {dNeg[64], dNeg, 2'h0};
    end
    if (state[2]) begin
      rudPmNegReg_0_0 <= 10'(_GEN + _GEN_25);
      rudPmNegReg_0_1 <= 10'(_GEN + _GEN_27);
      rudPmNegReg_0_2 <= 10'(_GEN + _GEN_29);
      rudPmNegReg_0_3 <= 10'(_GEN + _GEN_31);
      rudPmNegReg_1_0 <= 10'(_GEN_0 + _GEN_25);
      rudPmNegReg_1_1 <= 10'(_GEN_0 + _GEN_27);
      rudPmNegReg_1_2 <= 10'(_GEN_0 + _GEN_29);
      rudPmNegReg_1_3 <= 10'(_GEN_0 + _GEN_31);
      rudPmNegReg_2_0 <= {_GEN_24, _GEN_10};
      rudPmNegReg_2_1 <= {_GEN_26, _GEN_12, 1'h0};
      rudPmNegReg_2_2 <= {_GEN_28, _GEN_13, 1'h0};
      rudPmNegReg_2_3 <= {_GEN_30, _GEN_14};
      rudPmNegReg_3_0 <= 10'(_GEN_32 + _GEN_25);
      rudPmNegReg_3_1 <= 10'(_GEN_32 + _GEN_27);
      rudPmNegReg_3_2 <= 10'(_GEN_32 + _GEN_29);
      rudPmNegReg_3_3 <= 10'(_GEN_32 + _GEN_31);
      rudPmNegReg_4_0 <= 10'({dNeg[64], dNeg[64:56]} + _GEN_25);
      rudPmNegReg_4_1 <= 10'({dNeg[64], dNeg[64:56]} + _GEN_27);
      rudPmNegReg_4_2 <= 10'({dNeg[64], dNeg[64:56]} + _GEN_29);
      rudPmNegReg_4_3 <= 10'({dNeg[64], dNeg[64:56]} + _GEN_31);
    end
    if (state[2]) begin
      r2udPmNegReg_0_0 <= 13'(_GEN_1 + _GEN_34);
      r2udPmNegReg_0_1 <= 13'(_GEN_1 + _GEN_36);
      r2udPmNegReg_0_2 <= 13'(_GEN_1 + _GEN_38);
      r2udPmNegReg_0_3 <= 13'(_GEN_1 + _GEN_40);
      r2udPmNegReg_1_0 <= 13'(_GEN_2 + _GEN_34);
      r2udPmNegReg_1_1 <= 13'(_GEN_2 + _GEN_36);
      r2udPmNegReg_1_2 <= 13'(_GEN_2 + _GEN_38);
      r2udPmNegReg_1_3 <= 13'(_GEN_2 + _GEN_40);
      r2udPmNegReg_2_0 <= {_GEN_33, _GEN_10, 1'h0};
      r2udPmNegReg_2_1 <= {_GEN_35, _GEN_12, 2'h0};
      r2udPmNegReg_2_2 <= {_GEN_37, _GEN_13, 2'h0};
      r2udPmNegReg_2_3 <= {_GEN_39, _GEN_14, 1'h0};
      r2udPmNegReg_3_0 <= 13'(_GEN_41 + _GEN_34);
      r2udPmNegReg_3_1 <= 13'(_GEN_41 + _GEN_36);
      r2udPmNegReg_3_2 <= 13'(_GEN_41 + _GEN_38);
      r2udPmNegReg_3_3 <= 13'(_GEN_41 + _GEN_40);
      r2udPmNegReg_4_0 <= 13'(_GEN_42 + _GEN_34);
      r2udPmNegReg_4_1 <= 13'(_GEN_42 + _GEN_36);
      r2udPmNegReg_4_2 <= 13'(_GEN_42 + _GEN_38);
      r2udPmNegReg_4_3 <= 13'(_GEN_42 + _GEN_40);
    end
    if (state[4])
      rNextReg <= rSignReg ? _rNext_T_4[67:3] : _rNextPd_T_10[67:3];
    if (state[4])
      rNextPdReg <= rSignReg ? _rNextPd_T_8[67:3] : _rNextPd_T_13[67:3];
    if (state[5])
      rFinal <= specialReg ? remSpecialReg : _rightShifter_io_out;
    if (state[5])
      qFinal <= specialReg ? quotSpecialReg : needCorr ? quotM1IterReg : quotIterReg;
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:56];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [5:0] i = 6'h0; i < 6'h39; i += 6'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        state = _RANDOM[6'h0][6:0];
        quotIterReg = {_RANDOM[6'h0][31:7], _RANDOM[6'h1], _RANDOM[6'h2][6:0]};
        quotM1IterReg = {_RANDOM[6'h2][31:7], _RANDOM[6'h3], _RANDOM[6'h4][6:0]};
        specialReg = _RANDOM[6'h4][7];
        aReg = {_RANDOM[6'h4][31:8], _RANDOM[6'h5], _RANDOM[6'h6][7:0]};
        dSignReg = _RANDOM[6'h6][8];
        aAbsReg = {_RANDOM[6'h6][31:9], _RANDOM[6'h7], _RANDOM[6'h8][8:0]};
        dAbsReg = {_RANDOM[6'h8][31:9], _RANDOM[6'h9], _RANDOM[6'hA][8:0]};
        aNormReg = {_RANDOM[6'hA][31:9], _RANDOM[6'hB], _RANDOM[6'hC][8:0]};
        dNormReg = {_RANDOM[6'hC][31:9], _RANDOM[6'hD], _RANDOM[6'hE][8:0]};
        aLZCReg = _RANDOM[6'hE][15:9];
        dLZCReg = _RANDOM[6'hE][22:16];
        aTooSmall = _RANDOM[6'hE][24];
        quotSpecialReg = {_RANDOM[6'hE][31:25], _RANDOM[6'hF], _RANDOM[6'h10][24:0]};
        remSpecialReg = {_RANDOM[6'h10][31:25], _RANDOM[6'h11], _RANDOM[6'h12][24:0]};
        quotSignReg = _RANDOM[6'h12][25];
        rSignReg = _RANDOM[6'h12][26];
        iterNumReg = _RANDOM[6'h12][30:27];
        qPrevReg = {_RANDOM[6'h12][31], _RANDOM[6'h13][3:0]};
        rSumReg = {_RANDOM[6'h13][31:4], _RANDOM[6'h14], _RANDOM[6'h15][7:0]};
        rCarryReg = {_RANDOM[6'h15][31:8], _RANDOM[6'h16], _RANDOM[6'h17][11:0]};
        udNegReg_0 = {_RANDOM[6'h17][31:12], _RANDOM[6'h18], _RANDOM[6'h19][15:0]};
        udNegReg_1 = {_RANDOM[6'h19][31:16], _RANDOM[6'h1A], _RANDOM[6'h1B][19:0]};
        udNegReg_3 = {_RANDOM[6'h1D][31:24], _RANDOM[6'h1E], _RANDOM[6'h1F][27:0]};
        udNegReg_4 = {_RANDOM[6'h1F][31:28], _RANDOM[6'h20], _RANDOM[6'h21]};
        rudPmNegReg_0_0 = _RANDOM[6'h22][9:0];
        rudPmNegReg_0_1 = _RANDOM[6'h22][19:10];
        rudPmNegReg_0_2 = _RANDOM[6'h22][29:20];
        rudPmNegReg_0_3 = {_RANDOM[6'h22][31:30], _RANDOM[6'h23][7:0]};
        rudPmNegReg_1_0 = _RANDOM[6'h23][17:8];
        rudPmNegReg_1_1 = _RANDOM[6'h23][27:18];
        rudPmNegReg_1_2 = {_RANDOM[6'h23][31:28], _RANDOM[6'h24][5:0]};
        rudPmNegReg_1_3 = _RANDOM[6'h24][15:6];
        rudPmNegReg_2_0 = _RANDOM[6'h24][25:16];
        rudPmNegReg_2_1 = {_RANDOM[6'h24][31:26], _RANDOM[6'h25][3:0]};
        rudPmNegReg_2_2 = _RANDOM[6'h25][13:4];
        rudPmNegReg_2_3 = _RANDOM[6'h25][23:14];
        rudPmNegReg_3_0 = {_RANDOM[6'h25][31:24], _RANDOM[6'h26][1:0]};
        rudPmNegReg_3_1 = _RANDOM[6'h26][11:2];
        rudPmNegReg_3_2 = _RANDOM[6'h26][21:12];
        rudPmNegReg_3_3 = _RANDOM[6'h26][31:22];
        rudPmNegReg_4_0 = _RANDOM[6'h27][9:0];
        rudPmNegReg_4_1 = _RANDOM[6'h27][19:10];
        rudPmNegReg_4_2 = _RANDOM[6'h27][29:20];
        rudPmNegReg_4_3 = {_RANDOM[6'h27][31:30], _RANDOM[6'h28][7:0]};
        r2udPmNegReg_0_0 = _RANDOM[6'h28][20:8];
        r2udPmNegReg_0_1 = {_RANDOM[6'h28][31:21], _RANDOM[6'h29][1:0]};
        r2udPmNegReg_0_2 = _RANDOM[6'h29][14:2];
        r2udPmNegReg_0_3 = _RANDOM[6'h29][27:15];
        r2udPmNegReg_1_0 = {_RANDOM[6'h29][31:28], _RANDOM[6'h2A][8:0]};
        r2udPmNegReg_1_1 = _RANDOM[6'h2A][21:9];
        r2udPmNegReg_1_2 = {_RANDOM[6'h2A][31:22], _RANDOM[6'h2B][2:0]};
        r2udPmNegReg_1_3 = _RANDOM[6'h2B][15:3];
        r2udPmNegReg_2_0 = _RANDOM[6'h2B][28:16];
        r2udPmNegReg_2_1 = {_RANDOM[6'h2B][31:29], _RANDOM[6'h2C][9:0]};
        r2udPmNegReg_2_2 = _RANDOM[6'h2C][22:10];
        r2udPmNegReg_2_3 = {_RANDOM[6'h2C][31:23], _RANDOM[6'h2D][3:0]};
        r2udPmNegReg_3_0 = _RANDOM[6'h2D][16:4];
        r2udPmNegReg_3_1 = _RANDOM[6'h2D][29:17];
        r2udPmNegReg_3_2 = {_RANDOM[6'h2D][31:30], _RANDOM[6'h2E][10:0]};
        r2udPmNegReg_3_3 = _RANDOM[6'h2E][23:11];
        r2udPmNegReg_4_0 = {_RANDOM[6'h2E][31:24], _RANDOM[6'h2F][4:0]};
        r2udPmNegReg_4_1 = _RANDOM[6'h2F][17:5];
        r2udPmNegReg_4_2 = _RANDOM[6'h2F][30:18];
        r2udPmNegReg_4_3 = {_RANDOM[6'h2F][31], _RANDOM[6'h30][11:0]};
        rNextReg = {_RANDOM[6'h30][31:12], _RANDOM[6'h31], _RANDOM[6'h32][12:0]};
        rNextPdReg = {_RANDOM[6'h32][31:13], _RANDOM[6'h33], _RANDOM[6'h34][13:0]};
        rFinal = {_RANDOM[6'h34][31:14], _RANDOM[6'h35], _RANDOM[6'h36][13:0]};
        qFinal = {_RANDOM[6'h36][31:14], _RANDOM[6'h37], _RANDOM[6'h38][13:0]};
      `endif // RANDOMIZE_REG_INIT
      if (reset)
        state = 7'h1;
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  CSA3_2_3956 signs_csa_sel_0 (
    .io_in_0  (rSumReg[67:58]),
    .io_in_1  (rCarryReg[67:58]),
    .io_in_2
      ((qPrevReg[0] ? rudPmNegReg_0_0 : 10'h0) | (qPrevReg[1] ? rudPmNegReg_1_0 : 10'h0)
       | (qPrevReg[2] ? rudPmNegReg_2_0 : 10'h0) | (qPrevReg[3] ? rudPmNegReg_3_0 : 10'h0)
       | (qPrevReg[4] ? rudPmNegReg_4_0 : 10'h0)),
    .io_out_0 (_signs_csa_sel_0_io_out_0),
    .io_out_1 (_signs_csa_sel_0_io_out_1)
  );
  CSA3_2_3956 signs_csa_sel_1 (
    .io_in_0  (rSumReg[67:58]),
    .io_in_1  (rCarryReg[67:58]),
    .io_in_2
      ((qPrevReg[0] ? rudPmNegReg_0_1 : 10'h0) | (qPrevReg[1] ? rudPmNegReg_1_1 : 10'h0)
       | (qPrevReg[2] ? rudPmNegReg_2_1 : 10'h0) | (qPrevReg[3] ? rudPmNegReg_3_1 : 10'h0)
       | (qPrevReg[4] ? rudPmNegReg_4_1 : 10'h0)),
    .io_out_0 (_signs_csa_sel_1_io_out_0),
    .io_out_1 (_signs_csa_sel_1_io_out_1)
  );
  CSA3_2_3956 signs_csa_sel_2 (
    .io_in_0  (rSumReg[67:58]),
    .io_in_1  (rCarryReg[67:58]),
    .io_in_2
      ((qPrevReg[0] ? rudPmNegReg_0_2 : 10'h0) | (qPrevReg[1] ? rudPmNegReg_1_2 : 10'h0)
       | (qPrevReg[2] ? rudPmNegReg_2_2 : 10'h0) | (qPrevReg[3] ? rudPmNegReg_3_2 : 10'h0)
       | (qPrevReg[4] ? rudPmNegReg_4_2 : 10'h0)),
    .io_out_0 (_signs_csa_sel_2_io_out_0),
    .io_out_1 (_signs_csa_sel_2_io_out_1)
  );
  CSA3_2_3956 signs_csa_sel_3 (
    .io_in_0  (rSumReg[67:58]),
    .io_in_1  (rCarryReg[67:58]),
    .io_in_2
      ((qPrevReg[0] ? rudPmNegReg_0_3 : 10'h0) | (qPrevReg[1] ? rudPmNegReg_1_3 : 10'h0)
       | (qPrevReg[2] ? rudPmNegReg_2_3 : 10'h0) | (qPrevReg[3] ? rudPmNegReg_3_3 : 10'h0)
       | (qPrevReg[4] ? rudPmNegReg_4_3 : 10'h0)),
    .io_out_0 (_signs_csa_sel_3_io_out_0),
    .io_out_1 (_signs_csa_sel_3_io_out_1)
  );
  CSA3_2_3960 csa_sel_wide_1 (
    .io_in_0  ({rSumReg[65:0], 2'h0}),
    .io_in_1  ({rCarryReg[65:0], 2'h0}),
    .io_in_2
      ({(qPrevReg[0] ? udNegReg_0[65:0] : 66'h0)
          | (qPrevReg[1] ? udNegReg_1[65:0] : 66'h0)
          | (qPrevReg[3] ? udNegReg_3[65:0] : 66'h0)
          | (qPrevReg[4] ? udNegReg_4[65:0] : 66'h0),
        2'h0}),
    .io_out_0 (_csa_sel_wide_1_io_out_0),
    .io_out_1 (_csa_sel_wide_1_io_out_1)
  );
  CSA3_2_3960 csa_sel_wide_2 (
    .io_in_0  ({_csa_sel_wide_1_io_out_0[65:0], 2'h0}),
    .io_in_1  ({_csa_sel_wide_1_io_out_1[64:0], 3'h0}),
    .io_in_2
      ({(qNext_sel_q_0 ? udNegReg_0[65:0] : 66'h0)
          | (qNext_sel_q_1 ? udNegReg_1[65:0] : 66'h0)
          | (qNext_sel_q_3 ? udNegReg_3[65:0] : 66'h0)
          | (qNext_sel_q_4 ? udNegReg_4[65:0] : 66'h0),
        2'h0}),
    .io_out_0 (_csa_sel_wide_2_io_out_0),
    .io_out_1 (_csa_sel_wide_2_io_out_1)
  );
  CSA3_2_3962 csa_spec_0 (
    .io_in_0  (rSumReg[67:55]),
    .io_in_1  (rCarryReg[67:55]),
    .io_in_2  ({{3{udNegReg_0[66]}}, udNegReg_0[66:57]}),
    .io_out_0 (_csa_spec_0_io_out_0),
    .io_out_1 (_csa_spec_0_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_0_0 (
    .io_in_0  (_csa_spec_0_io_out_0),
    .io_in_1  ({_csa_spec_0_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_0 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_0 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_0 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_0 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_0 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_0_0_io_out_0),
    .io_out_1 (_signs2_csa_spec_0_0_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_0_1 (
    .io_in_0  (_csa_spec_0_io_out_0),
    .io_in_1  ({_csa_spec_0_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_1 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_1 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_1 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_1 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_1 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_0_1_io_out_0),
    .io_out_1 (_signs2_csa_spec_0_1_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_0_2 (
    .io_in_0  (_csa_spec_0_io_out_0),
    .io_in_1  ({_csa_spec_0_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_2 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_2 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_2 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_2 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_2 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_0_2_io_out_0),
    .io_out_1 (_signs2_csa_spec_0_2_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_0_3 (
    .io_in_0  (_csa_spec_0_io_out_0),
    .io_in_1  ({_csa_spec_0_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_3 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_3 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_3 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_3 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_3 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_0_3_io_out_0),
    .io_out_1 (_signs2_csa_spec_0_3_io_out_1)
  );
  CSA3_2_3962 csa_spec_1 (
    .io_in_0  (rSumReg[67:55]),
    .io_in_1  (rCarryReg[67:55]),
    .io_in_2  ({{3{udNegReg_1[66]}}, udNegReg_1[66:57]}),
    .io_out_0 (_csa_spec_1_io_out_0),
    .io_out_1 (_csa_spec_1_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_1_0 (
    .io_in_0  (_csa_spec_1_io_out_0),
    .io_in_1  ({_csa_spec_1_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_0 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_0 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_0 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_0 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_0 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_1_0_io_out_0),
    .io_out_1 (_signs2_csa_spec_1_0_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_1_1 (
    .io_in_0  (_csa_spec_1_io_out_0),
    .io_in_1  ({_csa_spec_1_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_1 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_1 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_1 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_1 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_1 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_1_1_io_out_0),
    .io_out_1 (_signs2_csa_spec_1_1_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_1_2 (
    .io_in_0  (_csa_spec_1_io_out_0),
    .io_in_1  ({_csa_spec_1_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_2 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_2 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_2 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_2 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_2 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_1_2_io_out_0),
    .io_out_1 (_signs2_csa_spec_1_2_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_1_3 (
    .io_in_0  (_csa_spec_1_io_out_0),
    .io_in_1  ({_csa_spec_1_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_3 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_3 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_3 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_3 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_3 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_1_3_io_out_0),
    .io_out_1 (_signs2_csa_spec_1_3_io_out_1)
  );
  CSA3_2_3962 csa_spec_2 (
    .io_in_0  (rSumReg[67:55]),
    .io_in_1  (rCarryReg[67:55]),
    .io_in_2  (13'h0),
    .io_out_0 (_csa_spec_2_io_out_0),
    .io_out_1 (_csa_spec_2_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_2_0 (
    .io_in_0  (_csa_spec_2_io_out_0),
    .io_in_1  ({_csa_spec_2_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_0 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_0 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_0 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_0 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_0 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_2_0_io_out_0),
    .io_out_1 (_signs2_csa_spec_2_0_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_2_1 (
    .io_in_0  (_csa_spec_2_io_out_0),
    .io_in_1  ({_csa_spec_2_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_1 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_1 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_1 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_1 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_1 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_2_1_io_out_0),
    .io_out_1 (_signs2_csa_spec_2_1_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_2_2 (
    .io_in_0  (_csa_spec_2_io_out_0),
    .io_in_1  ({_csa_spec_2_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_2 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_2 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_2 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_2 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_2 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_2_2_io_out_0),
    .io_out_1 (_signs2_csa_spec_2_2_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_2_3 (
    .io_in_0  (_csa_spec_2_io_out_0),
    .io_in_1  ({_csa_spec_2_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_3 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_3 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_3 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_3 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_3 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_2_3_io_out_0),
    .io_out_1 (_signs2_csa_spec_2_3_io_out_1)
  );
  CSA3_2_3962 csa_spec_3 (
    .io_in_0  (rSumReg[67:55]),
    .io_in_1  (rCarryReg[67:55]),
    .io_in_2  ({{3{udNegReg_3[66]}}, udNegReg_3[66:57]}),
    .io_out_0 (_csa_spec_3_io_out_0),
    .io_out_1 (_csa_spec_3_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_3_0 (
    .io_in_0  (_csa_spec_3_io_out_0),
    .io_in_1  ({_csa_spec_3_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_0 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_0 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_0 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_0 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_0 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_3_0_io_out_0),
    .io_out_1 (_signs2_csa_spec_3_0_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_3_1 (
    .io_in_0  (_csa_spec_3_io_out_0),
    .io_in_1  ({_csa_spec_3_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_1 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_1 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_1 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_1 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_1 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_3_1_io_out_0),
    .io_out_1 (_signs2_csa_spec_3_1_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_3_2 (
    .io_in_0  (_csa_spec_3_io_out_0),
    .io_in_1  ({_csa_spec_3_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_2 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_2 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_2 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_2 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_2 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_3_2_io_out_0),
    .io_out_1 (_signs2_csa_spec_3_2_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_3_3 (
    .io_in_0  (_csa_spec_3_io_out_0),
    .io_in_1  ({_csa_spec_3_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_3 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_3 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_3 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_3 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_3 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_3_3_io_out_0),
    .io_out_1 (_signs2_csa_spec_3_3_io_out_1)
  );
  CSA3_2_3962 csa_spec_4 (
    .io_in_0  (rSumReg[67:55]),
    .io_in_1  (rCarryReg[67:55]),
    .io_in_2  ({{3{udNegReg_4[66]}}, udNegReg_4[66:57]}),
    .io_out_0 (_csa_spec_4_io_out_0),
    .io_out_1 (_csa_spec_4_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_4_0 (
    .io_in_0  (_csa_spec_4_io_out_0),
    .io_in_1  ({_csa_spec_4_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_0 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_0 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_0 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_0 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_0 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_4_0_io_out_0),
    .io_out_1 (_signs2_csa_spec_4_0_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_4_1 (
    .io_in_0  (_csa_spec_4_io_out_0),
    .io_in_1  ({_csa_spec_4_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_1 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_1 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_1 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_1 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_1 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_4_1_io_out_0),
    .io_out_1 (_signs2_csa_spec_4_1_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_4_2 (
    .io_in_0  (_csa_spec_4_io_out_0),
    .io_in_1  ({_csa_spec_4_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_2 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_2 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_2 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_2 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_2 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_4_2_io_out_0),
    .io_out_1 (_signs2_csa_spec_4_2_io_out_1)
  );
  CSA3_2_3962 signs2_csa_spec_4_3 (
    .io_in_0  (_csa_spec_4_io_out_0),
    .io_in_1  ({_csa_spec_4_io_out_1[11:0], 1'h0}),
    .io_in_2
      ((qPrevReg[0] ? r2udPmNegReg_0_3 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_3 : 13'h0)
       | (qPrevReg[2] ? r2udPmNegReg_2_3 : 13'h0)
       | (qPrevReg[3] ? r2udPmNegReg_3_3 : 13'h0)
       | (qPrevReg[4] ? r2udPmNegReg_4_3 : 13'h0)),
    .io_out_0 (_signs2_csa_spec_4_3_io_out_0),
    .io_out_1 (_signs2_csa_spec_4_3_io_out_1)
  );
  RightShifter rightShifter (
    .io_shiftNum (dLZCReg[5:0]),
    .io_in       (rPreShifted[63:0]),
    .io_msb      ((|rPreShifted) & rSignReg),
    .io_out      (_rightShifter_io_out)
  );
  assign io_in_ready = io_in_ready_0;
  assign io_out_valid = state[6];
  assign io_out_data = io_isW ? {{32{res[31]}}, res[31:0]} : res;
endmodule

