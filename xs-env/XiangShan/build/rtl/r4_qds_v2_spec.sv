// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module r4_qds_v2_spec(
  input  [6:0] io_rem_i,
  input  [6:0] io_divisor_mul_pos_2_i,
  input  [6:0] io_divisor_mul_pos_1_i,
  input  [6:0] io_divisor_mul_neg_1_i,
  input  [6:0] io_divisor_mul_neg_2_i,
  input  [4:0] io_prev_quo_dig_i,
  output [4:0] io_quo_dig_o
);

  wire [6:0] _qds_sign_spec_4_T_18 = 7'(io_rem_i + io_divisor_mul_pos_2_i);
  wire [6:0] _qds_sign_spec_4_T_3 = 7'(_qds_sign_spec_4_T_18 - 7'h18);
  wire [6:0] _qds_sign_spec_4_T_9 = 7'(_qds_sign_spec_4_T_18 - 7'h6);
  wire [6:0] _qds_sign_spec_4_T_15 = 7'(_qds_sign_spec_4_T_18 + 7'h8);
  wire [6:0] _qds_sign_spec_4_T_21 = 7'(_qds_sign_spec_4_T_18 + 7'h1A);
  wire [6:0] _qds_sign_spec_3_T_18 = 7'(io_rem_i + io_divisor_mul_pos_1_i);
  wire [6:0] _qds_sign_spec_3_T_3 = 7'(_qds_sign_spec_3_T_18 - 7'h18);
  wire [6:0] _qds_sign_spec_3_T_9 = 7'(_qds_sign_spec_3_T_18 - 7'h6);
  wire [6:0] _qds_sign_spec_3_T_15 = 7'(_qds_sign_spec_3_T_18 + 7'h8);
  wire [6:0] _qds_sign_spec_3_T_21 = 7'(_qds_sign_spec_3_T_18 + 7'h1A);
  wire [6:0] _qds_sign_spec_2_T_1 = 7'(io_rem_i - 7'h18);
  wire [6:0] _qds_sign_spec_2_T_5 = 7'(io_rem_i - 7'h6);
  wire [6:0] _qds_sign_spec_2_T_9 = 7'(io_rem_i + 7'h8);
  wire [6:0] _qds_sign_spec_2_T_13 = 7'(io_rem_i + 7'h1A);
  wire [6:0] _qds_sign_spec_1_T_18 = 7'(io_rem_i + io_divisor_mul_neg_1_i);
  wire [6:0] _qds_sign_spec_1_T_3 = 7'(_qds_sign_spec_1_T_18 - 7'h18);
  wire [6:0] _qds_sign_spec_1_T_9 = 7'(_qds_sign_spec_1_T_18 - 7'h6);
  wire [6:0] _qds_sign_spec_1_T_15 = 7'(_qds_sign_spec_1_T_18 + 7'h8);
  wire [6:0] _qds_sign_spec_1_T_21 = 7'(_qds_sign_spec_1_T_18 + 7'h1A);
  wire [6:0] _qds_sign_spec_0_T_18 = 7'(io_rem_i + io_divisor_mul_neg_2_i);
  wire [6:0] _qds_sign_spec_0_T_3 = 7'(_qds_sign_spec_0_T_18 - 7'h18);
  wire [6:0] _qds_sign_spec_0_T_9 = 7'(_qds_sign_spec_0_T_18 - 7'h6);
  wire [6:0] _qds_sign_spec_0_T_15 = 7'(_qds_sign_spec_0_T_18 + 7'h8);
  wire [6:0] _qds_sign_spec_0_T_21 = 7'(_qds_sign_spec_0_T_18 + 7'h1A);
  wire [3:0] qds_sign =
    {4{io_prev_quo_dig_i[4]}}
    & {_qds_sign_spec_4_T_3[6],
       _qds_sign_spec_4_T_9[6],
       _qds_sign_spec_4_T_15[6],
       _qds_sign_spec_4_T_21[6]} | {4{io_prev_quo_dig_i[3]}}
    & {_qds_sign_spec_3_T_3[6],
       _qds_sign_spec_3_T_9[6],
       _qds_sign_spec_3_T_15[6],
       _qds_sign_spec_3_T_21[6]} | {4{io_prev_quo_dig_i[2]}}
    & {_qds_sign_spec_2_T_1[6],
       _qds_sign_spec_2_T_5[6],
       _qds_sign_spec_2_T_9[6],
       _qds_sign_spec_2_T_13[6]} | {4{io_prev_quo_dig_i[1]}}
    & {_qds_sign_spec_1_T_3[6],
       _qds_sign_spec_1_T_9[6],
       _qds_sign_spec_1_T_15[6],
       _qds_sign_spec_1_T_21[6]} | {4{io_prev_quo_dig_i[0]}}
    & {_qds_sign_spec_0_T_3[6],
       _qds_sign_spec_0_T_9[6],
       _qds_sign_spec_0_T_15[6],
       _qds_sign_spec_0_T_21[6]};
  assign io_quo_dig_o =
    {&(qds_sign[1:0]),
     qds_sign[1:0] == 2'h2,
     qds_sign[2:1] == 2'h2,
     qds_sign[3:2] == 2'h2,
     qds_sign[3:2] == 2'h0};
endmodule

